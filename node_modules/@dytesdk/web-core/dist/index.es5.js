import { v4 as eo, validate as Av } from "uuid";
import Iv from "bowser";
import { MessageType as _, PbLong as xo, typeofJsonValue as pm } from "@protobuf-ts/runtime";
import * as Nl from "worker-timers";
import * as Ln from "sdp-transform";
var Kg = ["id"], zg = ["chat", "connectedMeetings", "plugins", "polls", "media"], Yg = ["id"], Qg = ["meetingId"], cn, ii, Y, zn, $e, Yn, da, Wl, vo, dn, Jl, ml, si, oi, Do, pn, ui, Qn, Ii, fo, Xn, go, mo, hn, li, Dr, Ye, Or, ci, di, Ct, pi, vn, hi, Br, vi, Zr, _i, fi, gi, mi, qr, Ae, yi, ki, $r, Zn, Tn, xn, yl, Rt, yo, mn, ea, At, kl, ko, bl, Tl, _e, ra, ta, bi, na, wr, It, _t, Mt, aa, Ti, wi, or, Pi, Ve, Dt, Ue, Si, Ie, Mi, Di, bo, Sp, Fc, Oo, Lo, Qe, J, Oi, dt, ur, pa, ha, ia, To, Wr, Ot, Ks, sa, oa, pr, Pr, fn, wl, Kl, zl, No, Yl, Ql, Xl, Zl, Ge, ua, Pl, Sl, El, la, xr, Z, lr, gn, Te, we, Gr, We, wo, Po, ge, je, ca;
function gc(o, t) {
  if (o == null)
    return {};
  var e, r, n = Xg(o, t);
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(o);
    for (r = 0; r < a.length; r++)
      e = a[r], t.indexOf(e) === -1 && {}.propertyIsEnumerable.call(o, e) && (n[e] = o[e]);
  }
  return n;
}
function Xg(o, t) {
  if (o == null)
    return {};
  var e = {};
  for (var r in o)
    if ({}.hasOwnProperty.call(o, r)) {
      if (t.indexOf(r) !== -1)
        continue;
      e[r] = o[r];
    }
  return e;
}
function Zs(o) {
  var t = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return Zs = function(r) {
    if (r === null || !xg(r))
      return r;
    if (typeof r != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (t !== void 0) {
      if (t.has(r))
        return t.get(r);
      t.set(r, n);
    }
    function n() {
      return Zg(r, arguments, xs(this).constructor);
    }
    return n.prototype = Object.create(r.prototype, { constructor: { value: n, enumerable: !1, writable: !0, configurable: !0 } }), Zu(n, r);
  }, Zs(o);
}
function Zg(o, t, e) {
  if (Cp())
    return Reflect.construct.apply(null, arguments);
  var r = [null];
  r.push.apply(r, t);
  var n = new (o.bind.apply(o, r))();
  return e && Zu(n, e.prototype), n;
}
function xg(o) {
  try {
    return Function.toString.call(o).indexOf("[native code]") !== -1;
  } catch (t) {
    return typeof o == "function";
  }
}
function l(o, t) {
  if (!{}.hasOwnProperty.call(o, t))
    throw new TypeError("attempted to use private field on non-instance");
  return o;
}
var em = 0;
function E(o) {
  return "__private_" + em++ + "_" + o;
}
function ke(o) {
  return nm(o) || tm(o) || Ep(o) || rm();
}
function rm() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function tm(o) {
  if (typeof Symbol != "undefined" && o[Symbol.iterator] != null || o["@@iterator"] != null)
    return Array.from(o);
}
function nm(o) {
  if (Array.isArray(o))
    return bd(o);
}
function xp(o, t) {
  var e = Object.keys(o);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(o);
    t && (r = r.filter(function(n) {
      return Object.getOwnPropertyDescriptor(o, n).enumerable;
    })), e.push.apply(e, r);
  }
  return e;
}
function N(o) {
  for (var t = 1; t < arguments.length; t++) {
    var e = arguments[t] != null ? arguments[t] : {};
    t % 2 ? xp(Object(e), !0).forEach(function(r) {
      am(o, r, e[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(o, Object.getOwnPropertyDescriptors(e)) : xp(Object(e)).forEach(function(r) {
      Object.defineProperty(o, r, Object.getOwnPropertyDescriptor(e, r));
    });
  }
  return o;
}
function am(o, t, e) {
  return (t = Rv(t)) in o ? Object.defineProperty(o, t, { value: e, enumerable: !0, configurable: !0, writable: !0 }) : o[t] = e, o;
}
function Hn(o, t) {
  var e = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!e) {
    if (Array.isArray(o) || (e = Ep(o)) || t && o && typeof o.length == "number") {
      e && (o = e);
      var r = 0, n = function() {
      };
      return { s: n, n: function() {
        return r >= o.length ? { done: !0 } : { done: !1, value: o[r++] };
      }, e: function(c) {
        throw c;
      }, f: n };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var a, i = !0, s = !1;
  return { s: function() {
    e = e.call(o);
  }, n: function() {
    var c = e.next();
    return i = c.done, c;
  }, e: function(c) {
    s = !0, a = c;
  }, f: function() {
    try {
      i || e.return == null || e.return();
    } finally {
      if (s)
        throw a;
    }
  } };
}
function Ce(o, t, e, r) {
  var n = kd(xs(1 & r ? o.prototype : o), t, e);
  return 2 & r && typeof n == "function" ? function(a) {
    return n.apply(e, a);
  } : n;
}
function kd() {
  return kd = typeof Reflect != "undefined" && Reflect.get ? Reflect.get.bind() : function(o, t, e) {
    var r = im(o, t);
    if (r) {
      var n = Object.getOwnPropertyDescriptor(r, t);
      return n.get ? n.get.call(arguments.length < 3 ? o : e) : n.value;
    }
  }, kd.apply(null, arguments);
}
function im(o, t) {
  for (; !{}.hasOwnProperty.call(o, t) && (o = xs(o)) !== null; )
    ;
  return o;
}
function Me(o, t) {
  return um(o) || om(o, t) || Ep(o, t) || sm();
}
function sm() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Ep(o, t) {
  if (o) {
    if (typeof o == "string")
      return bd(o, t);
    var e = {}.toString.call(o).slice(8, -1);
    return e === "Object" && o.constructor && (e = o.constructor.name), e === "Map" || e === "Set" ? Array.from(o) : e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? bd(o, t) : void 0;
  }
}
function bd(o, t) {
  (t == null || t > o.length) && (t = o.length);
  for (var e = 0, r = Array(t); e < t; e++)
    r[e] = o[e];
  return r;
}
function om(o, t) {
  var e = o == null ? null : typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (e != null) {
    var r, n, a, i, s = [], u = !0, c = !1;
    try {
      if (a = (e = e.call(o)).next, t === 0) {
        if (Object(e) !== e)
          return;
        u = !1;
      } else
        for (; !(u = (r = a.call(e)).done) && (s.push(r.value), s.length !== t); u = !0)
          ;
    } catch (d) {
      c = !0, n = d;
    } finally {
      try {
        if (!u && e.return != null && (i = e.return(), Object(i) !== i))
          return;
      } finally {
        if (c)
          throw n;
      }
    }
    return s;
  }
}
function um(o) {
  if (Array.isArray(o))
    return o;
}
function p() {
  "use strict";
  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */
  p = function() {
    return t;
  };
  var o, t = {}, e = Object.prototype, r = e.hasOwnProperty, n = typeof Symbol == "function" ? Symbol : {}, a = n.iterator || "@@iterator", i = n.asyncIterator || "@@asyncIterator", s = n.toStringTag || "@@toStringTag";
  function u($, O, B, Q) {
    return Object.defineProperty($, O, { value: B, enumerable: !Q, configurable: !Q, writable: !Q });
  }
  try {
    u({}, "");
  } catch ($) {
    u = function(B, Q, F) {
      return B[Q] = F;
    };
  }
  function c($, O, B, Q) {
    var F = O && O.prototype instanceof v ? O : v, z = Object.create(F.prototype);
    return u(z, "_invoke", function(q, te, le) {
      var he = 1;
      return function(br, x) {
        if (he === 3)
          throw Error("Generator is already running");
        if (he === 4) {
          if (br === "throw")
            throw x;
          return { value: o, done: !0 };
        }
        for (le.method = br, le.arg = x; ; ) {
          var Sn = le.delegate;
          if (Sn) {
            var ln = L(Sn, le);
            if (ln) {
              if (ln === h)
                continue;
              return ln;
            }
          }
          if (le.method === "next")
            le.sent = le._sent = le.arg;
          else if (le.method === "throw") {
            if (he === 1)
              throw he = 4, le.arg;
            le.dispatchException(le.arg);
          } else
            le.method === "return" && le.abrupt("return", le.arg);
          he = 3;
          var Tr = d(q, te, le);
          if (Tr.type === "normal") {
            if (he = le.done ? 4 : 2, Tr.arg === h)
              continue;
            return { value: Tr.arg, done: le.done };
          }
          Tr.type === "throw" && (he = 4, le.method = "throw", le.arg = Tr.arg);
        }
      };
    }($, B, new V(Q || [])), !0), z;
  }
  function d($, O, B) {
    try {
      return { type: "normal", arg: $.call(O, B) };
    } catch (Q) {
      return { type: "throw", arg: Q };
    }
  }
  t.wrap = c;
  var h = {};
  function v() {
  }
  function f() {
  }
  function g() {
  }
  var k = {};
  u(k, a, function() {
    return this;
  });
  var y = Object.getPrototypeOf, b = y && y(y(j([])));
  b && b !== e && r.call(b, a) && (k = b);
  var S = g.prototype = v.prototype = Object.create(k);
  function T($) {
    ["next", "throw", "return"].forEach(function(O) {
      u($, O, function(B) {
        return this._invoke(O, B);
      });
    });
  }
  function A($, O) {
    function B(F, z, q, te) {
      var le = d($[F], $, z);
      if (le.type !== "throw") {
        var he = le.arg, br = he.value;
        return br && Pe(br) == "object" && r.call(br, "__await") ? O.resolve(br.__await).then(function(x) {
          B("next", x, q, te);
        }, function(x) {
          B("throw", x, q, te);
        }) : O.resolve(br).then(function(x) {
          he.value = x, q(he);
        }, function(x) {
          return B("throw", x, q, te);
        });
      }
      te(le.arg);
    }
    var Q;
    u(this, "_invoke", function(F, z) {
      function q() {
        return new O(function(te, le) {
          B(F, z, te, le);
        });
      }
      return Q = Q ? Q.then(q, q) : q();
    }, !0);
  }
  function L($, O) {
    var B = O.method, Q = $.i[B];
    if (Q === o)
      return O.delegate = null, B === "throw" && $.i.return && (O.method = "return", O.arg = o, L($, O), O.method === "throw") || B !== "return" && (O.method = "throw", O.arg = new TypeError("The iterator does not provide a '" + B + "' method")), h;
    var F = d(Q, $.i, O.arg);
    if (F.type === "throw")
      return O.method = "throw", O.arg = F.arg, O.delegate = null, h;
    var z = F.arg;
    return z ? z.done ? (O[$.r] = z.value, O.next = $.n, O.method !== "return" && (O.method = "next", O.arg = o), O.delegate = null, h) : z : (O.method = "throw", O.arg = new TypeError("iterator result is not an object"), O.delegate = null, h);
  }
  function I($) {
    this.tryEntries.push($);
  }
  function M($) {
    var O = $[4] || {};
    O.type = "normal", O.arg = o, $[4] = O;
  }
  function V($) {
    this.tryEntries = [[-1]], $.forEach(I, this), this.reset(!0);
  }
  function j($) {
    if ($ != null) {
      var O = $[a];
      if (O)
        return O.call($);
      if (typeof $.next == "function")
        return $;
      if (!isNaN($.length)) {
        var B = -1, Q = function F() {
          for (; ++B < $.length; )
            if (r.call($, B))
              return F.value = $[B], F.done = !1, F;
          return F.value = o, F.done = !0, F;
        };
        return Q.next = Q;
      }
    }
    throw new TypeError(Pe($) + " is not iterable");
  }
  return f.prototype = g, u(S, "constructor", g), u(g, "constructor", f), f.displayName = u(g, s, "GeneratorFunction"), t.isGeneratorFunction = function($) {
    var O = typeof $ == "function" && $.constructor;
    return !!O && (O === f || (O.displayName || O.name) === "GeneratorFunction");
  }, t.mark = function($) {
    return Object.setPrototypeOf ? Object.setPrototypeOf($, g) : ($.__proto__ = g, u($, s, "GeneratorFunction")), $.prototype = Object.create(S), $;
  }, t.awrap = function($) {
    return { __await: $ };
  }, T(A.prototype), u(A.prototype, i, function() {
    return this;
  }), t.AsyncIterator = A, t.async = function($, O, B, Q, F) {
    F === void 0 && (F = Promise);
    var z = new A(c($, O, B, Q), F);
    return t.isGeneratorFunction(O) ? z : z.next().then(function(q) {
      return q.done ? q.value : z.next();
    });
  }, T(S), u(S, s, "Generator"), u(S, a, function() {
    return this;
  }), u(S, "toString", function() {
    return "[object Generator]";
  }), t.keys = function($) {
    var O = Object($), B = [];
    for (var Q in O)
      B.unshift(Q);
    return function F() {
      for (; B.length; )
        if ((Q = B.pop()) in O)
          return F.value = Q, F.done = !1, F;
      return F.done = !0, F;
    };
  }, t.values = j, V.prototype = { constructor: V, reset: function(O) {
    if (this.prev = this.next = 0, this.sent = this._sent = o, this.done = !1, this.delegate = null, this.method = "next", this.arg = o, this.tryEntries.forEach(M), !O)
      for (var B in this)
        B.charAt(0) === "t" && r.call(this, B) && !isNaN(+B.slice(1)) && (this[B] = o);
  }, stop: function() {
    this.done = !0;
    var O = this.tryEntries[0][4];
    if (O.type === "throw")
      throw O.arg;
    return this.rval;
  }, dispatchException: function(O) {
    if (this.done)
      throw O;
    var B = this;
    function Q(br) {
      q.type = "throw", q.arg = O, B.next = br;
    }
    for (var F = B.tryEntries.length - 1; F >= 0; --F) {
      var z = this.tryEntries[F], q = z[4], te = this.prev, le = z[1], he = z[2];
      if (z[0] === -1)
        return Q("end"), !1;
      if (!le && !he)
        throw Error("try statement without catch or finally");
      if (z[0] != null && z[0] <= te) {
        if (te < le)
          return this.method = "next", this.arg = o, Q(le), !0;
        if (te < he)
          return Q(he), !1;
      }
    }
  }, abrupt: function(O, B) {
    for (var Q = this.tryEntries.length - 1; Q >= 0; --Q) {
      var F = this.tryEntries[Q];
      if (F[0] > -1 && F[0] <= this.prev && this.prev < F[2]) {
        var z = F;
        break;
      }
    }
    z && (O === "break" || O === "continue") && z[0] <= B && B <= z[2] && (z = null);
    var q = z ? z[4] : {};
    return q.type = O, q.arg = B, z ? (this.method = "next", this.next = z[2], h) : this.complete(q);
  }, complete: function(O, B) {
    if (O.type === "throw")
      throw O.arg;
    return O.type === "break" || O.type === "continue" ? this.next = O.arg : O.type === "return" ? (this.rval = this.arg = O.arg, this.method = "return", this.next = "end") : O.type === "normal" && B && (this.next = B), h;
  }, finish: function(O) {
    for (var B = this.tryEntries.length - 1; B >= 0; --B) {
      var Q = this.tryEntries[B];
      if (Q[2] === O)
        return this.complete(Q[4], Q[3]), M(Q), h;
    }
  }, catch: function(O) {
    for (var B = this.tryEntries.length - 1; B >= 0; --B) {
      var Q = this.tryEntries[B];
      if (Q[0] === O) {
        var F = Q[4];
        if (F.type === "throw") {
          var z = F.arg;
          M(Q);
        }
        return z;
      }
    }
    throw Error("illegal catch attempt");
  }, delegateYield: function(O, B, Q) {
    return this.delegate = { i: j(O), r: B, n: Q }, this.method === "next" && (this.arg = o), h;
  } }, t;
}
function eh(o, t, e, r, n, a, i) {
  try {
    var s = o[a](i), u = s.value;
  } catch (c) {
    return void e(c);
  }
  s.done ? t(u) : Promise.resolve(u).then(r, n);
}
function m(o) {
  return function() {
    var t = this, e = arguments;
    return new Promise(function(r, n) {
      var a = o.apply(t, e);
      function i(u) {
        eh(a, r, n, i, s, "next", u);
      }
      function s(u) {
        eh(a, r, n, i, s, "throw", u);
      }
      i(void 0);
    });
  };
}
function C(o, t, e) {
  return t = xs(t), lm(o, Cp() ? Reflect.construct(t, e || [], xs(o).constructor) : t.apply(o, e));
}
function lm(o, t) {
  if (t && (Pe(t) == "object" || typeof t == "function"))
    return t;
  if (t !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return cm(o);
}
function cm(o) {
  if (o === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return o;
}
function Cp() {
  try {
    var o = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t) {
  }
  return (Cp = function() {
    return !!o;
  })();
}
function xs(o) {
  return xs = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, xs(o);
}
function R(o, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Super expression must either be null or a function");
  o.prototype = Object.create(t && t.prototype, { constructor: { value: o, writable: !0, configurable: !0 } }), Object.defineProperty(o, "prototype", { writable: !1 }), t && Zu(o, t);
}
function Zu(o, t) {
  return Zu = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, r) {
    return e.__proto__ = r, e;
  }, Zu(o, t);
}
function Pe(o) {
  return Pe = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Pe(o);
}
function w(o, t) {
  if (!(o instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function rh(o, t) {
  for (var e = 0; e < t.length; e++) {
    var r = t[e];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(o, Rv(r.key), r);
  }
}
function P(o, t, e) {
  return t && rh(o.prototype, t), e && rh(o, e), Object.defineProperty(o, "prototype", { writable: !1 }), o;
}
function Rv(o) {
  var t = dm(o, "string");
  return Pe(t) == "symbol" ? t : t + "";
}
function dm(o, t) {
  if (Pe(o) != "object" || !o)
    return o;
  var e = o[Symbol.toPrimitive];
  if (e !== void 0) {
    var r = e.call(o, t || "default");
    if (Pe(r) != "object")
      return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(o);
}
function hm(o) {
  var t = this.length, e = o >= 0 ? o : t + o;
  return e < 0 || e >= t ? void 0 : this[e];
}
Array.prototype.at || Object.assign(Array.prototype, { at: hm });
function vm(o) {
  var t = this.length, e = o >= 0 ? o : t + o;
  return e < 0 || e >= t ? void 0 : this[e];
}
String.prototype.at || Object.assign(String.prototype, { at: vm });
var fm = function(t) {
  !navigator.isReactNative && typeof window != "undefined" && (window.addEventListener("error", function(e) {
    var r;
    !((r = e.filename) !== null && r !== void 0 && r.includes("localhost")) && e.lineno !== 0 && t.error("window::error", { error: e.error }, !0);
  }), window.addEventListener("unhandledrejection", function(e) {
    var r, n, a, i, s;
    t.error("window::unhandledrejection", {
      error: e == null ? void 0 : e.reason,
      /**
      * NOTE(ravindra-dyte):
      * Network calls fail a lot for clients,
      *	tracking more info to see where
      *	*/
      networkCall: { url: e == null || (r = e.reason) === null || r === void 0 || (r = r.config) === null || r === void 0 ? void 0 : r.url, baseURL: e == null || (n = e.reason) === null || n === void 0 || (n = n.config) === null || n === void 0 ? void 0 : n.baseURL, method: e == null || (a = e.reason) === null || a === void 0 || (a = a.config) === null || a === void 0 ? void 0 : a.method, status: e == null || (i = e.reason) === null || i === void 0 ? void 0 : i.status, statusText: e == null || (s = e.reason) === null || s === void 0 ? void 0 : s.statusText }
    }, !0);
  }), window.addEventListener("offline", function() {
    t.info("window::offline");
  }), window.addEventListener("online", function() {
    t.info("window::online");
  }));
}, xu = "chrome", _v = "opera", Mv = "firefox", Dv = "iexplorer", Ov = "safari", Lv = "nwjs", Nv = "electron", $v = "react-native", Rp = "unknown", xl = { Chrome: xu, Chromium: xu, Opera: _v, Firefox: Mv, "Internet Explorer": Dv, Safari: Ov };
function gm() {
  var o = navigator, t = o.userAgent, e = { name: Rp, version: void 0 };
  if (t.match(/Chrome/) && !t.match(/Edge/))
    if (t.match(/Edg(A?)/)) {
      var r = t.match(/Chrome\/([\d.]+)/)[1];
      Number.parseInt(r, 10) > 72 && (e.name = xu, e.version = r);
    } else
      e.name = xu, e.version = t.match(/Chrome\/([\d.]+)/)[1];
  return e;
}
function mm() {
  var o = navigator, t = o.userAgent;
  if (t.match(/Electron/)) {
    var e = t.match(/Electron\/([\d.]+)/)[1];
    return { name: Nv, version: e };
  }
  return null;
}
function ym() {
  var o = navigator, t = o.userAgent;
  if (t.match(/JitsiMeetNW/)) {
    var e = t.match(/JitsiMeetNW\/([\d.]+)/)[1];
    return { name: Lv, version: e };
  }
}
function km() {
  var o = navigator.userAgent.match(/\b(react[ \t_-]*native)(?:\/(\S+))?/i), t;
  if (o || navigator.product === "ReactNative")
    return o && o.length > 2 && (o[1], t = o[2]), t || (t = "unknown"), { name: $v, version: t };
}
function bm(o) {
  for (var t, e = [km, mm, ym], r = 0; r < e.length; r += 1)
    if (t = e[r](), t)
      return t;
  var n = o.getBrowserName();
  return n in xl ? { name: xl[n], version: o.getBrowserVersion() } : (t = gm(), t || { name: Rp, version: void 0 });
}
var Tm = /* @__PURE__ */ function() {
  function o() {
    var t = this;
    w(this, o), this._bowser = void 0, this._name = void 0, this._version = void 0, this.getDeviceInfo = function() {
      return { isMobile: t.isMobile(), browserName: t._bowser.getBrowserName(), osName: t._bowser.getOSName(), browserVersion: t._bowser.getBrowserVersion(), osVersionName: t._bowser.getOSVersion(), engineName: t._bowser.getEngineName() };
    };
  }
  return P(o, [{
    key: "init",
    value: (
      /**
      * Creates new BrowserDetection instance.
      *
      * @param {Object} [browserInfo] - Information about the browser.
      * @param {string} browserInfo.name - The name of the browser.
      * @param {string} browserInfo.version - The version of the browser.
      */
      function(e) {
        var r, n;
        if (this._bowser = Iv.getParser(navigator.userAgent), typeof e == "undefined") {
          var a = bm(this._bowser);
          r = a.name, n = a.version;
        } else
          e.name in xl ? (r = xl[e.name], n = e.version) : (r = Rp, n = void 0);
        this._name = r, this._version = n;
      }
    )
    /**
    * Gets current browser name.
    * @returns {string}
    */
  }, {
    key: "getName",
    value: function() {
      return this._name;
    }
    /**
    * Checks if current browser is Chrome.
    * @returns {boolean}
    */
  }, {
    key: "isChrome",
    value: function() {
      return this._name === xu;
    }
    /**
    * Checks if current browser is Opera.
    * @returns {boolean}
    */
  }, {
    key: "isOpera",
    value: function() {
      return this._name === _v;
    }
    /**
    * Checks if current browser is Firefox.
    * @returns {boolean}
    */
  }, {
    key: "isFirefox",
    value: function() {
      return this._name === Mv;
    }
    /**
    * Checks if current browser is Internet Explorer.
    * @returns {boolean}
    */
  }, {
    key: "isIExplorer",
    value: function() {
      return this._name === Dv;
    }
    /**
    * Checks if current browser is Safari.
    * @returns {boolean}
    */
  }, {
    key: "isSafari",
    value: function() {
      return this._name === Ov;
    }
    /**
    * Checks if current environment is NWJS.
    * @returns {boolean}
    */
  }, {
    key: "isNWJS",
    value: function() {
      return this._name === Lv;
    }
    /**
    * Checks if current environment is Electron.
    * @returns {boolean}
    */
  }, {
    key: "isElectron",
    value: function() {
      return this._name === Nv;
    }
    /**
    * Checks if current environment is React Native.
    * @returns {boolean}
    */
  }, {
    key: "isReactNative",
    value: function() {
      return this._name === $v || navigator.isReactNative === !0;
    }
    /**
    * Returns the version of the current browser.
    * @returns {string}
    */
  }, { key: "getVersion", value: function() {
    return this._version;
  } }, { key: "isMobile", value: function() {
    return this._bowser.getPlatformType() === "mobile";
  } }, {
    key: "_checkCondition",
    value: (
      /**
      * Check if the parsed browser matches the passed condition.
      *
      * @param {Object} checkTree - It's one or two layered object, which can include a
      * platform or an OS on the first layer and should have browsers specs on the
      * bottom layer.
      * Eg. { chrome: '>71.1.0' }
      *		 { windows: { chrome: '<70.2' } }
      * @returns {boolean | undefined} - Returns true if the browser satisfies the set
      * conditions, false if not and undefined when the browser is not defined in the
      * checktree object or when the current browser's version is unknown.
      * @private
      */
      function(e) {
        if (this._version)
          return this._bowser.satisfies(e);
      }
    )
    /**
    * Compares the passed version with the current browser version.
    *
    * @param {*} version - The version to compare with. Anything different
    * than string will be converted to string.
    * @returns {boolean|undefined} - Returns true if the current version is
    * greater than the passed version and false otherwise. Returns undefined if
    * the current browser version is unknown.
    */
  }, {
    key: "isVersionGreaterThan",
    value: function(e) {
      return this._checkCondition({ [this._name]: ">".concat(e) });
    }
    /**
    * Compares the passed version with the current browser version.
    *
    * @param {*} version - The version to compare with. Anything different
    * than string will be converted to string.
    * @returns {boolean|undefined} - Returns true if the current version is
    * lower than the passed version and false otherwise. Returns undefined if
    * the current browser version is unknown.
    */
  }, {
    key: "isVersionLessThan",
    value: function(e) {
      return this._checkCondition({ [this._name]: "<".concat(e) });
    }
    /**
    * Compares the passed version with the current browser version.
    *
    * @param {*} version - The version to compare with. Anything different
    * than string will be converted to string.
    * @returns {boolean|undefined} - Returns true if the current version is
    * equal to the passed version and false otherwise. Returns undefined if
    * the current browser version is unknown.
    * A loose-equality operator is used here so that it matches the sub-versions as well.
    */
  }, { key: "isVersionEqualTo", value: function(e) {
    return this._checkCondition({ [this._name]: "~".concat(e) });
  } }]);
}(), wm = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, arguments);
  }
  return R(t, o), P(t, [{
    key: "doesVideoMuteByStreamRemove",
    value: (
      /**
      * Tells whether or not the <tt>MediaStream/tt> is removed from
      * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn
      * off the camera device).
      * @return {boolean} <tt>true</tt> if the current browser supports this
      * strategy or <tt>false</tt> otherwise.
      */
      function() {
        return this.isChromiumBased() || this.isWebKitBased();
      }
    )
    /**
    * Check whether or not the current browser support peer to peer connections
    * @return {boolean} <tt>true</tt> if p2p is supported or <tt>false</tt>
    * otherwise.
    */
  }, {
    key: "supportsP2P",
    value: function() {
      return !this.usesUnifiedPlan();
    }
    /**
    * Checks if the current browser is Chromium based, that is, it's either
    * Chrome / Chromium or uses it as its engine, but doesn't identify as
    * Chrome.
    *
    * This includes the following browsers:
    * - Chrome and Chromium
    * - Other browsers which use the Chrome engine, but are detected as Chrome,
    *	 such as Brave and Vivaldi
    * - Browsers which are NOT Chrome but use it as their engine, and have
    *	 custom detection code: Opera, Electron and NW.JS
    */
  }, {
    key: "isChromiumBased",
    value: function() {
      return this.isChrome() || this.isElectron() || this.isNWJS() || this.isOpera();
    }
    /**
    * Checks if the current browser is WebKit based. It's either
    * Safari or uses WebKit as its engine.
    *
    * This includes Chrome and Firefox on iOS
    *
    * @returns {boolean}
    */
  }, {
    key: "isWebKitBased",
    value: function() {
      return this._bowser.isEngine("webkit") && typeof navigator.mediaDevices != "undefined" && typeof navigator.mediaDevices.getUserMedia != "undefined" && typeof window.RTCRtpTransceiver != "undefined" && Object.keys(RTCRtpTransceiver.prototype).indexOf("currentDirection") > -1;
    }
    /**
    * Checks if the current browser is supported.
    *
    * @returns {boolean} true if the browser is supported, false otherwise.
    */
  }, {
    key: "isSupported",
    value: function() {
      return typeof RTCPeerConnection != "undefined";
    }
    /**
    * Returns whether or not the current environment needs a user interaction
    * with the page before any unmute can occur.
    *
    * @returns {boolean}
    */
  }, {
    key: "isUserInteractionRequiredForUnmute",
    value: function() {
      return this.isFirefox() && this.isVersionLessThan("68");
    }
    /**
    * Checks if the current browser triggers 'onmute'/'onunmute' events when
    * user's connection is interrupted and the video stops playback.
    * @returns {*|boolean} 'true' if the event is supported or 'false'
    * otherwise.
    */
  }, {
    key: "supportsVideoMuteOnConnInterrupted",
    value: function() {
      return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();
    }
    /**
    * Checks if the current browser reports upload and download bandwidth
    * statistics.
    * @return {boolean}
    */
  }, {
    key: "supportsBandwidthStatistics",
    value: function() {
      return !this.isFirefox() && !this.isWebKitBased();
    }
    /**
    * Checks if the current browser supports setting codec preferences on the transceiver.
    * @returns {boolean}
    */
  }, {
    key: "supportsCodecPreferences",
    value: function() {
      return this.usesUnifiedPlan() && typeof window.RTCRtpTransceiver != "undefined" && Object.keys(window.RTCRtpTransceiver.prototype).indexOf("setCodecPreferences") > -1 && Object.keys(RTCRtpSender.prototype).indexOf("getCapabilities") > -1 && !this.isWebKitBased();
    }
    /**
    * Checks if the current browser support the device change event.
    * @return {boolean}
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "supportsDeviceChangeEvent",
    value: function() {
      return navigator.mediaDevices && typeof navigator.mediaDevices.ondevicechange != "undefined" && typeof navigator.mediaDevices.addEventListener != "undefined";
    }
    /**
    * Checks if the current browser supports RTT statistics for srflx local
    * candidates through the legacy getStats() API.
    */
  }, {
    key: "supportsLocalCandidateRttStatistics",
    value: function() {
      return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();
    }
    /**
    * Checks if the current browser supports the Long Tasks API that lets us observe
    * performance measurement events and be notified of tasks that take longer than
    * 50ms to execute on the main thread.
    */
  }, {
    key: "supportsPerformanceObserver",
    value: function() {
      return typeof window.PerformanceObserver != "undefined" && PerformanceObserver.supportedEntryTypes.indexOf("longtask") > -1;
    }
    /**
    * Checks if the current browser supports audio level stats on the receivers.
    */
  }, {
    key: "supportsReceiverStats",
    value: function() {
      return typeof window.RTCRtpReceiver != "undefined" && Object.keys(RTCRtpReceiver.prototype).indexOf("getSynchronizationSources") > -1;
    }
    /**
    * Checks if the current browser reports round trip time statistics for
    * the ICE candidate pair.
    * @return {boolean}
    */
  }, {
    key: "supportsRTTStatistics",
    value: function() {
      return !this.isFirefox();
    }
    /**
    * Checks if the browser uses plan B.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesPlanB",
    value: function() {
      return !this.usesUnifiedPlan();
    }
    /**
    * Checks if the browser uses SDP munging for turning on simulcast.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesSdpMungingForSimulcast",
    value: function() {
      return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();
    }
    /**
    * Checks if the browser uses unified plan.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesUnifiedPlan",
    value: function() {
      return !!(this.isFirefox() || this.isWebKitBased());
    }
    /**
    * Returns whether or not the current browser should be using the new
    * getUserMedia flow, which utilizes the adapter shim. This method should
    * be temporary and used while migrating all browsers to use adapter and
    * the new getUserMedia.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesNewGumFlow",
    value: function() {
      return !!(this.isChromiumBased() || this.isFirefox() || this.isWebKitBased());
    }
    /**
    * Checks if the browser uses webrtc-adapter. All browsers using the new
    * getUserMedia flow.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesAdapter",
    value: function() {
      return this.usesNewGumFlow();
    }
    /**
    * Checks if the browser uses RIDs/MIDs for siganling the simulcast streams
    * to the bridge instead of the ssrcs.
    */
  }, {
    key: "usesRidsForSimulcast",
    value: function() {
      return !1;
    }
    /**
    * Checks if the browser supports getDisplayMedia.
    * @returns {boolean} {@code true} if the browser supports getDisplayMedia.
    */
  }, {
    key: "supportsGetDisplayMedia",
    value: function() {
      return typeof navigator.getDisplayMedia != "undefined" || typeof navigator.mediaDevices != "undefined" && typeof navigator.mediaDevices.getDisplayMedia != "undefined";
    }
    /**
    * Checks if the browser supports insertable streams, needed for E2EE.
    * @returns {boolean} {@code true} if the browser supports insertable streams.
    */
  }, {
    key: "supportsInsertableStreams",
    value: function() {
      if (!(typeof window.RTCRtpSender != "undefined" && (window.RTCRtpSender.prototype.createEncodedStreams || window.RTCRtpSender.prototype.createEncodedVideoStreams)))
        return !1;
      var r = new ReadableStream();
      try {
        return window.postMessage(r, "*", [r]), !0;
      } catch (n) {
        return !1;
      }
    }
    /**
    * Whether the browser supports the RED format for audio.
    */
  }, {
    key: "supportsAudioRed",
    value: function() {
      return Boolean(window.RTCRtpSender && window.RTCRtpSender.getCapabilities && window.RTCRtpSender.getCapabilities("audio").codecs.some(function(r) {
        return r.mimeType === "audio/red";
      }) && window.RTCRtpReceiver && window.RTCRtpReceiver.getCapabilities && window.RTCRtpReceiver.getCapabilities("audio").codecs.some(function(r) {
        return r.mimeType === "audio/red";
      }));
    }
    /**
    * Checks if the browser supports the "sdpSemantics" configuration option.
    * https://webrtc.org/web-apis/chrome/unified-plan/
    *
    * @returns {boolean}
    */
  }, {
    key: "supportsSdpSemantics",
    value: function() {
      return this.isChromiumBased();
    }
    /**
    * Returns the version of a Chromium based browser.
    *
    * @returns {Number}
    */
  }, { key: "_getChromiumBasedVersion", value: function() {
    if (this.isChromiumBased()) {
      if (this.isNWJS())
        return Number.parseInt(process.versions.chromium, 10);
      var r = navigator.userAgent;
      if (r.match(/Chrome/)) {
        var n = Number.parseInt(r.match(/Chrome\/([\d.]+)/)[1], 10);
        return n;
      }
    }
    return -1;
  } }, { key: "isIOSMobile", value: function() {
    return this.isMobile && this._bowser.getOSName() === "iOS";
  } }]);
}(Tm), kr = new wm(), ht = {}, Pm = { get exports() {
  return ht;
}, set exports(o) {
  ht = o;
} }, $o = (typeof Reflect == "undefined" ? "undefined" : Pe(Reflect)) === "object" ? Reflect : null, th = $o && typeof $o.apply == "function" ? $o.apply : function(t, e, r) {
  return Function.prototype.apply.call(t, e, r);
}, $l;
$o && typeof $o.ownKeys == "function" ? $l = $o.ownKeys : Object.getOwnPropertySymbols ? $l = function(t) {
  return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
} : $l = function(t) {
  return Object.getOwnPropertyNames(t);
};
function Sm(o) {
  console && console.warn && console.warn(o);
}
var Vv = Number.isNaN || function(t) {
  return t !== t;
};
function Xe() {
  Xe.init.call(this);
}
Pm.exports = Xe;
ht.once = Am;
Xe.EventEmitter = Xe;
Xe.prototype._events = void 0;
Xe.prototype._eventsCount = 0;
Xe.prototype._maxListeners = void 0;
var nh = 10;
function mc(o) {
  if (typeof o != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + Pe(o));
}
Object.defineProperty(Xe, "defaultMaxListeners", { enumerable: !0, get: function() {
  return nh;
}, set: function(t) {
  if (typeof t != "number" || t < 0 || Vv(t))
    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
  nh = t;
} });
Xe.init = function() {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
};
Xe.prototype.setMaxListeners = function(t) {
  if (typeof t != "number" || t < 0 || Vv(t))
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
  return this._maxListeners = t, this;
};
function Uv(o) {
  return o._maxListeners === void 0 ? Xe.defaultMaxListeners : o._maxListeners;
}
Xe.prototype.getMaxListeners = function() {
  return Uv(this);
};
Xe.prototype.emit = function(t) {
  for (var e = [], r = 1; r < arguments.length; r++)
    e.push(arguments[r]);
  var n = t === "error", a = this._events;
  if (a !== void 0)
    n = n && a.error === void 0;
  else if (!n)
    return !1;
  if (n) {
    var i;
    if (e.length > 0 && (i = e[0]), i instanceof Error)
      throw i;
    var s = new Error("Unhandled error." + (i ? " (" + i.message + ")" : ""));
    throw s.context = i, s;
  }
  var u = a[t];
  if (u === void 0)
    return !1;
  if (typeof u == "function")
    th(u, this, e);
  else
    for (var c = u.length, d = qv(u, c), r = 0; r < c; ++r)
      th(d[r], this, e);
  return !0;
};
function jv(o, t, e, r) {
  var n, a, i;
  if (mc(e), a = o._events, a === void 0 ? (a = o._events = /* @__PURE__ */ Object.create(null), o._eventsCount = 0) : (a.newListener !== void 0 && (o.emit("newListener", t, e.listener ? e.listener : e), a = o._events), i = a[t]), i === void 0)
    i = a[t] = e, ++o._eventsCount;
  else if (typeof i == "function" ? i = a[t] = r ? [e, i] : [i, e] : r ? i.unshift(e) : i.push(e), n = Uv(o), n > 0 && i.length > n && !i.warned) {
    i.warned = !0;
    var s = new Error("Possible EventEmitter memory leak detected. " + i.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    s.name = "MaxListenersExceededWarning", s.emitter = o, s.type = t, s.count = i.length, Sm(s);
  }
  return o;
}
Xe.prototype.addListener = function(t, e) {
  return jv(this, t, e, !1);
};
Xe.prototype.on = Xe.prototype.addListener;
Xe.prototype.prependListener = function(t, e) {
  return jv(this, t, e, !0);
};
function Em() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function Fv(o, t, e) {
  var r = { fired: !1, wrapFn: void 0, target: o, type: t, listener: e }, n = Em.bind(r);
  return n.listener = e, r.wrapFn = n, n;
}
Xe.prototype.once = function(t, e) {
  return mc(e), this.on(t, Fv(this, t, e)), this;
};
Xe.prototype.prependOnceListener = function(t, e) {
  return mc(e), this.prependListener(t, Fv(this, t, e)), this;
};
Xe.prototype.removeListener = function(t, e) {
  var r, n, a, i, s;
  if (mc(e), n = this._events, n === void 0)
    return this;
  if (r = n[t], r === void 0)
    return this;
  if (r === e || r.listener === e)
    --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete n[t], n.removeListener && this.emit("removeListener", t, r.listener || e));
  else if (typeof r != "function") {
    for (a = -1, i = r.length - 1; i >= 0; i--)
      if (r[i] === e || r[i].listener === e) {
        s = r[i].listener, a = i;
        break;
      }
    if (a < 0)
      return this;
    a === 0 ? r.shift() : Cm(r, a), r.length === 1 && (n[t] = r[0]), n.removeListener !== void 0 && this.emit("removeListener", t, s || e);
  }
  return this;
};
Xe.prototype.off = Xe.prototype.removeListener;
Xe.prototype.removeAllListeners = function(t) {
  var e, r, n;
  if (r = this._events, r === void 0)
    return this;
  if (r.removeListener === void 0)
    return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : r[t] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete r[t]), this;
  if (arguments.length === 0) {
    var a = Object.keys(r), i;
    for (n = 0; n < a.length; ++n)
      i = a[n], i !== "removeListener" && this.removeAllListeners(i);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (e = r[t], typeof e == "function")
    this.removeListener(t, e);
  else if (e !== void 0)
    for (n = e.length - 1; n >= 0; n--)
      this.removeListener(t, e[n]);
  return this;
};
function Hv(o, t, e) {
  var r = o._events;
  if (r === void 0)
    return [];
  var n = r[t];
  return n === void 0 ? [] : typeof n == "function" ? e ? [n.listener || n] : [n] : e ? Rm(n) : qv(n, n.length);
}
Xe.prototype.listeners = function(t) {
  return Hv(this, t, !0);
};
Xe.prototype.rawListeners = function(t) {
  return Hv(this, t, !1);
};
Xe.listenerCount = function(o, t) {
  return typeof o.listenerCount == "function" ? o.listenerCount(t) : Bv.call(o, t);
};
Xe.prototype.listenerCount = Bv;
function Bv(o) {
  var t = this._events;
  if (t !== void 0) {
    var e = t[o];
    if (typeof e == "function")
      return 1;
    if (e !== void 0)
      return e.length;
  }
  return 0;
}
Xe.prototype.eventNames = function() {
  return this._eventsCount > 0 ? $l(this._events) : [];
};
function qv(o, t) {
  for (var e = new Array(t), r = 0; r < t; ++r)
    e[r] = o[r];
  return e;
}
function Cm(o, t) {
  for (; t + 1 < o.length; t++)
    o[t] = o[t + 1];
  o.pop();
}
function Rm(o) {
  for (var t = new Array(o.length), e = 0; e < t.length; ++e)
    t[e] = o[e].listener || o[e];
  return t;
}
function Am(o, t) {
  return new Promise(function(e, r) {
    function n(i) {
      o.removeListener(t, a), r(i);
    }
    function a() {
      typeof o.removeListener == "function" && o.removeListener("error", n), e([].slice.call(arguments));
    }
    Gv(o, t, a, { once: !0 }), t !== "error" && Im(o, n, { once: !0 });
  });
}
function Im(o, t, e) {
  typeof o.on == "function" && Gv(o, "error", t, e);
}
function Gv(o, t, e, r) {
  if (typeof o.on == "function")
    r.once ? o.once(t, e) : o.on(t, e);
  else if (typeof o.addEventListener == "function")
    o.addEventListener(t, function n(a) {
      r.once && o.removeEventListener(t, n), e(a);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + Pe(o));
}
var ce;
(function(o) {
  o[o.MAJOR_EVENT = 0] = "MAJOR_EVENT", o[o.MINOR_EVENT = 1] = "MINOR_EVENT";
})(ce || (ce = {}));
var K;
(function(o) {
  o.PRECALL_TEST_BEGIN = "precall_begin", o.PRECALL_TEST_COMPLETE = "precall_end", o.CALL_JOIN_BEGIN = "call_join", o.NET_QUALITY_TEST_BEGIN = "net_quality_test_begin", o.NET_QUALITY_TEST_END = "net_quality_test_end", o.WEBSOCKET_CONNECTED = "websocket_connected", o.TRANSPORT_CONNECTED = "transport_connected", o.AUDIO_ON = "audio_on", o.AUDIO_OFF = "audio_off", o.VIDEO_ON = "video_on", o.VIDEO_OFF = "video_off", o.PARTICIPANT_ROLE = "participant_role", o.PING_STAT = "ping_stat", o.DISCONNECT = "disconnect", o.RECONNECT_ATTEMPT = "reconnect_attempt", o.SCREENSHARE_START_REQUESTED = "screenshare_start_requested", o.SCREENSHARE_STARTED = "screenshare_started", o.SCREENSHARE_STOPPED = "screenshare_stopped", o.TAB_CHANGE = "tab_change", o.BROWSER_BACKGROUNDED = "browser_backgrounded", o.BROWSER_FOREGROUNDED = "browser_foregrounded", o.DOMINANT_SPEAKER = "dominant_speaker", o.AUDIO_DEVICES_UPDATES = "audio_devices_updates", o.VIDEO_DEVICES_UPDATES = "video_devices_updates", o.SPEAKER_DEVICES_UPDATES = "speaker_devices_updates", o.SELECTED_MICROHPONE_UPDATE = "selected_microphone_update", o.SELECTED_CAMERA_UPDATE = "selected_camera_update", o.SELECTED_SPEAKER_UPDATE = "selected_speaker_update", o.EXPECTED_VIDEO_RESOLUTION = "expected_video_resolution", o.EXPECTED_SCREENSHARE_RESOLUTION = "expected_screenshare_resolution", o.MEDIA_PERMISSION = "media_permission", o.LEGACY_SWITCH = "legacy_switch", o.AUDIO_PLAY_FAILED = "audio_play_failed", o.VIDEO_PLAY_FAILED = "video_play_failed", o.AUDIO_TRACK_MUTED = "audio_track_muted", o.VIDEO_TRACK_MUTED = "video_track_muted", o.IVS_PLAYER_REBUFFERING = "ivs_player_rebuffering", o.IVS_PLAYER_AUDIO_BLOCKED = "ivs_player_audio_blocked", o.IVS_PLAYER_PLAYBACK_BLOCKED = "ivs_player_playback_blocked", o.IVS_PLAYER_ERROR = "ivs_player_error", o.IVS_PLAYER_RECOVERABLE_ERROR = "ivs_player_recoverable_error", o.IVS_PLAYER_WORKER_ERROR = "ivs_player_worker_error", o.IVS_PLAYER_NETWORK_UNAVAILABLE = "ivs_player_network_unavailable", o.LIVESTREAM_LATENCY = "livestream_latency", o.IVS_PLAYER_ANALYTICS_EVENT = "ivs_player_analytics_event", o.IVS_PLAYER_PLAYBACK_RATE_CHANGED = "ivs_player_playback_rate_changed", o.IVS_PLAYER_QUALITY_CHANGED = "ivs_player_quality_changed", o.IVS_PLAYER_INITIALIZED = "ivs_player_initialized";
})(K || (K = {}));
var _m = /* @__PURE__ */ new Map([
  [K.PRECALL_TEST_BEGIN, ce.MINOR_EVENT],
  [K.PRECALL_TEST_COMPLETE, ce.MINOR_EVENT],
  [K.CALL_JOIN_BEGIN, ce.MAJOR_EVENT],
  [K.NET_QUALITY_TEST_BEGIN, ce.MINOR_EVENT],
  [K.NET_QUALITY_TEST_END, ce.MINOR_EVENT],
  [K.WEBSOCKET_CONNECTED, ce.MINOR_EVENT],
  [K.TRANSPORT_CONNECTED, ce.MAJOR_EVENT],
  [K.AUDIO_ON, ce.MINOR_EVENT],
  [K.AUDIO_OFF, ce.MINOR_EVENT],
  [K.VIDEO_ON, ce.MINOR_EVENT],
  [K.VIDEO_OFF, ce.MINOR_EVENT],
  [K.PARTICIPANT_ROLE, ce.MINOR_EVENT],
  [K.PING_STAT, ce.MAJOR_EVENT],
  [K.DISCONNECT, ce.MAJOR_EVENT],
  [K.RECONNECT_ATTEMPT, ce.MAJOR_EVENT],
  [K.SCREENSHARE_START_REQUESTED, ce.MINOR_EVENT],
  [K.SCREENSHARE_STARTED, ce.MINOR_EVENT],
  [K.SCREENSHARE_STOPPED, ce.MINOR_EVENT],
  [K.TAB_CHANGE, ce.MINOR_EVENT],
  [K.BROWSER_BACKGROUNDED, ce.MINOR_EVENT],
  [K.BROWSER_FOREGROUNDED, ce.MINOR_EVENT],
  [K.DOMINANT_SPEAKER, ce.MINOR_EVENT],
  [K.AUDIO_DEVICES_UPDATES, ce.MINOR_EVENT],
  [K.VIDEO_DEVICES_UPDATES, ce.MINOR_EVENT],
  [K.SPEAKER_DEVICES_UPDATES, ce.MINOR_EVENT],
  [K.SELECTED_MICROHPONE_UPDATE, ce.MINOR_EVENT],
  [K.SELECTED_CAMERA_UPDATE, ce.MINOR_EVENT],
  [K.SELECTED_SPEAKER_UPDATE, ce.MINOR_EVENT],
  [K.MEDIA_PERMISSION, ce.MINOR_EVENT],
  [K.LEGACY_SWITCH, ce.MINOR_EVENT],
  [K.AUDIO_PLAY_FAILED, ce.MINOR_EVENT],
  [K.VIDEO_PLAY_FAILED, ce.MINOR_EVENT],
  [K.AUDIO_TRACK_MUTED, ce.MINOR_EVENT],
  [K.VIDEO_TRACK_MUTED, ce.MINOR_EVENT],
  // IVS Player Events
  [K.IVS_PLAYER_REBUFFERING, ce.MAJOR_EVENT],
  [K.IVS_PLAYER_AUDIO_BLOCKED, ce.MAJOR_EVENT],
  [K.IVS_PLAYER_PLAYBACK_BLOCKED, ce.MAJOR_EVENT],
  [K.IVS_PLAYER_ERROR, ce.MAJOR_EVENT],
  [K.IVS_PLAYER_RECOVERABLE_ERROR, ce.MAJOR_EVENT],
  [K.IVS_PLAYER_WORKER_ERROR, ce.MAJOR_EVENT],
  [K.IVS_PLAYER_NETWORK_UNAVAILABLE, ce.MAJOR_EVENT],
  // We are keeping live latency as major, so that it
  // acts as a ping alternative for livestream viewer
  [K.LIVESTREAM_LATENCY, ce.MAJOR_EVENT],
  [K.IVS_PLAYER_ANALYTICS_EVENT, ce.MINOR_EVENT],
  [K.IVS_PLAYER_PLAYBACK_RATE_CHANGED, ce.MINOR_EVENT],
  [K.IVS_PLAYER_QUALITY_CHANGED, ce.MINOR_EVENT],
  [K.IVS_PLAYER_INITIALIZED, ce.MINOR_EVENT],
  [K.EXPECTED_VIDEO_RESOLUTION, ce.MINOR_EVENT],
  [K.EXPECTED_SCREENSHARE_RESOLUTION, ce.MINOR_EVENT]
]), Mm = /* @__PURE__ */ function() {
  function o() {
    w(this, o), this.events = void 0, this.events = [];
  }
  return P(o, [{ key: "add", value: function(e) {
    this.events.push(e);
  } }, { key: "flush", value: function() {
    var e = this.events.splice(0, 25);
    return { entries: e };
  } }]);
}(), Dm = /* @__PURE__ */ function(o) {
  function t(e) {
    var r, n = e.logger, a = e.peerId, i = e.apiHostnames;
    return w(this, t), r = C(this, t), r.logger = void 0, r.peerId = void 0, r.eventStore = void 0, r.apiEndpoint = void 0, r.logger = n, r.peerId = a, r.apiEndpoint = "https://".concat(i.daCollector, "/api/v1/message"), r.eventStore = new Mm(), r;
  }
  return R(t, o), P(t, [{ key: "sendEventsChunkToServer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return s = { payload: a, peerId: this.peerId }, d.prev = 1, d.next = 4, fetch(this.apiEndpoint, { method: "POST", body: JSON.stringify(s) });
            case 4:
              return d.abrupt("return", !0);
            case 7:
              return d.prev = 7, d.t0 = d.catch(1), this.logger.error("callStats::sendEventsChunkToServer::catch", { error: d.t0 }), (u = a.entries) === null || u === void 0 || u.forEach(function(h) {
                i.eventStore.add(h);
              }), d.abrupt("return", !1);
            case 12:
            case "end":
              return d.stop();
          }
      }, n, this, [[1, 7]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "callEvent", value: function(r) {
    r.timestamp = new Date(), this.eventStore.add(r), this.emit(r.event, r.metaData), _m.get(r.event) === ce.MAJOR_EVENT && this.flush();
  } }, { key: "flush", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this.eventStore.flush(), !(i != null && (a = i.entries) !== null && a !== void 0 && a.length)) {
                u.next = 5;
                break;
              }
              return u.next = 4, this.sendEventsChunkToServer(i);
            case 4:
              return u.abrupt("return", !0);
            case 5:
              return u.abrupt("return", !1);
            case 6:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(ht), ah;
(function(o) {
  o.CHROMIUM = "chromum", o.FIREFOX = "firefox", o.SAFARI = "safari";
})(ah || (ah = {}));
var Uu = { DEVEL: "devel", PREPROD: "preprod", PROD: "prod" }, yn;
(function(o) {
  o.AUDIO = "AUDIO", o.VIDEO = "VIDEO", o.SPEAKER = "SPEAKER", o.SCREENSHARE = "SCREENSHARE";
})(yn || (yn = {}));
var ih;
(function(o) {
  o[o.INIT = 0] = "INIT", o[o.ACCEPTED = 1] = "ACCEPTED", o[o.DENIED = 2] = "DENIED", o[o.SYS_DENIED = 3] = "SYS_DENIED", o[o.FAILED = 4] = "FAILED", o[o.NOTFOUND = 5] = "NOTFOUND", o[o.NOT_APPLICABLE = 6] = "NOT_APPLICABLE";
})(ih || (ih = {}));
function $i(o) {
  return o ? o.split(".").slice(0, 2).concat(["0", "0"]).join(".") : "";
}
function ec(o) {
  var t = o.packetsLost, e = o.packetsSent;
  return e > 0 ? t * 100 / e : 0;
}
function rc(o) {
  var t = o.packetsLost, e = o.packetsReceived;
  return e + t > 0 ? t * 100 / (e + t) : 0;
}
var Wv = 240, Jv = 720, Kv = 8, zv = 3, yc = 10, kc = 0.02, bc = 0.03;
function Ya(o) {
  var t = o.stat, e = o.weight, r = o.rangeMin, n = o.rangeMax, a = o.rangeRankingDirection;
  return t == null ? e : r === n ? a === "UP" ? t <= r ? e : 0 : t >= n ? e : 0 : a === "UP" ? (1 - Math.max(Math.min(n, Math.abs(t)) - r, 0) / (n - r)) * e : a === "DOWN" ? Math.max(Math.min(n, Math.abs(t)) - r, 0) / (n - r) * e : e;
}
function Yv(o) {
  var t = o.isLowQualityVideo, e = o.isVideoStuck, r = o.isVideoLagging, n = o.jitterQuality, a = o.packetsLostQuality, i = 0.8 * ((t ? 0.85 : 1) * (r ? 0.7 : 1) * (e ? 0.5 : 1)) + 0.2 * (n * a);
  return Math.round((i + Number.EPSILON) * 100) / 100;
}
function Qv(o) {
  var t = o.packetsLost, e = o.packetsSent;
  return e > 0 ? t * 100 / e : 0;
}
function Xv(o) {
  var t = o.packetsLost, e = o.packetsSent, r = o.jitter, n = 0.7, a = Ya({ stat: Qv({ packetsLost: t, packetsSent: e }), weight: n, rangeMin: 0, rangeMax: yc, rangeRankingDirection: "UP" }), i = 0.3, s = Ya({ stat: r, weight: i, rangeMin: kc, rangeMax: bc, rangeRankingDirection: "UP" });
  return a + s;
}
function Om(o) {
  var t = o.frameWidth, e = o.isScreenShare, r = e ? Jv : Wv;
  return t < r;
}
function Lm(o) {
  var t = o.framesPerSecond, e = o.isScreenShare, r = e ? zv : Kv;
  return t < r;
}
function Nm(o) {
  var t = o.framesEncoded;
  return t === 0;
}
function Zv(o) {
  var t = o.frameWidth, e = o.framesPerSecond, r = o.packetsLost, n = o.packetsSent, a = o.jitter, i = o.isScreenShare, s = o.framesEncoded, u = Ya({ stat: Qv({ packetsLost: r, packetsSent: n }), weight: 1, rangeMin: 0, rangeMax: yc, rangeRankingDirection: "UP" }), c = Ya({ stat: a, weight: 1, rangeMin: kc, rangeMax: bc, rangeRankingDirection: "UP" }), d = Om({ frameWidth: t, isScreenShare: i }), h = Lm({ framesPerSecond: e, isScreenShare: i }), v = Nm({ framesEncoded: s, isScreenShare: i });
  return Yv({ isLowQualityVideo: d, isVideoLagging: h, isVideoStuck: v, jitterQuality: c, packetsLostQuality: u });
}
function xv(o) {
  var t = o.packetsLost, e = o.packetsReceived;
  return e + t > 0 ? t * 100 / (e + t) : 0;
}
function ef(o) {
  var t = o.concealmentEvents, e = o.packetsLost, r = o.packetsReceived, n = o.jitter, a = 0.2, i = Ya({ stat: t, weight: a, rangeMin: 0, rangeMax: 3, rangeRankingDirection: "UP" }), s = 0.5, u = Ya({ stat: xv({ packetsLost: e, packetsReceived: r }), weight: s, rangeMin: 0, rangeMax: yc, rangeRankingDirection: "UP" }), c = 0.3, d = Ya({ stat: n, weight: c, rangeMin: kc, rangeMax: bc, rangeRankingDirection: "UP" });
  return i + u + d;
}
function $m(o) {
  var t = o.framesDecoded;
  return t === 0;
}
function Vm(o) {
  var t = o.framesPerSecond, e = o.isScreenShare, r = e ? zv : Kv;
  return t < r;
}
function Um(o) {
  var t = o.frameWidth, e = o.isScreenShare, r = e ? Jv : Wv;
  return t < r;
}
function rf(o) {
  var t = o.frameWidth, e = o.framesPerSecond, r = o.packetsLost, n = o.packetsReceived, a = o.jitter, i = o.isScreenShare, s = o.framesDecoded, u = Ya({ stat: xv({ packetsLost: r, packetsReceived: n }), weight: 1, rangeMin: 0, rangeMax: yc, rangeRankingDirection: "UP" }), c = Ya({ stat: a, weight: 1, rangeMin: kc, rangeMax: bc, rangeRankingDirection: "UP" }), d = Um({ frameWidth: t, isScreenShare: i }), h = Vm({ framesPerSecond: e, isScreenShare: i }), v = $m({ framesDecoded: s, isScreenShare: i });
  return Yv({ isLowQualityVideo: d, isVideoLagging: h, isVideoStuck: v, jitterQuality: c, packetsLostQuality: u });
}
var Wo = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.pc1 = void 0, this.pc2 = void 0, this.constrainVideoBitrateKbps = void 0, this.constrainOfferToRemoveVideoFec = !1, this.iceCandidateFilter = void 0;
    var e = new RTCPeerConnection(t), r = new RTCPeerConnection(t);
    this.pc1 = e, this.pc2 = r, this.iceCandidateFilter = o.noFilter, this.pc1.addEventListener("icecandidate", this.onIceCandidate.bind(this, this.pc2)), this.pc2.addEventListener("icecandidate", this.onIceCandidate.bind(this, this.pc1));
  }
  return P(o, [{ key: "onIceCandidate", value: function(e, r) {
    if (r.candidate) {
      var n = o.parseCandidate(r.candidate.candidate);
      this.iceCandidateFilter(n) && e.addIceCandidate(r.candidate);
    }
  } }, {
    key: "setIceCandidateFilter",
    value: function(e) {
      this.iceCandidateFilter = e;
    }
    // Constraint max video bitrate by modifying the SDP when creating an answer.
  }, {
    key: "constrainVideoBitrate",
    value: function(e) {
      this.constrainVideoBitrateKbps = e;
    }
    // Remove video FEC if available on the offer.
  }, { key: "disableVideoFec", value: function() {
    this.constrainOfferToRemoveVideoFec = !0;
  } }, { key: "gotOffer", value: function(e) {
    this.constrainOfferToRemoveVideoFec && (e.sdp = e.sdp.replace(/(m=video 1 [^\r]+)(116 117)(\r\n)/g, `$1\r
`), e.sdp = e.sdp.replace(/a=rtpmap:116 red\/90000\r\n/g, ""), e.sdp = e.sdp.replace(/a=rtpmap:117 ulpfec\/90000\r\n/g, ""), e.sdp = e.sdp.replace(/a=rtpmap:98 rtx\/90000\r\n/g, ""), e.sdp = e.sdp.replace(/a=fmtp:98 apt=116\r\n/g, "")), this.pc1.setLocalDescription(e), this.pc2.setRemoteDescription(e), this.pc2.createAnswer().then(this.gotAnswer.bind(this), this.reportFatal.bind(this));
  } }, { key: "gotAnswer", value: function(e) {
    this.constrainVideoBitrateKbps && (e.sdp = e.sdp.replace(/a=mid:video\r\n/g, `a=mid:video\r
b=AS:`.concat(this.constrainVideoBitrateKbps, `\r
`))), this.pc2.setLocalDescription(e), this.pc1.setRemoteDescription(e);
  } }, {
    key: "establishConnection",
    value: function() {
      this.pc1.createOffer().then(this.gotOffer.bind(this), this.reportFatal.bind(this));
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "reportFatal", value: function(e) {
    console.error("Error:", e);
  } }, { key: "getRoundTripTime", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s, u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return v.next = 2, Promise.all([this.pc1.getStats(), this.pc2.getStats()]);
            case 2:
              if (n = v.sent, a = Me(n, 2), i = a[0], s = a[1], i.forEach(function(f) {
                f.type === "candidate-pair" && f.nominated === !0 && f.bytesSent > 0 && (u = f);
              }), s.forEach(function(f) {
                f.type === "candidate-pair" && f.nominated === !0 && f.bytesReceived > 0 && (c = f);
              }), !(u && c)) {
                v.next = 19;
                break;
              }
              if (v.prev = 9, !(u.currentRoundTripTime && c.currentRoundTripTime)) {
                v.next = 12;
                break;
              }
              return v.abrupt("return", { rtt: u.currentRoundTripTime, backendRTT: c.currentRoundTripTime });
            case 12:
              return d = (c.lastPacketReceivedTimestamp - u.lastPacketSentTimestamp) / 1e3, v.abrupt("return", { rtt: d, backendRTT: d });
            case 16:
              return v.prev = 16, v.t0 = v.catch(9), v.abrupt("return", void 0);
            case 19:
              return v.abrupt("return", void 0);
            case 20:
            case "end":
              return v.stop();
          }
      }, r, this, [[9, 16]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "close", value: function() {
    this.pc1.close(), this.pc2.close();
  } }], [{ key: "parseCandidate", value: function(e) {
    var r = "candidate:", n = e.indexOf(r) + r.length, a = e.substr(n).split(" ");
    return { type: a[7], protocol: a[2], address: a[4] };
  } }, { key: "isNotHostCandidate", value: function(e) {
    return e.type !== "host";
  } }, { key: "isHost", value: function(e) {
    return e.type === "host";
  } }, { key: "isRelay", value: function(e) {
    return e.type === "relay";
  } }, { key: "isReflexive", value: function(e) {
    return e.type === "srflx";
  } }, { key: "noFilter", value: function(e) {
    return !0;
  } }]);
}(), tf = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t), r.call = void 0, r.timeOut = void 0, r.call = new Wo(e), r;
  }
  return R(t, o), P(t, [{ key: "start", value: function() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1e4;
    this.call.establishConnection(), this.timeOut = setTimeout(this.testFailed.bind(this), r);
  } }, { key: "testComplete", value: function(r) {
    clearTimeout(this.timeOut), this.call.close(), this.emit("done", r);
  } }, { key: "testFailed", value: function(r) {
    this.call.close(), this.emit("failed", r);
  } }]);
}(ht), jm = 8, Fm = 1 / 1e3, Hm = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    w(this, t), r = C(this, t, [e]), r.senderChannel = void 0, r.recieveChannel = void 0, r.startTime = void 0, r.lastBitrateMeasureTime = void 0, r.sentPayloadBytes = 0, r.recievedPayloadBytes = 0, r.lastReceivedPayloadBytes = 0, r.stopSending = !1, r.testProgress = 0, r.samplePacket = "", r.finalBitrateSum = 0, r.bitRateSampels = 0, r.maxNumberOfPacketsToSend = 0, r.bytesToKeepBuffered = 0, r.testDurationSeconds = 5, r.call.setIceCandidateFilter(Wo.isNotHostCandidate), r.senderChannel = r.call.pc1.createDataChannel(null);
    for (var n = 0; n < 1024 * 256; n += 1)
      r.samplePacket += "h";
    return r.maxNumberOfPacketsToSend = 1, r.bytesToKeepBuffered = 1024 * r.maxNumberOfPacketsToSend, r.testDurationSeconds = 4, r.senderChannel.addEventListener("open", r.sendingStep.bind(r)), r.call.pc2.addEventListener("datachannel", r.onRecieverChannel.bind(r)), r;
  }
  return R(t, o), P(t, [{ key: "sendingStep", value: function() {
    var r = new Date();
    this.startTime || (this.startTime = r, this.lastBitrateMeasureTime = r);
    for (var n = 0; n !== this.maxNumberOfPacketsToSend && !(this.senderChannel.bufferedAmount >= this.bytesToKeepBuffered); n += 1) {
      this.sentPayloadBytes += this.samplePacket.length;
      try {
        this.senderChannel.send(this.samplePacket);
      } catch (i) {
      }
    }
    var a = r.getTime() - this.startTime.getTime();
    a >= 1e3 * this.testDurationSeconds ? (this.stopSending = !0, this.testProgress = 100) : (this.testProgress = a / (10 * this.testDurationSeconds), setTimeout(this.sendingStep.bind(this), 1));
  } }, { key: "onMessageRecieved", value: function(r) {
    this.recievedPayloadBytes += r.data.length;
    var n = new Date(), a = n.getTime() - this.lastBitrateMeasureTime.getTime();
    if (a >= 1e3) {
      var i = this.recievedPayloadBytes - this.lastReceivedPayloadBytes, s = i * jm / (a / 1e3);
      this.finalBitrateSum += s, this.bitRateSampels += 1, this.lastReceivedPayloadBytes = this.recievedPayloadBytes, this.lastBitrateMeasureTime = n;
    }
    if (this.stopSending && this.sentPayloadBytes === this.recievedPayloadBytes) {
      var u = this.finalBitrateSum / this.bitRateSampels;
      this.testComplete({ throughput: Math.round(u * Fm) });
    }
  } }, { key: "testComplete", value: function(r) {
    var n = this;
    this.call.getRoundTripTime().then(function(a) {
      var i = a.rtt, s = a.backendRTT;
      return Ce(t, "testComplete", n, 3)([{ RTT: i, backendRTT: s, throughput: r.throughput }]);
    });
  } }, { key: "onRecieverChannel", value: function(r) {
    this.recieveChannel = r.channel, this.recieveChannel.addEventListener("message", this.onMessageRecieved.bind(this));
  } }]);
}(tf), Ap = /* @__PURE__ */ function(o) {
  function t(e) {
    var r, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Wo.noFilter;
    w(this, t), r = C(this, t, [e]), r.ch1 = void 0, r.ch2 = void 0, r.call.setIceCandidateFilter(n);
    var a = r.call.pc1.createDataChannel(null);
    return r.ch1 = a, a.addEventListener("open", function() {
      a.send("hello");
    }), a.addEventListener("message", r.onCh1Recieve.bind(r)), r.call.pc2.addEventListener("datachannel", r.dataChannelHandler.bind(r)), r;
  }
  return R(t, o), P(t, [{ key: "onCh1Recieve", value: function(r) {
    r.data !== "world" ? this.hangup("Invalid data transmitted.") : this.testComplete({ connectivity: !0 });
  } }, { key: "onCh2Recieve", value: function(r) {
    if (r.data !== "hello")
      this.hangup("Invalid data transmitted.");
    else
      try {
        this.ch2.send("world");
      } catch (n) {
      }
  } }, { key: "dataChannelHandler", value: function(r) {
    var n = r.channel;
    this.ch2 = n, n.addEventListener("message", this.onCh2Recieve.bind(this));
  } }, { key: "hangup", value: function(r) {
    this.testFailed(r);
  } }]);
}(tf), Bm = /* @__PURE__ */ function(o) {
  function t(e) {
    return w(this, t), C(this, t, [e, Wo.isHost]);
  }
  return R(t, o), P(t);
}(Ap), qm = /* @__PURE__ */ function(o) {
  function t(e) {
    return w(this, t), C(this, t, [e, Wo.isRelay]);
  }
  return R(t, o), P(t);
}(Ap), Gm = /* @__PURE__ */ function(o) {
  function t(e) {
    return w(this, t), C(this, t, [e, Wo.isReflexive]);
  }
  return R(t, o), P(t);
}(Ap), Wm = /* @__PURE__ */ function() {
  function o() {
    w(this, o), this.ipInformation = null;
  }
  return P(o, [{ key: "getIPDetails", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f, g;
      return p().wrap(function(y) {
        for (; ; )
          switch (y.prev = y.next) {
            case 0:
              if (a = n.peerId, i = n.apiHostnames, s = n.logger, this.ipInformation) {
                y.next = 33;
                break;
              }
              return y.prev = 2, c = "https://".concat(i.location), y.next = 6, fetch(c);
            case 6:
              return d = y.sent, y.next = 9, d.json();
            case 9:
              if (h = y.sent, !(((u = h.loc) === null || u === void 0 ? void 0 : u.length) > 5)) {
                y.next = 14;
                break;
              }
              return this.ipInformation = h, (v = this.ipInformation) !== null && v !== void 0 && v.ip && (this.ipInformation.ip = $i(this.ipInformation.ip)), y.abrupt("return", h);
            case 14:
              throw Error("Insufficient data");
            case 17:
              y.prev = 17, y.t0 = y.catch(2), s.error("callstats::ipDetails:: failed to fetch ip using location service", { error: y.t0 });
            case 20:
              return y.prev = 20, y.next = 23, fetch("https://".concat(i.locationLegacy, "/?token=3c493932b0624c&peerId=").concat(a), { method: "POST" });
            case 23:
              return g = y.sent, y.next = 26, g.json();
            case 26:
              this.ipInformation = y.sent, (f = this.ipInformation) !== null && f !== void 0 && f.ip && (this.ipInformation.ip = $i(this.ipInformation.ip)), y.next = 33;
              break;
            case 30:
              y.prev = 30, y.t1 = y.catch(20), s.error("callstats::ipDetails:: failed to fetch ip using legacy location service", { error: y.t1 });
            case 33:
              return y.abrupt("return", this.ipInformation);
            case 34:
            case "end":
              return y.stop();
          }
      }, r, this, [[2, 17], [20, 30]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resetCache", value: function() {
    this.ipInformation = null;
  } }]);
}(), Ip = new Wm(), sh = [{ urls: "turn:turn.dyte.in:443?transport=tcp", username: "dyte", credential: "dytein", credentialType: "password" }, { urls: "turn:turn.dyte.in:3478?transport=udp", username: "dyte", credential: "dytein", credentialType: "password" }];
function oh(o) {
  var t = o.split(","), e = Me(t, 2), r = e[0], n = e[1];
  return { coords: { latitude: Number(r), longitude: Number(n) } };
}
var nf = /* @__PURE__ */ P(function o() {
  w(this, o), this.transport = void 0, this.candidatePair = void 0, this.outboundVideoRtp = /* @__PURE__ */ new Map(), this.inboundVideoRtp = /* @__PURE__ */ new Map(), this.outboundAudioRtp = /* @__PURE__ */ new Map(), this.inboundAudioRtp = /* @__PURE__ */ new Map(), this.remoteInboundRtp = /* @__PURE__ */ new Map(), this.producerStreamMap = /* @__PURE__ */ new Map(), this.consumerStreamMap = /* @__PURE__ */ new Map(), this.staleProducerStreamMap = !1, this.staleConsumerStreamMap = !1;
}), af = /* @__PURE__ */ function(o) {
  function t() {
    var e;
    return w(this, t), e = C(this, t), e.observer = void 0, e.outboundProducerMap = /* @__PURE__ */ new Map(), e.inboundConsumerMap = /* @__PURE__ */ new Map(), e.consumerPeerIdMap = /* @__PURE__ */ new Map(), e.pausedConsumerMap = /* @__PURE__ */ new Map(), e.pausedProducerMap = /* @__PURE__ */ new Map(), e.overallProducingTransportsStatsMap = {}, e.overallConsumingTransportsStatsMap = {}, e.overallConsumersStatsMap = {}, e.overallProducersStatsMap = {}, e.videoProducerToStatsMap = /* @__PURE__ */ new Map(), e.audioProducerToStatsMap = /* @__PURE__ */ new Map(), e.videoConsumerToStatsMap = /* @__PURE__ */ new Map(), e.audioConsumerToStatsMap = /* @__PURE__ */ new Map(), e.consumerIdsWithFreezedVideo = /* @__PURE__ */ new Set(), e.consumerIdsWithFreezedAudio = /* @__PURE__ */ new Set(), e.producerIdsWithFreezedVideo = /* @__PURE__ */ new Set(), e.producerIdsWithFreezedAudio = /* @__PURE__ */ new Set(), e.freezedProducingTransportIds = /* @__PURE__ */ new Set(), e.freezedConsumingTransportIds = /* @__PURE__ */ new Set(), e.screenShareProducers = /* @__PURE__ */ new Set(), e.screenShareConsumers = /* @__PURE__ */ new Set(), e.ipDetails = void 0, e.callStatsInstance = void 0, e.observer = new ht(), e;
  }
  return R(t, o), P(t, [{ key: "registerProducer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.generateProducerStreamMap(a);
            case 2:
              a.on("close", this.deregisterProducer.bind(this, a)), a.on("pause", this.pauseProducer.bind(this, a.id)), a.on("resume", this.resumeProducer.bind(this, a.id)), a.appData.screenShare === !0 && this.screenShareProducers.add(a.id);
            case 6:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "pauseProducer", value: function(r) {
    this.pausedProducerMap.set(r, { lastReportCalculated: !1 });
  } }, { key: "resumeProducer", value: function(r) {
    this.pausedProducerMap.delete(r);
  } }, { key: "processInboundConsumerVideoStats", value: function(r, n, a) {
    var i, s = (this === null || this === void 0 || (i = this.callStatsInstance) === null || i === void 0 || (i = i.consumerSharedMediaStatesMap) === null || i === void 0 ? void 0 : i.get(r)) || {};
    n.totalVideoPacketsReceived === a.packetsReceived ? (this.consumerIdsWithFreezedVideo.add(r), this.callStatsInstance && s.video && (this.callStatsInstance.logger.debug("callstats::measurements::consumerVideoFreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_video_status", "pause", r))) : (n.totalVideoPacketsReceived = a.packetsReceived, this.consumerIdsWithFreezedVideo.has(r) && (this.consumerIdsWithFreezedVideo.delete(r), this.callStatsInstance && s.video && (this.callStatsInstance.logger.debug("callstats::measurements::consumerVideoDefreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_video_status", "resume", r))));
  } }, { key: "processInboundConsumerAudioStats", value: function(r, n, a) {
    var i, s = (this === null || this === void 0 || (i = this.callStatsInstance) === null || i === void 0 || (i = i.consumerSharedMediaStatesMap) === null || i === void 0 ? void 0 : i.get(r)) || {};
    n.totalAudioPacketsReceived === a.packetsReceived ? (this.consumerIdsWithFreezedAudio.add(r), this.callStatsInstance && s.audio && (this.callStatsInstance.logger.debug("callStats::measurements::consumerAudioFreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_audio_status", "pause", r))) : (n.totalAudioPacketsReceived = a.packetsReceived, this.consumerIdsWithFreezedAudio.has(r) && (this.consumerIdsWithFreezedAudio.delete(r), this.callStatsInstance && s.audio && (this.callStatsInstance.logger.debug("callStats::measurements::consumerAudioDefreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_audio_status", "resume", r))));
  } }, { key: "processOutboundProducerVideoStats", value: function(r, n, a) {
    var i, s = (this === null || this === void 0 || (i = this.callStatsInstance) === null || i === void 0 ? void 0 : i.currentUserMediaStates) || {};
    n.totalVideoPacketsSent === a.packetsSent ? (this.producerIdsWithFreezedVideo.add(r), this.callStatsInstance && s.video && (this.callStatsInstance.logger.debug("callStats::measurements::producerVideoFreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_video_status", "pause", r))) : (n.totalVideoPacketsSent = a.packetsSent, this.producerIdsWithFreezedVideo.has(r) && (this.producerIdsWithFreezedVideo.delete(r), this.callStatsInstance && s.video && (this.callStatsInstance.logger.debug("callStats::measurements::producerVideoDefreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_video_status", "resume", r))));
  } }, { key: "processOutboundProducerAudioStats", value: function(r, n, a) {
    var i, s = (this === null || this === void 0 || (i = this.callStatsInstance) === null || i === void 0 ? void 0 : i.currentUserMediaStates) || {};
    n.totalAudioPacketsSent === a.packetsSent ? (this.producerIdsWithFreezedAudio.add(r), this.callStatsInstance && s.audio && (this.callStatsInstance.logger.debug("callStats::measurements::producerAudioFreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_audio_status", "pause", r))) : (n.totalAudioPacketsSent = a.packetsSent, this.producerIdsWithFreezedAudio.has(r) && (this.producerIdsWithFreezedAudio.delete(r), this.callStatsInstance && s.audio && (this.callStatsInstance.logger.debug("callStats::measurements::producerAudioDefreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_audio_status", "resume", r))));
  } }, { key: "processProducingTransportStats", value: function(r, n, a) {
    var i, s = (this === null || this === void 0 || (i = this.callStatsInstance) === null || i === void 0 ? void 0 : i.currentUserMediaStates) || {}, u = s.audio, c = s.video, d = s.screen, h = u || c || d;
    n.totalPacketsSent === a.packetsSent ? (this.freezedProducingTransportIds.add(r), this.callStatsInstance && h && (this.callStatsInstance.logger.debug("callStats::measurements::producingTransportFreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("producing_transport_status", "pause", r))) : (n.totalPacketsSent = a.packetsSent, this.freezedProducingTransportIds.has(r) && (this.freezedProducingTransportIds.delete(r), this.callStatsInstance && h && (this.callStatsInstance.logger.debug("callStats::measurements::producingTransportDefreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("producing_transport_status", "resume", r))));
  } }, { key: "processConsumingTransportStats", value: function(r, n, a) {
    var i, s = Array.from((this === null || this === void 0 || (i = this.callStatsInstance) === null || i === void 0 || (i = i.consumerSharedMediaStatesMap) === null || i === void 0 ? void 0 : i.values()) || []), u = !!s.reduce(function(c, d) {
      return c || d.audio || d.video || d.screen;
    }, !1);
    n.totalPacketsReceived === a.packetsSent ? (this.freezedConsumingTransportIds.add(r), this.callStatsInstance && u && (this.callStatsInstance.logger.debug("callStats::measurements::consumingTransportFreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("consuming_transport_status", "pause", r))) : (n.totalPacketsReceived = a.packetsSent, this.freezedConsumingTransportIds.has(r) && (this.freezedConsumingTransportIds.delete(r), this.callStatsInstance && u && (this.callStatsInstance.logger.debug("callStats::measurements::consumingTransportDefreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("consuming_transport_status", "resume", r))));
  } }, { key: "registerConsumer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.generateConsumerStreamMap(a);
            case 2:
              this.consumerPeerIdMap.set(a.id, { producerId: a.producerId, peerId: a.appData.peerId, appData: a.appData }), a.on("close", this.deregisterConsumer.bind(this, a)), a.on("pause", this.pauseConsumer.bind(this, a.id)), a.on("resume", this.resumeConsumer.bind(this, a.id)), a.appData.screenShare === !0 && this.screenShareConsumers.add(a.id);
            case 7:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "pauseConsumer", value: function(r) {
    this.pausedConsumerMap.set(r, { lastReportCalculated: !1 });
  } }, { key: "resumeConsumer", value: function(r) {
    this.pausedConsumerMap.delete(r);
  } }, { key: "generateProducerStreamMap", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d, h, v = arguments;
      return p().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              return i = v.length > 1 && v[1] !== void 0 ? v[1] : !1, g.next = 3, a.getStats();
            case 3:
              s = g.sent, u = i ? this.getProducerStatsFromReport(this.parseRTCReport(s, ["outbound-rtp", "remote-inbound-rtp"], !1, a.id))[0] : void 0, c = Hn(s.values()), g.prev = 6, c.s();
            case 8:
              if ((d = c.n()).done) {
                g.next = 17;
                break;
              }
              h = d.value, g.t0 = h.type, g.next = g.t0 === "outbound-rtp" ? 13 : 15;
              break;
            case 13:
              return this.outboundProducerMap.set(h.id, a.id), g.abrupt("break", 15);
            case 15:
              g.next = 8;
              break;
            case 17:
              g.next = 22;
              break;
            case 19:
              g.prev = 19, g.t1 = g.catch(6), c.e(g.t1);
            case 22:
              return g.prev = 22, c.f(), g.finish(22);
            case 25:
              return g.abrupt("return", u);
            case 26:
            case "end":
              return g.stop();
          }
      }, n, this, [[6, 19, 22, 25]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "generateConsumerStreamMap", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d, h, v = arguments;
      return p().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              return i = v.length > 1 && v[1] !== void 0 ? v[1] : !1, g.next = 3, a.getStats();
            case 3:
              s = g.sent, u = i ? this.getConsumerStatsFromReport(this.parseRTCReport(s, ["inbound-rtp"], !1, a.id))[0] : void 0, c = Hn(s.values()), g.prev = 6, c.s();
            case 8:
              if ((d = c.n()).done) {
                g.next = 17;
                break;
              }
              h = d.value, g.t0 = h.type, g.next = g.t0 === "inbound-rtp" ? 13 : 15;
              break;
            case 13:
              return this.inboundConsumerMap.set(h.id, a.id), g.abrupt("break", 15);
            case 15:
              g.next = 8;
              break;
            case 17:
              g.next = 22;
              break;
            case 19:
              g.prev = 19, g.t1 = g.catch(6), c.e(g.t1);
            case 22:
              return g.prev = 22, c.f(), g.finish(22);
            case 25:
              return g.abrupt("return", u);
            case 26:
            case "end":
              return g.stop();
          }
      }, n, this, [[6, 19, 22, 25]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "deregisterProducer", value: function(r) {
    var n = this;
    this.outboundProducerMap.forEach(function(a, i) {
      a === r.id && n.outboundProducerMap.delete(i);
    }), this.pausedProducerMap.delete(r.id), this.screenShareProducers.delete(r.id);
  } }, {
    key: "deregisterConsumer",
    value: function(r) {
      var n = this;
      this.inboundConsumerMap.forEach(function(a, i) {
        a === r.id && n.inboundConsumerMap.delete(i);
      }), this.consumerPeerIdMap.delete(r.id), this.pausedConsumerMap.delete(r.id), this.screenShareConsumers.delete(r.id);
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "getIceCandidateStats",
    value: function(r) {
      var n;
      return { id: r.id, type: r.candidateType || r.type, address: r.address, port: r.port, url: r.url, protocol: (n = r.relayProtocol) !== null && n !== void 0 ? n : r.protocol, networkType: r.networkType, relatedAddress: r.relatedAddress, relatedPort: r.relatedPort };
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getWorkingSimulcastVideoStats", value: function(r) {
    var n = r.find(function(a) {
      var i = a.framesEncoded > 0, s = a.packetsSent > 0, u = a.frameWidth && a.frameHeight;
      return i && s && !!u;
    });
    return n || r[r.length - 1];
  } }, { key: "parseRTCReport", value: function(r) {
    var n = this, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0, c = r, d = new nf(), h = a.length ? new Set(a) : void 0, v = [], f = [], g = [], k = /* @__PURE__ */ new Map(), y = /* @__PURE__ */ new Map(), b = Hn(c.values()), S;
    try {
      for (b.s(); !(S = b.n()).done; ) {
        var T = S.value;
        if (h) {
          if (h.size === 0)
            break;
          if (h.has(T.type))
            i && h.delete(T.type);
          else
            continue;
        }
        switch (T.type) {
          case "local-candidate": {
            v.push(this.getIceCandidateStats(T));
            break;
          }
          case "remote-candidate": {
            f.push(this.getIceCandidateStats(T));
            break;
          }
          case "candidate-pair": {
            var A = T.nominated, L = T.selected, I = T, M = { nominated: A != null ? A : L, currentRoundTripTime: I.currentRoundTripTime, totalRoundTripTime: I.totalRoundTripTime, bytesReceived: I.bytesReceived, bytesSent: I.bytesSent, availableOutgoingBitrate: I.availableOutgoingBitrate, availableIncomingBitrate: I.availableIncomingBitrate, lastPacketReceivedTimestamp: I.lastPacketReceivedTimestamp, lastPacketSentTimestamp: I.lastPacketSentTimestamp, localCandidateId: I.localCandidateId, remoteCandidateId: I.remoteCandidateId, bytesDiscardedOnSend: I.bytesDiscardedOnSend, packetsSent: I.packetsSent, packetsReceived: I.packetsReceived, packetsDiscardedOnSend: I.packetsDiscardedOnSend };
            g.push(M), (T.nominated === !0 || T.selected === !0) && (d.candidatePair = M);
            break;
          }
          case "transport": {
            var V = T;
            u && (u.producing && (this.overallProducingTransportsStatsMap[u.id] || (this.overallProducingTransportsStatsMap[u.id] = { totalPacketsSent: 0 })), u.consuming && (this.overallConsumingTransportsStatsMap[u.id] || (this.overallConsumingTransportsStatsMap[u.id] = { totalPacketsReceived: 0 })));
            var j = {
              bytesReceived: V.bytesReceived,
              bytesSent: V.bytesSent,
              packetsSent: V.packetsSent,
              packetsReceived: V.packetsReceived,
              dtlsCipher: V.dtlsCipher,
              // @ts-ignore
              dtlsState: V.dtlsState,
              // @ts-ignore
              iceRole: V.iceRole
            };
            if (d.transport = j, u) {
              if (u.producing) {
                var $ = this.overallProducingTransportsStatsMap[u.id];
                this.processProducingTransportStats(u.id, $, j);
              }
              if (u.consuming) {
                var O = this.overallConsumingTransportsStatsMap[u.id];
                this.processConsumingTransportStats(u.id, O, j);
              }
            }
            break;
          }
          case "remote-inbound-rtp": {
            var B = T, Q = { jitter: B.jitter, fractionLost: B.fractionLost, roundTripTime: B.roundTripTime, roundTripTimeMeasurements: B.roundTripTimeMeasurements, totalRoundTripTime: B.totalRoundTripTime, packetsLost: B.packetsLost };
            d.remoteInboundRtp.set(B.localId, Q);
            break;
          }
          case "outbound-rtp": {
            var F = T, z = s || this.outboundProducerMap.get(T.id), q = this.pausedProducerMap.get(z);
            if (q) {
              if (q.lastReportCalculated === !0)
                break;
              this.pausedProducerMap.set(z, { lastReportCalculated: !0 });
            }
            this.overallProducersStatsMap[z] || (this.overallProducersStatsMap[z] = { totalVideoPacketsSent: 0, totalAudioPacketsSent: 0 });
            var te = this.overallProducersStatsMap[z];
            if (["video", "audio"].includes(F.mediaType) || ["video", "audio"].includes(F.kind)) {
              var le;
              if (!this.outboundProducerMap.has(T.id)) {
                d.staleProducerStreamMap = !0;
                break;
              }
              var he = this.callStatsInstance.producers.get(z);
              if ((he == null || (le = he.track) === null || le === void 0 ? void 0 : le.readyState) === "ended")
                break;
              d.producerStreamMap.has(z) || d.producerStreamMap.set(z, { outboundVideoRtpId: [], outboundAudioRtpId: [] });
              var br = { bytesSent: F.bytesSent, packetsSent: F.packetsSent, nackCount: F.nackCount, ssrc: F.ssrc, mid: F.mid, active: F.active, codecId: F.codecId, headerBytesSent: F.headerBytesSent || 0, totalPacketSendDelay: F.totalPacketSendDelay || 0 };
              if (F.mediaType === "video" || F.kind === "video") {
                var x = F, Sn = N({
                  frameHeight: x.frameHeight,
                  frameWidth: x.frameWidth,
                  framesEncoded: x.framesEncoded,
                  framesDropped: x.framesDropped,
                  framesPerSecond: x.framesPerSecond,
                  framesSent: x.framesSent,
                  keyFramesEncoded: x.keyFramesEncoded,
                  firCount: x.firCount,
                  encoderImplementation: x.encoderImplementation,
                  hugeFramesSent: x.hugeFramesSent,
                  pliCount: x.pliCount,
                  qpSum: x.qpSum,
                  qualityLimitationDurations: x.qualityLimitationDurations,
                  qualityLimitationReason: x.qualityLimitationReason,
                  qualityLimitationResolutionChanges: x.qualityLimitationResolutionChanges,
                  // temp sending target bitrate in total encode time
                  // to avoid the delay with making the backend changes
                  totalEncodeTime: x.targetBitrate,
                  totalPacketSendDelay: x.totalPacketSendDelay,
                  retransmittedBytesSent: x.retransmittedBytesSent,
                  retransmittedPacketsSent: x.retransmittedPacketsSent,
                  scalabilityMode: x.scalabilityMode,
                  powerEfficientEncoder: x.powerEfficientEncoder
                }, br);
                d.outboundVideoRtp.set(T.id, Sn), d.producerStreamMap.get(z).outboundVideoRtpId.push(T.id), this.processOutboundProducerVideoStats(z, te, Sn);
              } else if (F.mediaType === "audio" || F.kind === "audio") {
                var ln = F, Tr = N({ retransmittedBytesSent: ln.retransmittedBytesSent, retransmittedPacketsSent: ln.retransmittedPacketsSent }, br);
                d.outboundAudioRtp.set(T.id, Tr), d.producerStreamMap.get(z).outboundAudioRtpId.push(T.id), this.processOutboundProducerAudioStats(z, te, Tr);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Outbound-rtp. mediatype: ".concat(F.mediaType, " kind: ").concat(F.kind));
            break;
          }
          case "inbound-rtp": {
            var ie = T, ee = s || this.inboundConsumerMap.get(T.id), ri = this.pausedConsumerMap.get(ee);
            if (ri) {
              if (ri.lastReportCalculated === !0)
                break;
              this.pausedConsumerMap.set(ee, { lastReportCalculated: !0 });
            }
            if (ie.ssrc === 1234)
              break;
            this.overallConsumersStatsMap[ee] || (this.overallConsumersStatsMap[ee] = { totalVideoPacketsReceived: 0, totalAudioPacketsReceived: 0 });
            var ti = this.overallConsumersStatsMap[ee];
            if (["video", "audio"].includes(ie.mediaType) || ["video", "audio"].includes(ie.kind)) {
              if (!this.inboundConsumerMap.has(T.id)) {
                d.staleConsumerStreamMap = !0;
                break;
              }
              d.consumerStreamMap.has(ee) || d.consumerStreamMap.set(ee, { inboundVideoRtpId: [], inboundAudioRtpId: [] });
              var ni = { bytesReceived: ie.bytesReceived, packetsReceived: ie.packetsReceived, packetsLost: ie.packetsLost >= 0 ? ie.packetsLost : 0, jitter: ie.jitter, nackCount: ie.nackCount, jitterBufferDelay: ie.jitterBufferDelay, jitterBufferEmittedCount: ie.jitterBufferEmittedCount, lastPacketReceivedTimestamp: ie.lastPacketReceivedTimestamp, ssrc: ie.ssrc, mid: ie.mid, codecId: ie.codecId, headerBytesReceived: ie.headerBytesReceived || 0, packetsDiscarded: ie.packetsDiscarded || 0, jitterBufferMinimumDelay: ie.jitterBufferMinimumDelay || 0, jitterBufferTargetDelay: ie.jitterBufferTargetDelay || 0 };
              if (ie.mediaType === "video" || ie.kind === "video") {
                var Kn, ai, Re, qi, Gi, Wi, me = ie, De = N({ frameHeight: me.frameHeight, frameWidth: me.frameWidth, framesDecoded: me.framesDecoded, framesDropped: me.framesDropped, framesPerSecond: me.framesPerSecond, framesReceived: me.framesReceived, keyFramesDecoded: me.keyFramesDecoded, firCount: me.firCount, decoderImplementation: me.decoderImplementation, pliCount: me.pliCount, totalProcessingDelay: me.totalProcessingDelay, qpSum: me.qpSum || 0, totalAssemblyTime: me.totalAssemblyTime || 0, totalDecodeTime: me.totalDecodeTime || 0, totalFreezesDuration: me.totalFreezesDuration || 0, totalInterFrameDelay: me.totalInterFrameDelay || 0, totalPausesDuration: me.totalPausesDuration || 0, totalSquaredInterFrameDelay: me.totalSquaredInterFrameDelay || 0, freezeCount: me.freezeCount || 0, pauseCount: me.pauseCount || 0, powerEfficientDecoder: me.powerEfficientDecoder }, ni);
                De.score = rf({ frameWidth: De.frameWidth || 0, framesDecoded: (De.framesDecoded || 0) - (((Kn = this.videoConsumerToStatsMap.get(ee)) === null || Kn === void 0 ? void 0 : Kn.framesDecoded) || 0), framesPerSecond: De.framesPerSecond || 0, packetsLost: (De.packetsLost || 0) - (((ai = this.videoConsumerToStatsMap.get(ee)) === null || ai === void 0 ? void 0 : ai.packetsLost) || 0), packetsReceived: (De.packetsReceived || 0) - (((Re = this.videoConsumerToStatsMap.get(ee)) === null || Re === void 0 ? void 0 : Re.packetsReceived) || 0), jitter: De.jitter || 0, isScreenShare: this.screenShareConsumers.has(ee) }), y.set(ee, {
                  score: +(De.score * 10).toFixed(),
                  frameWidth: De.frameWidth || 0,
                  frameHeight: De.frameHeight || 0,
                  framesPerSecond: De.framesPerSecond || 0,
                  packetsLostPercentage: rc({ packetsLost: (De.packetsLost || 0) - (((qi = this.videoConsumerToStatsMap.get(ee)) === null || qi === void 0 ? void 0 : qi.packetsLost) || 0), packetsReceived: (De.packetsReceived || 0) - (((Gi = this.videoConsumerToStatsMap.get(ee)) === null || Gi === void 0 ? void 0 : Gi.packetsReceived) || 0) }),
                  jitter: De.jitter || 0,
                  isScreenShare: this.screenShareConsumers.has(ee),
                  bitrate: ((De.bytesReceived || 0) - (((Wi = this.videoConsumerToStatsMap.get(ee)) === null || Wi === void 0 ? void 0 : Wi.bytesReceived) || 0)) * 8 / 7
                  // Bytes received in last 7 seconds
                }), this.videoConsumerToStatsMap.set(ee, De), d.inboundVideoRtp.set(T.id, De), d.consumerStreamMap.get(ee).inboundVideoRtpId.push(T.id), this.processInboundConsumerVideoStats(ee, ti, De);
              } else if (ie.mediaType === "audio" || ie.kind === "audio") {
                var Ji, Ki, zi, Yi, Qi, Xi, hr = ie, er = N({ audioLevel: hr.audioLevel, concealedSamples: hr.concealedSamples, concealmentEvents: hr.concealmentEvents, totalAudioEnergy: hr.totalAudioEnergy, totalSamplesDuration: hr.totalSamplesDuration, totalSamplesReceived: hr.totalSamplesReceived, fecPacketsDiscarded: hr.fecPacketsDiscarded || 0, fecPacketsReceived: hr.fecPacketsReceived || 0, insertedSamplesForDeceleration: hr.insertedSamplesForDeceleration || 0, removedSamplesForAcceleration: hr.removedSamplesForAcceleration || 0, silentConcealedSamples: hr.silentConcealedSamples || 0, playoutId: hr.playoutId }, ni);
                er.score = ef({ concealmentEvents: (er.concealmentEvents || 0) - (((Ji = this.audioConsumerToStatsMap.get(ee)) === null || Ji === void 0 ? void 0 : Ji.concealmentEvents) || 0), packetsLost: (er.packetsLost || 0) - (((Ki = this.audioConsumerToStatsMap.get(ee)) === null || Ki === void 0 ? void 0 : Ki.packetsLost) || 0), packetsReceived: (er.packetsReceived || 0) - (((zi = this.audioConsumerToStatsMap.get(ee)) === null || zi === void 0 ? void 0 : zi.packetsReceived) || 0), jitter: er.jitter || 0 }), y.set(ee, {
                  score: +(er.score * 10).toFixed(),
                  packetsLostPercentage: rc({ packetsLost: (er.packetsLost || 0) - (((Yi = this.audioConsumerToStatsMap.get(ee)) === null || Yi === void 0 ? void 0 : Yi.packetsLost) || 0), packetsReceived: (er.packetsReceived || 0) - (((Qi = this.audioConsumerToStatsMap.get(ee)) === null || Qi === void 0 ? void 0 : Qi.packetsReceived) || 0) }),
                  jitter: er.jitter || 0,
                  isScreenShare: this.screenShareConsumers.has(ee),
                  bitrate: ((er.bytesReceived || 0) - (((Xi = this.audioConsumerToStatsMap.get(ee)) === null || Xi === void 0 ? void 0 : Xi.bytesReceived) || 0)) * 8 / 7
                  // Bytes received in last 7 seconds
                }), this.audioConsumerToStatsMap.set(ee, er), d.inboundAudioRtp.set(T.id, er), d.consumerStreamMap.get(ee).inboundAudioRtpId.push(T.id), this.processInboundConsumerAudioStats(ee, ti, er);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Inbound-rtp. mediatype: ".concat(ie.mediaType, " kind: ").concat(ie.kind));
            break;
          }
        }
      }
    } catch (re) {
      b.e(re);
    } finally {
      b.f();
    }
    if (d.producerStreamMap.forEach(function(re, ae) {
      if (re.outboundVideoRtpId.length > 0) {
        var Vr, Cr, xi, Vt, es, rs, ts, ns, Ut, as, Zo = [];
        re.outboundVideoRtpId.forEach(function(jc) {
          Zo.push(d.outboundVideoRtp.get(jc));
        });
        var Oe = n.getWorkingSimulcastVideoStats(Zo);
        Oe.score = Zv({ frameWidth: Oe.frameWidth || 0, framesPerSecond: Oe.framesPerSecond || 0, jitter: ((Vr = Oe.remoteData) === null || Vr === void 0 ? void 0 : Vr.jitter) || 0, isScreenShare: n.screenShareProducers.has(ae), packetsSent: (Oe.packetsSent || 0) - (((Cr = n.videoProducerToStatsMap.get(ae)) === null || Cr === void 0 ? void 0 : Cr.packetsSent) || 0), packetsLost: (((xi = Oe.remoteData) === null || xi === void 0 ? void 0 : xi.packetsLost) || 0) - (((Vt = n.videoProducerToStatsMap.get(ae)) === null || Vt === void 0 || (Vt = Vt.remoteData) === null || Vt === void 0 ? void 0 : Vt.packetsLost) || 0), framesEncoded: (Oe.framesEncoded || 0) - (((es = n.videoProducerToStatsMap.get(ae)) === null || es === void 0 ? void 0 : es.framesEncoded) || 0) }), k.set(ae, { score: +(Oe.score * 10).toFixed(), frameWidth: Oe.frameWidth || 0, frameHeight: Oe.frameHeight || 0, framesPerSecond: Oe.framesPerSecond || 0, jitter: ((rs = Oe.remoteData) === null || rs === void 0 ? void 0 : rs.jitter) || 0, isScreenShare: n.screenShareProducers.has(ae), packetsLostPercentage: ec({ packetsSent: (Oe.packetsSent || 0) - (((ts = n.videoProducerToStatsMap.get(ae)) === null || ts === void 0 ? void 0 : ts.packetsSent) || 0), packetsLost: (((ns = Oe.remoteData) === null || ns === void 0 ? void 0 : ns.packetsLost) || 0) - (((Ut = n.videoProducerToStatsMap.get(ae)) === null || Ut === void 0 || (Ut = Ut.remoteData) === null || Ut === void 0 ? void 0 : Ut.packetsLost) || 0) }), bitrate: ((Oe.bytesSent || 0) - (((as = n.videoProducerToStatsMap.get(ae)) === null || as === void 0 ? void 0 : as.bytesSent) || 0)) * 8 / 7, cpuLimitations: Oe.qualityLimitationReason === "cpu", bandwidthLimitations: Oe.qualityLimitationReason === "bandwidth" }), n.videoProducerToStatsMap.set(ae, Oe);
      } else if (re.outboundAudioRtpId.length > 0) {
        var is, ss, jt, os, us, ls, cs, Ft, ds, Ur = d.outboundAudioRtp.get(re.outboundAudioRtpId[0]);
        Ur.score = Xv({ packetsSent: (Ur.packetsSent || 0) - (((is = n.audioProducerToStatsMap.get(ae)) === null || is === void 0 ? void 0 : is.packetsSent) || 0), packetsLost: (((ss = Ur.remoteData) === null || ss === void 0 ? void 0 : ss.packetsLost) || 0) - (((jt = n.audioProducerToStatsMap.get(ae)) === null || jt === void 0 || (jt = jt.remoteData) === null || jt === void 0 ? void 0 : jt.packetsLost) || 0), jitter: ((os = Ur.remoteData) === null || os === void 0 ? void 0 : os.jitter) || 0 }), k.set(ae, { score: +(Ur.score * 10).toFixed(), bitrate: ((Ur.bytesSent || 0) - (((us = n.audioProducerToStatsMap.get(ae)) === null || us === void 0 ? void 0 : us.bytesSent) || 0)) * 8 / 7, packetsLostPercentage: ec({ packetsSent: (Ur.packetsSent || 0) - (((ls = n.audioProducerToStatsMap.get(ae)) === null || ls === void 0 ? void 0 : ls.packetsSent) || 0), packetsLost: (((cs = Ur.remoteData) === null || cs === void 0 ? void 0 : cs.packetsLost) || 0) - (((Ft = n.audioProducerToStatsMap.get(ae)) === null || Ft === void 0 || (Ft = Ft.remoteData) === null || Ft === void 0 ? void 0 : Ft.packetsLost) || 0) }), jitter: ((ds = Ur.remoteData) === null || ds === void 0 ? void 0 : ds.jitter) || 0, isScreenShare: n.screenShareProducers.has(ae) }), n.audioProducerToStatsMap.set(ae, Ur);
      }
    }), g.forEach(function(re) {
      var ae = v.find(function(Cr) {
        return Cr.id === re.localCandidateId ? (re.localCandidateId = Cr.id, Cr) : null;
      }), Vr = f.find(function(Cr) {
        return Cr.id === re.remoteCandidateId ? (re.remoteCandidateId = Cr.id, Cr) : null;
      });
      ae && (re.localCandidateType = ae.type, re.localCandidateAddress = $i(ae.address), re.localCandidatePort = ae.port, re.localCandidateProtocol = ae.protocol, re.localCandidateUrl = ae.url, re.localCandidateNetworkType = ae.networkType, re.localCandidateRelatedAddress = $i(ae.relatedAddress), re.localCandidateRelatedPort = ae.relatedPort), Vr && (re.remoteCandidateType = Vr.type, re.remoteCandidateAddress = $i(Vr.address), re.remoteCandidatePort = Vr.port, re.remoteCandidateProtocol = Vr.protocol, re.remoteCandidateUrl = Vr.url);
    }), d.candidatePair && (d.transport ? (d.transport.totalRoundTripTime = d.candidatePair.totalRoundTripTime, d.transport.availableOutgoingBitrate = d.candidatePair.availableOutgoingBitrate, d.transport.availableIncomingBitrate = d.candidatePair.availableIncomingBitrate, d.transport.roundTripTime = d.candidatePair.currentRoundTripTime) : d.transport = {
      // candidateStats: result.candidatePair,
      bytesReceived: d.candidatePair.bytesReceived,
      bytesSent: d.candidatePair.bytesSent,
      totalRoundTripTime: d.candidatePair.totalRoundTripTime,
      availableOutgoingBitrate: d.candidatePair.availableOutgoingBitrate,
      availableIncomingBitrate: d.candidatePair.availableIncomingBitrate,
      roundTripTime: d.candidatePair.currentRoundTripTime
    }), d.transport && (d.transport.candidatePairs = g), d.transport && !d.transport.roundTripTime) {
      var Zi = 0, Xo = 0;
      d.remoteInboundRtp.forEach(function(re, ae) {
        re.roundTripTime && re.roundTripTime > Zi && (Zi = re.roundTripTime, Xo = re.totalRoundTripTime);
      }), d.transport.roundTripTime = Zi, d.transport.totalRoundTripTime = Xo;
    }
    if (y.size > 0)
      try {
        this.observer.emit("consumer_score", y);
      } catch (re) {
      }
    if (k.size > 0)
      try {
        this.observer.emit("producer_score", k);
      } catch (re) {
      }
    return d;
  } }, { key: "getProducersReport", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return s = a.map(function(d) {
                return i.generateProducerStreamMap(d, !0);
              }), c.abrupt("return", s.length > 0 ? Promise.all(s) : void 0);
            case 2:
            case "end":
              return c.stop();
          }
      }, n);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "getConsumersReport",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        var i = this, s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                return s = a.map(function(d) {
                  return i.generateConsumerStreamMap(d, !0);
                }), c.abrupt("return", s.length > 0 ? Promise.all(s) : void 0);
              case 2:
              case "end":
                return c.stop();
            }
        }, n);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getTransportReport", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", a.getStats());
            case 1:
            case "end":
              return s.stop();
          }
      }, n);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "getProcessedStats",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
        var u, c, d, h, v, f, g;
        return p().wrap(function(y) {
          for (; ; )
            switch (y.prev = y.next) {
              case 0:
                return y.next = 2, this.getTransportReport(a);
              case 2:
                if (u = y.sent, c = { producing: s, consuming: i, id: a.id }, d = u, h = this.parseRTCReport(d, ["transport", "candidate-pair", "inbound-rtp", "outbound-rtp", "remote-inbound-rtp", "local-candidate", "remote-candidate"], !1, void 0, c), h) {
                  y.next = 8;
                  break;
                }
                return y.abrupt("return", void 0);
              case 8:
                return v = { stats: h.transport, transportId: a.id, consuming: i, producing: s }, f = h.staleProducerStreamMap ? void 0 : this.getProducerStatsFromReport(h), g = h.staleConsumerStreamMap ? void 0 : this.getConsumerStatsFromReport(h), y.abrupt("return", { transportReport: v, producerReport: f, consumerReport: g });
              case 12:
              case "end":
                return y.stop();
            }
        }, n, this);
      }));
      function r(n, a, i) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getProducerStatsFromReport", value: function(r) {
    var n = this, a = [];
    try {
      r.producerStreamMap.forEach(function(i, s) {
        var u;
        a.push({ producerId: s, videoStats: i.outboundVideoRtpId.map(function(c) {
          return r.outboundVideoRtp.get(c);
        }), audioStats: i.outboundAudioRtpId.map(function(c) {
          return r.outboundAudioRtp.get(c);
        }), appData: ((u = n.callStatsInstance.producers) === null || u === void 0 || (u = u.get(s)) === null || u === void 0 ? void 0 : u.appData) || null });
      });
    } catch (i) {
      this.callStatsInstance.logger.error("callStats::measurements::getProducerStatsFromReport", { error: { reason: i.reason, message: i.message } });
    }
    return a;
  } }, {
    key: "getConsumerStatsFromReport",
    value: function(r) {
      var n = this, a = [];
      try {
        r.consumerStreamMap.forEach(function(i, s) {
          var u = n.consumerPeerIdMap.get(s), c = u.peerId, d = u.producerId, h = u.appData;
          a.push({ consumerId: s, peerId: c, producerId: d, appData: h, videoStats: i.inboundVideoRtpId.map(function(v) {
            return r.inboundVideoRtp.get(v);
          }), audioStats: i.inboundAudioRtpId.map(function(v) {
            return r.inboundAudioRtp.get(v);
          }) });
        });
      } catch (i) {
        console.error("getConsumersReport: ", i, r);
      }
      return a;
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "getUserLocation",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        return p().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.abrupt("return", new Promise(function(s, u) {
                  try {
                    navigator.geolocation ? navigator.geolocation.getCurrentPosition(function(c) {
                      s(c);
                    }) : u();
                  } catch (c) {
                    u(c);
                  }
                }));
              case 1:
              case "end":
                return i.stop();
            }
        }, n);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "getConnectivity",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s, u, c, d, h, v, f, g;
        return p().wrap(function(y) {
          for (; ; )
            switch (y.prev = y.next) {
              case 0:
                return y.prev = 0, i = { iceServers: a || sh }, s = new Promise(function(b, S) {
                  try {
                    var T = new Bm(i);
                    T.addListener("done", b), T.addListener("failed", function() {
                      b({ connectivity: !1 });
                    }), T.start(2e3);
                  } catch (A) {
                    S(A);
                  }
                }), u = new Promise(function(b, S) {
                  try {
                    var T = new qm(i);
                    T.addListener("done", b), T.addListener("failed", function() {
                      b({ connectivity: !1 });
                    }), T.start(2e3);
                  } catch (A) {
                    S(A);
                  }
                }), c = new Promise(function(b, S) {
                  try {
                    var T = new Gm(i);
                    T.addListener("done", b), T.addListener("failed", function() {
                      b({ connectivity: !1 });
                    }), T.start(2e3);
                  } catch (A) {
                    S(A);
                  }
                }), y.next = 7, Promise.all([s, u, c]);
              case 7:
                return d = y.sent, h = Me(d, 3), v = h[0], f = h[1], g = h[2], y.abrupt("return", { host: v == null ? void 0 : v.connectivity, relay: f == null ? void 0 : f.connectivity, reflexive: g == null ? void 0 : g.connectivity });
              case 15:
                return y.prev = 15, y.t0 = y.catch(0), y.abrupt("return", { host: !1, relay: !1, reflexive: !1 });
              case 18:
              case "end":
                return y.stop();
            }
        }, n, null, [[0, 15]]);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getThroughput", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.prev = 0, i = new Promise(function(d, h) {
                try {
                  var v = { iceServers: a || sh }, f = new Hm(v);
                  f.addListener("done", d), f.addListener("failed", h), f.start(1e4);
                } catch (g) {
                  h(g);
                }
              }), c.next = 4, i;
            case 4:
              return s = c.sent, c.abrupt("return", { throughput: s.throughput, fractionalLoss: 0, RTT: s.RTT, jitter: 0, backendRTT: s.backendRTT });
            case 8:
              return c.prev = 8, c.t0 = c.catch(0), c.abrupt("return", void 0);
            case 11:
            case "end":
              return c.stop();
          }
      }, n, null, [[0, 8]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getIPDetails", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (u.prev = 0, this.ipDetails) {
                u.next = 5;
                break;
              }
              return u.next = 4, Ip.getIPDetails({ peerId: (a = this.callStatsInstance) === null || a === void 0 ? void 0 : a.peerId, apiHostnames: (i = this.callStatsInstance) === null || i === void 0 ? void 0 : i.apiHostnames, logger: this.callStatsInstance.logger });
            case 4:
              this.ipDetails = u.sent;
            case 5:
              return u.abrupt("return", this.ipDetails);
            case 8:
              return u.prev = 8, u.t0 = u.catch(0), u.abrupt("return", void 0);
            case 11:
            case "end":
              return u.stop();
          }
      }, n, this, [[0, 8]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getNetworkQuality", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return h.next = 2, Promise.all([this.getConnectivity(a), this.getThroughput(a)]);
            case 2:
              return i = h.sent, s = Me(i, 2), u = s[0], c = s[1], h.abrupt("return", { connectivity: u, throughput: c == null ? void 0 : c.throughput, fractionalLoss: c == null ? void 0 : c.fractionalLoss, RTT: c == null ? void 0 : c.RTT, jitter: c == null ? void 0 : c.jitter, backendRTT: c == null ? void 0 : c.backendRTT });
            case 7:
            case "end":
              return h.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getNetworkInfo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d, h, v, f, g, k = arguments;
      return p().wrap(function(b) {
        for (; ; )
          switch (b.prev = b.next) {
            case 0:
              if (s = k.length > 1 && k[1] !== void 0 ? k[1] : !1, !s) {
                b.next = 6;
                break;
              }
              return b.next = 4, this.getIPDetails();
            case 4:
              return c = b.sent, b.abrupt("return", {
                ipDetails: c,
                effectiveNetworkType: (u = navigator.connection) === null || u === void 0 ? void 0 : u.effectiveType,
                location: c != null && c.loc ? oh(c == null ? void 0 : c.loc) : void 0
                // userLocation,
              });
            case 6:
              return b.next = 8, Promise.all([this.getConnectivity(a), this.getThroughput(a), this.getIPDetails()]);
            case 8:
              return d = b.sent, h = Me(d, 3), v = h[0], f = h[1], g = h[2], b.abrupt("return", { ipDetails: g, effectiveNetworkType: (i = navigator.connection) === null || i === void 0 ? void 0 : i.effectiveType, location: g != null && g.loc ? oh(g == null ? void 0 : g.loc) : void 0, turnConnectivity: v ? v.host || v.relay || v.reflexive : !1, connectivity: v, throughput: f == null ? void 0 : f.throughput, fractionalLoss: f == null ? void 0 : f.fractionalLoss, RTT: f == null ? void 0 : f.RTT, jitter: f == null ? void 0 : f.jitter, backendRTT: f == null ? void 0 : f.backendRTT });
            case 14:
            case "end":
              return b.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(ht), Jm = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, arguments);
  }
  return R(t, o), P(t);
}(af), sf = /* @__PURE__ */ function(o) {
  function t() {
    var e;
    w(this, t);
    for (var r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    return e = C(this, t, [].concat(n)), e.producerMap = /* @__PURE__ */ new Map(), e.consumerMap = /* @__PURE__ */ new Map(), e;
  }
  return R(t, o), P(t, [{ key: "registerProducer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.producerMap.set(a.id, a), s.next = 3, this.generateProducerStreamMap(a);
            case 3:
              a.on("close", this.deregisterProducer.bind(this, a)), a.on("pause", this.pauseProducer.bind(this, a.id)), a.on("resume", this.resumeProducer.bind(this, a.id)), a.appData.screenShare === !0 && this.screenShareProducers.add(a.id);
            case 7:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "registerConsumer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.consumerMap.set(a.id, a), s.next = 3, this.generateConsumerStreamMap(a);
            case 3:
              this.consumerPeerIdMap.set(a.id, { producerId: a.producerId, peerId: a.appData.peerId, appData: a.appData }), a.on("close", this.deregisterConsumer.bind(this, a)), a.on("pause", this.pauseConsumer.bind(this, a.id)), a.on("resume", this.resumeConsumer.bind(this, a.id)), a.appData.screenShare === !0 && this.screenShareConsumers.add(a.id);
            case 8:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "generateConsumerStreamMap", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d, h, v, f, g = arguments;
      return p().wrap(function(y) {
        for (; ; )
          switch (y.prev = y.next) {
            case 0:
              return i = g.length > 1 && g[1] !== void 0 ? g[1] : !1, y.next = 3, a.getStats();
            case 3:
              s = y.sent, u = this.parseRTCReport(s, ["inbound-rtp"], !1, a.id), c = ke(u.consumerStreamMap.values())[0], d = i ? this.getConsumerStatsFromParsedConsumerStats(u, c, a.id) : void 0, h = Hn(s.values()), y.prev = 8, h.s();
            case 10:
              if ((v = h.n()).done) {
                y.next = 19;
                break;
              }
              f = v.value, y.t0 = f.type, y.next = y.t0 === "inbound-rtp" ? 15 : 17;
              break;
            case 15:
              return this.inboundConsumerMap.set(f.id, a.id), y.abrupt("break", 17);
            case 17:
              y.next = 10;
              break;
            case 19:
              y.next = 24;
              break;
            case 21:
              y.prev = 21, y.t1 = y.catch(8), h.e(y.t1);
            case 24:
              return y.prev = 24, h.f(), y.finish(24);
            case 27:
              return y.abrupt("return", d);
            case 28:
            case "end":
              return y.stop();
          }
      }, n, this, [[8, 21, 24, 27]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "deregisterProducer", value: function(r) {
    var n = this;
    this.producerMap.delete(r.id), this.outboundProducerMap.forEach(function(a, i) {
      a === r.id && n.outboundProducerMap.delete(i);
    }), this.pausedProducerMap.delete(r.id), this.screenShareProducers.delete(r.id);
  } }, {
    key: "deregisterConsumer",
    value: function(r) {
      var n = this;
      this.consumerMap.delete(r.id), this.inboundConsumerMap.forEach(function(a, i) {
        a === r.id && n.inboundConsumerMap.delete(i);
      }), this.consumerPeerIdMap.delete(r.id), this.pausedConsumerMap.delete(r.id), this.screenShareConsumers.delete(r.id);
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getIceCandidateStats", value: function(r) {
    var n;
    return { id: r.id, type: r.candidateType || r.type, address: r.address, port: r.port, url: r.url, protocol: (n = r.relayProtocol) !== null && n !== void 0 ? n : r.protocol, networkType: r.networkType, relatedAddress: r.relatedAddress, relatedPort: r.relatedPort };
  } }, { key: "parseRTCReport", value: function(r) {
    var n = this, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, s = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0, c = r, d = new nf(), h = a.length ? new Set(a) : void 0, v = [], f = [], g = [], k = /* @__PURE__ */ new Map(), y = /* @__PURE__ */ new Map(), b = Hn(c.values()), S;
    try {
      for (b.s(); !(S = b.n()).done; ) {
        var T = S.value;
        if (h) {
          if (h.size === 0)
            break;
          if (h.has(T.type))
            i && h.delete(T.type);
          else
            continue;
        }
        switch (T.type) {
          case "local-candidate": {
            v.push(this.getIceCandidateStats(T));
            break;
          }
          case "remote-candidate": {
            f.push(this.getIceCandidateStats(T));
            break;
          }
          case "candidate-pair": {
            var A = T.nominated, L = T.selected, I = T, M = { nominated: A != null ? A : L, currentRoundTripTime: I.currentRoundTripTime, totalRoundTripTime: I.totalRoundTripTime, bytesReceived: I.bytesReceived, bytesSent: I.bytesSent, availableOutgoingBitrate: I.availableOutgoingBitrate, availableIncomingBitrate: I.availableIncomingBitrate, lastPacketReceivedTimestamp: I.lastPacketReceivedTimestamp, lastPacketSentTimestamp: I.lastPacketSentTimestamp, localCandidateId: I.localCandidateId, remoteCandidateId: I.remoteCandidateId, bytesDiscardedOnSend: I.bytesDiscardedOnSend, packetsSent: I.packetsSent, packetsReceived: I.packetsReceived, packetsDiscardedOnSend: I.packetsDiscardedOnSend };
            g.push(M), (T.nominated === !0 || T.selected === !0) && (d.candidatePair = M);
            break;
          }
          case "transport": {
            var V = T;
            u && (u.producing && (this.overallProducingTransportsStatsMap[u.id] || (this.overallProducingTransportsStatsMap[u.id] = { totalPacketsSent: 0 })), u.consuming && (this.overallConsumingTransportsStatsMap[u.id] || (this.overallConsumingTransportsStatsMap[u.id] = { totalPacketsReceived: 0 })));
            var j = { bytesReceived: V.bytesReceived, bytesSent: V.bytesSent, packetsSent: V.packetsSent, packetsReceived: V.packetsReceived, dtlsCipher: V.dtlsCipher, dtlsState: V.dtlsState, iceRole: V.iceRole };
            if (d.transport = j, u) {
              if (u.producing) {
                var $ = this.overallProducingTransportsStatsMap[u.id];
                this.processProducingTransportStats(u.id, $, j);
              }
              if (u.consuming) {
                var O = this.overallConsumingTransportsStatsMap[u.id];
                this.processConsumingTransportStats(u.id, O, j);
              }
            }
            break;
          }
          case "remote-inbound-rtp": {
            var B = T, Q = { jitter: B.jitter, fractionLost: B.fractionLost, roundTripTime: B.roundTripTime, roundTripTimeMeasurements: B.roundTripTimeMeasurements, totalRoundTripTime: B.totalRoundTripTime, packetsLost: B.packetsLost };
            d.remoteInboundRtp.set(B.localId, Q);
            break;
          }
          case "outbound-rtp": {
            var F = T, z = s || this.outboundProducerMap.get(T.id), q = this.pausedProducerMap.get(z);
            if (q) {
              if (q.lastReportCalculated === !0)
                break;
              this.pausedProducerMap.set(z, { lastReportCalculated: !0 });
            }
            this.overallProducersStatsMap[z] || (this.overallProducersStatsMap[z] = { totalVideoPacketsSent: 0, totalAudioPacketsSent: 0 });
            var te = this.overallProducersStatsMap[z];
            if (["video", "audio"].includes(F.mediaType) || ["video", "audio"].includes(F.kind)) {
              var le;
              if (!this.outboundProducerMap.has(T.id)) {
                d.staleProducerStreamMap = !0;
                break;
              }
              var he = this.callStatsInstance.producers.get(z);
              if ((he == null || (le = he.track) === null || le === void 0 ? void 0 : le.readyState) === "ended")
                break;
              d.producerStreamMap.has(z) || d.producerStreamMap.set(z, { outboundVideoRtpId: [], outboundAudioRtpId: [] });
              var br = { bytesSent: F.bytesSent, packetsSent: F.packetsSent, nackCount: F.nackCount, ssrc: F.ssrc, mid: F.mid, active: F.active, codecId: F.codecId, headerBytesSent: F.headerBytesSent || 0, totalPacketSendDelay: F.totalPacketSendDelay || 0 };
              if (F.mediaType === "video" || F.kind === "video") {
                var x = F, Sn = N({ frameHeight: x.frameHeight, frameWidth: x.frameWidth, framesEncoded: x.framesEncoded, framesDropped: x.framesDropped ? x.framesDropped : x.droppedFrames, framesPerSecond: x.framesPerSecond ? x.framesPerSecond : x.framerateMean, framesSent: x.framesSent, keyFramesEncoded: x.keyFramesEncoded, firCount: x.firCount, encoderImplementation: x.encoderImplementation, hugeFramesSent: x.hugeFramesSent, pliCount: x.pliCount, qpSum: x.qpSum, qualityLimitationReason: x.qualityLimitationReason, qualityLimitationDurations: x.qualityLimitationDurations, qualityLimitationResolutionChanges: x.qualityLimitationResolutionChanges, totalEncodeTime: x.totalEncodeTime, totalPacketSendDelay: x.totalEncodeTime, retransmittedBytesSent: x.retransmittedBytesSent, retransmittedPacketsSent: x.retransmittedPacketsSent, scalabilityMode: x.scalabilityMode, powerEfficientEncoder: x.powerEfficientEncoder }, br);
                d.outboundVideoRtp.set(T.id, Sn), d.producerStreamMap.get(z).outboundVideoRtpId.push(T.id), this.processOutboundProducerVideoStats(z, te, Sn);
              } else if (F.mediaType === "audio" || F.kind === "audio") {
                var ln = F, Tr = N({ retransmittedBytesSent: ln.retransmittedBytesSent, retransmittedPacketsSent: ln.retransmittedPacketsSent }, br);
                d.outboundAudioRtp.set(T.id, Tr), d.producerStreamMap.get(z).outboundAudioRtpId.push(T.id), this.processOutboundProducerAudioStats(z, te, Tr);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Outbound-rtp. mediatype: ".concat(F.mediaType, " kind: ").concat(F.kind));
            break;
          }
          case "inbound-rtp": {
            var ie = T, ee = s || this.inboundConsumerMap.get(T.id), ri = this.pausedConsumerMap.get(ee);
            if (ri) {
              if (ri.lastReportCalculated === !0)
                break;
              this.pausedConsumerMap.set(ee, { lastReportCalculated: !0 });
            }
            if (ie.ssrc === 1234)
              break;
            this.overallConsumersStatsMap[ee] || (this.overallConsumersStatsMap[ee] = { totalVideoPacketsReceived: 0, totalAudioPacketsReceived: 0 });
            var ti = this.overallConsumersStatsMap[ee];
            if (["video", "audio"].includes(ie.mediaType) || ["video", "audio"].includes(ie.kind)) {
              if (!this.inboundConsumerMap.has(T.id)) {
                d.staleConsumerStreamMap = !0;
                break;
              }
              d.consumerStreamMap.has(ee) || d.consumerStreamMap.set(ee, { inboundVideoRtpId: [], inboundAudioRtpId: [] });
              var ni = { bytesReceived: ie.bytesReceived, packetsReceived: ie.packetsReceived, packetsLost: ie.packetsLost >= 0 ? ie.packetsLost : 0, jitter: ie.jitter, nackCount: ie.nackCount, jitterBufferDelay: ie.jitterBufferDelay, jitterBufferEmittedCount: ie.jitterBufferEmittedCount, lastPacketReceivedTimestamp: ie.lastPacketReceivedTimestamp, ssrc: ie.ssrc, mid: ie.mid, codecId: ie.codecId, headerBytesReceived: ie.headerBytesReceived || 0, packetsDiscarded: ie.packetsDiscarded || 0, jitterBufferMinimumDelay: ie.jitterBufferMinimumDelay || 0, jitterBufferTargetDelay: ie.jitterBufferTargetDelay || 0 };
              if (ie.mediaType === "video" || ie.kind === "video") {
                var Kn, ai, Re, qi, Gi, Wi, me = ie, De = N({ frameHeight: me.frameHeight, frameWidth: me.frameWidth, framesDecoded: me.framesDecoded, framesDropped: me.framesDropped ? me.framesDropped : me.droppedFrames, framesPerSecond: me.framesPerSecond ? me.framesPerSecond : me.framerateMean, framesReceived: me.framesReceived, keyFramesDecoded: me.keyFramesDecoded, firCount: me.firCount, decoderImplementation: me.decoderImplementation, pliCount: me.pliCount, totalProcessingDelay: me.totalProcessingDelay, qpSum: me.qpSum || 0, totalAssemblyTime: me.totalAssemblyTime || 0, totalDecodeTime: me.totalDecodeTime || 0, totalFreezesDuration: me.totalFreezesDuration || 0, totalInterFrameDelay: me.totalInterFrameDelay || 0, totalPausesDuration: me.totalPausesDuration || 0, totalSquaredInterFrameDelay: me.totalSquaredInterFrameDelay || 0, freezeCount: me.freezeCount || 0, pauseCount: me.pauseCount || 0, powerEfficientDecoder: me.powerEfficientDecoder }, ni);
                De.score = rf({ frameWidth: De.frameWidth || 0, framesDecoded: (De.framesDecoded || 0) - (((Kn = this.videoConsumerToStatsMap.get(ee)) === null || Kn === void 0 ? void 0 : Kn.framesDecoded) || 0), framesPerSecond: De.framesPerSecond || 0, packetsLost: (De.packetsLost || 0) - (((ai = this.videoConsumerToStatsMap.get(ee)) === null || ai === void 0 ? void 0 : ai.packetsLost) || 0), packetsReceived: (De.packetsReceived || 0) - (((Re = this.videoConsumerToStatsMap.get(ee)) === null || Re === void 0 ? void 0 : Re.packetsReceived) || 0), jitter: De.jitter || 0, isScreenShare: this.screenShareConsumers.has(ee) }), y.set(ee, {
                  score: +(De.score * 10).toFixed(),
                  frameWidth: De.frameWidth || 0,
                  frameHeight: De.frameHeight || 0,
                  framesPerSecond: De.framesPerSecond || 0,
                  packetsLostPercentage: rc({ packetsLost: (De.packetsLost || 0) - (((qi = this.videoConsumerToStatsMap.get(ee)) === null || qi === void 0 ? void 0 : qi.packetsLost) || 0), packetsReceived: (De.packetsReceived || 0) - (((Gi = this.videoConsumerToStatsMap.get(ee)) === null || Gi === void 0 ? void 0 : Gi.packetsReceived) || 0) }),
                  jitter: De.jitter || 0,
                  isScreenShare: this.screenShareConsumers.has(ee),
                  bitrate: ((De.bytesReceived || 0) - (((Wi = this.videoConsumerToStatsMap.get(ee)) === null || Wi === void 0 ? void 0 : Wi.bytesReceived) || 0)) * 8 / 7
                  // Bytes received in last 7 seconds
                }), this.videoConsumerToStatsMap.set(ee, De), d.inboundVideoRtp.set(T.id, De), d.consumerStreamMap.get(ee).inboundVideoRtpId.push(T.id), this.processInboundConsumerVideoStats(ee, ti, De);
              } else if (ie.mediaType === "audio" || ie.kind === "audio") {
                var Ji, Ki, zi, Yi, Qi, Xi, hr = ie, er = N({ audioLevel: hr.audioLevel, concealedSamples: hr.concealedSamples, concealmentEvents: hr.concealmentEvents, totalAudioEnergy: hr.totalAudioEnergy, totalSamplesDuration: hr.totalSamplesDuration, totalSamplesReceived: hr.totalSamplesReceived, fecPacketsDiscarded: hr.fecPacketsDiscarded || 0, fecPacketsReceived: hr.fecPacketsReceived || 0, insertedSamplesForDeceleration: hr.insertedSamplesForDeceleration || 0, removedSamplesForAcceleration: hr.removedSamplesForAcceleration || 0, silentConcealedSamples: hr.silentConcealedSamples || 0, playoutId: hr.playoutId }, ni);
                er.score = ef({ concealmentEvents: (er.concealmentEvents || 0) - (((Ji = this.audioConsumerToStatsMap.get(ee)) === null || Ji === void 0 ? void 0 : Ji.concealmentEvents) || 0), packetsLost: (er.packetsLost || 0) - (((Ki = this.audioConsumerToStatsMap.get(ee)) === null || Ki === void 0 ? void 0 : Ki.packetsLost) || 0), packetsReceived: (er.packetsReceived || 0) - (((zi = this.audioConsumerToStatsMap.get(ee)) === null || zi === void 0 ? void 0 : zi.packetsReceived) || 0), jitter: er.jitter || 0 }), y.set(ee, {
                  score: +(er.score * 10).toFixed(),
                  packetsLostPercentage: rc({ packetsLost: (er.packetsLost || 0) - (((Yi = this.audioConsumerToStatsMap.get(ee)) === null || Yi === void 0 ? void 0 : Yi.packetsLost) || 0), packetsReceived: (er.packetsReceived || 0) - (((Qi = this.audioConsumerToStatsMap.get(ee)) === null || Qi === void 0 ? void 0 : Qi.packetsReceived) || 0) }),
                  jitter: er.jitter || 0,
                  isScreenShare: this.screenShareConsumers.has(ee),
                  bitrate: ((er.bytesReceived || 0) - (((Xi = this.audioConsumerToStatsMap.get(ee)) === null || Xi === void 0 ? void 0 : Xi.bytesReceived) || 0)) * 8 / 7
                  // Bytes received in last 7 seconds
                }), this.audioConsumerToStatsMap.set(ee, er), d.inboundAudioRtp.set(T.id, er), d.consumerStreamMap.get(ee).inboundAudioRtpId.push(T.id), this.processInboundConsumerAudioStats(ee, ti, er);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Inbound-rtp. mediatype: ".concat(ie.mediaType, " kind: ").concat(ie.kind));
            break;
          }
        }
      }
    } catch (re) {
      b.e(re);
    } finally {
      b.f();
    }
    if (d.producerStreamMap.forEach(function(re, ae) {
      if (re.outboundVideoRtpId.length > 0) {
        var Vr, Cr, xi, Vt, es, rs, ts, ns, Ut, as, Zo = [];
        re.outboundVideoRtpId.forEach(function(jc) {
          Zo.push(d.outboundVideoRtp.get(jc));
        });
        var Oe = n.getWorkingSimulcastVideoStats(Zo);
        Oe.score = Zv({ frameWidth: Oe.frameWidth || 0, framesPerSecond: Oe.framesPerSecond || 0, jitter: ((Vr = Oe.remoteData) === null || Vr === void 0 ? void 0 : Vr.jitter) || 0, isScreenShare: n.screenShareProducers.has(ae), packetsSent: (Oe.packetsSent || 0) - (((Cr = n.videoProducerToStatsMap.get(ae)) === null || Cr === void 0 ? void 0 : Cr.packetsSent) || 0), packetsLost: (((xi = Oe.remoteData) === null || xi === void 0 ? void 0 : xi.packetsLost) || 0) - (((Vt = n.videoProducerToStatsMap.get(ae)) === null || Vt === void 0 || (Vt = Vt.remoteData) === null || Vt === void 0 ? void 0 : Vt.packetsLost) || 0), framesEncoded: (Oe.framesEncoded || 0) - (((es = n.videoProducerToStatsMap.get(ae)) === null || es === void 0 ? void 0 : es.framesEncoded) || 0) }), k.set(ae, { score: +(Oe.score * 10).toFixed(), frameWidth: Oe.frameWidth || 0, frameHeight: Oe.frameHeight || 0, framesPerSecond: Oe.framesPerSecond || 0, jitter: ((rs = Oe.remoteData) === null || rs === void 0 ? void 0 : rs.jitter) || 0, isScreenShare: n.screenShareProducers.has(ae), packetsLostPercentage: ec({ packetsSent: (Oe.packetsSent || 0) - (((ts = n.videoProducerToStatsMap.get(ae)) === null || ts === void 0 ? void 0 : ts.packetsSent) || 0), packetsLost: (((ns = Oe.remoteData) === null || ns === void 0 ? void 0 : ns.packetsLost) || 0) - (((Ut = n.videoProducerToStatsMap.get(ae)) === null || Ut === void 0 || (Ut = Ut.remoteData) === null || Ut === void 0 ? void 0 : Ut.packetsLost) || 0) }), bitrate: ((Oe.bytesSent || 0) - (((as = n.videoProducerToStatsMap.get(ae)) === null || as === void 0 ? void 0 : as.bytesSent) || 0)) * 8 / 7, cpuLimitations: Oe.qualityLimitationReason === "cpu", bandwidthLimitations: Oe.qualityLimitationReason === "bandwidth" }), n.videoProducerToStatsMap.set(ae, Oe);
      } else if (re.outboundAudioRtpId.length > 0) {
        var is, ss, jt, os, us, ls, cs, Ft, ds, Ur = d.outboundAudioRtp.get(re.outboundAudioRtpId[0]);
        Ur.score = Xv({ packetsSent: (Ur.packetsSent || 0) - (((is = n.audioProducerToStatsMap.get(ae)) === null || is === void 0 ? void 0 : is.packetsSent) || 0), packetsLost: (((ss = Ur.remoteData) === null || ss === void 0 ? void 0 : ss.packetsLost) || 0) - (((jt = n.audioProducerToStatsMap.get(ae)) === null || jt === void 0 || (jt = jt.remoteData) === null || jt === void 0 ? void 0 : jt.packetsLost) || 0), jitter: ((os = Ur.remoteData) === null || os === void 0 ? void 0 : os.jitter) || 0 }), k.set(ae, { score: +(Ur.score * 10).toFixed(), bitrate: ((Ur.bytesSent || 0) - (((us = n.audioProducerToStatsMap.get(ae)) === null || us === void 0 ? void 0 : us.bytesSent) || 0)) * 8 / 7, packetsLostPercentage: ec({ packetsSent: (Ur.packetsSent || 0) - (((ls = n.audioProducerToStatsMap.get(ae)) === null || ls === void 0 ? void 0 : ls.packetsSent) || 0), packetsLost: (((cs = Ur.remoteData) === null || cs === void 0 ? void 0 : cs.packetsLost) || 0) - (((Ft = n.audioProducerToStatsMap.get(ae)) === null || Ft === void 0 || (Ft = Ft.remoteData) === null || Ft === void 0 ? void 0 : Ft.packetsLost) || 0) }), jitter: ((ds = Ur.remoteData) === null || ds === void 0 ? void 0 : ds.jitter) || 0, isScreenShare: n.screenShareProducers.has(ae) }), n.audioProducerToStatsMap.set(ae, Ur);
      }
    }), g.forEach(function(re) {
      var ae = v.find(function(Cr) {
        return Cr.id === re.localCandidateId ? (re.localCandidateId = Cr.id, Cr) : null;
      }), Vr = f.find(function(Cr) {
        return Cr.id === re.remoteCandidateId ? (re.remoteCandidateId = Cr.id, Cr) : null;
      });
      ae && (re.localCandidateType = ae.type, re.localCandidateAddress = $i(ae.address), re.localCandidatePort = ae.port, re.localCandidateProtocol = ae.protocol, re.localCandidateUrl = ae.url, re.localCandidateNetworkType = ae.networkType, re.localCandidateRelatedAddress = $i(ae.relatedAddress), re.localCandidateRelatedPort = ae.relatedPort), Vr && (re.remoteCandidateType = Vr.type, re.remoteCandidateAddress = $i(Vr.address), re.remoteCandidatePort = Vr.port, re.remoteCandidateProtocol = Vr.protocol, re.remoteCandidateUrl = Vr.url);
    }), d.candidatePair && (d.transport ? (d.transport.bytesReceived = d.candidatePair.bytesReceived, d.transport.bytesSent = d.candidatePair.bytesSent, d.transport.totalRoundTripTime = d.candidatePair.totalRoundTripTime, d.transport.availableOutgoingBitrate = d.candidatePair.availableOutgoingBitrate, d.transport.availableIncomingBitrate = d.candidatePair.availableIncomingBitrate, d.transport.roundTripTime = d.candidatePair.currentRoundTripTime) : d.transport = {
      // candidateStats: result.candidatePair,
      bytesReceived: d.candidatePair.bytesReceived,
      bytesSent: d.candidatePair.bytesSent,
      totalRoundTripTime: d.candidatePair.totalRoundTripTime,
      availableOutgoingBitrate: d.candidatePair.availableOutgoingBitrate,
      availableIncomingBitrate: d.candidatePair.availableIncomingBitrate,
      roundTripTime: d.candidatePair.currentRoundTripTime
    }), d.transport && (d.transport.candidatePairs = g), d.transport && !d.transport.roundTripTime) {
      var Zi = 0, Xo = 0;
      d.remoteInboundRtp.forEach(function(re, ae) {
        re.roundTripTime && re.roundTripTime > Zi && (Zi = re.roundTripTime, Xo = re.totalRoundTripTime);
      }), d.transport.roundTripTime = Zi, d.transport.totalRoundTripTime = Xo;
    }
    if (y.size > 0)
      try {
        this.observer.emit("consumer_score", y);
      } catch (re) {
      }
    if (k.size > 0)
      try {
        this.observer.emit("producer_score", k);
      } catch (re) {
      }
    return d;
  } }, { key: "getProducerStatsFromReport", value: function(r) {
    var n = this, a = [];
    try {
      r.producerStreamMap.forEach(function(i, s) {
        var u = n.producerMap.get(s), c = u.track.getSettings(), d = i.outboundVideoRtpId.map(function(v) {
          var f = r.outboundVideoRtp.get(v);
          return f.frameHeight || (f.frameHeight = c.height, f.frameWidth = c.width, f.framesPerSecond = c.frameRate), f;
        }), h = { producerId: s, appData: u.appData, videoStats: d, audioStats: i.outboundAudioRtpId.map(function(v) {
          return r.outboundAudioRtp.get(v);
        }) };
        a.push(h);
      });
    } catch (i) {
      console.error("getProducersReport: ", i, r);
    }
    return a;
  } }, { key: "getConsumerStatsFromParsedConsumerStats", value: function(r, n, a) {
    var i = this, s;
    try {
      var u = this.consumerPeerIdMap.get(a), c = u.peerId, d = u.producerId, h = u.appData, v = n == null ? void 0 : n.inboundVideoRtpId.map(function(f) {
        var g = i.consumerMap.get(a), k = g.track.getSettings(), y = r.inboundVideoRtp.get(f);
        return y.frameHeight || (y.frameHeight = k.height, y.frameWidth = k.width, y.framesPerSecond = k.frameRate), y;
      });
      s = { consumerId: a, peerId: c, producerId: d, appData: h, videoStats: v, audioStats: n == null ? void 0 : n.inboundAudioRtpId.map(function(f) {
        return r.inboundAudioRtp.get(f);
      }) };
    } catch (f) {
      console.error("getConsumerStatsFromParsedConsumerStats: ", f, r);
    }
    return s;
  } }, { key: "getConsumerStatsFromReport", value: function(r) {
    var n = this, a = [];
    try {
      r.consumerStreamMap.forEach(function(i, s) {
        a.push(n.getConsumerStatsFromParsedConsumerStats(r, i, s));
      });
    } catch (i) {
      console.error("getConsumerStatsFromReport: ", i, r);
    }
    return a;
  } }]);
}(af), Km = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, arguments);
  }
  return R(t, o), P(t);
}(sf);
function tc(o, t, e, r) {
  if (o != null && o.logger && o.logger.error("Callstats::handleError", { error: r }), typeof e == "function" && r instanceof t)
    e.call(null, r, o);
  else
    throw r;
}
function uh(o, t, e) {
  var r = o.value;
  return o.value = function() {
    var n = this;
    try {
      for (var a = arguments.length, i = new Array(a), s = 0; s < a; s++)
        i[s] = arguments[s];
      var u = r.apply(this, i);
      return u && u instanceof Promise ? u.catch(function(c) {
        tc(n, t, e, c);
      }) : u;
    } catch (c) {
      tc(this, t, e, c);
    }
    return null;
  }, o;
}
var fe = function(t, e) {
  return function(r, n, a) {
    var i = a.value;
    return a.value = function() {
      var s = this;
      try {
        for (var u = arguments.length, c = new Array(u), d = 0; d < u; d++)
          c[d] = arguments[d];
        var h = i.apply(this, c);
        return h && h instanceof Promise ? h.catch(function(v) {
          tc(s, t, e, v);
        }) : h;
      } catch (v) {
        tc(this, t, e, v);
      }
      return null;
    }, a;
  };
}, zm = function(t, e) {
  return function(r, n, a) {
    if (a)
      return uh(a, t, e);
    var i = Hn(Reflect.ownKeys(r.prototype).filter(function(h) {
      return h !== "constructor";
    })), s;
    try {
      for (i.s(); !(s = i.n()).done; ) {
        var u = s.value, c = Object.getOwnPropertyDescriptor(r.prototype, u), d = c.value instanceof Function;
        d && Object.defineProperty(r.prototype, u, uh(c, t, e));
      }
    } catch (h) {
      i.e(h);
    } finally {
      i.f();
    }
  };
}, de = globalThis && globalThis.__decorate || function(o, t, e, r) {
  var n = arguments.length, a = n < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, i;
  if ((typeof Reflect == "undefined" ? "undefined" : Pe(Reflect)) === "object" && typeof Reflect.decorate == "function")
    a = Reflect.decorate(o, t, e, r);
  else
    for (var s = o.length - 1; s >= 0; s--)
      (i = o[s]) && (a = (n < 3 ? i(a) : n > 3 ? i(t, e, a) : i(t, e)) || a);
  return n > 3 && a && Object.defineProperty(t, e, a), a;
}, pe = console, ue = /* @__PURE__ */ function(o) {
  function t() {
    var e, r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "https://api.testingv3.dyte.in", n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "Blink", a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Uu.PROD, i = arguments.length > 3 ? arguments[3] : void 0, s = arguments.length > 4 ? arguments[4] : void 0, u = arguments.length > 5 ? arguments[5] : void 0, c = arguments.length > 6 ? arguments[6] : void 0;
    switch (w(this, t), e = C(this, t), e.observer = void 0, e.eventHandler = void 0, e.measurements = void 0, e.producingTransport = void 0, e.consumingTransport = void 0, e.producers = /* @__PURE__ */ new Map(), e.consumers = /* @__PURE__ */ new Map(), e.iceServers = void 0, e.connectionInfoPromise = void 0, e.pingStatsTimeout = void 0, e.logger = void 0, e.env = void 0, e.apiHostnames = void 0, e.peerId = void 0, e.consumerSharedMediaStatesMap = /* @__PURE__ */ new Map(), e.currentUserMediaStates = {}, e.env = a, e.apiHostnames = c, e.logger = s, e.peerId = u, e.eventHandler = new Dm({ logger: s, peerId: u, apiHostnames: c }), e.logger.debug("callStats::engineName: ", { engineName: n }), n) {
      case "Blink":
        e.measurements = new Jm();
        break;
      case "Gecko":
        e.measurements = new sf();
        break;
      case "WebKit":
        e.measurements = new Km();
        break;
      default:
        throw Error("Unknown engineName! ".concat(n));
    }
    return e.measurements.callStatsInstance = e, e.registerProducer = e.registerProducer.bind(e), e.registerConsumer = e.registerConsumer.bind(e), e.observer = new ht(), e.measurements.observer.on("consumer_score", function(d) {
      s.debug("callStats::consumer_score ".concat(ke(d.entries()))), e.eventHandler.emit("consumer_score", d);
    }), e.measurements.observer.on("producer_score", function(d) {
      s.debug("callStats::producer_score ".concat(ke(d.entries()))), e.eventHandler.emit("producer_score", d);
    }), e;
  }
  return R(t, o), P(t, [{ key: "registerIceServers", value: function(r) {
    this.iceServers = r;
  } }, { key: "registerConsumer", value: function(r) {
    var n;
    this.consumerSharedMediaStatesMap.has(r.id) || this.consumerSharedMediaStatesMap.set(r.id, {}), this.consumers.set(r.id, r), this.measurements.registerConsumer(r), this.logger.debug("callStats::registerConsumer", { consumerId: r.id, consumerkind: r.kind, isScreenShare: !!((n = r.appData) !== null && n !== void 0 && n.screenShare) }), r.on("close", this.deRegisterConsumer.bind(this, r));
  } }, { key: "registerProducer", value: function(r) {
    var n;
    this.producers.set(r.id, r), this.measurements.registerProducer(r), this.logger.debug("callStats::registerProducer", { producerId: r.id, producerKind: r.kind, isScreenShare: !!((n = r.appData) !== null && n !== void 0 && n.screenShare) }), r.on("close", this.deRegisterProducer.bind(this, r));
  } }, { key: "sendConsumerSharedMediaStateEvent", value: function(r, n) {
    this.consumerSharedMediaStatesMap.has(r) || this.consumerSharedMediaStatesMap.set(r, {});
    var a = this.consumerSharedMediaStatesMap.get(r);
    this.consumerSharedMediaStatesMap.set(r, Object.assign(a, n));
  } }, { key: "registerProducingTransport", value: function(r) {
    var n, a = this;
    this.producingTransport = r, r.on("close", this.disconnectProducingTransport.bind(this, r)), r.on("disconnect", this.disconnectProducingTransport.bind(this, r));
    var i = Array.from(
      // eslint-disable-next-line no-underscore-dangle
      ((n = r._producers) === null || n === void 0 ? void 0 : n.values()) || []
    );
    i.forEach(function(s) {
      a.registerProducer(s);
    }), r.on("newproducer", this.registerProducer);
  } }, { key: "registerConsumingTransport", value: function(r) {
    var n, a = this;
    this.consumingTransport = r, r.on("close", this.disconnectConsumingTransport.bind(this, r)), r.on("disconnect", this.disconnectConsumingTransport.bind(this, r));
    var i = Array.from(
      // eslint-disable-next-line no-underscore-dangle
      ((n = r._consumers) === null || n === void 0 ? void 0 : n.values()) || []
    );
    i.forEach(function(s) {
      a.registerConsumer(s);
    }), r.on("newconsumer", this.registerConsumer);
  } }, { key: "deRegisterConsumer", value: function(r) {
    this.consumers.delete(r.id);
  } }, { key: "deRegisterProducer", value: function(r) {
    var n;
    this.producers.delete(r.id), this.logger.debug("callStats::deRegisterProducer", { producerId: r.id, producerKind: r.kind, isScreenShare: !!((n = r.appData) !== null && n !== void 0 && n.screenShare) });
  } }, { key: "disconnectConsumingTransport", value: function() {
    this.consumingTransport = void 0;
  } }, { key: "disconnectProducingTransport", value: function() {
    this.producingTransport = void 0;
  } }, { key: "callEvent", value: function(r) {
    this.eventHandler.callEvent(r);
  } }, { key: "sendPreCallTestBeginEvent", value: function() {
    var r = this, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, a = arguments.length > 1 ? arguments[1] : void 0;
    this.connectionInfoPromise = this.measurements.getNetworkInfo(this.iceServers, n), this.eventHandler.callEvent({ event: K.PRECALL_TEST_BEGIN, timestamp: a }), this.connectionInfoPromise && this.connectionInfoPromise.then(function(i) {
      r.eventHandler.callEvent({ event: K.PRECALL_TEST_COMPLETE, metaData: { connectionInfo: i }, timestamp: a });
    });
  } }, { key: "sendScreenShareToggleEvent", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, a = arguments.length > 2 ? arguments[2] : void 0;
    this.currentUserMediaStates.screen = r, this.eventHandler.callEvent({ event: r ? K.SCREENSHARE_STARTED : K.SCREENSHARE_STOPPED, metaData: { ssrc: n }, timestamp: a });
  } }, { key: "sendScreenShareRequestedEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.SCREENSHARE_START_REQUESTED, timestamp: r });
  } }, { key: "sendActiveSpeakerEvent", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.DOMINANT_SPEAKER, metaData: { peerId: r }, timestamp: n });
  } }, { key: "devices", value: function(r, n, a) {
    this.eventHandler.callEvent({ event: r === yn.AUDIO && K.AUDIO_DEVICES_UPDATES || r === yn.VIDEO && K.VIDEO_DEVICES_UPDATES || r === yn.SPEAKER && K.SPEAKER_DEVICES_UPDATES, metaData: { deviceList: n }, timestamp: a });
  } }, { key: "selectedDevice", value: function(r, n, a) {
    this.eventHandler.callEvent({ event: r === yn.AUDIO && K.SELECTED_MICROHPONE_UPDATE || r === yn.VIDEO && K.SELECTED_CAMERA_UPDATE || r === yn.SPEAKER && K.SELECTED_SPEAKER_UPDATE, metaData: { device: n }, timestamp: a });
  } }, { key: "mediaPermission", value: function(r, n, a) {
    this.eventHandler.callEvent({ event: K.MEDIA_PERMISSION, metaData: { deviceType: r, permission: n }, timestamp: a });
  } }, { key: "mediaPlaybackFailed", value: function(r, n) {
    this.eventHandler.callEvent({ event: r === yn.AUDIO && K.AUDIO_PLAY_FAILED || r === yn.VIDEO && K.VIDEO_PLAY_FAILED, metaData: { deviceType: r }, timestamp: n });
  } }, { key: "mediaTrackMuted", value: function(r, n) {
    this.eventHandler.callEvent({ event: r === yn.AUDIO && K.AUDIO_TRACK_MUTED || r === yn.VIDEO && K.VIDEO_TRACK_MUTED, metaData: { deviceType: r }, timestamp: n });
  } }, { key: "tabChanged", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.TAB_CHANGE, metaData: { isMeetingsTabActive: r }, timestamp: n });
  } }, { key: "browserBackgrounded", value: function(r) {
    this.eventHandler.callEvent({ event: K.BROWSER_BACKGROUNDED, timestamp: r });
  } }, { key: "browserForegrounded", value: function(r) {
    this.eventHandler.callEvent({ event: K.BROWSER_FOREGROUNDED, timestamp: r });
  } }, { key: "legacySwitch", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.LEGACY_SWITCH, metadata: { on: r }, timestamp: n });
  } }, { key: "getPreCallTestResults", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.connectionInfoPromise);
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendCallJoinBeginEvent", value: function(r, n) {
    r = N(N({}, r), {}, { meetingEnv: this.env }), r.deviceInfo = N(N({}, r.deviceInfo), {}, { userAgent: navigator.userAgent, cpus: navigator.hardwareConcurrency, memory: navigator.deviceMemory }), this.eventHandler.callEvent({ event: K.CALL_JOIN_BEGIN, metaData: { peerMetaData: r }, timestamp: n });
  } }, { key: "sendNetworkQualityTestBeginEvent", value: function(r, n) {
    var a = this;
    this.eventHandler.callEvent({ event: K.NET_QUALITY_TEST_BEGIN, timestamp: n });
    var i = new Promise(/* @__PURE__ */ function() {
      var s = m(/* @__PURE__ */ p().mark(function u(c, d) {
        var h, v, f, g, k;
        return p().wrap(function(b) {
          for (; ; )
            switch (b.prev = b.next) {
              case 0:
                h = [], b.prev = 1, v = Hn(r), b.prev = 3, v.s();
              case 5:
                if ((f = v.n()).done) {
                  b.next = 20;
                  break;
                }
                if (g = f.value, b.prev = 7, !(g.iceServers && g.iceServers.length > 0)) {
                  b.next = 13;
                  break;
                }
                return b.next = 11, a.measurements.getNetworkQuality(g.iceServers);
              case 11:
                k = b.sent, h.push(N(N({}, g), {}, { networkResults: k }));
              case 13:
                b.next = 18;
                break;
              case 15:
                b.prev = 15, b.t0 = b.catch(7), console.warn("Error handling ", b.t0);
              case 18:
                b.next = 5;
                break;
              case 20:
                b.next = 25;
                break;
              case 22:
                b.prev = 22, b.t1 = b.catch(3), v.e(b.t1);
              case 25:
                return b.prev = 25, v.f(), b.finish(25);
              case 28:
                c({ regionData: h }), b.next = 35;
                break;
              case 31:
                b.prev = 31, b.t2 = b.catch(1), console.warn("Error in callstats, ", b.t2), d(b.t2);
              case 35:
              case "end":
                return b.stop();
            }
        }, u, null, [[1, 31], [3, 22, 25, 28], [7, 15]]);
      }));
      return function(u, c) {
        return s.apply(this, arguments);
      };
    }());
    i.then(function(s) {
      a.eventHandler.callEvent({ event: K.NET_QUALITY_TEST_END, timestamp: n, metaData: s });
    });
  } }, { key: "sendWebSocketConnectedEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.WEBSOCKET_CONNECTED, timestamp: r });
  } }, { key: "sendTransportConnectedEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.TRANSPORT_CONNECTED, timestamp: r });
  } }, { key: "sendAudioToggleEvent", value: function(r, n) {
    this.currentUserMediaStates.audio = r;
    var a;
    r ? a = K.AUDIO_ON : a = K.AUDIO_OFF, this.eventHandler.callEvent({ event: a, timestamp: n });
  } }, { key: "sendVideoToggleEvent", value: function(r, n) {
    this.currentUserMediaStates.video = r;
    var a;
    r ? a = K.VIDEO_ON : a = K.VIDEO_OFF, this.eventHandler.callEvent({ event: a, timestamp: n });
  } }, { key: "sendParticipantRoleToggleEvent", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.PARTICIPANT_ROLE, timestamp: n, metaData: r });
  } }, { key: "startPingStats", value: function() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 7e3;
    this.sendPingStatsEvent(!1, new Date()), this.pingStatsTimeout = setInterval(this.sendPingStatsEvent.bind(this), r);
  } }, { key: "stopPingStats", value: function() {
    clearInterval(this.pingStatsTimeout);
  } }, { key: "sendPingStatsEvent", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s, u, c, d, h, v, f, g, k, y, b, S, T, A = arguments;
      return p().wrap(function(I) {
        for (; ; )
          switch (I.prev = I.next) {
            case 0:
              if (h = A.length > 0 && A[0] !== void 0 ? A[0] : !0, v = A.length > 1 ? A[1] : void 0, !this.producingTransport) {
                I.next = 19;
                break;
              }
              return I.next = 5, this.measurements.getProcessedStats(this.producingTransport, !1, !0);
            case 5:
              if (f = I.sent, !(!f || !((k = f) !== null && k !== void 0 && k.producerReport))) {
                I.next = 19;
                break;
              }
              return this.logger.debug("callStats::sendPingStatsEvent::staleProducingTransport", { disclaimer: "Stale producer? Regenerating Stream Maps!" }), I.next = 10, this.measurements.getProducersReport(ke(this.producers.values()));
            case 10:
              if (y = I.sent, !(f && y)) {
                I.next = 15;
                break;
              }
              f.producerReport = y, I.next = 19;
              break;
            case 15:
              return I.next = 17, this.measurements.getProcessedStats(this.producingTransport, !1, !0);
            case 17:
              f = I.sent, (!f || !((b = f) !== null && b !== void 0 && b.producerReport)) && this.logger.debug("callStats::sendPingStatsEvent::noProducingTransportReport", { disclaimer: "Stream maps invalid despite regenerating!" });
            case 19:
              if (!this.consumingTransport) {
                I.next = 36;
                break;
              }
              return I.next = 22, this.measurements.getProcessedStats(this.consumingTransport, !0, !1);
            case 22:
              if (g = I.sent, !(!g || !g.consumerReport)) {
                I.next = 36;
                break;
              }
              return this.logger.debug("callStats::sendPingStatsEvent::staleConsumingTransport", { disclaimer: "Stale consumer? Regenerating Stream Maps!" }), I.next = 27, this.measurements.getConsumersReport(ke(this.consumers.values()));
            case 27:
              if (S = I.sent, !(g && S)) {
                I.next = 32;
                break;
              }
              g.consumerReport = S, I.next = 36;
              break;
            case 32:
              return I.next = 34, this.measurements.getProcessedStats(this.consumingTransport, !0, !1);
            case 34:
              g = I.sent, (!g || !g.consumerReport) && this.logger.debug("callStats::sendPingStatsEvent::noConsumingTransportReport", { disclaimer: "Stream maps invalid despite regenerating!" });
            case 36:
              if (T = { producingTransportStats: f ? (a = f) === null || a === void 0 ? void 0 : a.transportReport : void 0, consumingTransportStats: g ? (i = g) === null || i === void 0 ? void 0 : i.transportReport : void 0, producerStats: [].concat(((s = f) === null || s === void 0 ? void 0 : s.producerReport) || []).concat(((u = g) === null || u === void 0 ? void 0 : u.producerReport) || []), consumerStats: [].concat(((c = g) === null || c === void 0 ? void 0 : c.consumerReport) || []).concat(((d = f) === null || d === void 0 ? void 0 : d.consumerReport) || []) }, !(h && T.producerStats.length === 0 && T.consumerStats.length === 0)) {
                I.next = 41;
                break;
              }
              return I.next = 40, this.eventHandler.flush();
            case 40:
              return I.abrupt("return");
            case 41:
              this.eventHandler.callEvent({ event: K.PING_STAT, metaData: T, timestamp: v });
            case 42:
            case "end":
              return I.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendIVSPlayerRebufferEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_REBUFFERING, timestamp: r });
  } }, { key: "sendIVSPlayerAudioBlockEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_AUDIO_BLOCKED, timestamp: r });
  } }, { key: "sendIVSPlayerPlaybackBlockedEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_PLAYBACK_BLOCKED, timestamp: r });
  } }, { key: "sendIVSPlayerNetworkUnavailableEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_NETWORK_UNAVAILABLE, timestamp: r });
  } }, { key: "sendIVSPlayerInitializedEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_INITIALIZED, timestamp: r });
  } }, { key: "sendIVSPlayerWorkerErrorEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_WORKER_ERROR, timestamp: r });
  } }, { key: "sendIVSPlayerErrorEvent", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_ERROR, timestamp: n, metaData: r });
  } }, { key: "sendIVSPlayerRecoverableErrorEvent", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_RECOVERABLE_ERROR, timestamp: n, metaData: r });
  } }, { key: "sendIVSPlayerAnalyticsEvent", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_ANALYTICS_EVENT, timestamp: n, metaData: r });
  } }, { key: "sendIVSPlayerPlaybackRateChangedEvent", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_PLAYBACK_RATE_CHANGED, timestamp: n, metaData: { updatedPlaybackRate: r } });
  } }, { key: "sendIVSPlayerQualityChanged", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.IVS_PLAYER_QUALITY_CHANGED, timestamp: n, metaData: r });
  } }, { key: "sendPlayerLiveLatency", value: function(r, n) {
    this.eventHandler.callEvent({ event: K.LIVESTREAM_LATENCY, timestamp: n, metaData: { latency: r } });
  } }, { key: "sendDisconnectEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.DISCONNECT, timestamp: r });
  } }, { key: "sendReconnectEvent", value: function(r) {
    this.eventHandler.callEvent({ event: K.RECONNECT_ATTEMPT, timestamp: r });
  } }, { key: "expectedVideoResolution", value: function(r, n, a) {
    this.eventHandler.callEvent({ event: K.EXPECTED_VIDEO_RESOLUTION, timestamp: a, metaData: { frameWidth: r, frameHeight: n } });
  } }, { key: "expectedScreenshareResolution", value: function(r, n, a) {
    this.eventHandler.callEvent({ event: K.EXPECTED_SCREENSHARE_RESOLUTION, timestamp: a, metaData: { frameWidth: r, frameHeight: n } });
  } }]);
}(ht);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "registerIceServers", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "registerConsumer", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "registerProducer", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendConsumerSharedMediaStateEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "registerProducingTransport", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "registerConsumingTransport", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "deRegisterConsumer", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "deRegisterProducer", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "disconnectConsumingTransport", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "disconnectProducingTransport", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendPreCallTestBeginEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendScreenShareToggleEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendScreenShareRequestedEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendActiveSpeakerEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "devices", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "selectedDevice", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "mediaPermission", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "mediaPlaybackFailed", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "mediaTrackMuted", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "tabChanged", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "browserBackgrounded", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "browserForegrounded", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "legacySwitch", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "getPreCallTestResults", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendCallJoinBeginEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendNetworkQualityTestBeginEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendWebSocketConnectedEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendTransportConnectedEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendAudioToggleEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendVideoToggleEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendParticipantRoleToggleEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "startPingStats", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "stopPingStats", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendPingStatsEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerRebufferEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerAudioBlockEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerPlaybackBlockedEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerNetworkUnavailableEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerInitializedEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerWorkerErrorEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerErrorEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerRecoverableErrorEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerAnalyticsEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerPlaybackRateChangedEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendIVSPlayerQualityChanged", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendPlayerLiveLatency", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendDisconnectEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "sendReconnectEvent", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "expectedVideoResolution", null);
de([fe(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue.prototype, "expectedScreenshareResolution", null);
ue = de([zm(TypeError, function(o, t) {
  return pe.error(t, o);
})], ue);
var Ym = ue, of = /* @__PURE__ */ function(o) {
  function t() {
    var e;
    w(this, t);
    for (var r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    return e = C(this, t, [].concat(n)), e.stats = void 0, e.peerId = void 0, e.backend = void 0, e.iceServers = void 0, e.initialized = !1, e.stalled = !1, e.ipInformation = void 0, e.logger = void 0, e;
  }
  return R(t, o), P(t, [{ key: "initialize", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d, h, v, f, g, k, y, b, S, T, A;
      return p().wrap(function(I) {
        for (; ; )
          switch (I.prev = I.next) {
            case 0:
              return i = a.peerId, s = a.engineName, u = a.env, c = u === void 0 ? Uu.PROD : u, d = a.iceServers, h = a.apiBase, v = h === void 0 ? "https://api.cluster.dyte.in" : h, f = a.flags, g = a.logger, k = g === void 0 ? console : g, y = a.apiHostnames, b = a.skipConnectivityChecks, S = b === void 0 ? !1 : b, I.prev = 1, this.peerId = i, this.logger = k, I.next = 6, Ip.getIPDetails({ peerId: i, apiHostnames: y, logger: k });
            case 6:
              this.ipInformation = I.sent, this.backend = new Ym(v, s, c, f, k, i, y), this.iceServers = d, (T = this.backend) === null || T === void 0 || T.registerIceServers(this.iceServers), this.initialized = !0, (A = this.backend) === null || A === void 0 || (A = A.eventHandler) === null || A === void 0 || A.emit("initialized", this.ipInformation), this.emit("initialized", this.ipInformation), this.startPreCallTest(S), I.next = 20;
              break;
            case 16:
              I.prev = 16, I.t0 = I.catch(1), this.logger.error("callStats::CallStatsIntegration: ", { error: I.t0 }), this.stallCallStats();
            case 20:
            case "end":
              return I.stop();
          }
      }, n, this, [[1, 16]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "configureSendTransport", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.registerProducingTransport(r);
    });
  } }, { key: "configureRecvTransport", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.registerConsumingTransport(r);
    });
  } }, { key: "candidateRegionalNetworkQualityTest", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              s = new Date(), this.onSafeInitialization(function() {
                try {
                  var d;
                  (d = i.backend) === null || d === void 0 || d.sendNetworkQualityTestBeginEvent(a, s);
                } catch (h) {
                  i.logger.error("callStats::sendNetworkQualityTestBeginEvent", { error: { reason: h.reason } });
                }
              });
            case 2:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "roomJoined", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              s = new Date(), this.onSafeInitialization(function() {
                var d, h;
                (d = i.backend) === null || d === void 0 || d.sendCallJoinBeginEvent(a, s), i.backend, (h = i.backend) === null || h === void 0 || h.startPingStats();
              });
            case 2:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "audioOff", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a;
      (a = r.backend) === null || a === void 0 || a.sendAudioToggleEvent(!1, n);
    });
  } }, { key: "audioOn", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a;
      (a = r.backend) === null || a === void 0 || a.sendAudioToggleEvent(!0, n);
    });
  } }, { key: "videoOff", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a;
      (a = r.backend) === null || a === void 0 || a.sendVideoToggleEvent(!1, n);
    });
  } }, { key: "videoOn", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a;
      (a = r.backend) === null || a === void 0 || a.sendVideoToggleEvent(!0, n);
    });
  } }, { key: "callEnded", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a, i;
      (a = r.backend) === null || a === void 0 || a.stopPingStats(), (i = r.backend) === null || i === void 0 || i.sendDisconnectEvent(n);
    });
  } }, { key: "screenShareStart", value: function(r) {
    var n = this, a = new Date();
    this.onSafeInitialization(function() {
      var i;
      (i = n.backend) === null || i === void 0 || i.sendScreenShareToggleEvent(!0, r, a);
    });
  } }, { key: "consumerSharedMediaState", value: function(r, n) {
    var a = this;
    this.onSafeInitialization(function() {
      var i;
      (i = a.backend) === null || i === void 0 || i.sendConsumerSharedMediaStateEvent(r, n);
    });
  } }, { key: "screenShareStop", value: function(r) {
    var n = this, a = new Date();
    this.onSafeInitialization(function() {
      var i;
      (i = n.backend) === null || i === void 0 || i.sendScreenShareToggleEvent(!1, r, a);
    });
  } }, { key: "screenShareRequested", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a;
      (a = r.backend) === null || a === void 0 || a.sendScreenShareRequestedEvent(n);
    });
  } }, { key: "activeSpeaker", value: function(r) {
    var n = this;
    if (r === this.peerId) {
      var a = new Date();
      this.onSafeInitialization(function() {
        var i;
        (i = n.backend) === null || i === void 0 || i.sendActiveSpeakerEvent(r, a);
      });
    }
  } }, { key: "devices", value: function(r, n) {
    var a = this, i = new Date();
    this.onSafeInitialization(function() {
      var s;
      (s = a.backend) === null || s === void 0 || s.devices(r, n, i);
    });
  } }, { key: "selectedDevice", value: function(r, n) {
    var a = this, i = new Date();
    this.onSafeInitialization(function() {
      var s;
      (s = a.backend) === null || s === void 0 || s.selectedDevice(r, n, i);
    });
  } }, { key: "mediaPermission", value: function(r, n) {
    var a = this, i = new Date();
    this.onSafeInitialization(function() {
      var s;
      (s = a.backend) === null || s === void 0 || s.mediaPermission(r, n, i);
    });
  } }, { key: "mediaPlaybackFailed", value: function(r) {
    var n = this, a = new Date();
    this.onSafeInitialization(function() {
      var i;
      (i = n.backend) === null || i === void 0 || i.mediaPlaybackFailed(r, a);
    });
  } }, { key: "mediaTrackMuted", value: function(r) {
    var n = this, a = new Date();
    this.onSafeInitialization(function() {
      var i;
      (i = n.backend) === null || i === void 0 || i.mediaTrackMuted(r, a);
    });
  } }, { key: "tabChanged", value: function() {
    var r = this, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, a = new Date();
    this.onSafeInitialization(function() {
      var i;
      (i = r.backend) === null || i === void 0 || i.tabChanged(n, a);
    });
  } }, { key: "browserBackgrounded", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a;
      (a = r.backend) === null || a === void 0 || a.browserBackgrounded(n);
    });
  } }, { key: "browserForegrounded", value: function() {
    var r = this, n = new Date();
    this.onSafeInitialization(function() {
      var a;
      (a = r.backend) === null || a === void 0 || a.browserForegrounded(n);
    });
  } }, { key: "legacySwitch", value: function(r) {
    var n = this, a = new Date();
    this.onSafeInitialization(function() {
      var i;
      (i = n.backend) === null || i === void 0 || i.legacySwitch(r, a);
    });
  } }, { key: "startPreCallTest", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a = this, i, s, u = arguments;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              i = u.length > 0 && u[0] !== void 0 ? u[0] : !1, s = new Date(), this.onSafeInitialization(function() {
                var h;
                (h = a.backend) === null || h === void 0 || h.sendPreCallTestBeginEvent(i, s);
              });
            case 3:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "onPreCallTestResults", value: function(r) {
    var n = this;
    return this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.once("precall_end", r);
    }), r;
  } }, { key: "onReceivingConsumerAudioStatus", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("consumer_audio_status", r);
    });
  } }, { key: "onReceivingConsumerVideoStatus", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("consumer_video_status", r);
    });
  } }, { key: "onReceivingProducerAudioStatus", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("producer_audio_status", r);
    });
  } }, { key: "onReceivingProducerVideoStatus", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("producer_video_status", r);
    });
  } }, { key: "onReceivingProducingTransportStatus", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("producing_transport_status", r);
    });
  } }, { key: "onReceivingConsumingTransportStatus", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("consuming_transport_status", r);
    });
  } }, { key: "onProducerScore", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("producer_score", r);
    });
  } }, { key: "onConsumerScore", value: function(r) {
    var n = this;
    this.onSafeInitialization(function() {
      var a;
      (a = n.backend) === null || a === void 0 || a.eventHandler.on("consumer_score", r);
    });
  } }, { key: "onSafeInitialization", value: function(r) {
    if (this.initialized)
      r(this.ipInformation, !1);
    else if (!this.stalled) {
      var n = function(i) {
        var s = !0;
        r(i, s);
      };
      return this.once("initialized", n), n;
    }
    return function() {
    };
  } }, { key: "removeInitializationListener", value: function(r) {
    this.removeListener("initialized", r);
  } }, { key: "stallCallStats", value: function() {
    this.stalled = !0, this.removeAllListeners("initialized");
  } }, { key: "ivsPlayerEvent", value: function(r, n) {
    var a = this, i = new Date();
    this.onSafeInitialization(function() {
      var s, u, c, d, h, v, f, g, k, y, b;
      switch (r) {
        case "PlayerRebuffering":
          (s = a.backend) === null || s === void 0 || s.sendIVSPlayerRebufferEvent(i);
          break;
        case "PlayerAudioBlocked":
          (u = a.backend) === null || u === void 0 || u.sendIVSPlayerAudioBlockEvent(i);
          break;
        case "PlayerPlaybackBlocked":
          (c = a.backend) === null || c === void 0 || c.sendIVSPlayerPlaybackBlockedEvent(i);
          break;
        case "PlayerNetworkUnavailable":
          (d = a.backend) === null || d === void 0 || d.sendIVSPlayerNetworkUnavailableEvent(i);
          break;
        case "PlayerInitialized":
          (h = a.backend) === null || h === void 0 || h.sendIVSPlayerInitializedEvent(i);
          break;
        case "PlayerWorkerError":
          (v = a.backend) === null || v === void 0 || v.sendIVSPlayerWorkerErrorEvent(i);
          break;
        case "PlayerError":
          (f = a.backend) === null || f === void 0 || f.sendIVSPlayerErrorEvent(n, i);
          break;
        case "PlayerRecoverableError":
          (g = a.backend) === null || g === void 0 || g.sendIVSPlayerRecoverableErrorEvent(n, i);
          break;
        case "PlayerAnalyticsEvent":
          (k = a.backend) === null || k === void 0 || k.sendIVSPlayerAnalyticsEvent(n, i);
          break;
        case "PlayerPlaybackRateChanged":
          (y = a.backend) === null || y === void 0 || y.sendIVSPlayerPlaybackRateChangedEvent(n, i);
          break;
        case "PlayerQualityChanged":
          (b = a.backend) === null || b === void 0 || b.sendIVSPlayerQualityChanged(n, i);
          break;
      }
    });
  } }, { key: "livestreamLatency", value: function(r) {
    var n = this, a = new Date();
    this.onSafeInitialization(function() {
      var i;
      (i = n.backend) === null || i === void 0 || i.sendPlayerLiveLatency(r, a);
    });
  } }, { key: "expectedVideoResolution", value: function(r, n) {
    var a = this, i = new Date();
    this.onSafeInitialization(function() {
      var s;
      (s = a.backend) === null || s === void 0 || s.expectedVideoResolution(r, n, i);
    });
  } }, { key: "expectedScreenshareResolution", value: function(r, n) {
    var a = this, i = new Date();
    this.onSafeInitialization(function() {
      var s;
      (s = a.backend) === null || s === void 0 || s.expectedScreenshareResolution(r, n, i);
    });
  } }]);
}(ht), Qm = new of();
Qm.setMaxListeners(30);
function Xm() {
  this.__data__ = [], this.size = 0;
}
function il(o, t) {
  return o === t || o !== o && t !== t;
}
function Tc(o, t) {
  for (var e = o.length; e--; )
    if (il(o[e][0], t))
      return e;
  return -1;
}
var Zm = Array.prototype, xm = Zm.splice;
function ey(o) {
  var t = this.__data__, e = Tc(t, o);
  if (e < 0)
    return !1;
  var r = t.length - 1;
  return e == r ? t.pop() : xm.call(t, e, 1), --this.size, !0;
}
function ry(o) {
  var t = this.__data__, e = Tc(t, o);
  return e < 0 ? void 0 : t[e][1];
}
function ty(o) {
  return Tc(this.__data__, o) > -1;
}
function ny(o, t) {
  var e = this.__data__, r = Tc(e, o);
  return r < 0 ? (++this.size, e.push([o, t])) : e[r][1] = t, this;
}
function Za(o) {
  var t = -1, e = o == null ? 0 : o.length;
  for (this.clear(); ++t < e; ) {
    var r = o[t];
    this.set(r[0], r[1]);
  }
}
Za.prototype.clear = Xm;
Za.prototype.delete = ey;
Za.prototype.get = ry;
Za.prototype.has = ty;
Za.prototype.set = ny;
function ay() {
  this.__data__ = new Za(), this.size = 0;
}
function iy(o) {
  var t = this.__data__, e = t.delete(o);
  return this.size = t.size, e;
}
function sy(o) {
  return this.__data__.get(o);
}
function oy(o) {
  return this.__data__.has(o);
}
var uy = (typeof global == "undefined" ? "undefined" : Pe(global)) == "object" && global && global.Object === Object && global, uf = uy, ly = (typeof self == "undefined" ? "undefined" : Pe(self)) == "object" && self && self.Object === Object && self, cy = uf || ly || Function("return this")(), qn = cy, dy = qn.Symbol, Ui = dy, lf = Object.prototype, py = lf.hasOwnProperty, hy = lf.toString, eu = Ui ? Ui.toStringTag : void 0;
function vy(o) {
  var t = py.call(o, eu), e = o[eu];
  try {
    o[eu] = void 0;
    var r = !0;
  } catch (a) {
  }
  var n = hy.call(o);
  return r && (t ? o[eu] = e : delete o[eu]), n;
}
var fy = Object.prototype, gy = fy.toString;
function my(o) {
  return gy.call(o);
}
var yy = "[object Null]", ky = "[object Undefined]", lh = Ui ? Ui.toStringTag : void 0;
function io(o) {
  return o == null ? o === void 0 ? ky : yy : lh && lh in Object(o) ? vy(o) : my(o);
}
function Bn(o) {
  var t = Pe(o);
  return o != null && (t == "object" || t == "function");
}
var by = "[object AsyncFunction]", Ty = "[object Function]", wy = "[object GeneratorFunction]", Py = "[object Proxy]";
function _p(o) {
  if (!Bn(o))
    return !1;
  var t = io(o);
  return t == Ty || t == wy || t == by || t == Py;
}
var Sy = qn["__core-js_shared__"], Hc = Sy, ch = function() {
  var o = /[^.]+$/.exec(Hc && Hc.keys && Hc.keys.IE_PROTO || "");
  return o ? "Symbol(src)_1." + o : "";
}();
function Ey(o) {
  return !!ch && ch in o;
}
var Cy = Function.prototype, Ry = Cy.toString;
function so(o) {
  if (o != null) {
    try {
      return Ry.call(o);
    } catch (t) {
    }
    try {
      return o + "";
    } catch (t) {
    }
  }
  return "";
}
var Ay = /[\\^$.*+?()[\]{}|]/g, Iy = /^\[object .+?Constructor\]$/, _y = Function.prototype, My = Object.prototype, Dy = _y.toString, Oy = My.hasOwnProperty, Ly = RegExp("^" + Dy.call(Oy).replace(Ay, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function Ny(o) {
  if (!Bn(o) || Ey(o))
    return !1;
  var t = _p(o) ? Ly : Iy;
  return t.test(so(o));
}
function $y(o, t) {
  return o == null ? void 0 : o[t];
}
function oo(o, t) {
  var e = $y(o, t);
  return Ny(e) ? e : void 0;
}
var Vy = oo(qn, "Map"), el = Vy, Uy = oo(Object, "create"), rl = Uy;
function jy() {
  this.__data__ = rl ? rl(null) : {}, this.size = 0;
}
function Fy(o) {
  var t = this.has(o) && delete this.__data__[o];
  return this.size -= t ? 1 : 0, t;
}
var Hy = "__lodash_hash_undefined__", By = Object.prototype, qy = By.hasOwnProperty;
function Gy(o) {
  var t = this.__data__;
  if (rl) {
    var e = t[o];
    return e === Hy ? void 0 : e;
  }
  return qy.call(t, o) ? t[o] : void 0;
}
var Wy = Object.prototype, Jy = Wy.hasOwnProperty;
function Ky(o) {
  var t = this.__data__;
  return rl ? t[o] !== void 0 : Jy.call(t, o);
}
var zy = "__lodash_hash_undefined__";
function Yy(o, t) {
  var e = this.__data__;
  return this.size += this.has(o) ? 0 : 1, e[o] = rl && t === void 0 ? zy : t, this;
}
function ro(o) {
  var t = -1, e = o == null ? 0 : o.length;
  for (this.clear(); ++t < e; ) {
    var r = o[t];
    this.set(r[0], r[1]);
  }
}
ro.prototype.clear = jy;
ro.prototype.delete = Fy;
ro.prototype.get = Gy;
ro.prototype.has = Ky;
ro.prototype.set = Yy;
function Qy() {
  this.size = 0, this.__data__ = { hash: new ro(), map: new (el || Za)(), string: new ro() };
}
function Xy(o) {
  var t = Pe(o);
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? o !== "__proto__" : o === null;
}
function wc(o, t) {
  var e = o.__data__;
  return Xy(t) ? e[typeof t == "string" ? "string" : "hash"] : e.map;
}
function Zy(o) {
  var t = wc(this, o).delete(o);
  return this.size -= t ? 1 : 0, t;
}
function xy(o) {
  return wc(this, o).get(o);
}
function ek(o) {
  return wc(this, o).has(o);
}
function rk(o, t) {
  var e = wc(this, o), r = e.size;
  return e.set(o, t), this.size += e.size == r ? 0 : 1, this;
}
function uo(o) {
  var t = -1, e = o == null ? 0 : o.length;
  for (this.clear(); ++t < e; ) {
    var r = o[t];
    this.set(r[0], r[1]);
  }
}
uo.prototype.clear = Qy;
uo.prototype.delete = Zy;
uo.prototype.get = xy;
uo.prototype.has = ek;
uo.prototype.set = rk;
var tk = 200;
function nk(o, t) {
  var e = this.__data__;
  if (e instanceof Za) {
    var r = e.__data__;
    if (!el || r.length < tk - 1)
      return r.push([o, t]), this.size = ++e.size, this;
    e = this.__data__ = new uo(r);
  }
  return e.set(o, t), this.size = e.size, this;
}
function fa(o) {
  var t = this.__data__ = new Za(o);
  this.size = t.size;
}
fa.prototype.clear = ay;
fa.prototype.delete = iy;
fa.prototype.get = sy;
fa.prototype.has = oy;
fa.prototype.set = nk;
function ak(o, t) {
  for (var e = -1, r = o == null ? 0 : o.length; ++e < r && t(o[e], e, o) !== !1; )
    ;
  return o;
}
var ik = function() {
  try {
    var o = oo(Object, "defineProperty");
    return o({}, "", {}), o;
  } catch (t) {
  }
}(), nc = ik;
function Mp(o, t, e) {
  t == "__proto__" && nc ? nc(o, t, { configurable: !0, enumerable: !0, value: e, writable: !0 }) : o[t] = e;
}
var sk = Object.prototype, ok = sk.hasOwnProperty;
function cf(o, t, e) {
  var r = o[t];
  (!(ok.call(o, t) && il(r, e)) || e === void 0 && !(t in o)) && Mp(o, t, e);
}
function sl(o, t, e, r) {
  var n = !e;
  e || (e = {});
  for (var a = -1, i = t.length; ++a < i; ) {
    var s = t[a], u = r ? r(e[s], o[s], s, e, o) : void 0;
    u === void 0 && (u = o[s]), n ? Mp(e, s, u) : cf(e, s, u);
  }
  return e;
}
function uk(o, t) {
  for (var e = -1, r = Array(o); ++e < o; )
    r[e] = t(e);
  return r;
}
function ga(o) {
  return o != null && Pe(o) == "object";
}
var lk = "[object Arguments]";
function dh(o) {
  return ga(o) && io(o) == lk;
}
var df = Object.prototype, ck = df.hasOwnProperty, dk = df.propertyIsEnumerable, pk = dh(function() {
  return arguments;
}()) ? dh : function(o) {
  return ga(o) && ck.call(o, "callee") && !dk.call(o, "callee");
}, ac = pk, hk = Array.isArray, ji = hk;
function vk() {
  return !1;
}
var pf = (typeof exports == "undefined" ? "undefined" : Pe(exports)) == "object" && exports && !exports.nodeType && exports, ph = pf && (typeof module == "undefined" ? "undefined" : Pe(module)) == "object" && module && !module.nodeType && module, fk = ph && ph.exports === pf, hh = fk ? qn.Buffer : void 0, gk = hh ? hh.isBuffer : void 0, mk = gk || vk, jo = mk, yk = 9007199254740991, kk = /^(?:0|[1-9]\d*)$/;
function hf(o, t) {
  var e = Pe(o);
  return t = t == null ? yk : t, !!t && (e == "number" || e != "symbol" && kk.test(o)) && o > -1 && o % 1 == 0 && o < t;
}
var bk = 9007199254740991;
function vf(o) {
  return typeof o == "number" && o > -1 && o % 1 == 0 && o <= bk;
}
var Tk = "[object Arguments]", wk = "[object Array]", Pk = "[object Boolean]", Sk = "[object Date]", Ek = "[object Error]", Ck = "[object Function]", Rk = "[object Map]", Ak = "[object Number]", Ik = "[object Object]", _k = "[object RegExp]", Mk = "[object Set]", Dk = "[object String]", Ok = "[object WeakMap]", Lk = "[object ArrayBuffer]", Nk = "[object DataView]", $k = "[object Float32Array]", Vk = "[object Float64Array]", Uk = "[object Int8Array]", jk = "[object Int16Array]", Fk = "[object Int32Array]", Hk = "[object Uint8Array]", Bk = "[object Uint8ClampedArray]", qk = "[object Uint16Array]", Gk = "[object Uint32Array]", yr = {};
yr[$k] = yr[Vk] = yr[Uk] = yr[jk] = yr[Fk] = yr[Hk] = yr[Bk] = yr[qk] = yr[Gk] = !0;
yr[Tk] = yr[wk] = yr[Lk] = yr[Pk] = yr[Nk] = yr[Sk] = yr[Ek] = yr[Ck] = yr[Rk] = yr[Ak] = yr[Ik] = yr[_k] = yr[Mk] = yr[Dk] = yr[Ok] = !1;
function Wk(o) {
  return ga(o) && vf(o.length) && !!yr[io(o)];
}
function Dp(o) {
  return function(t) {
    return o(t);
  };
}
var ff = (typeof exports == "undefined" ? "undefined" : Pe(exports)) == "object" && exports && !exports.nodeType && exports, ju = ff && (typeof module == "undefined" ? "undefined" : Pe(module)) == "object" && module && !module.nodeType && module, Jk = ju && ju.exports === ff, Bc = Jk && uf.process, Kk = function() {
  try {
    var o = ju && ju.require && ju.require("util").types;
    return o || Bc && Bc.binding && Bc.binding("util");
  } catch (t) {
  }
}(), Fo = Kk, vh = Fo && Fo.isTypedArray, zk = vh ? Dp(vh) : Wk, Pc = zk, Yk = Object.prototype, Qk = Yk.hasOwnProperty;
function gf(o, t) {
  var e = ji(o), r = !e && ac(o), n = !e && !r && jo(o), a = !e && !r && !n && Pc(o), i = e || r || n || a, s = i ? uk(o.length, String) : [], u = s.length;
  for (var c in o)
    (t || Qk.call(o, c)) && !(i && // Safari 9 has enumerable `arguments.length` in strict mode.
    (c == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    n && (c == "offset" || c == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    a && (c == "buffer" || c == "byteLength" || c == "byteOffset") || // Skip index properties.
    hf(c, u))) && s.push(c);
  return s;
}
var Xk = Object.prototype;
function Sc(o) {
  var t = o && o.constructor, e = typeof t == "function" && t.prototype || Xk;
  return o === e;
}
function mf(o, t) {
  return function(e) {
    return o(t(e));
  };
}
var Zk = mf(Object.keys, Object), xk = Zk, eb = Object.prototype, rb = eb.hasOwnProperty;
function yf(o) {
  if (!Sc(o))
    return xk(o);
  var t = [];
  for (var e in Object(o))
    rb.call(o, e) && e != "constructor" && t.push(e);
  return t;
}
function ol(o) {
  return o != null && vf(o.length) && !_p(o);
}
function Op(o) {
  return ol(o) ? gf(o) : yf(o);
}
function tb(o, t) {
  return o && sl(t, Op(t), o);
}
function nb(o) {
  var t = [];
  if (o != null)
    for (var e in Object(o))
      t.push(e);
  return t;
}
var ab = Object.prototype, ib = ab.hasOwnProperty;
function sb(o) {
  if (!Bn(o))
    return nb(o);
  var t = Sc(o), e = [];
  for (var r in o)
    r == "constructor" && (t || !ib.call(o, r)) || e.push(r);
  return e;
}
function ul(o) {
  return ol(o) ? gf(o, !0) : sb(o);
}
function ob(o, t) {
  return o && sl(t, ul(t), o);
}
var kf = (typeof exports == "undefined" ? "undefined" : Pe(exports)) == "object" && exports && !exports.nodeType && exports, fh = kf && (typeof module == "undefined" ? "undefined" : Pe(module)) == "object" && module && !module.nodeType && module, ub = fh && fh.exports === kf, gh = ub ? qn.Buffer : void 0, mh = gh ? gh.allocUnsafe : void 0;
function bf(o, t) {
  if (t)
    return o.slice();
  var e = o.length, r = mh ? mh(e) : new o.constructor(e);
  return o.copy(r), r;
}
function Tf(o, t) {
  var e = -1, r = o.length;
  for (t || (t = Array(r)); ++e < r; )
    t[e] = o[e];
  return t;
}
function lb(o, t) {
  for (var e = -1, r = o == null ? 0 : o.length, n = 0, a = []; ++e < r; ) {
    var i = o[e];
    t(i, e, o) && (a[n++] = i);
  }
  return a;
}
function wf() {
  return [];
}
var cb = Object.prototype, db = cb.propertyIsEnumerable, yh = Object.getOwnPropertySymbols, pb = yh ? function(o) {
  return o == null ? [] : (o = Object(o), lb(yh(o), function(t) {
    return db.call(o, t);
  }));
} : wf, Lp = pb;
function hb(o, t) {
  return sl(o, Lp(o), t);
}
function Pf(o, t) {
  for (var e = -1, r = t.length, n = o.length; ++e < r; )
    o[n + e] = t[e];
  return o;
}
var vb = mf(Object.getPrototypeOf, Object), Np = vb, fb = Object.getOwnPropertySymbols, gb = fb ? function(o) {
  for (var t = []; o; )
    Pf(t, Lp(o)), o = Np(o);
  return t;
} : wf, Sf = gb;
function mb(o, t) {
  return sl(o, Sf(o), t);
}
function Ef(o, t, e) {
  var r = t(o);
  return ji(o) ? r : Pf(r, e(o));
}
function Td(o) {
  return Ef(o, Op, Lp);
}
function yb(o) {
  return Ef(o, ul, Sf);
}
var kb = oo(qn, "DataView"), wd = kb, bb = oo(qn, "Promise"), Pd = bb, Tb = oo(qn, "Set"), Sd = Tb, wb = oo(qn, "WeakMap"), Ed = wb, kh = "[object Map]", Pb = "[object Object]", bh = "[object Promise]", Th = "[object Set]", wh = "[object WeakMap]", Ph = "[object DataView]", Sb = so(wd), Eb = so(el), Cb = so(Pd), Rb = so(Sd), Ab = so(Ed), Ds = io;
(wd && Ds(new wd(new ArrayBuffer(1))) != Ph || el && Ds(new el()) != kh || Pd && Ds(Pd.resolve()) != bh || Sd && Ds(new Sd()) != Th || Ed && Ds(new Ed()) != wh) && (Ds = function(t) {
  var e = io(t), r = e == Pb ? t.constructor : void 0, n = r ? so(r) : "";
  if (n)
    switch (n) {
      case Sb:
        return Ph;
      case Eb:
        return kh;
      case Cb:
        return bh;
      case Rb:
        return Th;
      case Ab:
        return wh;
    }
  return e;
});
var Ho = Ds, Ib = Object.prototype, _b = Ib.hasOwnProperty;
function Mb(o) {
  var t = o.length, e = new o.constructor(t);
  return t && typeof o[0] == "string" && _b.call(o, "index") && (e.index = o.index, e.input = o.input), e;
}
var Db = qn.Uint8Array, ic = Db;
function $p(o) {
  var t = new o.constructor(o.byteLength);
  return new ic(t).set(new ic(o)), t;
}
function Ob(o, t) {
  var e = t ? $p(o.buffer) : o.buffer;
  return new o.constructor(e, o.byteOffset, o.byteLength);
}
var Lb = /\w*$/;
function Nb(o) {
  var t = new o.constructor(o.source, Lb.exec(o));
  return t.lastIndex = o.lastIndex, t;
}
var Sh = Ui ? Ui.prototype : void 0, Eh = Sh ? Sh.valueOf : void 0;
function $b(o) {
  return Eh ? Object(Eh.call(o)) : {};
}
function Cf(o, t) {
  var e = t ? $p(o.buffer) : o.buffer;
  return new o.constructor(e, o.byteOffset, o.length);
}
var Vb = "[object Boolean]", Ub = "[object Date]", jb = "[object Map]", Fb = "[object Number]", Hb = "[object RegExp]", Bb = "[object Set]", qb = "[object String]", Gb = "[object Symbol]", Wb = "[object ArrayBuffer]", Jb = "[object DataView]", Kb = "[object Float32Array]", zb = "[object Float64Array]", Yb = "[object Int8Array]", Qb = "[object Int16Array]", Xb = "[object Int32Array]", Zb = "[object Uint8Array]", xb = "[object Uint8ClampedArray]", e0 = "[object Uint16Array]", r0 = "[object Uint32Array]";
function t0(o, t, e) {
  var r = o.constructor;
  switch (t) {
    case Wb:
      return $p(o);
    case Vb:
    case Ub:
      return new r(+o);
    case Jb:
      return Ob(o, e);
    case Kb:
    case zb:
    case Yb:
    case Qb:
    case Xb:
    case Zb:
    case xb:
    case e0:
    case r0:
      return Cf(o, e);
    case jb:
      return new r();
    case Fb:
    case qb:
      return new r(o);
    case Hb:
      return Nb(o);
    case Bb:
      return new r();
    case Gb:
      return $b(o);
  }
}
var Ch = Object.create, n0 = function() {
  function o() {
  }
  return function(t) {
    if (!Bn(t))
      return {};
    if (Ch)
      return Ch(t);
    o.prototype = t;
    var e = new o();
    return o.prototype = void 0, e;
  };
}(), a0 = n0;
function Rf(o) {
  return typeof o.constructor == "function" && !Sc(o) ? a0(Np(o)) : {};
}
var i0 = "[object Map]";
function s0(o) {
  return ga(o) && Ho(o) == i0;
}
var Rh = Fo && Fo.isMap, o0 = Rh ? Dp(Rh) : s0, u0 = o0, l0 = "[object Set]";
function c0(o) {
  return ga(o) && Ho(o) == l0;
}
var Ah = Fo && Fo.isSet, d0 = Ah ? Dp(Ah) : c0, p0 = d0, h0 = 1, v0 = 2, f0 = 4, Af = "[object Arguments]", g0 = "[object Array]", m0 = "[object Boolean]", y0 = "[object Date]", k0 = "[object Error]", If = "[object Function]", b0 = "[object GeneratorFunction]", T0 = "[object Map]", w0 = "[object Number]", _f = "[object Object]", P0 = "[object RegExp]", S0 = "[object Set]", E0 = "[object String]", C0 = "[object Symbol]", R0 = "[object WeakMap]", A0 = "[object ArrayBuffer]", I0 = "[object DataView]", _0 = "[object Float32Array]", M0 = "[object Float64Array]", D0 = "[object Int8Array]", O0 = "[object Int16Array]", L0 = "[object Int32Array]", N0 = "[object Uint8Array]", $0 = "[object Uint8ClampedArray]", V0 = "[object Uint16Array]", U0 = "[object Uint32Array]", dr = {};
dr[Af] = dr[g0] = dr[A0] = dr[I0] = dr[m0] = dr[y0] = dr[_0] = dr[M0] = dr[D0] = dr[O0] = dr[L0] = dr[T0] = dr[w0] = dr[_f] = dr[P0] = dr[S0] = dr[E0] = dr[C0] = dr[N0] = dr[$0] = dr[V0] = dr[U0] = !0;
dr[k0] = dr[If] = dr[R0] = !1;
function Vl(o, t, e, r, n, a) {
  var i, s = t & h0, u = t & v0, c = t & f0;
  if (e && (i = n ? e(o, r, n, a) : e(o)), i !== void 0)
    return i;
  if (!Bn(o))
    return o;
  var d = ji(o);
  if (d) {
    if (i = Mb(o), !s)
      return Tf(o, i);
  } else {
    var h = Ho(o), v = h == If || h == b0;
    if (jo(o))
      return bf(o, s);
    if (h == _f || h == Af || v && !n) {
      if (i = u || v ? {} : Rf(o), !s)
        return u ? mb(o, ob(i, o)) : hb(o, tb(i, o));
    } else {
      if (!dr[h])
        return n ? o : {};
      i = t0(o, h, s);
    }
  }
  a || (a = new fa());
  var f = a.get(o);
  if (f)
    return f;
  a.set(o, i), p0(o) ? o.forEach(function(y) {
    i.add(Vl(y, t, e, y, o, a));
  }) : u0(o) && o.forEach(function(y, b) {
    i.set(b, Vl(y, t, e, b, o, a));
  });
  var g = c ? u ? yb : Td : u ? ul : Op, k = d ? void 0 : g(o);
  return ak(k || o, function(y, b) {
    k && (b = y, y = o[b]), cf(i, b, Vl(y, t, e, b, o, a));
  }), i;
}
var j0 = 1, F0 = 4;
function Vp(o) {
  return Vl(o, j0 | F0);
}
var H0 = "[object Symbol]";
function B0(o) {
  return Pe(o) == "symbol" || ga(o) && io(o) == H0;
}
var q0 = Object.defineProperty, G0 = function(t, e) {
  for (var r in e)
    q0(t, r, { get: e[r], enumerable: !0 });
}, W0 = {};
G0(W0, { permissions: function() {
  return J0;
}, theme: function() {
  return K0;
} });
var Lt = /* @__PURE__ */ function(o) {
  return o.GroupCall = "GROUP_CALL", o.Webinar = "WEBINAR", o.AudioRoom = "AUDIO_ROOM", o.Livestream = "LIVESTREAM", o.Chat = "CHAT", o;
}(Lt || {}), ne = /* @__PURE__ */ function(o) {
  return o.Allowed = "ALLOWED", o.NotAllowed = "NOT_ALLOWED", o.CanRequest = "CAN_REQUEST", o;
}(ne || {}), J0 = { view_type: "GROUP_CALL", accept_waiting_requests: !1, accept_present_requests: !1, request_produce: !1, can_allow_participant_audio: !1, can_allow_participant_screensharing: !1, can_allow_participant_video: !1, can_spotlight: !1, request_kick_participant: !1, kick_participant: !1, pin_participant: !1, can_edit_display_name: !1, can_record: !1, can_livestream: !1, can_present: !0, waiting_room_type: "SKIP_ON_ACCEPT", recorder_type: "NONE", plugins: { can_close: !0, can_start: !0 }, polls: { can_create: !0, can_vote: !0, can_view: !0 }, produce: { video: { allow: !0, quality: "vga", frame_rate: 24 }, audio: !0, screenshare: { allow: !0, quality: "hd", frame_rate: 5 } }, chat: { public: { can_send: !0, text: !0, files: !0 }, private: { can_send: !1, can_receive: !1, text: !1, files: !1 } }, connected_meetings: { can_alter_connected_meetings: !1, can_switch_connected_meetings: !1, can_switch_to_parent_meeting: !1 }, reactions: !1, hidden_participant: !1, is_recorder: !1, show_participant_list: !0, can_change_participant_role: !1, can_change_theme: !1, max_screenshare_count: 1 }, K0 = { setup_screen: { is_enabled: !0 }, alone_here: { is_enabled: !0 }, waiting_room: { is_enabled: !1, enable_preview: !0 }, control_bar: { is_enabled: !0, elements: { plugins: !0, screenshare: !0, invite: !0, participants: !0, chat: !0, reactions: !1, polls: !0, fullscreen: !0, layout: !0 } }, header: { is_enabled: !0, elements: { timer: !0, title: !0, participant_count: !0, change_layout: !0 } }, pip_mode: !0, auto_tune: !0, grid: { multi: { maxVideoCount: 6, videoFit: "cover" }, single: { maxVideoCount: 6, videoFit: "cover" }, defaultView: "multi" }, controls: { pip_toggle: !1 } }, Mf = "hXgU8Wc8pwuGNq9ms5q9Hh";
if (typeof process != "undefined") {
  var So;
  (So = process) !== null && So !== void 0 && (So = So.env) !== null && So !== void 0 && So.FLAGSMITH_ENVIRONMENT_KEY && (Mf = process.env.FLAGSMITH_ENVIRONMENT_KEY);
}
function z0() {
  var o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], t = {};
  return o.forEach(function(e) {
    t[e.feature.name] = { enabled: e.enabled, value: e.feature_state_value };
  }), t;
}
var Df = /* @__PURE__ */ function() {
  function o() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Mf;
    w(this, o), this.flags = {}, this.environmentKey = null, this.environmentKey = t;
  }
  return P(o, [{ key: "identifyAndFetchFlagsWithRetry", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this, i, s, u, c, d, h, v, f, g, k, y, b, S, T;
      return p().wrap(function(L) {
        for (; ; )
          switch (L.prev = L.next) {
            case 0:
              i = n.primaryEndpoint, s = n.secondaryEndpoint, u = n.forceEvaluate, c = n.timeout, d = n.uniqueIdentifier, h = n.traitsObj, v = n.logger, f = JSON.parse(JSON.stringify(h)), g = Object.entries(f).map(function(I) {
                return { trait_key: I[0], trait_value: I[1] };
              }), k = [i, s, s], y = /* @__PURE__ */ p().mark(function I() {
                var M, V, j, $, O, B;
                return p().wrap(function(F) {
                  for (; ; )
                    switch (F.prev = F.next) {
                      case 0:
                        return M = T[S], F.prev = 1, V = new AbortController(), j = setTimeout(function() {
                          return V.abort();
                        }, c), $ = "_" + (Math.random() + 1).toString(36).substring(2), F.next = 7, fetch("https://".concat(M, "/api/v1/identities/"), {
                          method: "POST",
                          headers: { "Content-Type": "application/json", "X-Environment-Key": a.environmentKey },
                          body: JSON.stringify({ identifier: d + (u ? $ : ""), traits: g }),
                          signal: V.signal
                          // Handles the timeout
                        });
                      case 7:
                        if (O = F.sent, clearTimeout(j), O.ok) {
                          F.next = 11;
                          break;
                        }
                        throw new Error("Request failed with status ".concat(O.status));
                      case 11:
                        return F.next = 13, O.json();
                      case 13:
                        return B = F.sent, F.abrupt("return", { v: z0(B.flags || []) });
                      case 17:
                        F.prev = 17, F.t0 = F.catch(1), v.error("Flagsmith identify failed!!", { error: F.t0, url: M });
                      case 20:
                      case "end":
                        return F.stop();
                    }
                }, I, null, [[1, 17]]);
              }), S = 0, T = k;
            case 6:
              if (!(S < T.length)) {
                L.next = 14;
                break;
              }
              return L.delegateYield(y(), "t0", 8);
            case 8:
              if (b = L.t0, !b) {
                L.next = 11;
                break;
              }
              return L.abrupt("return", b.v);
            case 11:
              S++, L.next = 6;
              break;
            case 14:
              return L.abrupt("return", {});
            case 15:
            case "end":
              return L.stop();
          }
      }, r);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "identify", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d = arguments;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return a = d.length > 1 && d[1] !== void 0 ? d[1] : {}, i = d.length > 2 && d[2] !== void 0 ? d[2] : !1, s = d.length > 3 && d[3] !== void 0 ? d[3] : 5e3, u = d.length > 4 && d[4] !== void 0 ? d[4] : "edge.api.flagsmith.com", c = d.length > 5 && d[5] !== void 0 ? d[5] : console, v.next = 7, this.identifyAndFetchFlagsWithRetry({ traitsObj: a, uniqueIdentifier: n, forceEvaluate: i, timeout: s, primaryEndpoint: u, secondaryEndpoint: "edge.api.flagsmith.com", logger: c });
            case 7:
              return this.flags = v.sent, v.abrupt("return", this.flags);
            case 9:
            case "end":
              return v.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getValue", value: function(e) {
    return this.flags && this.flags[e] && this.flags[e].value;
  } }, { key: "hasFeature", value: function(e) {
    return this.flags && this.flags[e] && this.flags[e].enabled;
  } }, { key: "getAllFlags", value: function() {
    return this.flags;
  } }]);
}(), Y0 = new Df();
function Q0(o) {
  return new Df(o);
}
var Of = [-2, -1, 0, 1, 2], X0 = [0, 1, 2, 3, 4];
function Z0(o) {
  o = o.trim();
  var t = "0", e = "0", r = "0";
  return o.length == 4 ? (t = "0x" + o[1] + o[1], e = "0x" + o[2] + o[2], r = "0x" + o[3] + o[3]) : o.length > 6 && (t = "0x" + o[1] + o[2], e = "0x" + o[3] + o[4], r = "0x" + o[5] + o[6]), [+t, +e, +r];
}
var x0 = function(t, e, r) {
  var n, a, i;
  if (e == 0)
    n = a = i = r;
  else {
    var s = function(h, v, f) {
      return f < 0 && (f += 1), f > 1 && (f -= 1), f < 0.16666666666666666 ? h + (v - h) * 6 * f : f < 0.5 ? v : f < 0.6666666666666666 ? h + (v - h) * (0.6666666666666666 - f) * 6 : h;
    }, u = r < 0.5 ? r * (1 + e) : r + e - r * e, c = 2 * r - u;
    n = s(c, u, t + 1 / 3), a = s(c, u, t), i = s(c, u, t - 1 / 3);
  }
  return [Math.round(n * 255), Math.round(a * 255), Math.round(i * 255)];
}, eT = function(t, e, r) {
  t /= 255, e /= 255, r /= 255;
  var n = Math.max(t, e, r), a = Math.min(t, e, r), i, s, u = (n + a) / 2;
  if (n == a)
    i = s = 0;
  else {
    var c = n - a;
    switch (s = u > 0.5 ? c / (2 - n - a) : c / (n + a), n) {
      case t:
        i = (e - r) / c + (e < r ? 6 : 0);
        break;
      case e:
        i = (r - t) / c + 2;
        break;
      case r:
        i = (t - e) / c + 4;
        break;
    }
    i /= 6;
  }
  return [i, s, u];
}, rT = function(t, e, r) {
  var n = function(i) {
    return i.toString(16).padStart(2, "0");
  };
  return "#".concat(n(t)).concat(n(e)).concat(n(r));
}, Lf = function(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Of, r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.4, n = [], a = Z0(t), i = Me(a, 3), s = i[0], u = i[1], c = i[2], d = eT(s, u, c), h = Me(d, 3), v = h[0], f = h[1], g = h[2], k = Math.round(g * 100);
  k > 70 ? r = 0.8 : k > 60 ? r = 0.9 : k < 10 ? r = 0.075 : k < 42 && (r = 0.3);
  var y = e.findIndex(function(F) {
    return F === 0;
  });
  if (y === -1)
    throw new Error("Invalid reducer provided, it must contain atleast one zero");
  var b = 5 - y, S = y + 1, T = (100 - k) / b, A = k / S, L = Hn(e), I;
  try {
    for (L.s(); !(I = L.n()).done; ) {
      var M = I.value, V = void 0;
      M < 0 ? V = k + M * A * r : M > 0 ? V = k + M * T * r : V = k;
      var j = x0(v, f, V / 100), $ = Me(j, 3), O = $[0], B = $[1], Q = $[2];
      n.push(rT(O, B, Q));
    }
  } catch (F) {
    L.e(F);
  } finally {
    L.f();
  }
  return n;
}, Ih = { dark: { background: { 1e3: "#252525", 900: "#2F2F2F", 800: "#323232", 700: "#3E3E3E", 600: "#4A4A4A" }, text: "#F5F5F5", "video-bg": "#1C1C1C" }, light: { background: { 1e3: "#FFFFFF", 900: "#F5F5F5", 800: "#EBEBEB", 700: "#E0E0E0", 600: "#D6D6D6" }, text: "#111111", "text-on-brand": "#ffffff", "video-bg": "#DADADA" } }, tT = function(t) {
  var e = Lf(t, Of), r = Me(e, 5), n = r[0], a = r[1], i = r[2], s = r[3], u = r[4];
  return { 300: n, 400: a, 500: i, 600: s, 700: u };
}, nT = function(t) {
  if (t === "#FFFFFF")
    return Ih.light.background;
  if (t === "#000000")
    return Ih.dark.background;
  var e = Lf(t, X0), r = Me(e, 5), n = r[0], a = r[1], i = r[2], s = r[3], u = r[4];
  return { 1e3: n, 900: a, 800: i, 700: s, 600: u };
}, aT = { border_radius: "rounded", border_width: "thin", spacing_base: 4, theme: "dark", colors: { brand: tT("#2160FD"), background: nT("#141414"), danger: "#FF2D2D", text: "#EEEEEE", text_on_brand: "#EEEEEE", success: "#62A504", video_bg: "#191919", warning: "#FFCD07" } };
function Nf() {
  return Vp(aT);
}
var iT = { permissions: {
  // webinar
  can_accept_production_requests: !1,
  can_edit_display_name: !0,
  accept_waiting_requests: !1,
  disable_participant_audio: !1,
  disable_participant_screensharing: !1,
  disable_participant_video: !1,
  can_spotlight: !1,
  kick_participant: !1,
  pin_participant: !1,
  can_record: !1,
  can_livestream: !1,
  waiting_room_type: "SKIP",
  plugins: { can_close: !0, can_start: !0, can_edit_config: !1, config: {} },
  polls: { can_create: !0, can_vote: !0, can_view: !0 },
  media: { video: {
    can_produce: "ALLOWED",
    can_consume: "ALLOWED"
    /* Allowed */
  }, audio: {
    can_produce: "ALLOWED"
    /* Allowed */
  }, screenshare: {
    can_produce: "ALLOWED",
    can_consume: "ALLOWED"
    /* Allowed */
  } },
  chat: { public: { can_send: !0, text: !0, files: !0 }, private: { can_send: !1, can_receive: !1, text: !1, files: !1 }, channel: {
    // Make sure these are the same in default to ensure consistency in developer portal
    can_create: "ALL",
    can_delete: "ALL",
    can_update: "ALL",
    // end same
    can_read_all: !1
  }, message: {
    // Make sure these are the same in default to ensure consistency in developer portal
    can_delete: "ALL",
    can_edit: "ALL",
    // end same
    delete_cutoff_time_seconds: 0,
    edit_cutoff_time_seconds: 0
  } },
  hidden_participant: !1,
  is_recorder: !1,
  recorder_type: "NONE",
  show_participant_list: !0,
  transcription_enabled: !1,
  can_change_participant_permissions: !1,
  connected_meetings: { can_alter_connected_meetings: !1, can_switch_connected_meetings: !1, can_switch_to_parent_meeting: !1 },
  stage_enabled: !1,
  stage_access: void 0,
  accept_stage_requests: !1
}, ui: { oldTheme: { setup_screen: { is_enabled: !1 }, alone_here: { is_enabled: !1 }, waiting_room: { is_enabled: !1, enable_preview: !0 }, control_bar: { is_enabled: !0, elements: { plugins: !0, screenshare: !0, invite: !1, participants: !0, chat: !0, reactions: !1, polls: !0, fullscreen: !0, layout: !0 } }, header: { is_enabled: !0, elements: { timer: !0, title: !0, participant_count: !0, change_layout: !0 } }, pip_mode: !0, auto_tune: !0, colors: { primary: "#2160FD", secondary: "#1A1A1A", text: "#EEEEEE", background: "#1A1A1A", textPrimary: "#EEEEEE", videoBackground: "#1A1A1A" }, dimensions: { mode: "fillParent" }, grid: { multi: { maxVideoCount: 6, videoFit: "cover" }, single: { maxVideoCount: 6, videoFit: "cover" }, defaultView: "MULTI" }, controls: { pip_toggle: !1 }, plugins: [] }, design_tokens: Nf(), config_diff: {} }, config: { view_type: "GROUP_CALL", media: { audio: { enable_stereo: !1, enable_high_bitrate: !1 }, video: { quality: "vga", frame_rate: 24 }, screenshare: { quality: "hd", frame_rate: 5 } }, max_video_streams: { mobile: 6, desktop: 6 }, max_screenshare_count: 1, track_recording: { subscriptions: [] } }, version: "hybrid" };
function sT() {
  return Vp(iT);
}
var oT = { permissions: {
  // webinar
  can_accept_production_requests: !1,
  can_edit_display_name: !0,
  accept_waiting_requests: !1,
  disable_participant_audio: !1,
  disable_participant_screensharing: !1,
  disable_participant_video: !1,
  can_spotlight: !1,
  kick_participant: !1,
  pin_participant: !1,
  can_record: !1,
  can_livestream: !1,
  waiting_room_type: "SKIP",
  plugins: { can_close: !0, can_start: !0, can_edit_config: !1, config: {} },
  polls: { can_create: !0, can_vote: !0, can_view: !0 },
  media: { video: {
    can_produce: "ALLOWED"
    /* Allowed */
  }, audio: {
    can_produce: "ALLOWED"
    /* Allowed */
  }, screenshare: {
    can_produce: "ALLOWED"
    /* Allowed */
  } },
  chat: { public: { can_send: !0, text: !0, files: !0 }, private: { can_send: !1, can_receive: !1, text: !1, files: !1 } },
  hidden_participant: !1,
  is_recorder: !1,
  recorder_type: "NONE",
  show_participant_list: !0,
  transcription_enabled: !1,
  can_change_participant_permissions: !1,
  connected_meetings: { can_alter_connected_meetings: !1, can_switch_connected_meetings: !1, can_switch_to_parent_meeting: !1 },
  stage_enabled: !1,
  stage_access: void 0,
  accept_stage_requests: !1
}, ui: { design_tokens: Nf(), config_diff: {} }, config: { view_type: "GROUP_CALL", media: { audio: { enable_stereo: !1, enable_high_bitrate: !1 }, video: { quality: "vga", frame_rate: 24 }, screenshare: { quality: "hd", frame_rate: 5 } }, max_video_streams: { mobile: 6, desktop: 6 }, max_screenshare_count: 1, track_recording: { subscriptions: [] } }, version: "2.0.0" };
function Up() {
  return Vp(oT);
}
var ru = /* @__PURE__ */ E("context"), $f = /* @__PURE__ */ function() {
  function o() {
    w(this, o), Object.defineProperty(this, ru, { writable: !0, value: void 0 });
  }
  return P(o, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      var e;
      return (e = l(this, ru)[ru]) === null || e === void 0 ? void 0 : e.getValue("telemetry");
    }
  ) }, { key: "init", value: function(e) {
    l(this, ru)[ru] = e;
  } }, { key: "info", value: function(e, r, n) {
    var a;
    (a = this.telemetry) === null || a === void 0 || a.addLogInCurrentSpan("info", e, r, n);
  } }, { key: "error", value: function(e, r, n) {
    var a;
    (a = this.telemetry) === null || a === void 0 || a.addLogInCurrentSpan("error", e, r, n);
  } }, { key: "debug", value: function(e, r, n) {
    var a;
    (a = this.telemetry) === null || a === void 0 || a.addLogInCurrentSpan("debug", e, r, n);
  } }, { key: "log", value: function(e, r, n) {
    var a;
    (a = this.telemetry) === null || a === void 0 || a.addLogInCurrentSpan("log", e, r, n);
  } }, { key: "warn", value: function(e, r, n) {
    var a;
    (a = this.telemetry) === null || a === void 0 || a.addLogInCurrentSpan("warn", e, r, n);
  } }]);
}(), Ht = /* @__PURE__ */ E("eventPromises"), Bt = /* @__PURE__ */ E("asyncListeners"), uT = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t), Object.defineProperty(r, Ht, { writable: !0, value: void 0 }), Object.defineProperty(r, Bt, { writable: !0, value: void 0 }), r.asyncPromiseTimeout = void 0, r.logger = void 0, r.logger = e, l(r, Ht)[Ht] = /* @__PURE__ */ new Map(), l(r, Bt)[Bt] = /* @__PURE__ */ new Map(), r.asyncPromiseTimeout = 8e3, r;
  }
  return R(t, o), P(t, [{ key: "emitAsync", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c, d, h = arguments;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              for (l(this, Ht)[Ht].set(a, []), s = l(this, Bt)[Bt].get(a).map(function() {
                return new Promise(function(g) {
                  l(i, Ht)[Ht].get(a).push(g);
                });
              }), u = h.length, c = new Array(u > 1 ? u - 1 : 0), d = 1; d < u; d++)
                c[d - 1] = h[d];
              return Ce(t, "emit", this, 3)([a].concat(c)), f.next = 6, Promise.race([Promise.all(s), new Promise(function(g, k) {
                return setTimeout(function() {
                  return k(new Error("emitAsync failed to resolve for event ".concat(a, ".")));
                }, i.asyncPromiseTimeout);
              })]);
            case 6:
              l(this, Ht)[Ht].delete(a);
            case 7:
            case "end":
              return f.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "onAsync",
    value: function(r, n) {
      var a = this, i = l(this, Ht)[Ht], s = /* @__PURE__ */ function() {
        var u = m(/* @__PURE__ */ p().mark(function c() {
          var d, h, v = arguments;
          return p().wrap(function(g) {
            for (; ; )
              switch (g.prev = g.next) {
                case 0:
                  return g.prev = 0, g.next = 3, n.apply(void 0, v);
                case 3:
                  g.next = 8;
                  break;
                case 5:
                  g.prev = 5, g.t0 = g.catch(0), a.logger.error("[onAsync]", { error: g.t0 });
                case 8:
                  h = (d = i.get(r)) === null || d === void 0 ? void 0 : d.shift(), h == null || h();
                case 10:
                case "end":
                  return g.stop();
              }
          }, c, null, [[0, 5]]);
        }));
        return function() {
          return u.apply(this, arguments);
        };
      }();
      return l(this, Bt)[Bt].get(r) || l(this, Bt)[Bt].set(r, []), l(this, Bt)[Bt].get(r).push(s), Ce(t, "on", this, 3)([r, s]);
    }
    /**
    * removes all attached listeners
    */
  }, { key: "reset", value: function() {
    l(this, Ht)[Ht] = /* @__PURE__ */ new Map(), l(this, Bt)[Bt] = /* @__PURE__ */ new Map(), Ce(t, "removeAllListeners", this, 3)([]);
  } }]);
}(ht.EventEmitter), lT = /\s/;
function cT(o) {
  for (var t = o.length; t-- && lT.test(o.charAt(t)); )
    ;
  return t;
}
var dT = /^\s+/;
function pT(o) {
  return o && o.slice(0, cT(o) + 1).replace(dT, "");
}
var _h = 0 / 0, hT = /^[-+]0x[0-9a-f]+$/i, vT = /^0b[01]+$/i, fT = /^0o[0-7]+$/i, gT = parseInt;
function Mh(o) {
  if (typeof o == "number")
    return o;
  if (B0(o))
    return _h;
  if (Bn(o)) {
    var t = typeof o.valueOf == "function" ? o.valueOf() : o;
    o = Bn(t) ? t + "" : t;
  }
  if (typeof o != "string")
    return o === 0 ? o : +o;
  o = pT(o);
  var e = vT.test(o);
  return e || fT.test(o) ? gT(o.slice(2), e ? 2 : 8) : hT.test(o) ? _h : +o;
}
function Vf(o) {
  return o;
}
function mT(o, t, e) {
  switch (e.length) {
    case 0:
      return o.call(t);
    case 1:
      return o.call(t, e[0]);
    case 2:
      return o.call(t, e[0], e[1]);
    case 3:
      return o.call(t, e[0], e[1], e[2]);
  }
  return o.apply(t, e);
}
var yT = 800, kT = 16, bT = Date.now;
function TT(o) {
  var t = 0, e = 0;
  return function() {
    var r = bT(), n = kT - (r - e);
    if (e = r, n > 0) {
      if (++t >= yT)
        return arguments[0];
    } else
      t = 0;
    return o.apply(void 0, arguments);
  };
}
function wT(o) {
  return function() {
    return o;
  };
}
var PT = nc ? function(o, t) {
  return nc(o, "toString", { configurable: !0, enumerable: !1, value: wT(t), writable: !0 });
} : Vf, ST = PT, ET = TT(ST), CT = ET, Dh = Math.max;
function RT(o, t, e) {
  return t = Dh(t === void 0 ? o.length - 1 : t, 0), function() {
    for (var r = arguments, n = -1, a = Dh(r.length - t, 0), i = Array(a); ++n < a; )
      i[n] = r[t + n];
    n = -1;
    for (var s = Array(t + 1); ++n < t; )
      s[n] = r[n];
    return s[t] = e(i), mT(o, this, s);
  };
}
function AT(o, t) {
  return CT(RT(o, t, Vf), o + "");
}
function IT(o, t, e) {
  if (!Bn(e))
    return !1;
  var r = Pe(t);
  return (r == "number" ? ol(e) && hf(t, e.length) : r == "string" && t in e) ? il(e[t], o) : !1;
}
function _T(o) {
  return AT(function(t, e) {
    var r = -1, n = e.length, a = n > 1 ? e[n - 1] : void 0, i = n > 2 ? e[2] : void 0;
    for (a = o.length > 3 && typeof a == "function" ? (n--, a) : void 0, i && IT(e[0], e[1], i) && (a = n < 3 ? void 0 : a, n = 1), t = Object(t); ++r < n; ) {
      var s = e[r];
      s && o(t, s, r, a);
    }
    return t;
  });
}
var MT = "[object Object]", DT = Function.prototype, OT = Object.prototype, Uf = DT.toString, LT = OT.hasOwnProperty, NT = Uf.call(Object);
function $T(o) {
  if (!ga(o) || io(o) != MT)
    return !1;
  var t = Np(o);
  if (t === null)
    return !0;
  var e = LT.call(t, "constructor") && t.constructor;
  return typeof e == "function" && e instanceof e && Uf.call(e) == NT;
}
var VT = "__lodash_hash_undefined__";
function UT(o) {
  return this.__data__.set(o, VT), this;
}
function jT(o) {
  return this.__data__.has(o);
}
function sc(o) {
  var t = -1, e = o == null ? 0 : o.length;
  for (this.__data__ = new uo(); ++t < e; )
    this.add(o[t]);
}
sc.prototype.add = sc.prototype.push = UT;
sc.prototype.has = jT;
function FT(o, t) {
  for (var e = -1, r = o == null ? 0 : o.length; ++e < r; )
    if (t(o[e], e, o))
      return !0;
  return !1;
}
function HT(o, t) {
  return o.has(t);
}
var BT = 1, qT = 2;
function jf(o, t, e, r, n, a) {
  var i = e & BT, s = o.length, u = t.length;
  if (s != u && !(i && u > s))
    return !1;
  var c = a.get(o), d = a.get(t);
  if (c && d)
    return c == t && d == o;
  var h = -1, v = !0, f = e & qT ? new sc() : void 0;
  for (a.set(o, t), a.set(t, o); ++h < s; ) {
    var g = o[h], k = t[h];
    if (r)
      var y = i ? r(k, g, h, t, o, a) : r(g, k, h, o, t, a);
    if (y !== void 0) {
      if (y)
        continue;
      v = !1;
      break;
    }
    if (f) {
      if (!FT(t, function(b, S) {
        if (!HT(f, S) && (g === b || n(g, b, e, r, a)))
          return f.push(S);
      })) {
        v = !1;
        break;
      }
    } else if (!(g === k || n(g, k, e, r, a))) {
      v = !1;
      break;
    }
  }
  return a.delete(o), a.delete(t), v;
}
function GT(o) {
  var t = -1, e = Array(o.size);
  return o.forEach(function(r, n) {
    e[++t] = [n, r];
  }), e;
}
function WT(o) {
  var t = -1, e = Array(o.size);
  return o.forEach(function(r) {
    e[++t] = r;
  }), e;
}
var JT = 1, KT = 2, zT = "[object Boolean]", YT = "[object Date]", QT = "[object Error]", XT = "[object Map]", ZT = "[object Number]", xT = "[object RegExp]", ew = "[object Set]", rw = "[object String]", tw = "[object Symbol]", nw = "[object ArrayBuffer]", aw = "[object DataView]", Oh = Ui ? Ui.prototype : void 0, qc = Oh ? Oh.valueOf : void 0;
function iw(o, t, e, r, n, a, i) {
  switch (e) {
    case aw:
      if (o.byteLength != t.byteLength || o.byteOffset != t.byteOffset)
        return !1;
      o = o.buffer, t = t.buffer;
    case nw:
      return !(o.byteLength != t.byteLength || !a(new ic(o), new ic(t)));
    case zT:
    case YT:
    case ZT:
      return il(+o, +t);
    case QT:
      return o.name == t.name && o.message == t.message;
    case xT:
    case rw:
      return o == t + "";
    case XT:
      var s = GT;
    case ew:
      var u = r & JT;
      if (s || (s = WT), o.size != t.size && !u)
        return !1;
      var c = i.get(o);
      if (c)
        return c == t;
      r |= KT, i.set(o, t);
      var d = jf(s(o), s(t), r, n, a, i);
      return i.delete(o), d;
    case tw:
      if (qc)
        return qc.call(o) == qc.call(t);
  }
  return !1;
}
var sw = 1, ow = Object.prototype, uw = ow.hasOwnProperty;
function lw(o, t, e, r, n, a) {
  var i = e & sw, s = Td(o), u = s.length, c = Td(t), d = c.length;
  if (u != d && !i)
    return !1;
  for (var h = u; h--; ) {
    var v = s[h];
    if (!(i ? v in t : uw.call(t, v)))
      return !1;
  }
  var f = a.get(o), g = a.get(t);
  if (f && g)
    return f == t && g == o;
  var k = !0;
  a.set(o, t), a.set(t, o);
  for (var y = i; ++h < u; ) {
    v = s[h];
    var b = o[v], S = t[v];
    if (r)
      var T = i ? r(S, b, v, t, o, a) : r(b, S, v, o, t, a);
    if (!(T === void 0 ? b === S || n(b, S, e, r, a) : T)) {
      k = !1;
      break;
    }
    y || (y = v == "constructor");
  }
  if (k && !y) {
    var A = o.constructor, L = t.constructor;
    A != L && "constructor" in o && "constructor" in t && !(typeof A == "function" && A instanceof A && typeof L == "function" && L instanceof L) && (k = !1);
  }
  return a.delete(o), a.delete(t), k;
}
var cw = 1, Lh = "[object Arguments]", Nh = "[object Array]", Cl = "[object Object]", dw = Object.prototype, $h = dw.hasOwnProperty;
function pw(o, t, e, r, n, a) {
  var i = ji(o), s = ji(t), u = i ? Nh : Ho(o), c = s ? Nh : Ho(t);
  u = u == Lh ? Cl : u, c = c == Lh ? Cl : c;
  var d = u == Cl, h = c == Cl, v = u == c;
  if (v && jo(o)) {
    if (!jo(t))
      return !1;
    i = !0, d = !1;
  }
  if (v && !d)
    return a || (a = new fa()), i || Pc(o) ? jf(o, t, e, r, n, a) : iw(o, t, u, e, r, n, a);
  if (!(e & cw)) {
    var f = d && $h.call(o, "__wrapped__"), g = h && $h.call(t, "__wrapped__");
    if (f || g) {
      var k = f ? o.value() : o, y = g ? t.value() : t;
      return a || (a = new fa()), n(k, y, e, r, a);
    }
  }
  return v ? (a || (a = new fa()), lw(o, t, e, r, n, a)) : !1;
}
function Ff(o, t, e, r, n) {
  return o === t ? !0 : o == null || t == null || !ga(o) && !ga(t) ? o !== o && t !== t : pw(o, t, e, r, Ff, n);
}
function hw(o) {
  return function(t, e, r) {
    for (var n = -1, a = Object(t), i = r(t), s = i.length; s--; ) {
      var u = i[o ? s : ++n];
      if (e(a[u], u, a) === !1)
        break;
    }
    return t;
  };
}
var vw = hw(), fw = vw, gw = function() {
  return qn.Date.now();
}, Gc = gw, mw = "Expected a function", yw = Math.max, kw = Math.min;
function jp(o, t, e) {
  var r, n, a, i, s, u, c = 0, d = !1, h = !1, v = !0;
  if (typeof o != "function")
    throw new TypeError(mw);
  t = Mh(t) || 0, Bn(e) && (d = !!e.leading, h = "maxWait" in e, a = h ? yw(Mh(e.maxWait) || 0, t) : a, v = "trailing" in e ? !!e.trailing : v);
  function f(I) {
    var M = r, V = n;
    return r = n = void 0, c = I, i = o.apply(V, M), i;
  }
  function g(I) {
    return c = I, s = setTimeout(b, t), d ? f(I) : i;
  }
  function k(I) {
    var M = I - u, V = I - c, j = t - M;
    return h ? kw(j, a - V) : j;
  }
  function y(I) {
    var M = I - u, V = I - c;
    return u === void 0 || M >= t || M < 0 || h && V >= a;
  }
  function b() {
    var I = Gc();
    if (y(I))
      return S(I);
    s = setTimeout(b, k(I));
  }
  function S(I) {
    return s = void 0, v && r ? f(I) : (r = n = void 0, i);
  }
  function T() {
    s !== void 0 && clearTimeout(s), c = 0, r = u = n = s = void 0;
  }
  function A() {
    return s === void 0 ? i : S(Gc());
  }
  function L() {
    var I = Gc(), M = y(I);
    if (r = arguments, n = this, u = I, M) {
      if (s === void 0)
        return g(u);
      if (h)
        return clearTimeout(s), s = setTimeout(b, t), f(u);
    }
    return s === void 0 && (s = setTimeout(b, t)), i;
  }
  return L.cancel = T, L.flush = A, L;
}
function Cd(o, t, e) {
  (e !== void 0 && !il(o[t], e) || e === void 0 && !(t in o)) && Mp(o, t, e);
}
function bw(o) {
  return ga(o) && ol(o);
}
function Rd(o, t) {
  if (!(t === "constructor" && typeof o[t] == "function") && t != "__proto__")
    return o[t];
}
function Tw(o) {
  return sl(o, ul(o));
}
function ww(o, t, e, r, n, a, i) {
  var s = Rd(o, e), u = Rd(t, e), c = i.get(u);
  if (c) {
    Cd(o, e, c);
    return;
  }
  var d = a ? a(s, u, e + "", o, t, i) : void 0, h = d === void 0;
  if (h) {
    var v = ji(u), f = !v && jo(u), g = !v && !f && Pc(u);
    d = u, v || f || g ? ji(s) ? d = s : bw(s) ? d = Tf(s) : f ? (h = !1, d = bf(u, !0)) : g ? (h = !1, d = Cf(u, !0)) : d = [] : $T(u) || ac(u) ? (d = s, ac(s) ? d = Tw(s) : (!Bn(s) || _p(s)) && (d = Rf(u))) : h = !1;
  }
  h && (i.set(u, d), n(d, u, r, a, i), i.delete(u)), Cd(o, e, d);
}
function Hf(o, t, e, r, n) {
  o !== t && fw(t, function(a, i) {
    if (n || (n = new fa()), Bn(a))
      ww(o, t, i, e, Hf, r, n);
    else {
      var s = r ? r(Rd(o, i), a, i + "", o, t, n) : void 0;
      s === void 0 && (s = a), Cd(o, i, s);
    }
  }, ul);
}
var Pw = "[object Map]", Sw = "[object Set]", Ew = Object.prototype, Cw = Ew.hasOwnProperty;
function Rw(o) {
  if (o == null)
    return !0;
  if (ol(o) && (ji(o) || typeof o == "string" || typeof o.splice == "function" || jo(o) || Pc(o) || ac(o)))
    return !o.length;
  var t = Ho(o);
  if (t == Pw || t == Sw)
    return !o.size;
  if (Sc(o))
    return !yf(o).length;
  for (var e in o)
    if (Cw.call(o, e))
      return !1;
  return !0;
}
function Aw(o, t) {
  return Ff(o, t);
}
var Iw = _T(function(o, t, e) {
  Hf(o, t, e);
}), Ci = Iw, Ad = /* @__PURE__ */ function(o) {
  return o.PARTICIPANT = "PARTICIPANT", o.PEER = "PEER", o.CLIENT = "CLIENT", o;
}(Ad || {}), ve = {
  PROPAGATE_KICK_ALL: "propagate_kick_across_rooms",
  REFRESH_ID_ON_DISCONNECTION: "refresh_id_on_disconnection",
  SIMULCAST: "simulcast",
  CHAT_SOCKET_SERVER: "chat_socket_server",
  POLL_SOCKET_SERVER: "poll_socket_server",
  PLUGIN_SOCKET_SERVER: "plugin_socket_server",
  NR_OTEL_WEB: "nr_otel_web",
  ICE_RESTART_ON_FAILED_STATE: "ice_restart_on_failed_state",
  ICE_RESTART_ON_DISCONNECTED_STATE: "ice_restart_on_disconnected_state",
  ENABLE_ICE_STATE_LOGGING: "enable_ice_state_logging",
  SUPPRESS_PEER_MUTE_UNMUTE_EMITS: "web_core_suppress_peer_mute_unmute_emits",
  SKIP_OTEL_TRACES: "skip_otel_traces",
  USE_USERIDS_IN_CHAT: "use_userids_in_chat",
  CUSTOM_PING_PONG: "custom_ping_pong",
  // NOTE(itzmanish) below flags is added by me
  ENABLE_HIVE_SIMULCAST: "enable_hive_simulcast",
  ENABLE_HIVE_TRANSPORT_RECONNECTION_ON_ICE_FAILED: "enable_hive_transport_reconnection_on_ice_failed",
  ENABLE_HIVE_EXPERIMENTAL_FAIL_RECOVERY: "enable_hive_fail_recovery",
  ENABLE_HIVE_INFINITE_RETRIES: "enable_hive_infinite_retries",
  HIVE_TRANSPORT_FORCE_RELAY_ON_ICE_FAILED: "hive_transport_force_relay_on_ice_failed",
  ENABLE_HIVE_CONSUME_OVER_DC: "enable_hive_consume_over_dc",
  // ==========================================
  // NOTE(ravindra-dyte) replicating hive flags for CF, need to remove if not needed
  ENABLE_CF_SIMULCAST: "enable_cf_simulcast",
  ENABLE_CF_TRANSPORT_RECONNECTION_ON_ICE_FAILED: "enable_cf_transport_reconnection_on_ice_failed",
  ENABLE_CF_EXPERIMENTAL_FAIL_RECOVERY: "enable_cf_fail_recovery",
  ENABLE_CF_INFINITE_RETRIES: "enable_cf_infinite_retries",
  CF_TRANSPORT_FORCE_RELAY_ON_ICE_FAILED: "cf_transport_force_relay_on_ice_failed",
  // ==========================================
  BYPASS_LOG_EXCLUSION_LIST: "bypass_log_exclusion_list",
  LOG_LEVEL: "log_level",
  V1_PLUGINS: "v1_plugins",
  SCREENSHARE_DTX: "screenshare_dtx",
  SCREENSHARE_PRIORITY: "screenshare_priority",
  SCREENSHARE_MIN_BITRATE: "screenshare_minbitrate",
  SCREENSHARE_SIMULCAST: "screenshare_simulcast",
  DISABLE_WEBCAM_LAYERS_ON_SCREENSHARE: "disable_webcam_layers_on_screenshare",
  SCREENSHARE_FORCE_GOOG_CONFERENCE: "screenshare_force_goog_conference",
  LIVESTREAM: "feat_livestream",
  FETCH_RETRY: "fetch_retry",
  DISABLE_WEBCAM_SIMULCAST: "webcore_disable_webcam_simulcast",
  OVERRIDE_WEBCAM_SIMULCAST: "override_webcam_simulcast",
  SOCKET_POLLING: "socket_polling",
  FEAT_PAGINATED_CHAT: "feat_paginated_chat",
  VAL_MIN_FRAMERATE: "val_min_framerate",
  SCREEENSHARE_ERR_HACK: "screenshare_err_hack",
  SCREEENSHARE_CONSTRAINTS_RETRY: "screenshare_constraints_retry",
  TROUBLESHOOTING: "feat_troubleshooting",
  VIDEO_CONSTRAINTS: "video_constraints",
  SCREENSHARE_CONSTRAINTS: "screenshare_constraints",
  FEAT_CHAT_SDK: "feat_chat_sdk",
  FEAT_CHAT_SDK_SEARCH: "chat_search",
  OBS_QUALITY: "obs_quality",
  ALLOW_SAFARI_MEDIA_MIDDLEWARES: "allow_safari_media_middlewares",
  DYNAMIC_VIDEO_QUALITY: "dynamic_video_quality",
  EXP_RESHARE: "exp_reshare",
  LEAVE_STAGE_ON_END: "leave_stage_on_end",
  SKIP_SETTING_IN_USE_DEVICE: "skip_setting_in_use_device",
  PRECALL_BANDWIDTH_TEST: "precall_bandwidth_test",
  CONSUMER_BIND_NO_RETRY: "consumer_bind_no_retry",
  DEBUG_SOCKET_JOIN: "debug_socket_join",
  FORCE_RELAY: "force_relay",
  FORCE_VIDEO_CODEC: "force_video_codec",
  USE_EXPERIMENTAL_SFU_HANDLER: "use_experimental_sfu_handler",
  TRACK_HINT: "track_hint",
  OVERRIDE_HIVE_SIMULCAST_DYNAMIC: "override_hive_simulcast_dynamic",
  PRECREATE_PRODUCERS: "precreate_producers",
  DISABLE_OPUS_DTX_CF: "disable_opus_dtx_cf",
  ENABLE_AUDIO_ACTIVITY_DEBUG_LOGS: "enable_audio_activity_debug_logs",
  NEW_SYNC_CONSUMERS: "new_sync_consumers"
};
function Ul(o) {
  var t = {};
  return typeof (o == null ? void 0 : o.code) == "number" && (t.code = o.code), typeof (o == null ? void 0 : o.code) == "string" && (t.code = o.code.substring(0, 100)), typeof (o == null ? void 0 : o.name) == "string" && (t.name = o.name.substring(0, 500)), typeof (o == null ? void 0 : o.message) == "string" && (t.message = o.message.substring(0, 500)), typeof (o == null ? void 0 : o.reason) == "string" && (t.reason = o.reason.substring(0, 500)), typeof (o == null ? void 0 : o.stack) == "string" && (t.stack = o.stack.substring(0, 500)), t;
}
function _w(o) {
  var t, e, r, n = typeof navigator != "undefined" && !navigator.isReactNative && typeof window != "undefined" && ((t = window.location.host) === null || t === void 0 ? void 0 : t.includes("devel")) && ((e = window.location.host) === null || e === void 0 ? void 0 : e.includes("dyte.io")), a = !!(o != null && (r = o.getValue("modules")) !== null && r !== void 0 && (r = r.devTools) !== null && r !== void 0 && r.logs);
  return n || a;
}
function Mw(o, t) {
  if (o != null && o.getValue("flagsmith").hasFeature(ve.LOG_LEVEL)) {
    var e, r = ((e = o.getValue("flagsmith").getValue(ve.LOG_LEVEL)) === null || e === void 0 ? void 0 : e.toString()) || "all";
    if (r = r.toLowerCase().trim(), r === "off")
      return !1;
    if (r !== "all") {
      var n = ["debug", "log", "info", "warn", "error"], a = n.indexOf(t), i = n.indexOf(r);
      if (a < i)
        return !1;
    }
  }
  return !0;
}
function Bf(o, t) {
  var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  return Object.getOwnPropertyNames(o).forEach(function(r) {
    var n;
    if (![null, void 0, NaN].includes(o[r]) && !(t && (((n = t.match(/\./g)) === null || n === void 0 ? void 0 : n.length) || 0) >= 10)) {
      var a = t ? "".concat(t, ".").concat(r) : r;
      Pe(o[r]) === "object" ? Bf(o[r], a, e) : ["number", "string", "boolean"].includes(Pe(o[r])) && (e[a] = o[r]);
    }
  }), e;
}
function Vh(o, t) {
  var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "", n = {};
  try {
    var a = JSON.stringify(e), i = JSON.parse(a), s = Bf(i, r), u = JSON.stringify(s);
    return JSON.parse(u);
  } catch (d) {
    var c = Ul(d);
    n["".concat(r, ".error.message")] = c.message || "", n["".concat(r, ".error.stack")] = c.stack || "", n["".concat(r, ".error.reason")] = c.reason || "", n["".concat(r, ".error.source")] = "safelyFlattenObjForOpenTelemetry";
  }
  return n;
}
var Dw = { audio: !0, video: !0, screenshareAudio: !0, screenshareVideo: !0 }, tu = { baseURL: "http://localhost:5000", createdAt: "2021-08-05T10:49:56.602Z", description: "Develop plugins locally", id: "09259e3b-7be8-46f6-9801-106bf1866e1c", name: "Localhost Dev", organizationId: "4ad15a19-80e2-4105-bf43-48039fd2963e", picture: "https://dyte-uploads.s3.ap-south-1.amazonaws.com/dyte.png", private: !1, published: !0, staggered: !1, tags: ["#localhost", "#dev"], type: "self_hosted", updatedAt: "2021-08-05T10:50:07.681Z" }, Ow = { pip: !0, poll: !0, chat: !0, stage: !0, theme: !0, plugin: !0, tracing: !0, internals: !0, recording: !0, livestream: !0, participant: !0, connectedMeetings: !0, devTools: { logs: !1 } };
function Bo(o, t) {
  var e = o.getValue("overrides");
  return e && e[t] ? e[t] : !1;
}
function Lw(o) {
  var t = o.baseURI;
  return t.includes("preprod.dyte") || t.includes("preprod.realtime") ? Uu.PREPROD : t.includes("devel.dyte") || t.includes("devel.realtime") ? Uu.DEVEL : Uu.PROD;
}
function zs(o) {
  var t = o.servicePrefix, e = o.baseURI;
  return "".concat(t, ".").concat(e);
}
function qf(o) {
  var t = o.getValue("baseURI");
  return { location: zs({ servicePrefix: "location", baseURI: t }), locationLegacy: zs({ servicePrefix: "location-legacy", baseURI: t }), daCollector: zs({
    servicePrefix: "da-collector",
    /**
    * FIXME(ravindra-dyte): Need to port da-collector to CF.
    * For now, using dyte one.
    * Remove the replace logic once realtime da-collector is up.
    * * */
    baseURI: t.replace("realtime.cloudflare.com", "dyte.io")
  }) };
}
var Nw = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="m16.242 2.932 4.826 4.826a2.75 2.75 0 0 1-.715 4.404l-4.87 2.435a.75.75 0 0 0-.374.426l-1.44 4.166a1.25 1.25 0 0 1-2.065.476L8.5 16.561 4.06 21H3v-1.06l4.44-4.44-3.105-3.104a1.25 1.25 0 0 1 .476-2.066l4.166-1.44a.75.75 0 0 0 .426-.373l2.435-4.87a2.75 2.75 0 0 1 4.405-.715Zm3.766 5.886-4.826-4.826a1.25 1.25 0 0 0-2.002.325l-2.435 4.871a2.25 2.25 0 0 1-1.278 1.12l-3.789 1.31 6.705 6.704 1.308-3.789a2.25 2.25 0 0 1 1.12-1.277l4.872-2.436a1.25 1.25 0 0 0 .325-2.002Z" fill="currentColor"/></svg>', $w = '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M4 12.02c0 1.06.2 2.1.6 3.08l.6 1.42c.22.55.64 1.01 1.17 1.29.27.14.56.21.86.21h2.55c.77 0 1.49-.41 1.87-1.08.5-.87 1.02-1.7 1.72-2.43l1.32-1.39c.44-.46.97-.84 1.49-1.23l.59-.45a.6.6 0 0 0 .23-.47c0-.75-.54-1.57-1.22-1.79a3.34 3.34 0 0 0-2.78.29V4.5a1.5 1.5 0 0 0-2.05-1.4 1.5 1.5 0 0 0-2.9 0A1.5 1.5 0 0 0 6 4.5v.09A1.5 1.5 0 0 0 4 6v6.02ZM8 4.5v4a.5.5 0 0 0 1 0v-5a.5.5 0 0 1 1 0v5a.5.5 0 0 0 1 0v-4a.5.5 0 0 1 1 0v6a.5.5 0 0 0 .85.37h.01c.22-.22.44-.44.72-.58.7-.35 2.22-.57 2.4.5l-.53.4c-.52.4-1.04.78-1.48 1.24l-1.33 1.38c-.75.79-1.31 1.7-1.85 2.63-.21.36-.6.58-1.01.58H7.23a.87.87 0 0 1-.4-.1 1.55 1.55 0 0 1-.71-.78l-.59-1.42a7.09 7.09 0 0 1-.53-2.7V6a.5.5 0 0 1 1 0v3.5a.5.5 0 0 0 1 0v-5a.5.5 0 0 1 1 0Z" fill="currentColor"></path></svg>', Rl = function(t) {
  if (t) {
    var e = t.startsWith("<svg");
    if (!e)
      return new Promise(function(i) {
        i(t);
      });
    var r = new Blob([t], { type: "image/svg+xml" }), n = new Image(), a = window.URL.createObjectURL(r);
    return new Promise(function(i, s) {
      n.onload = function() {
        i(n), window.URL.revokeObjectURL(a);
      }, n.onerror = function() {
        s(), window.URL.revokeObjectURL(a);
      }, n.src = a;
    });
  }
}, D = /* @__PURE__ */ function() {
  function o() {
    w(this, o), this.logsCache = [], this.logsProcessorTimer = void 0, this.tracingEnabled = !0, this.initialized = !1, this.logsProcessingInterval = 7e3, this.logExclusionList = ["message", "websocket/message", "roomMessage", "websocket/room-message", "websocket/room-legacy-mode", "chatMessage", "websocket/new-chat-message", "websocket/no-active-speaker", "websocket/selected-peers", "websocket/active-speaker", "ping", "websocket/new-consumer", "websocket/producer-score", "websocket/consumer-score", "websocket/plugin-event", "websocket/plugin-data", "websocket/plugin-internal-data"], this.meetingMetadata = {};
  }
  return P(o, [{ key: "logsEndpoint", get: function() {
    var e = za.getContext(this.meetingMetadata.peerId), r = zs({ servicePrefix: "api-silos", baseURI: e.getValue("baseURI") });
    return "https://".concat(r, "/otel/logs");
  } }, { key: "resetPeerId", value: function(e) {
    this.meetingMetadata.peerId = e;
  } }, { key: "init", value: function(e, r, n) {
    this.tracingEnabled = !0, this.initialized = !1, this.logsCache = [];
    var a = e.getValue("peerId");
    this.meetingMetadata = r, this.tracingEnabled = n, this.meetingMetadata.peerId = a, this.meetingMetadata.sdkVersion = e.getValue("sdkVersion");
    var i = navigator, s = i.RNDeviceInfoImpl;
    this.meetingMetadata.deviceInfo = navigator.isReactNative ? s == null ? void 0 : s.getDeviceInfo() : kr.getDeviceInfo(), this.meetingMetadata.visitedUrl = !navigator.isReactNative && typeof window != "undefined" && window.location.href, this.logsProcessorTimer = setInterval(this.processCachedLogs.bind(this), this.logsProcessingInterval), n && (this.initialized = !0);
  } }, {
    key: "injectContext",
    value: function(e) {
      var r, n = eo().replace(/-/g, "").substring(0, 16), a = (r = this.meetingMetadata.peerId) === null || r === void 0 ? void 0 : r.replace(/-/g, "");
      e.TRACEPARENT = "00-".concat(a, "-").concat(n, "-01");
    }
    /**
    * Adds event into the current span or the main span.
    * Event(or this method) is not a replacement for a log.
    * Tip :: Heavy objects should be logged.
    * Tip :: Light objects with `to the point` info should be added as events.
    * @param eventSeverity severity of the passed event to create better dashboards
    * @param eventName name of event in format
    *	fileName::functionName::eventName or functionName::eventName or whatever seems fit
    * @param metadata pass any information which makes sense for analytics or debugging
    * @param noCache optionally pass if log can be cached in FE or it has to be sent instantly
    * @returns nothing
    */
  }, { key: "addLogInCurrentSpan", value: function(e, r) {
    var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    n != null && n.error && Object.assign(n, { error: Ul(n.error) });
    var i = za.getContext(this.meetingMetadata.peerId);
    _w(i) && (Rw(n) ? console[e]("DyteInternalLogs:: ", e, r) : console[e]("DyteInternalLogs:: ", e, r, n));
    var s = Mw(i, e);
    if (s)
      try {
        var u = Vh(i, r, n, "metadata"), c = new Date(), d = N(N({ message: r, level: e }, u), {}, { loggedAt: c.toISOString(), loggedAtTzOffset: c.getTimezoneOffset() });
        a ? this.sendOtelLogsToNewRelic([d]) : this.logsCache.push(d);
      } catch (h) {
        this.addLogInCurrentSpan("error", "opentelemetry::addLogInCurrentSpan_failed", { error: Ul(h) });
      }
  } }, { key: "sendOtelLogsToNewRelic", value: function(e) {
    var r = this, n = za.getContext(this.meetingMetadata.peerId);
    fetch(this.logsEndpoint, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ meetingMetadata: Vh(n, "sendOtelLogsToNewRelic", this.meetingMetadata, "meetingMetadata"), serviceName: n.getValue("sdkName"), logs: e }) }).catch(function(a) {
      var i;
      r.addLogInCurrentSpan("error", "opentelemetry::sendOtelLogToNewRelic_failed", { error: Ul(a) }), (i = r.logsCache).push.apply(i, ke(e));
    });
  } }, { key: "processCachedLogs", value: function() {
    var e = this.logsCache.splice(0, 25);
    e != null && e.length && this.sendOtelLogsToNewRelic(e);
  } }, { key: "destruct", value: function() {
    clearInterval(this.logsProcessorTimer), this.processCachedLogs();
  } }], [{ key: "trace", value: function(e) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0;
    return function(n, a, i) {
      var s = i.value;
      return i.value = function() {
        for (var c, d = this === null || this === void 0 ? void 0 : this.telemetry, h = arguments.length, v = new Array(h), f = 0; f < h; f++)
          v[f] = arguments[f];
        if (!d || !d.initialized || navigator.isReactNative || !d.tracingEnabled || (c = za.getContext(d.meetingMetadata.peerId)) !== null && c !== void 0 && c.getValue("flagsmith").hasFeature(ve.SKIP_OTEL_TRACES))
          return s.apply(this, v);
        d.addLogInCurrentSpan("info", e, r);
        var g = performance.now(), k = s.apply(this, v);
        return Promise.resolve(k).then(function() {
          var y = performance.now();
          y - g > 10 && d.addLogInCurrentSpan("info", "".concat(e, "_timing"), { execTime: y - g, country: o.location.country });
        }).catch(function() {
          var y = performance.now();
          d.addLogInCurrentSpan("info", "".concat(e, "_timing"), { execTime: y - g });
        }), k;
      }, i;
    };
  } }]);
}();
D.location = { country: void 0 };
function Vw(o) {
  var t = N({}, o), e = /* @__PURE__ */ new Map(), r = function(d, h) {
    return e.has(d) || e.set(d, /* @__PURE__ */ new Set()), e.get(d).add(h), function() {
      var v;
      return (v = e.get(d)) === null || v === void 0 ? void 0 : v.delete(h);
    };
  }, n = function(d, h) {
    var v;
    (v = e.get(d)) === null || v === void 0 || v.delete(h);
  }, a = function(d) {
    var h;
    (h = e.get(d)) === null || h === void 0 || h.forEach(function(v) {
      try {
        v(t[d]);
      } catch (f) {
      }
    });
  }, i = function(d, h) {
    var v = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0;
    t[d] = h, v && a(d);
  }, s = function(d) {
    return t[d];
  }, u = function() {
    return t;
  };
  return { subscribe: r, unsubscribe: n, notify: a, setValue: i, getValue: s, getAllValues: u };
}
var Uw = /* @__PURE__ */ function() {
  function o() {
    w(this, o), this.contexts = /* @__PURE__ */ new Map(), this.mostRecentPeerId = null;
  }
  return P(o, [{
    key: "createContext",
    value: function(e, r) {
      if (this.contexts.has(e))
        return this.contexts.get(e);
      var n = new D(), a = new $f();
      this.contexts.set(e, Vw(r)), this.contexts.get(e).setValue("peerSessionStore", new uT(a));
      var i = new of();
      return i.setMaxListeners(50), this.contexts.get(e).setValue("logger", a), this.contexts.get(e).setValue("telemetry", n), this.contexts.get(e).setValue("callstats", i), this.contexts.get(e).setValue("flagsmith", Q0()), this.mostRecentPeerId = e, this.contexts.get(e);
    }
    /**
    * NOTE(ishita1805): Used to remap the context
    * when we regnerate a peerId during reconnection.
    */
  }, { key: "remapContext", value: function(e, r) {
    var n = r.getValue("peerId");
    n !== e && (r.setValue("peerId", e), this.mostRecentPeerId = e, this.contexts.set(e, r), this.contexts.delete(n));
  } }, {
    key: "getContext",
    value: function(e) {
      return this.contexts.get(e);
    }
    /**
    * @deprecated
    * This is currently done as a hack to expose the current peer Id.
    * However this would not work in future, if we want to support multiple ongoing meetings per page
    * This hack works for now, because a lot more components will fail, before this,
    * if someone decides to initialize multiple meetings on the same page.
    */
  }, { key: "getMostRecentPeerId", value: function() {
    return this.mostRecentPeerId;
  } }]);
}(), za = new Uw(), jw = { "00": "DyteClient", "01": "Controller", "02": "RoomNodeClient", "03": "HiveNodeClient", "04": "SocketService", "05": "Chat", "06": "Plugin", "07": "Polls", "08": "Meta", "09": "Preset", 10: "Recording", 11: "Self", 12: "Participant", 13: "Spotlight", 14: "Remote Request", 15: "Webinar", 16: "LocalMediaHandler", 17: "End-End Encryption", 18: "AI", 19: "Livestream", 20: "Stage" }, jl = {
  "0000": "Internal exception.",
  "0001": "Failed to initialize.",
  "0002": "Failed to join room.",
  "0003": "Failed to leave room.",
  "0004": "Invalid auth token",
  "0010": "Browser not supported",
  "0011": "HTTP Network Error",
  "0012": "Websocket Network Error",
  "0013": "Rate Limited",
  "0100": "Internal exception",
  "0101": "Permission denied",
  "0102": "Prerequisite module missing",
  "0200": "Internal exception.",
  "0300": "Internal exception",
  "0400": "Internal exception",
  "0404": "Missing prerequisites to establish a websocket connection",
  "0500": "Internal exception",
  "0501": "Permission denied.",
  "0502": "Invalid message body.",
  "0503": "Text Message is too large",
  "0504": "Message not found by the given id",
  "0505": "Action not permitted without joining room",
  "0506": "Message search is disabled",
  "0510": "Invalid channel name.",
  "0600": "Internal exception",
  "0601": "Permission denied.",
  "0602": "Auth token not set for plugin",
  "0603": "Iframe was not provided",
  "0700": "Internal exception",
  "0705": "Action not permitted without joining room",
  "0800": "Internal exception",
  "0801": "Permission denied",
  "0900": "Internal exception",
  "0904": "Could not load preset",
  1e3: "Internal exception",
  1001: "Permission denied",
  1004: "Could not find specified recording",
  1005: "Action not permitted in given recording state",
  1100: "Internal exception",
  1101: "Permission denied",
  1102: "Unsupported",
  1103: "Name cannot be empty",
  1104: "No device selected while calling meeting.self.setDevice",
  1105: "Action not permitted without joining room",
  1106: "Can't set currently used device",
  1200: "Internal exception",
  1201: "Permission denied",
  1202: "Invalid page number was requested",
  1203: "Invalid participant count per page was requested",
  1204: "No participants exists with the given UserIds",
  1205: "Action not permitted without joining room",
  1206: "Manual Subscription Mode was not ACTIVATED",
  1207: "Invalid view mode",
  1208: "Manual Subscription not enabled for organization",
  1209: "Broadcast message type must be a non-empty string",
  1300: "Internal exception",
  1400: "Internal exception",
  1402: "No existing remote requests",
  1403: "No peer exists with given id",
  1500: "Internal exception",
  1600: "Internal exception",
  1601: "Failed to get audio track",
  1602: "Failed to get video track",
  1603: "Incorrect device",
  1604: "Failed to change device",
  1605: "Failed to get audio & video track",
  1606: "No audio input devices are available",
  1607: "No video input devices are available",
  1608: "No audio output devices (speakers) are available",
  1609: "Failed to fetch list of media devices",
  1610: "No media track exists",
  1611: "Failed to unmute track",
  1612: "Failed to get screenshare tracks",
  1701: "Crypto error",
  // 18xx is for AI
  1800: "Internal exception",
  1801: "Can't fetch transcript file",
  // 19xx for livestream
  1900: "Internal exception",
  1901: "Permission denied.",
  1902: "Livestream that has not yet started, can't be stopped",
  2e3: "Internal exception",
  2001: "Permission denied",
  2002: "Unsupported",
  2003: "Stage is disabled",
  2004: "Method not implemented",
  2005: "Action not permitted without joining room",
  2006: "Action not permitted in current stage status",
  9900: "Internal exception"
};
Object.keys(jl).forEach(function(o) {
  jl[o] = "{".concat(jw[o.slice(0, 2)], "} ").concat(jl[o]);
});
var U = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0, i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    w(this, t), n = C(this, t, [e]), n.code = void 0, n.code = r, n.name = "DyteError", n.message = "[ERR".concat(n.code, "]: ").concat(jl[n.code], `
`).concat(n.message);
    try {
      var s = i && !!a;
      r && r.endsWith("00") && a && (s = !0), s && a.error("DyteError", { error: { message: n.message, name: n.name, code: r } });
      var u = za.getContext(za.getMostRecentPeerId());
      if (u) {
        var c = u.getValue("onError");
        try {
          c(n);
        } catch (d) {
        }
      }
      typeof window != "undefined" && window.dispatchEvent(new CustomEvent("dyteError", { detail: n }));
    } catch (d) {
    }
    return n;
  }
  return R(t, o), P(t);
}(/* @__PURE__ */ Zs(Error));
function Al(o, t, e, r) {
  if (r instanceof U)
    throw r;
  if (r instanceof t) {
    var n = new U(r.message, e);
    throw n.stack = r.stack, n;
  } else
    throw r;
}
function Uh(o, t, e) {
  if (!o.value) {
    var r = o.get, n = o.set;
    return r && (o.get = function() {
      try {
        return r.apply(this);
      } catch (i) {
        Al(this, t, e, i);
      }
    }), n && (o.set = function(i) {
      try {
        return n.apply(this, [i]);
      } catch (s) {
        Al(this, t, e, s);
      }
    }), o;
  }
  var a = o.value;
  return o.value = function() {
    var i = this;
    try {
      for (var s = arguments.length, u = new Array(s), c = 0; c < s; c++)
        u[c] = arguments[c];
      var d = a.apply(this, u);
      return d && d instanceof Promise ? d.catch(function(h) {
        Al(i, t, e, h);
      }) : d;
    } catch (h) {
      Al(this, t, e, h);
    }
  }, o;
}
function Fw(o, t) {
  return function(e, r, n) {
    if (n)
      return Uh(n, o, t);
    var a = Hn(Reflect.ownKeys(e.prototype).filter(function(d) {
      return d !== "constructor";
    })), i;
    try {
      for (a.s(); !(i = a.n()).done; ) {
        var s = i.value, u = Object.getOwnPropertyDescriptor(e.prototype, s), c = u.value instanceof Function || u.get instanceof Function || u.set instanceof Function;
        c && Object.defineProperty(e.prototype, s, Uh(u, o, t));
      }
    } catch (d) {
      a.e(d);
    } finally {
      a.f();
    }
  };
}
var vt = function(t) {
  return Fw(Error, t);
};
function Hw(o) {
  var t = 0, e, r;
  if (!o)
    return t;
  for (e = 0; e < o.length; e += 1)
    r = o.charCodeAt(e), t = (t << 5) - t + r, t |= 0;
  return Math.abs(t) % 100 + 1;
}
function Bw() {
  kr.isElectron() && window.dyteElectronGetDisplayMediaSource && (navigator.mediaDevices.getDisplayMedia = /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function o() {
    var t, e, r, n, a, i;
    return p().wrap(function(u) {
      for (; ; )
        switch (u.prev = u.next) {
          case 0:
            return u.next = 2, window.dyteElectronGetDisplayMediaSource({ types: ["window", "screen"] });
          case 2:
            if (e = u.sent, r = [], e && (Array.isArray(e) ? r = e : r = [e]), (t = r) !== null && t !== void 0 && t.length) {
              u.next = 7;
              break;
            }
            throw new Error("Couldn't find any media source for screen share.");
          case 7:
            return n = r.find(function(c) {
              var d;
              return (d = c.id) === null || d === void 0 ? void 0 : d.includes("screen");
            }), n = n != null ? n : r[0], a = { audio: !1, video: { mandatory: { chromeMediaSource: "desktop", chromeMediaSourceId: n.id } } }, u.next = 12, navigator.mediaDevices.getUserMedia(a);
          case 12:
            return i = u.sent, u.abrupt("return", i);
          case 14:
          case "end":
            return u.stop();
        }
    }, o);
  })));
}
var H = /* @__PURE__ */ function(o) {
  return o.NEW_PRODUCER = "NEW_PRODUCER", o.PRODUCER_TRACK_ENDED = "PRODUCER_TRACK_ENDED", o.ROOM_NODE_CONNECTION_ERROR = "ROOM_NODE_CONNECTION_ERROR", o.SOCKET_SERVICE_ROOM_JOINED = "SOCKET_SERVICE_ROOM_JOINED", o.SOCKET_SERVICE_RECONNECTED = "SOCKET_SERVICE_RECONNECTED", o.SOCKET_SERVICE_DISCONNECTED = "SOCKET_SERVICE_DISCONNECTED", o.SOCKET_SERVICE_FAILED = "SOCKET_SERVICE_FAILED", o.SOCKET_STATE_UPDATE = "SOCKET_STATE_UPDATE", o.ROOM_NODE_RECONNECTED = "ROOM_NODE_RECONNECTED", o.ROOM_NODE_DISCONNECTED = "ROOM_NODE_DISCONNECTED", o.ROOM_NODE_FAILED = "ROOM_NODE_FAILED", o.TRANSPORT_STATE_UPDATE = "TRANSPORT_STATE_UPDATE", o.PRODUCER_SCORE_UPDATE = "PRODUCER_SCORE_UPDATE", o.CONSUMER_SCORE_UPDATE = "CONSUMER_SCORE_UPDATE", o.PRODUCER_STATUS_UPDATE = "PRODUCER_STATUS_UPDATE", o.CONSUMER_STATUS_UPDATE = "CONSUMER_STATUS_UPDATE", o.LOW_PRODUCER_SCORE = "LOW_PRODUCER_SCORE", o.LOW_CONSUMER_SCORE = "LOW_CONSUMER_SCORE", o.MEDIA_PERMISSION_ERROR = "MEDIA_PERMISSION_ERROR", o.MEDIA_PERMISSION_UPDATE = "MEDIA_PERMISSION_UPDATE", o.WAITLISTED = "WAIT_LISTED", o.MESSAGE = "websocket/message", o.ROOM_MESSAGE = "websocket/room-message", o.PEER_JOINED_INTERNAL = "peer/joined-internal", o.PEER_CLOSED = "websocket/peer-closed", o.CONSUMER_CLOSED = "websocket/consumer-closed", o.CONSUMER_PAUSED = "websocket/consumer-paused", o.CONSUMER_RESUMED = "websocket/consumer-resumed", o.PRODUCER_CLOSED = "websocket/producer-closed", o.NEW_CONSUMER = "websocket/new-consumer", o.PRODUCER_SCORE = "websocket/producer-score", o.CONSUMER_SCORE = "websocket/consumer-score", o.PRODUCER_TOGGLE = "hive/producer-toggle", o.CONSUMER_TOGGLE = "hive/consumer-toggle", o.SELECTED_PEERS_DIFF = "hive/selected-peers-diff", o.UPDATE_ACTIVE = "media/update-active", o.RESET_PRODUCER_STATE = "hive/reset-producer-state", o.CF_TRANSPORT_STATE_CHANGED = "cf/transport-state-changed", o.CF_ROOM_REJOINING = "cf/room-rejoining", o.CF_ROOM_REJOIN_FAILED = "cf/room-rejoining-failed", o.CF_ROOM_REJOINED = "cf/room-rejoined", o.CF_TRANPSORT_RECONNECTING = "cf/transport-reconnecting", o.ROOM_STATE = "sockethub/room-state", o.PEER_DISPLAY_NAME_CHANGED = "hive/display-name-changed", o.GET_STAGE_REQUESTS = "GET_STAGE_REQUESTS", o.UPDATE_STAGE_REQUESTS = "UPDATE_STAGE_REQUESTS", o.KICK_PEER = "KICK_PEER", o.UPDATE_PEER_STAGE_STATUS = "UPDATE_PEER_STAGE_STATUS", o.JOIN_MEDIA_ROOM = "JOIN_MEDIA_ROOM", o.LEAVE_MEDIA_ROOM = "LEAVE_MEDIA_ROOM", o.PIP_HANGUP = "PIP_HANGUP", o.E2EE_ACTIVE_PRODUCER = "E2EE_ACTIVE_PRODUCER", o.E2EE_INACTIVE_PRODUCER = "E2EE_INACTIVE_PRODUCER", o.E2EE_ACTIVE_CONSUMER = "E2EE_ACTIVE_CONSUMER", o.E2EE_INACTIVE_CONSUMER = "E2EE_INACTIVE_CONSUMER", o.SOCKET_PEERS = "SOCKET_PEERS", o.UPDATE_PERMISSIONS = "UPDATE_PERMISSIONS", o.MAX_SPATIAL_LAYER_CHANGE = "MAX_SPATIAL_LAYER_CHANGE", o.MUTE_SELF = "MUTE_SELF", o.MUTE_SELF_VIDEO = "MUTE_SELF_VIDEO", o;
}(H || {}), Jo = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t), r.logger = void 0, r.logger = e, Ce(t, "setMaxListeners", r, 3)([25]), r;
  }
  return R(t, o), P(t, [{ key: "emit", value: function(r) {
    for (var n = arguments.length, a = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
      a[i - 1] = arguments[i];
    return Ce(t, "emit", this, 3)(["*", r].concat(a)), Ce(t, "emit", this, 3)([r].concat(a));
  } }, { key: "on", value: function(r, n) {
    try {
      var a = this.listenerCount(r);
      if (a > 25 && a % 25 === 0) {
        var i;
        (i = this.logger) === null || i === void 0 || i.warn("DyteEventEmitter::maxListenersExceeded", { eventListener: { eventName: r.toString(), listenerCount: this.listenerCount(r) } });
      }
    } catch (s) {
    }
    return Ce(t, "on", this, 3)([r, n]);
  } }, { key: "addListener", value: function(r, n) {
    try {
      var a = this.listenerCount(r);
      if (a > 25 && a % 25 === 0) {
        var i;
        (i = this.logger) === null || i === void 0 || i.warn("DyteEventEmitter::maxListenersExceeded", { eventListener: { eventName: r.toString(), listenerCount: this.listenerCount(r) } });
      }
    } catch (s) {
    }
    return Ce(t, "addListener", this, 3)([r, n]);
  } }, { key: "off", value: function(r, n) {
    return Ce(t, "off", this, 3)([r, n]);
  } }, { key: "once", value: function(r, n) {
    return Ce(t, "once", this, 3)([r, n]);
  } }, { key: "prependListener", value: function(r, n) {
    return Ce(t, "prependListener", this, 3)([r, n]);
  } }, { key: "prependOnceListener", value: function(r, n) {
    return Ce(t, "prependOnceListener", this, 3)([r, n]);
  } }, { key: "removeListener", value: function(r, n) {
    return Ce(t, "removeListener", this, 3)([r, n]);
  } }, { key: "removeAllListeners", value: function(r) {
    return Ce(t, "removeAllListeners", this, 3)([r]);
  } }, { key: "listeners", value: function(r) {
    return Ce(t, "listeners", this, 3)([r]);
  } }, { key: "listenerCount", value: function(r) {
    return Ce(t, "listenerCount", this, 3)([r]);
  } }]);
}(ht.EventEmitter), an = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t), r.logger = void 0, r.logger = e, Ce(t, "setMaxListeners", r, 3)([25]), r;
  }
  return R(t, o), P(t, [{ key: "emit", value: function(r) {
    for (var n = arguments.length, a = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
      a[i - 1] = arguments[i];
    return Ce(t, "emit", this, 3)(["*", r].concat(a)), Ce(t, "emit", this, 3)([r].concat(a));
  } }, { key: "on", value: function(r, n) {
    try {
      var a = this.listenerCount(r);
      if (a > 25 && a % 25 === 0) {
        var i;
        (i = this.logger) === null || i === void 0 || i.warn("DyteEventEmitter::maxListenersExceeded", { eventListener: { eventName: r.toString(), listenerCount: this.listenerCount(r) } });
      }
    } catch (s) {
    }
    return Ce(t, "on", this, 3)([r, n]);
  } }, { key: "addListener", value: function(r, n) {
    try {
      var a = this.listenerCount(r);
      if (a > 25 && a % 25 === 0) {
        var i;
        (i = this.logger) === null || i === void 0 || i.warn("DyteEventEmitter::maxListenersExceeded", { eventListener: { eventName: r.toString(), listenerCount: this.listenerCount(r) } });
      }
    } catch (s) {
    }
    return Ce(t, "addListener", this, 3)([r, n]);
  } }, { key: "off", value: function(r, n) {
    return Ce(t, "off", this, 3)([r, n]);
  } }, { key: "once", value: function(r, n) {
    return Ce(t, "once", this, 3)([r, n]);
  } }, { key: "prependListener", value: function(r, n) {
    return Ce(t, "prependListener", this, 3)([r, n]);
  } }, { key: "prependOnceListener", value: function(r, n) {
    return Ce(t, "prependOnceListener", this, 3)([r, n]);
  } }, { key: "removeListener", value: function(r, n) {
    return Ce(t, "removeListener", this, 3)([r, n]);
  } }, { key: "removeAllListeners", value: function(r) {
    return Ce(t, "removeAllListeners", this, 3)([r]);
  } }, { key: "listeners", value: function(r) {
    return Ce(t, "listeners", this, 3)([r]);
  } }, { key: "listenerCount", value: function(r) {
    return Ce(t, "listenerCount", this, 3)([r]);
  } }]);
}(ht.EventEmitter);
function qw(o) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2, e = o.replace(/[^\u00BF-\u1FFF\u2C00-\uD7FF\w\s]/g, ""), r = e.trim().split(/\s+/).slice(0, t);
  return r.map(function(n) {
    return n.charAt(0);
  }).join("").toUpperCase();
}
var jh = 1080, Fh = 1920, Gw = function(t, e, r, n, a, i) {
  var s = 0.5, u = 0.5, c = a, d = i, h = Math.min(r / c, n / d), v = c * h, f = d * h, g, k, y, b, S = 1;
  return v < r && (S = r / v), Math.abs(S - 1) < 1e-14 && f < n && (S = n / f), v *= S, f *= S, y = c / (v / r), b = d / (f / n), g = (c - y) * s, k = (d - b) * u, g < 0 && (g = 0), k < 0 && (k = 0), y > c && (y = c), b > d && (b = d), [g, k, y, b, t, e, r, n];
}, Jr = /* @__PURE__ */ E("canvas"), ma = /* @__PURE__ */ E("context"), rr = /* @__PURE__ */ E("videoContainer"), Kr = /* @__PURE__ */ E("video"), Se = /* @__PURE__ */ E("dimensions"), nt = /* @__PURE__ */ E("colors"), qt = /* @__PURE__ */ E("rafRequest"), vr = /* @__PURE__ */ E("sources"), Le = /* @__PURE__ */ E("self"), ps = /* @__PURE__ */ E("pinIcon"), hs = /* @__PURE__ */ E("handRaiseIcon"), Gt = /* @__PURE__ */ E("state"), vs = /* @__PURE__ */ E("initComplete"), Ww = /* @__PURE__ */ function(o) {
  function t(e, r, n, a) {
    var i;
    w(this, t);
    var s = e.getValue("logger");
    return i = C(this, t, [s]), Object.defineProperty(i, Jr, { writable: !0, value: void 0 }), Object.defineProperty(i, ma, { writable: !0, value: void 0 }), Object.defineProperty(i, rr, { writable: !0, value: void 0 }), Object.defineProperty(i, Kr, { writable: !0, value: void 0 }), Object.defineProperty(i, Se, { writable: !0, value: { height: jh, width: Fh } }), Object.defineProperty(i, nt, { writable: !0, value: { brand: "#2160FD", background: "#141414", text: "#000000", videoBackground: "#191919", textOnBrand: "#EEEEEE" } }), Object.defineProperty(i, qt, { writable: !0, value: void 0 }), Object.defineProperty(i, vr, { writable: !0, value: {} }), Object.defineProperty(i, Le, { writable: !0, value: void 0 }), Object.defineProperty(i, ps, { writable: !0, value: void 0 }), Object.defineProperty(i, hs, { writable: !0, value: void 0 }), Object.defineProperty(i, Gt, { writable: !0, value: void 0 }), Object.defineProperty(i, vs, { writable: !0, value: !1 }), i.cleanupEventListeners = function() {
      l(i, ma)[ma].unsubscribe("stageStatus", i.handlePipMediaControls), l(i, Le)[Le].removeListener("videoUpdate", i.onSelfVideoUpdateListener), l(i, Le)[Le].removeListener("audioUpdate", i.onSelfAudioUpdateListener), l(i, Le)[Le].removeListener("roomLeft", function() {
        return i.disable();
      });
    }, i.enablePipMediaControls = function() {
      i.mountAudioEvents(), i.mountVideoEvents();
    }, i.onSelfVideoUpdateListener = function(u) {
      var c = u.videoEnabled;
      i.updateMediaSession("CAMERA", c);
    }, i.onSelfAudioUpdateListener = function(u) {
      var c = u.audioEnabled;
      i.updateMediaSession("MIC", c);
    }, i.handlePipMediaControls = function(u) {
      u === "ON_STAGE" ? i.enablePipMediaControls() : i.unmountEvents();
    }, i.eventCallback = function(u) {
      u === "CAMERA" && (l(i, Le)[Le].videoEnabled ? l(i, Le)[Le].disableVideo() : l(i, Le)[Le].enableVideo(), i.emit("cameraToggled")), u === "MIC" && (l(i, Le)[Le].audioEnabled ? l(i, Le)[Le].disableAudio() : l(i, Le)[Le].enableAudio(), i.emit("micToggled")), u === "END" && (l(i, ma)[ma].getValue("peerSessionStore").emit(H.PIP_HANGUP), i.cleanupEventListeners(), i.emit("hangup"), i.cleanup());
    }, i.unmountEvents = function() {
      navigator.mediaSession === void 0 || navigator.mediaSession.setCameraActive === void 0 || (navigator.mediaSession.setActionHandler("togglemicrophone", void 0), navigator.mediaSession.setActionHandler("togglecamera", void 0));
    }, i.animate = function() {
      if (!i.isActive && l(i, Gt)[Gt] === "active") {
        i.disable(!0);
        return;
      }
      l(i, vr)[vr] !== void 0 && i.paintCanvas(), l(i, qt)[qt] !== void 0 && (l(i, qt)[qt] = requestAnimationFrame(function() {
        return i.animate();
      }));
    }, i.disable = function() {
      var u = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
      l(i, Gt)[Gt] = "idle", i.cleanupEventListeners(), cancelAnimationFrame(l(i, qt)[qt]), u !== !0 && document.body.removeChild(l(i, rr)[rr]), l(i, qt)[qt] = void 0, document.pictureInPictureElement && document.exitPictureInPicture();
    }, l(i, ma)[ma] = e, l(i, Gt)[Gt] = "idle", l(i, Le)[Le] = r, l(i, nt)[nt] = { brand: r.config.designTokens.colors.brand[500], background: r.config.designTokens.colors.background[1e3], text: r.config.designTokens.colors.text, videoBackground: r.config.designTokens.colors.videoBg, textOnBrand: r.config.designTokens.colors.textOnBrand }, n && i.setupIcon("pin", n), a && i.setupIcon("handRaise", a), i;
  }
  return R(t, o), P(t, [{ key: "setupIcon", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              u.t0 = a, u.next = u.t0 === "handRaise" ? 3 : u.t0 === "pin" ? 5 : 7;
              break;
            case 3:
              return l(this, hs)[hs] = i, u.abrupt("break", 7);
            case 5:
              return l(this, ps)[ps] = i, u.abrupt("break", 7);
            case 7:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "overrideIcon", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              u.t0 = a, u.next = u.t0 === "handRaise" ? 3 : u.t0 === "pin" ? 7 : 11;
              break;
            case 3:
              return u.next = 5, Rl(i);
            case 5:
              return l(this, hs)[hs] = u.sent, u.abrupt("break", 11);
            case 7:
              return u.next = 9, Rl(i);
            case 9:
              return l(this, ps)[ps] = u.sent, u.abrupt("break", 11);
            case 11:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "constructImage", value: function(r) {
    var n = new Image(), a = new Blob([r], { type: "image/svg+xml" }), i = window.URL.createObjectURL(a);
    return new Promise(function(s) {
      n.onload = function() {
        s(n), window.URL.revokeObjectURL(i);
      }, n.src = i;
    });
  } }, { key: "createVideoContainer", value: function() {
    l(this, rr)[rr] = document.createElement("div"), l(this, rr)[rr].style.width = "0.1px", l(this, rr)[rr].style.height = "0.1px", l(this, rr)[rr].style.overflow = "hidden", l(this, rr)[rr].style.position = "absolute", l(this, rr)[rr].style.bottom = "0", l(this, rr)[rr].style.right = "0", l(this, rr)[rr].style.opacity = "0", l(this, rr)[rr].appendChild(l(this, Kr)[Kr]);
  } }, { key: "setupEventListeners", value: function() {
    var r = this;
    l(this, ma)[ma].subscribe("stageStatus", this.handlePipMediaControls), l(this, Le)[Le].addListener("videoUpdate", this.onSelfVideoUpdateListener), l(this, Le)[Le].addListener("audioUpdate", this.onSelfAudioUpdateListener), l(this, Le)[Le].addListener("roomLeft", function() {
      return r.disable();
    });
  } }, { key: "createCanvas", value: function() {
    var r = document.createElement("canvas");
    r.height = l(this, Se)[Se].height, r.width = l(this, Se)[Se].width, l(this, Jr)[Jr] = r;
  } }, { key: "setupMediaSessionEvents", value: function() {
    var r = this;
    navigator.mediaSession === void 0 || navigator.mediaSession.setCameraActive === void 0 || (navigator.mediaSession.setActionHandler("hangup", function() {
      r.eventCallback("END");
    }), this.mountAudioEvents(), this.mountVideoEvents());
  } }, { key: "mountAudioEvents", value: function() {
    var r = this;
    navigator.mediaSession === void 0 || navigator.mediaSession.setMicrophoneActive === void 0 || l(this, Le)[Le].permissions.canProduceAudio && navigator.mediaSession.setActionHandler("togglemicrophone", function() {
      r.eventCallback("MIC");
    });
  } }, { key: "mountVideoEvents", value: function() {
    var r = this;
    navigator.mediaSession === void 0 || navigator.mediaSession.setCameraActive === void 0 || l(this, Le)[Le].permissions.canProduceVideo && navigator.mediaSession.setActionHandler("togglecamera", function() {
      r.eventCallback("CAMERA");
    });
  } }, { key: "getSources", value: function() {
    var r = Object.values(l(this, vr)[vr]), n = r.reduce(function(a, i) {
      return a[i.pinned ? "pinned" : "regular"].push(i), a;
    }, { pinned: [], regular: [] });
    return [].concat(ke(n.pinned), ke(n.regular));
  } }, { key: "drawEmptyTile", value: function(r, n, a, i) {
    if (l(this, Jr)[Jr] !== void 0) {
      var s = l(this, Jr)[Jr].getContext("2d"), u = l(this, Jr)[Jr].width, c = 0, d = 0, h = n - c * 2, v = a - c * 2, f = Math.floor(u / h), g = Math.floor(r / f), k = r % f, y = k * (h + c) + c, b = g * (v + c) + c, S = i != null ? i : {}, T = S.displayText, A = S.image;
      s.fillStyle = T || A ? l(this, nt)[nt].videoBackground : l(this, nt)[nt].background, s.strokeStyle = l(this, nt)[nt].brand, s.beginPath(), s.moveTo(y + d, b), s.arcTo(y + h, b, y + h, b + d, d), s.arcTo(y + h, b + v, y + h - d, b + v, d), s.arcTo(y, b + v, y, b + v - d, d), s.arcTo(y, b, y + d, b, d), s.closePath(), s.fill(), s.stroke();
      var L = h / 6, I = h / 2 + y, M = v / 2 + b;
      s.save(), (T || A) && (s.beginPath(), s.arc(I, M, L, 0, Math.PI * 2), s.fillStyle = l(this, nt)[nt].brand, s.fill(), A ? (s.clip(), s.drawImage(A, I - L, M - L, L * 2, L * 2), s.restore()) : T && (s.fillStyle = l(this, nt)[nt].textOnBrand, s.font = "".concat(L / 2, "px sans-serif"), s.textAlign = "center", s.textBaseline = "middle", s.fillText(T, I, M)), this.drawIcons(i, y, b, Math.max(h, v)));
    }
  } }, { key: "drawIcons", value: function(r, n, a, i) {
    var s = this, u = Math.min(Math.max(i * 0.15, 100), 200), c = u * 0.2, d = u * 0.2, h = n + c, v = a + c, f = function(k) {
      var y = l(s, Jr)[Jr].getContext("2d");
      y.save(), y.fillStyle = l(s, nt)[nt].background, y.beginPath(), y.moveTo(h + d, v), y.arcTo(h + u, v, h + u, v + d, d), y.arcTo(h + u, v + u, h + u - d, v + u, d), y.arcTo(h, v + u, h, v + u - d, d), y.arcTo(h, v, h + d, v, d), y.closePath(), y.fill(), typeof k == "string" ? (y.font = "".concat(u / 1.5, "px sans-serif"), y.fillStyle = l(s, nt)[nt].text, y.textAlign = "center", y.textBaseline = "top", y.fillText(k, u / 2 + h, v + c)) : y.drawImage(k, h + c, v + c, u - c * 2, u - c * 2), h += u + c, y.restore();
    };
    r.pinned && f(l(this, ps)[ps]), r.handRaised && f(l(this, hs)[hs]);
  } }, { key: "drawTile", value: function(r, n, a) {
    if (l(this, Jr)[Jr] !== void 0)
      for (var i = l(this, Jr)[Jr].getContext("2d"), s = this.getSources(), u = 0, c = 0; u < l(this, Se)[Se].height - 5; ) {
        for (var d = 0; d < l(this, Se)[Se].width - 5 && c < a; ) {
          var h;
          if ((h = s[c]) !== null && h !== void 0 && h.enabled) {
            var v, f = s[c].element, g = Gw(d, u, r, n, f.videoWidth, f.videoHeight), k = Me(g, 8), y = k[0], b = k[1], S = k[2], T = k[3], A = k[4], L = k[5], I = k[6], M = k[7], V = f == null || (v = f.classList) === null || v === void 0 ? void 0 : v.contains("mirror");
            V ? (i.save(), i.scale(-1, 1), i.drawImage(f, y, b, S, T, -1 * A, L, -1 * I, M), i.restore()) : i.drawImage(f, y, b, S, T, A, L, I, M), this.drawIcons(s[c], A, L, Math.max(I, M));
          } else
            this.drawEmptyTile(c, r, n, s[c]);
          c += 1, d += r;
        }
        u += n;
      }
  } }, { key: "calcGridElemSize", value: function(r) {
    switch (r) {
      case 0:
      case 1:
        return [l(this, Se)[Se].width, l(this, Se)[Se].height];
      case 2:
        return [Math.floor(l(this, Se)[Se].width / 2), l(this, Se)[Se].height];
      case 3:
      case 4:
        return [Math.floor(l(this, Se)[Se].width / 2), Math.floor(l(this, Se)[Se].height / 2)];
      case 5:
      case 6:
        return [Math.floor(l(this, Se)[Se].width / 3), Math.floor(l(this, Se)[Se].height / 2)];
      case 7:
      case 8:
      case 9:
        return [Math.floor(l(this, Se)[Se].width / 3), Math.floor(l(this, Se)[Se].height / 3)];
      default:
        return [Math.floor(l(this, Se)[Se].width / 3), Math.floor(l(this, Se)[Se].height / 2)];
    }
  } }, { key: "paintCanvas", value: function() {
    var r = this.getSources().length;
    r !== 1 && (r = r % 2 > 0 ? r + 1 : r);
    var n = this.calcGridElemSize(r), a = Me(n, 2), i = a[0], s = a[1];
    this.drawTile(i, s, r);
  } }, { key: "isSupported", value: function() {
    var r;
    return !!window.chrome && document.pictureInPictureEnabled && ((r = l(this, Le)[Le].config) === null || r === void 0 ? void 0 : r.viewType) !== "LIVESTREAM";
  } }, { key: "isActive", get: function() {
    return document.pictureInPictureElement !== null;
  } }, {
    key: "cleanup",
    value: function() {
      if (l(this, vs)[vs] = !1, this.isSupported() && document.exitPictureInPicture !== void 0 && document.pictureInPictureElement !== null && document.exitPictureInPicture(), l(this, rr)[rr])
        try {
          document.body.removeChild(l(this, rr)[rr]);
        } catch (r) {
        }
      this.removeAllSources(), l(this, Jr)[Jr] = void 0, l(this, Kr)[Kr] = void 0, l(this, qt)[qt] = void 0;
    }
    /**
    * Initialize PiP and prepare sources
    */
  }, { key: "init", value: function() {
    var r = this, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, a = n.height, i = n.width;
    if (!this.isSupported())
      throw this.logger.error("DytePip.unsupported"), new Error("Picture-in-picture is not available in this environment");
    if (!l(this, vs)[vs]) {
      l(this, vs)[vs] = !0, this.createCanvas(), this.setupMediaSessionEvents();
      var s = document.createElement("video");
      l(this, Se)[Se] = { height: a != null ? a : jh, width: i != null ? i : Fh }, s.height = l(this, Se)[Se].height, s.width = l(this, Se)[Se].width, s.autoplay = !0, s.muted = !0, s.srcObject = l(this, Jr)[Jr].captureStream(24), l(this, Kr)[Kr] = s, l(this, Kr)[Kr].onloadedmetadata = function() {
        try {
          r.emit("pipStarted"), l(r, Kr)[Kr].onleavepictureinpicture = function() {
            r.emit("pipEnded");
          };
        } catch (u) {
          r.emit("pipEnded");
        }
      }, this.createVideoContainer(), this.paintCanvas();
    }
  } }, { key: "updateMediaSession", value: function(r, n) {
    navigator.mediaSession !== void 0 && (r === "CAMERA" && navigator.mediaSession.setCameraActive !== void 0 && navigator.mediaSession.setCameraActive(n), r === "MIC" && navigator.mediaSession.setMicrophoneActive !== void 0 && navigator.mediaSession.setMicrophoneActive(n));
  } }, { key: "enableSource", value: function(r) {
    l(this, vr)[vr][r] !== void 0 && (l(this, vr)[vr][r].enabled = !0);
  } }, { key: "disableSource", value: function(r) {
    l(this, vr)[vr][r] !== void 0 && (l(this, vr)[vr][r].enabled = !1);
  } }, {
    key: "generateAvatar",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
        var s = this, u, c, d;
        return p().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                if (i) {
                  v.next = 2;
                  break;
                }
                return v.abrupt("return");
              case 2:
                return u = new Image(), v.prev = 3, v.next = 6, fetch(i);
              case 6:
                return v.next = 8, v.sent.blob();
              case 8:
                c = v.sent, d = window.URL.createObjectURL(c), u.onload = function() {
                  s.updateSource(a, { image: u }), window.URL.revokeObjectURL(d);
                }, u.src = d, v.next = 17;
                break;
              case 14:
                v.prev = 14, v.t0 = v.catch(3), this.logger.error("DytePip::GenerateAvatar", { error: v.t0 });
              case 17:
              case "end":
                return v.stop();
            }
        }, n, this, [[3, 14]]);
      }));
      function r(n, a) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Add a video source from the participant grid
    * @param {string} id id for the source (ex. participant id)
    * @param {HTMLVideoElement} element HTMLVideoElement for the video source
    * @param {boolean} enabled if source is enabled
    * @param {?string} [displayText] two character display text
    */
  }, {
    key: "addSource",
    value: function(r, n, a) {
      var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1, s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0, u = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : void 0, c = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : !1;
      this.logger.debug("DytePIP::AddSource", { pip: { id: r, handRaised: c } }), l(this, vr)[vr][r] = { id: r, element: n, enabled: a, pinned: i, displayText: s ? qw(s) : void 0, imageUrl: u, handRaised: c }, u && this.generateAvatar(r, u);
    }
    /** Update a video source */
  }, {
    key: "updateSource",
    value: function(r, n) {
      this.logger.info("DytePIP::UpdateSource", { pip: { id: r, handRaised: n.handRaised } });
      var a = l(this, vr)[vr][r];
      a && (l(this, vr)[vr][r] = N(N({}, a), n));
    }
    /**
    * Remove the video source for the participant
    * @param id id for the source (ex. participant id)
    */
  }, {
    key: "removeSource",
    value: function(r) {
      delete l(this, vr)[vr][r];
    }
    /**
    * Remove the pinned source
    * @param id id for the source (ex. participant id)
    */
  }, {
    key: "removePinnedSource",
    value: function() {
      var r = this, n = Object.values(l(this, vr)[vr]);
      n.forEach(function(a) {
        a.pinned && r.removeSource(a.id);
      });
    }
    /**
    * Remove all sources
    */
  }, {
    key: "removeAllSources",
    value: function() {
      l(this, vr)[vr] = {};
    }
    /**
    * Enable PiP
    */
  }, { key: "enable", value: function() {
    var r = this;
    l(this, Gt)[Gt] = "activating", this.setupEventListeners(), this.updateMediaSession("CAMERA", l(this, Le)[Le].videoEnabled), this.updateMediaSession("MIC", l(this, Le)[Le].audioEnabled), document.body.appendChild(l(this, rr)[rr]), l(this, qt)[qt] = requestAnimationFrame(function() {
      return r.animate();
    }), l(this, Kr)[Kr].onloadedmetadata = function() {
      l(r, Kr)[Kr].requestPictureInPicture().then(function() {
        l(r, Gt)[Gt] = "active";
      });
    }, l(this, Kr)[Kr].readyState === 4 && l(this, Kr)[Kr].requestPictureInPicture().then(function() {
      l(r, Gt)[Gt] = "active";
    });
  } }], [{ key: "_init", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return d.prev = 0, d.next = 3, Rl(Nw);
            case 3:
              return s = d.sent, d.next = 6, Rl($w);
            case 6:
              u = d.sent, d.next = 11;
              break;
            case 9:
              d.prev = 9, d.t0 = d.catch(0);
            case 11:
              return d.abrupt("return", new t(a, i, s, u));
            case 12:
            case "end":
              return d.stop();
          }
      }, n, null, [[0, 9]]);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(an), Qa;
(function(o) {
  o[o.PUBLISHER = 0] = "PUBLISHER", o[o.SUBSCRIBER = 1] = "SUBSCRIBER";
})(Qa || (Qa = {}));
var va;
(function(o) {
  o[o.AUDIO = 0] = "AUDIO", o[o.VIDEO = 1] = "VIDEO";
})(va || (va = {}));
var Jw = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.Codec", [{
      no: 1,
      name: "channels",
      kind: "scalar",
      opt: !0,
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "clock_rate",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "mime_type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "sdp_fmtp_line",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "payload_type",
      kind: "scalar",
      opt: !0,
      T: 13
      /*ScalarType.UINT32*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Gf = new Jw(), Kw = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.HeaderExtension", [{
      no: 1,
      name: "direction",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "uri",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), zw = new Kw(), Yw = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.Fingerprint", [{
      no: 1,
      name: "algorithm",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "value",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new Yw();
var Qw = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.SessionDescription", [{ no: 1, name: "target", kind: "enum", T: function() {
      return ["media.Target", Qa];
    } }, {
      no: 2,
      name: "type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "sdp",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Gn = new Qw(), Xw = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.ProducerPayload", [{
      no: 1,
      name: "kind",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "paused",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "screen_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "msid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "app_data",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "mime_type",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Zw = new Xw(), xw = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.CreateTransportRequest", [{
      no: 1,
      name: "consuming",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "force_tcp",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 3, name: "description", kind: "message", T: function() {
      return Gn;
    } }, {
      no: 4,
      name: "private_ice",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 5, name: "producers", kind: "message", repeat: 1, T: function() {
      return Zw;
    } }]]);
  }
  return R(t, o), P(t);
}(_), eP = new xw(), rP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.AudioActivityRequest", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "energy",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "silent",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), tP = new rP(), nP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.CreateTransportResponse", [{
      no: 1,
      name: "transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return Gn;
    } }, {
      no: 3,
      name: "transcription_enabled",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "producer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Wf = new nP(), aP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.RenegotiateRequest", [{
      no: 1,
      name: "transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return Gn;
    } }]]);
  }
  return R(t, o), P(t);
}(_), iP = new aP(), sP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.RenegotiateResponse", [{
      no: 1,
      name: "transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return Gn;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new sP();
var oP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.NestedScore", [{
      no: 1,
      name: "encoding_idx",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "rid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "score",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 4,
      name: "ssrc",
      kind: "scalar",
      T: 3,
      L: 0
      /*LongType.BIGINT*/
    }]]);
  }
  return R(t, o), P(t);
}(_), uP = new oP(), lP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.ProducerTrack", [{
      no: 1,
      name: "track_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "stream_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), cP = new lP(), dP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.ProducerEntry", [{
      no: 1,
      name: "producing_transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new dP();
var pP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.ConsumerEntry", [{
      no: 1,
      name: "consuming_transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "consumer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new pP();
var hP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.ProducerState", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "kind", kind: "enum", T: function() {
      return ["media.ProducerKind", va];
    } }, {
      no: 3,
      name: "pause",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "screen_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "app_data",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "producing_transport_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "mime_type",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 8, name: "codec", kind: "message", T: function() {
      return Gf;
    } }]]);
  }
  return R(t, o), P(t);
}(_), ll = new hP(), vP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.ConsumerState", [{
      no: 1,
      name: "consumer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return ll;
    } }, { no: 3, name: "producer_track", kind: "message", T: function() {
      return cP;
    } }, {
      no: 4,
      name: "error_code",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), fP = new vP(), gP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.ProducerIdToConsumerMap", [{ no: 1, name: "map", kind: "map", K: 9, V: { kind: "message", T: function() {
      return fP;
    } } }]]);
  }
  return R(t, o), P(t);
}(_), Jf = new gP(), mP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.PeerRtpCapabilitites", [{ no: 1, name: "sender", kind: "message", T: function() {
      return Bh;
    } }, { no: 2, name: "receiver", kind: "message", T: function() {
      return Bh;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Kf = new mP(), yP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.RtpCapability", [{ no: 1, name: "codecs", kind: "message", repeat: 1, T: function() {
      return Gf;
    } }, { no: 2, name: "header_extensions", kind: "message", repeat: 1, T: function() {
      return zw;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Hh = new yP(), kP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.RtpCapabilitites", [{ no: 1, name: "audio", kind: "message", T: function() {
      return Hh;
    } }, { no: 2, name: "video", kind: "message", T: function() {
      return Hh;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Bh = new kP(), bP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.PreferredCodec", [{
      no: 1,
      name: "audio",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "video",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), TP = new bP(), wP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.Simulcast", [{
      no: 1,
      name: "preferred_rid",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "priority_ordering",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "rid_not_available",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), zf = new wP(), PP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.GeoLocation", [{
      no: 1,
      name: "latitude",
      kind: "scalar",
      T: 2
      /*ScalarType.FLOAT*/
    }, {
      no: 2,
      name: "longitude",
      kind: "scalar",
      T: 2
      /*ScalarType.FLOAT*/
    }, {
      no: 3,
      name: "region",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), SP = new PP(), EP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerJoinRequest", [{
      no: 1,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "prejoined",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "preset",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 6,
      name: "user_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "organization_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 8, name: "location", kind: "message", T: function() {
      return SP;
    } }, { no: 9, name: "capabilities", kind: "message", T: function() {
      return Kf;
    } }]]);
  }
  return R(t, o), P(t);
}(_), CP = new EP(), RP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerJoinCompleteRequest", []]);
  }
  return R(t, o), P(t);
}(_), AP = new RP(), IP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerLeaveRequest", [{
      no: 1,
      name: "close_room",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), _P = new IP(), MP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumeMultipleProducerRequest", [{
      no: 1,
      name: "producer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "paused",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new MP();
var DP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumePeerRequest", [{
      no: 1,
      name: "producing_peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "paused",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "producer_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 4, name: "preferred_codec", kind: "message", T: function() {
      return TP;
    } }, {
      no: 5,
      name: "producing_transport_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 6, name: "simulcast", kind: "message", T: function() {
      return zf;
    } }]]);
  }
  return R(t, o), P(t);
}(_), OP = new DP(), LP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumePeersRequest", [{ no: 1, name: "requests", kind: "message", repeat: 1, T: function() {
      return OP;
    } }, {
      no: 2,
      name: "consuming_transport_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), NP = new LP(), $P = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.UpdateConsumerSimulcastConfigRequest", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "simulcast", kind: "message", T: function() {
      return zf;
    } }, {
      no: 3,
      name: "producing_transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "mid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), VP = new $P(), UP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.UpdateConsumersSimulcastConfigRequest", [{ no: 1, name: "requests", kind: "message", repeat: 1, T: function() {
      return VP;
    } }, {
      no: 2,
      name: "consuming_transport_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), jP = new UP(), FP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ProducerCreateRequest", [{
      no: 1,
      name: "kind",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "paused",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "screen_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 4, name: "description", kind: "message", T: function() {
      return Gn;
    } }, {
      no: 5,
      name: "msid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "app_data",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "mime_type",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 8,
      name: "producing_transport_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), HP = new FP(), BP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.SelectedPeersRequest", []]);
  }
  return R(t, o), P(t);
}(_);
new BP();
var qP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.GlobalPeerPinningRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), GP = new qP(), WP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ProducerToggleRequest", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "pause",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Il = new WP(), JP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumerToggleRequest", [{
      no: 1,
      name: "consumer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "pause",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new JP();
var KP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ProducerCloseRequest", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return Gn;
    } }, {
      no: 3,
      name: "producing_transport_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), zP = new KP(), YP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumerCloseRequest", [{
      no: 1,
      name: "consumer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return Gn;
    } }, {
      no: 3,
      name: "consuming_transport_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), QP = new YP(), XP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.KickPeerRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new XP();
var ZP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.KickAllPeersRequest", [{
      no: 1,
      name: "propagate_kick_across_rooms",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Yf = new ZP(), xP = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerDisplayNameEditRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), eS = new xP(), rS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.HostMediaControlForPeerRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "audio",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "video",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "scree_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), tS = new rS(), nS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.HostMediaControlForAllPeerRequest", [{
      no: 1,
      name: "audio",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "video",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "screen_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), aS = new nS(), iS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.GetRoomStateResponse", [{
      no: 1,
      name: "display_title",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "locked_mode",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "room_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "current_peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "is_recording",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "recorder_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 8,
      name: "pinned_peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), sS = new iS(), oS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ErrorResponse", [{
      no: 1,
      name: "error_message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "event_id",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]]);
  }
  return R(t, o), P(t);
}(_), uS = new oS(), lS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.EmptyResponse", []]);
  }
  return R(t, o), P(t);
}(_);
new lS();
var cS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.RoomParticipants", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_states", kind: "message", repeat: 1, T: function() {
      return ll;
    } }, {
      no: 3,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "user_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 5, name: "capabilities", kind: "message", T: function() {
      return Kf;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Qf = new cS(), dS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.SelectedPeersResponse", [{
      no: 1,
      name: "audio_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "compulsory_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Id = new dS(), pS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.SelectedPeersDiffEntry", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "priority",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]]);
  }
  return R(t, o), P(t);
}(_), hS = new pS(), vS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.SelectedPeersDiffResponse", [{ no: 1, name: "entries", kind: "message", repeat: 1, T: function() {
      return hS;
    } }]]);
  }
  return R(t, o), P(t);
}(_), qh = new vS(), fS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerJoinResponse", []]);
  }
  return R(t, o), P(t);
}(_);
new fS();
var gS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerJoinCompleteResponse", [{ no: 1, name: "room_state", kind: "message", T: function() {
      return sS;
    } }, { no: 2, name: "participants", kind: "message", repeat: 1, T: function() {
      return Qf;
    } }, { no: 3, name: "selected_peers", kind: "message", T: function() {
      return Id;
    } }, {
      no: 4,
      name: "max_preferred_streams",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]]);
  }
  return R(t, o), P(t);
}(_), _d = new gS(), mS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerLeaveResponse", [{
      no: 1,
      name: "closed",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), yS = new mS(), kS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumeMultipleProducerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 2, name: "consumer_ids_map", kind: "message", T: function() {
      return Jf;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new kS();
var bS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumePeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 2, name: "consumer_ids_map", kind: "message", T: function() {
      return Jf;
    } }, { no: 3, name: "description", kind: "message", T: function() {
      return Gn;
    } }]]);
  }
  return R(t, o), P(t);
}(_), TS = new bS(), wS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ProducerCreateResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 4, name: "description", kind: "message", T: function() {
      return Gn;
    } }]]);
  }
  return R(t, o), P(t);
}(_), PS = new wS(), SS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ProducerScoreResponse", [{
      no: 1,
      name: "responseid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "score", kind: "message", T: function() {
      return uP;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new SS();
var ES = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ActiveSpeakerResponse", [{
      no: 1,
      name: "responsepeer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "volume",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new ES();
var CS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.NoActiveSpeakerResponse", []]);
  }
  return R(t, o), P(t);
}(_);
new CS();
var RS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ProducerToggleResponse", []]);
  }
  return R(t, o), P(t);
}(_);
new RS();
var AS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumerToggleResponse", []]);
  }
  return R(t, o), P(t);
}(_);
new AS();
var IS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ProducerClosingResponse", [{ no: 1, name: "description", kind: "message", T: function() {
      return Gn;
    } }]]);
  }
  return R(t, o), P(t);
}(_), _S = new IS(), MS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.ConsumerClosingResponse", [{ no: 1, name: "description", kind: "message", T: function() {
      return Gn;
    } }]]);
  }
  return R(t, o), P(t);
}(_), DS = new MS(), OS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.GlobalPeerPinningResponse", []]);
  }
  return R(t, o), P(t);
}(_);
new OS();
var LS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.KickPeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new LS();
var NS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.KickAllPeersResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new NS();
var $S = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.HostMediaControlForPeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), VS = new $S(), US = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.HostMediaControlForAllPeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), jS = new US(), FS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerDisplayNameEditResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), HS = new FS(), BS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerJoinBroadcastResponse", [{ no: 1, name: "participant", kind: "message", T: function() {
      return Qf;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Gh = new BS(), qS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.TrackSubscriptionKind", [{
      no: 1,
      name: "audio",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "video",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Wh = new qS(), GS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.TrackSubscription", [{
      no: 1,
      name: "label",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "webcam", kind: "message", T: function() {
      return Wh;
    } }, { no: 3, name: "screenshare", kind: "message", T: function() {
      return Wh;
    } }]]);
  }
  return R(t, o), P(t);
}(_), WS = new GS(), JS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerProducingTransportCreateBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "transport_details", kind: "message", T: function() {
      return Wf;
    } }, { no: 3, name: "track_subscriptions", kind: "message", repeat: 1, T: function() {
      return WS;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new JS();
var KS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerProducerCreateBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return ll;
    } }]]);
  }
  return R(t, o), P(t);
}(_), zS = new KS(), YS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerProducerToggleBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return ll;
    } }, {
      no: 3,
      name: "initiator_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Jh = new YS(), QS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerProducerCloseBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return ll;
    } }]]);
  }
  return R(t, o), P(t);
}(_), XS = new QS(), ZS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerLeaveBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Md = new ZS(), xS = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.GlobalPeerPinningBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Kh = new xS(), eE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.GlobalPeerUnPinningBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new eE();
var rE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.RecordingStartedBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new rE();
var tE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.RecordingStoppedBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new tE();
var nE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerDisplayNameEditBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new nE();
var aE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.PeerPingRequestBroadcastResponse", [{
      no: 1,
      name: "password",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new aE();
var iE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["media.edge.MediaRoomTerminationBroadcastResponse", [{
      no: 1,
      name: "reason",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new iE();
var sE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.ai.MeetingTranscript", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "transcript",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "is_partial",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Wc = new sE(), oE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.api.BaseSocketHubMessage", [{
      no: 1,
      name: "event",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "room_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "payload",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 7,
      name: "error",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 8,
      name: "sid",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new oE();
var uE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.api.ErrorMessage", [{
      no: 1,
      name: "code",
      kind: "scalar",
      opt: !0,
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), lE = new uE(), Ys;
(function(o) {
  o[o.BROWSER = 0] = "BROWSER", o[o.TRACK = 1] = "TRACK", o[o.COMPOSITE = 2] = "COMPOSITE";
})(Ys || (Ys = {}));
var Ga;
(function(o) {
  o[o.UNSPECIFIED = 0] = "UNSPECIFIED", o[o.ON_STAGE = 1] = "ON_STAGE", o[o.APPROVED_STAGE = 2] = "APPROVED_STAGE", o[o.REQUESTED_STAGE = 3] = "REQUESTED_STAGE", o[o.OFF_STAGE = 4] = "OFF_STAGE";
})(Ga || (Ga = {}));
var Dd;
(function(o) {
  o[o.NONE = 0] = "NONE", o[o.RECORDER = 1] = "RECORDER", o[o.LIVESTREAMER = 2] = "LIVESTREAMER";
})(Dd || (Dd = {}));
var Od;
(function(o) {
  o[o.PEERS = 0] = "PEERS", o[o.ROOMS = 1] = "ROOMS";
})(Od || (Od = {}));
var oc;
(function(o) {
  o[o.HIVE = 0] = "HIVE", o[o.CHAT = 1] = "CHAT", o[o.PING = 2] = "PING";
})(oc || (oc = {}));
var cE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.PeerFlags", [{
      no: 1,
      name: "preset_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "recorder_type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "hidden_participant",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), dE = new cE(), pE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.Peer", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 4, name: "stage_type", kind: "enum", opt: !0, T: function() {
      return ["socket.room.StageType", Ga, "STAGE_TYPE_"];
    } }, {
      no: 5,
      name: "custom_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "preset_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 8,
      name: "waitlisted",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 9, name: "flags", kind: "message", T: function() {
      return dE;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Ec = new pE(), hE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.PeerInfoResponse", [{ no: 1, name: "peer", kind: "message", T: function() {
      return Ec;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Co = new hE(), vE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.PeerStatusUpdate", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "stage_type", kind: "enum", opt: !0, T: function() {
      return ["socket.room.StageType", Ga, "STAGE_TYPE_"];
    } }]]);
  }
  return R(t, o), P(t);
}(_), zh = new vE(), fE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.RoomPeersInfoRequest", [{
      no: 1,
      name: "seach_query",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "limit",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "offset",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]]);
  }
  return R(t, o), P(t);
}(_), gE = new fE(), mE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.RoomPeersInfoResponse", [{ no: 1, name: "peers", kind: "message", repeat: 1, T: function() {
      return Ec;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Jc = new mE(), yE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.RoomPeerCountResponse", [{
      no: 1,
      name: "count",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Yh = new yE(), kE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.Room", [{
      no: 1,
      name: "room_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "created_at",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, { no: 5, name: "active_recordings", kind: "message", repeat: 1, T: function() {
      return TE;
    } }, {
      no: 6,
      name: "room_uuid",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Xf = new kE(), bE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.ActiveRecording", [{
      no: 1,
      name: "recording_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "recording_type", kind: "enum", T: function() {
      return ["common.RecordingType", Ys];
    } }, {
      no: 3,
      name: "recording_status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), TE = new bE(), wE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.RoomInfoResponse", [{ no: 1, name: "room", kind: "message", T: function() {
      return Xf;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Qh = new wE(), PE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.GetPeerInfoRequest", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Zf = new PE(), SE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.UpdatePeerInfoRequest", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new SE();
var EE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.JoinRoomRequest", [{ no: 1, name: "peer", kind: "message", T: function() {
      return Ec;
    } }, {
      no: 3,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "organization_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "use_hive",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 6,
      name: "preset",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }, { no: 7, name: "capabilities", kind: "enum", repeat: 1, T: function() {
      return ["socket.room.Capabilities", oc, "CAPABILITIES_"];
    } }, {
      no: 8,
      name: "timestamp",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]]);
  }
  return R(t, o), P(t);
}(_), CE = new EE(), RE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.LeaveRoomRequest", [{ no: 1, name: "peer", kind: "message", T: function() {
      return Ec;
    } }, {
      no: 2,
      name: "timestamp",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]]);
  }
  return R(t, o), P(t);
}(_), AE = new RE(), IE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.UpdateRoomInfoRequest", [{ no: 1, name: "room", kind: "message", T: function() {
      return Xf;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new IE();
var _E = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.GetConnectedRoomsDumpRequest", []]);
  }
  return R(t, o), P(t);
}(_);
new _E();
var ME = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.ServiceError", [{
      no: 1,
      name: "message",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "code",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Fp = new ME(), DE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.ConnectedMeetingPeer", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "custom_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "preset_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), OE = new DE(), LE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.ConnectedMeetingDump", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "participants", kind: "message", repeat: 1, T: function() {
      return OE;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Xh = new LE(), NE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.GetConnectedRoomsDumpResponse", [{ no: 1, name: "parent_meeting", kind: "message", T: function() {
      return Xh;
    } }, { no: 2, name: "meetings", kind: "message", repeat: 1, T: function() {
      return Xh;
    } }]]);
  }
  return R(t, o), P(t);
}(_), $E = new NE(), VE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.CreateRoomRequestPayload", [{
      no: 1,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), UE = new VE(), jE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.CreateConnectedRoomsRequest", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return UE;
    } }]]);
  }
  return R(t, o), P(t);
}(_), FE = new jE(), HE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.CreateRoomResponsePayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "error", kind: "message", T: function() {
      return Fp;
    } }]]);
  }
  return R(t, o), P(t);
}(_), BE = new HE(), qE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.CreateConnectedRoomsResponse", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return BE;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Zh = new qE(), GE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.UpdateRoomRequestPayload", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), WE = new GE(), JE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.UpdateConnectedRoomsRequest", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return WE;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new JE();
var KE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.DisableRoomPayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), zE = new KE(), YE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.DisableConnectedRoomsRequest", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return zE;
    } }]]);
  }
  return R(t, o), P(t);
}(_), QE = new YE(), XE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.DisableConnectedRoomsResponse", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return eC;
    } }]]);
  }
  return R(t, o), P(t);
}(_), ZE = new XE(), xE = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.DisableConnectedRoomPayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "status",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 4, name: "error", kind: "message", T: function() {
      return Fp;
    } }]]);
  }
  return R(t, o), P(t);
}(_), eC = new xE(), rC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.MovePeerPayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "preset_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), tC = new rC(), nC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.MovePeersBetweenRoomsRequest", [{
      no: 1,
      name: "source_meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "destination_meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "participants", kind: "message", repeat: 1, T: function() {
      return tC;
    } }]]);
  }
  return R(t, o), P(t);
}(_), aC = new nC(), iC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.MovedPeer", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "custom_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "error", kind: "message", T: function() {
      return Fp;
    } }]]);
  }
  return R(t, o), P(t);
}(_), xf = new iC(), sC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.MovePeersBetweenRoomsResponse", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return xf;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new sC();
var oC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.TransferPeer", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "auth_token",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), uC = new oC(), lC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.GetAllAddedParticipantsResponse", [{ no: 1, name: "participants", kind: "message", repeat: 1, T: function() {
      return pC;
    } }]]);
  }
  return R(t, o), P(t);
}(_), cC = new lC(), dC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.AddedParticipant", [{
      no: 1,
      name: "id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "picture",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "custom_participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), pC = new dC(), hC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.RemoveParticipantsRequest", [{
      no: 1,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), eg = new hC(), vC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.BroadcastMessage", [{
      no: 1,
      name: "type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 3,
      name: "timestamp",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 4,
      name: "ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 5, name: "broadcast_type", kind: "enum", opt: !0, T: function() {
      return ["socket.room.BroadcastType", Od, "BROADCAST_TYPE_"];
    } }]]);
  }
  return R(t, o), P(t);
}(_), nu = new vC(), fC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.AcceptWaitingRoomRequests", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), gC = new fC(), mC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.DenyWaitingRoomRequests", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), yC = new mC(), kC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.WaitingRoomRequest", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "picture",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "custom_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "preset_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), bC = new kC(), TC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.GetWaitingRoomRequests", [{ no: 1, name: "requests", kind: "message", repeat: 1, T: function() {
      return bC;
    } }]]);
  }
  return R(t, o), P(t);
}(_), xh = new TC(), wC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.room.GetRoomStageStateResponse", [{
      no: 1,
      name: "on_stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "approved_stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "requested_stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), ev = new wC(), Ld;
(function(o) {
  o[o.NONE = 0] = "NONE", o[o.SKIP = 1] = "SKIP", o[o.ON_PRIVILEGED_USER_ENTRY = 2] = "ON_PRIVILEGED_USER_ENTRY", o[o.SKIP_ON_ACCEPT = 3] = "SKIP_ON_ACCEPT";
})(Ld || (Ld = {}));
var Li;
(function(o) {
  o[o.NONE = 0] = "NONE", o[o.ALLOWED = 1] = "ALLOWED", o[o.NOT_ALLOWED = 2] = "NOT_ALLOWED", o[o.CAN_REQUEST = 3] = "CAN_REQUEST";
})(Li || (Li = {}));
var PC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.PollsPermissionUpdate", [{
      no: 1,
      name: "can_create",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "can_vote",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "can_view",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), SC = new PC(), EC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.PluginsPermissionsUpdate", [{
      no: 1,
      name: "can_close",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "can_start",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), CC = new EC(), RC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.PublicChatPermission", [{
      no: 1,
      name: "can_send",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "text",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "files",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), AC = new RC(), IC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.PrivateChatPermission", [{
      no: 1,
      name: "can_send",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "can_receive",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "text",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "files",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), _C = new IC(), MC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.ChatPermissionUpdate", [{ no: 1, name: "public", kind: "message", T: function() {
      return AC;
    } }, { no: 2, name: "private", kind: "message", T: function() {
      return _C;
    } }]]);
  }
  return R(t, o), P(t);
}(_), DC = new MC(), OC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.ConnectedMeetingPermissionUpdate", [{
      no: 1,
      name: "can_alter_connected_meetings",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "can_switch_to_parent_meeting",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "can_switch_connected_meetings",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), LC = new OC(), NC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.StreamPermission", [{ no: 1, name: "can_produce", kind: "enum", opt: !0, T: function() {
      return ["socket.preset.StreamPermissionType", Li, "STREAM_PERMISSION_TYPE_"];
    } }, { no: 2, name: "can_consume", kind: "enum", opt: !0, T: function() {
      return ["socket.preset.StreamPermissionType", Li, "STREAM_PERMISSION_TYPE_"];
    } }]]);
  }
  return R(t, o), P(t);
}(_), Kc = new NC(), $C = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.MediaPermissionUpdate", [{ no: 1, name: "video", kind: "message", T: function() {
      return Kc;
    } }, { no: 2, name: "audio", kind: "message", T: function() {
      return Kc;
    } }, { no: 3, name: "screenshare", kind: "message", T: function() {
      return Kc;
    } }]]);
  }
  return R(t, o), P(t);
}(_), VC = new $C(), UC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.PresetUpdates", [{ no: 1, name: "polls", kind: "message", T: function() {
      return SC;
    } }, { no: 2, name: "plugins", kind: "message", T: function() {
      return CC;
    } }, { no: 3, name: "chat", kind: "message", T: function() {
      return DC;
    } }, {
      no: 4,
      name: "accept_waiting_requests",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "can_accept_production_requests",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 6,
      name: "can_edit_display_name",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "can_record",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 8,
      name: "can_livestream",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 9,
      name: "can_spotlight",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 10,
      name: "disable_participant_audio",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 11,
      name: "disable_participant_screensharing",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 12,
      name: "disable_participant_video",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 13,
      name: "kick_participant",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 14,
      name: "pin_participant",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 15,
      name: "transcription_enabled",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 16, name: "waiting_room_type", kind: "enum", opt: !0, T: function() {
      return ["socket.preset.WaitingRoomType", Ld, "WAITING_ROOM_TYPE_"];
    } }, {
      no: 17,
      name: "is_recorder",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 18, name: "recorder_type", kind: "enum", opt: !0, T: function() {
      return ["socket.room.RecorderType", Dd, "RECORDER_TYPE_"];
    } }, {
      no: 19,
      name: "hidden_participant",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 20,
      name: "show_participant_list",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 21,
      name: "can_change_participant_permissions",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 22, name: "connected_meetings", kind: "message", T: function() {
      return LC;
    } }, { no: 23, name: "media", kind: "message", T: function() {
      return VC;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Hp = new UC(), jC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.ReadPeersPresetRequest", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), FC = new jC(), HC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.PeerPreset", [{
      no: 1,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "preset",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]]);
  }
  return R(t, o), P(t);
}(_), BC = new HC(), qC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.ReadPeersPresetResponse", [{ no: 1, name: "peer_presets", kind: "message", repeat: 1, T: function() {
      return BC;
    } }]]);
  }
  return R(t, o), P(t);
}(_), GC = new qC(), WC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.UpdatePeerPreset", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "patch", kind: "message", T: function() {
      return Hp;
    } }]]);
  }
  return R(t, o), P(t);
}(_), rg = new WC(), JC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.UpdatePeersPresetRequest", [{ no: 1, name: "update_peers_presets", kind: "message", repeat: 1, T: function() {
      return rg;
    } }]]);
  }
  return R(t, o), P(t);
}(_), KC = new JC(), zC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.UpdatePeersPresetResponse", [{ no: 1, name: "update_peers_presets", kind: "message", repeat: 1, T: function() {
      return rg;
    } }]]);
  }
  return R(t, o), P(t);
}(_), rv = new zC(), YC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.PeerUserIDMap", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), QC = new YC(), XC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.BulkUpdatePeerPresetRequest", [{ no: 1, name: "peers", kind: "message", repeat: 1, T: function() {
      return QC;
    } }, { no: 2, name: "patch", kind: "message", T: function() {
      return Hp;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new XC();
var ZC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.preset.BulkUpdatePeerPresetResponse", [{ no: 2, name: "patch", kind: "message", T: function() {
      return Hp;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new ZC();
var xC = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.ChatMessage", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "pinned",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 6,
      name: "is_edited",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 8,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 10,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 11,
      name: "created_at",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 12,
      name: "created_at_ms",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 13,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 14,
      name: "channel_index",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), lo = new xC(), eR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.GetPaginatedChatMessageRoomRequest", [{
      no: 1,
      name: "time_stamp",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 2,
      name: "size",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "from",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 4,
      name: "reversed",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), rR = new eR(), tR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.GetPaginatedChatMessageRoomResponse", [{ no: 1, name: "messages", kind: "message", repeat: 1, T: function() {
      return lo;
    } }, {
      no: 2,
      name: "next",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), nR = new tR(), aR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.GetChatMessagesResponse", [{ no: 1, name: "messages", kind: "message", repeat: 1, T: function() {
      return lo;
    } }]]);
  }
  return R(t, o), P(t);
}(_), tg = new aR(), iR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.SendChatMessageToRoomRequest", [{
      no: 1,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), sR = new iR(), oR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.SendChatMessageToRoomResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return lo;
    } }]]);
  }
  return R(t, o), P(t);
}(_), zc = new oR(), uR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.SendChatMessageToPeersRequest", [{
      no: 1,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), lR = new uR(), cR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.SendChatMessageToPeersResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return lo;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Yc = new cR(), dR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.SendChatMessageToChannelRequest", [{
      no: 1,
      name: "channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), pR = new dR(), hR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.SendChatMessageToChannelResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return lo;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new hR();
var vR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.EditChatMessageRequest", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload_type",
      kind: "scalar",
      opt: !0,
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "payload",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "pinned",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), fR = new vR(), gR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.PinChatMessageRequest", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "pinned",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), mR = new gR(), yR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.PinChatMessageResponse", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "pinned",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), _l = new yR(), kR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.EditChatMessageResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return lo;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Ml = new kR(), bR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.DeleteChatMessageRequest", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), TR = new bR(), wR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.DeleteChatMessageResponse", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Dl = new wR(), PR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.SearchChatMessagesRequest", [{
      no: 1,
      name: "time_stamp",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 2,
      name: "size",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "from",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 4,
      name: "reversed",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "search_term",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), SR = new PR(), ER = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.MarkChannelIndexAsReadRequest", [{
      no: 1,
      name: "channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "channel_index",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), CR = new ER(), RR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.MarkChannelIndexAsReadResponse", [{
      no: 1,
      name: "channel_index",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), AR = new RR(), IR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.CreateChatChannelRequest", [{
      no: 1,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "visibility",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "is_direct_message",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), _R = new IR(), MR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.UpdateChatChannelRequest", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "visibility",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "is_direct_message",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), DR = new MR(), OR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.CreateChatChannelResponse", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_);
new OR();
var LR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.GetChatChannelRequest", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), NR = new LR(), $R = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.LatestMessageAndUnreadCount", [{ no: 1, name: "message", kind: "message", T: function() {
      return lo;
    } }, {
      no: 2,
      name: "unread_count",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]]);
  }
  return R(t, o), P(t);
}(_), VR = new $R(), UR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.ChatChannel", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "visibility",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "is_direct_message",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 6, name: "latest_message_and_unread_count", kind: "message", T: function() {
      return VR;
    } }, {
      no: 7,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), jR = new UR(), FR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.GetChatChannelResponse", [{ no: 1, name: "chat_channels", kind: "message", repeat: 1, T: function() {
      return jR;
    } }]]);
  }
  return R(t, o), P(t);
}(_), $a = new FR(), HR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.ChannelMember", [{
      no: 1,
      name: "id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "picture",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "custom_participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), BR = new HR(), qR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.chat.GetChatChannelMembersResponse", [{ no: 1, name: "channel_members", kind: "message", repeat: 1, T: function() {
      return BR;
    } }]]);
  }
  return R(t, o), P(t);
}(_), GR = new qR(), WR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.AddPluginRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "staggered",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), JR = new WR(), KR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.RemovePluginRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "staggered",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), zR = new KR(), YR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.EnablePluginForRoomRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), QR = new YR(), XR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.DisablePluginForRoomRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), ZR = new XR(), xR = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.EnablePluginForPeersRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), e1 = new xR(), r1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.DisablePluginForPeersRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), t1 = new r1(), n1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginEventToRoomRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "plugin_data",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]]);
  }
  return R(t, o), P(t);
}(_), a1 = new n1(), i1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginEventToPeersRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "plugin_data",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]]);
  }
  return R(t, o), P(t);
}(_), s1 = new i1(), o1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.StoreKeys", [{
      no: 1,
      name: "store_key",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Bp = new o1(), u1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginStoreInsertKeysRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "insert_keys", kind: "message", repeat: 1, T: function() {
      return Bp;
    } }]]);
  }
  return R(t, o), P(t);
}(_), tv = new u1(), l1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginStoreGetKeysRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "get_keys", kind: "message", repeat: 1, T: function() {
      return Bp;
    } }]]);
  }
  return R(t, o), P(t);
}(_), c1 = new l1(), d1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginStoreDeleteKeysRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "delete_keys", kind: "message", repeat: 1, T: function() {
      return Bp;
    } }]]);
  }
  return R(t, o), P(t);
}(_), p1 = new d1(), h1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginStoreDeleteRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), v1 = new h1(), f1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.EnablePluginResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "enabled_by",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Nd = new f1(), g1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.EnablePluginsResponse", [{ no: 1, name: "plugins", kind: "message", repeat: 1, T: function() {
      return Nd;
    } }]]);
  }
  return R(t, o), P(t);
}(_), m1 = new g1(), y1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.DisablePluginResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "disabled_by",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), nv = new y1(), k1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginStoreItem", [{
      no: 1,
      name: "timestamp",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "store_key",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "payload",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]]);
  }
  return R(t, o), P(t);
}(_), b1 = new k1(), T1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginStoreResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "store_items", kind: "message", repeat: 1, T: function() {
      return b1;
    } }]]);
  }
  return R(t, o), P(t);
}(_), av = new T1(), w1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.plugin.PluginEventResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "plugin_data",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]]);
  }
  return R(t, o), P(t);
}(_), iv = new w1(), P1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.livestreaming.LiveStreamingEvent", [{
      no: 1,
      name: "livestream_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "err_message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "meeting_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "playback_url",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "org_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "room_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 8,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 9,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 10,
      name: "manual_ingest",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), sv = new P1(), S1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.livestreaming.GetStagePeersResponse", [{
      no: 1,
      name: "stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), ov = new S1(), E1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.livestreaming.StageRequest", [{
      no: 1,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), C1 = new E1(), R1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.livestreaming.GetStageRequestsResponse", [{ no: 1, name: "stage_requests", kind: "message", repeat: 1, T: function() {
      return C1;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Qc = new R1(), A1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.livestreaming.GrantStageAccessRequest", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), I1 = new A1(), _1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.livestreaming.DenyStageAccessRequest", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), M1 = new _1(), D1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.livestreaming.LeaveStageRequest", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), uv = new D1(), O1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.polls.Poll", [{
      no: 1,
      name: "poll_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "created_by",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "created_by_user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "question",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 5, name: "options", kind: "message", repeat: 1, T: function() {
      return N1;
    } }, {
      no: 6,
      name: "hide_votes",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "anonymous",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 8,
      name: "votes",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), ng = new O1(), L1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.polls.PollOption", [{
      no: 1,
      name: "text",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "count",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, { no: 3, name: "votes", kind: "message", repeat: 1, T: function() {
      return V1;
    } }]]);
  }
  return R(t, o), P(t);
}(_), N1 = new L1(), $1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.polls.PollVote", [{
      no: 1,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), V1 = new $1(), U1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.polls.NewPollRequest", [{
      no: 1,
      name: "question",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "options",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "anonymous",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "hide_votes",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "created_by",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "created_by_user_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]]);
  }
  return R(t, o), P(t);
}(_), j1 = new U1(), F1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.polls.VotePollRequest", [{
      no: 1,
      name: "poll_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "index",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]]);
  }
  return R(t, o), P(t);
}(_), H1 = new F1(), B1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.polls.UpdatePollResponse", [{ no: 1, name: "poll", kind: "message", T: function() {
      return ng;
    } }]]);
  }
  return R(t, o), P(t);
}(_), Xc = new B1(), q1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.polls.GetPollsResponse", [{ no: 1, name: "polls", kind: "message", repeat: 1, T: function() {
      return ng;
    } }]]);
  }
  return R(t, o), P(t);
}(_), G1 = new q1(), W1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["socket.recording.RecordingEvent", [{
      no: 1,
      name: "recording_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "err_message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "recording_type", kind: "enum", T: function() {
      return ["common.RecordingType", Ys];
    } }]]);
  }
  return R(t, o), P(t);
}(_), lv = new W1(), J1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["google.protobuf.Timestamp", [{
      no: 1,
      name: "seconds",
      kind: "scalar",
      T: 3,
      L: 0
      /*LongType.BIGINT*/
    }, {
      no: 2,
      name: "nanos",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]]);
  }
  return R(t, o), P(t, [{
    key: "now",
    value: function() {
      var r = this.create(), n = Date.now();
      return r.seconds = xo.from(Math.floor(n / 1e3)).toBigInt(), r.nanos = n % 1e3 * 1e6, r;
    }
    /**
    * Converts a `Timestamp` to a JavaScript Date.
    */
  }, {
    key: "toDate",
    value: function(r) {
      return new Date(xo.from(r.seconds).toNumber() * 1e3 + Math.ceil(r.nanos / 1e6));
    }
    /**
    * Converts a JavaScript Date to a `Timestamp`.
    */
  }, {
    key: "fromDate",
    value: function(r) {
      var n = this.create(), a = r.getTime();
      return n.seconds = xo.from(Math.floor(a / 1e3)).toBigInt(), n.nanos = a % 1e3 * 1e6, n;
    }
    /**
    * In JSON format, the `Timestamp` type is encoded as a string
    * in the RFC 3339 format.
    */
  }, {
    key: "internalJsonWrite",
    value: function(r, n) {
      var a = xo.from(r.seconds).toNumber() * 1e3;
      if (a < Date.parse("0001-01-01T00:00:00Z") || a > Date.parse("9999-12-31T23:59:59Z"))
        throw new Error("Unable to encode Timestamp to JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.");
      if (r.nanos < 0)
        throw new Error("Unable to encode invalid Timestamp to JSON. Nanos must not be negative.");
      var i = "Z";
      if (r.nanos > 0) {
        var s = (r.nanos + 1e9).toString().substring(1);
        s.substring(3) === "000000" ? i = "." + s.substring(0, 3) + "Z" : s.substring(6) === "000" ? i = "." + s.substring(0, 6) + "Z" : i = "." + s + "Z";
      }
      return new Date(a).toISOString().replace(".000Z", i);
    }
    /**
    * In JSON format, the `Timestamp` type is encoded as a string
    * in the RFC 3339 format.
    */
  }, { key: "internalJsonRead", value: function(r, n, a) {
    if (typeof r != "string")
      throw new Error("Unable to parse Timestamp from JSON " + pm(r) + ".");
    var i = r.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);
    if (!i)
      throw new Error("Unable to parse Timestamp from JSON. Invalid format.");
    var s = Date.parse(i[1] + "-" + i[2] + "-" + i[3] + "T" + i[4] + ":" + i[5] + ":" + i[6] + (i[8] ? i[8] : "Z"));
    if (Number.isNaN(s))
      throw new Error("Unable to parse Timestamp from JSON. Invalid value.");
    if (s < Date.parse("0001-01-01T00:00:00Z") || s > Date.parse("9999-12-31T23:59:59Z"))
      throw new globalThis.Error("Unable to parse Timestamp from JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.");
    return a || (a = this.create()), a.seconds = xo.from(s / 1e3).toBigInt(), a.nanos = 0, i[7] && (a.nanos = parseInt("1" + i[7] + "0".repeat(9 - i[7].length)) - 1e9), a;
  } }]);
}(_);
new J1();
var K1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["common.BaseHubMessage", [{
      no: 1,
      name: "event",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "room_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "payload",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 7,
      name: "error",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 8,
      name: "sid",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 9,
      name: "room_object_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 10,
      name: "preset",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 11,
      name: "use_start_session",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]]);
  }
  return R(t, o), P(t);
}(_), $d = new K1(), z1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["common.BulkedHubMessage", [{ no: 1, name: "messages", kind: "message", repeat: 1, T: function() {
      return $d;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new z1();
var Y1 = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["common.CFWorkersResponse", [{ no: 1, name: "responses", kind: "message", repeat: 1, T: function() {
      return $d;
    } }, { no: 2, name: "broadcast_responses", kind: "message", repeat: 1, T: function() {
      return $d;
    } }]]);
  }
  return R(t, o), P(t);
}(_);
new Y1();
var Q1 = 0, X1 = 1, Z1 = 2, x1 = 3, eA = 4, rA = 5, tA = {
  getPeerInfo: 0,
  updatePeerInfo: 1,
  getRoomPeersInfo: 2,
  joinRoom: 3,
  leaveRoom: 4,
  getRoomInfo: 5,
  updateRoomInfo: 6,
  closeRoom: 7,
  startedLivestream: 8,
  stoppedLivestream: 9,
  erroredLivestream: 10,
  getStagePeers: 11,
  getStageRequests: 12,
  requestStageAccess: 13,
  cancelStageRequest: 14,
  grantStageAccess: 15,
  denyStageAccess: 16,
  roomPeerCount: 17,
  joinStage: 18,
  leaveStage: 19,
  // getConnectedRoomsDump returns entire dump for a breakout rooms meeting
  // This details which peer is in which meeting currently, and which is the parent meeting
  getConnectedRoomsDump: 20,
  // createConnectedRooms to create breakout rooms
  createConnectedRooms: 21,
  // deleteConnectedRooms to delete breakout rooms
  deleteConnectedRooms: 22,
  // move peers between breakout rooms
  movePeers: 23,
  // transfer peer to new room
  transferPeer: 24,
  // message sent by socket service to inform client of a participant joining a breakout room
  movedPeer: 25,
  // message sent by socket service to inform client of updates in connected rooms
  connectedRoomsUpdated: 26,
  // message sent by socket service to inform client of deletion in connected rooms
  connectedRoomsDeleted: 27,
  // get all participants that have been added to the meeting irrespective of their live status
  getAllAddedParticipants: 28,
  // broadcast api
  broadcastMessage: 29,
  kick: 30,
  kickAll: 31,
  transcript: 32,
  // waitlist events
  getWaitingRoomRequests: 33,
  acceptWaitingRoomRequests: 34,
  waitingRoomRequestAccepted: 35,
  denyWaitingRoomRequests: 36,
  waitingRoomRequestDenied: 37,
  peerStageStatusUpdate: 38,
  broadcastToEntity: 39,
  recordingStarted: 40,
  recordingStopped: 41,
  recordingPaused: 42,
  getRoomStageState: 43,
  livestreamingInvoked: 44
}, nA = { getMessages: 0, sendMessageToRoom: 1, sendMessageToPeers: 2, editMessage: 3, deleteMessage: 4, getPaginatedMessages: 5, sendMessageToChannel: 6, searchChannelMessages: 7, getAllChatChannels: 8, markChannelIndexAsRead: 9, pinMessage: 10 }, aA = { getPlugins: 0, addPlugin: 1, enablePluginForRoom: 2, disablePluginForPeers: 3, enablePluginForPeers: 4, disablePluginForRoom: 5, removePlugin: 6, customPluginEventToRoom: 7, customPluginEventToPeers: 8, storeInsertKeys: 9, storeGetKeys: 10, storeDeleteKeys: 11, storeDelete: 12 }, iA = { createPoll: 0, getPolls: 1, votePoll: 2, updatePoll: 3 }, ag = {
  unknown: 0,
  createWebRTCTransport: 1,
  produce: 2,
  consume: 3,
  toggleProducer: 4,
  toggleConsumer: 5,
  closeProducer: 6,
  closeConsumer: 7,
  updateConsumersSimulcastConfig: 8,
  // adding some buffers for new media events.
  joinRoom: 16,
  leaveRoom: 17,
  selectedPeer: 18,
  globalPinPeer: 19,
  selfJoinComplete: 20,
  // some additional buffer for broadcast events.
  peerJoinedBroadcast: 25,
  peerLeaveBroadcast: 26,
  peerProducerCreateBroadcast: 27,
  peerProducerToggleBroadcast: 28,
  peerProducerCloseBroadcast: 29,
  globalPeerPinBroadcast: 30,
  recordingStartedBroadcast: 31,
  recordingStoppedBroadcast: 32,
  peerDisplayNameEditBroadcast: 33,
  mediaRoomTerminationBroadcastResponse: 36,
  selectedPeerDiff: 40,
  renegotiateSessionDescription: 50,
  errorResponse: 60,
  kickPeer: 90,
  kickAll: 91,
  changeDisplayName: 92,
  hostControlPeer: 93,
  hostControlAllPeers: 94,
  // only for CF
  audioActivity: 100
}, sA = { createChatChannel: 0, getChatChannel: 1, deprecatedGetAllChatChannels: 2, getChannelMembers: 3, updateChatChannel: 4 }, oA = { getUserPresets: 0, updateUserPreset: 1 };
function Ko(o, t) {
  return Object.keys(t).reduce(function(e, r) {
    return e[r] = (o << 16) + t[r], e;
  }, {});
}
function ig(o, t) {
  return Object.keys(o).reduce(function(e, r) {
    return e[r] = t | o[r], e;
  }, {});
}
var X = Ko(Q1, tA), Ir = Ko(X1, nA), se = Ko(Z1, aA), Ba = Ko(x1, iA), $s = Ko(eA, sA), kn = ig(ag, 16777216), Un = ig(ag, 50331648), Fl = Ko(rA, oA), uA = Object.defineProperty, lA = Object.getOwnPropertyDescriptor, qp = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? lA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && uA(e, r, a), a;
}, Vd = (cn = /* @__PURE__ */ E("socket"), ii = /* @__PURE__ */ E("context"), /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, cn, { writable: !0, value: void 0 }), Object.defineProperty(this, ii, { writable: !0, value: void 0 }), l(this, cn)[cn] = e, l(this, ii)[ii] = t;
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, ii)[ii].getValue("telemetry");
      }
    )
    /**
    * @private access
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, ii)[ii].getValue("logger");
  } }, { key: "createChannel", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s, u, c, d, h, v = arguments;
      return p().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              return s = v.length > 3 && v[3] !== void 0 ? v[3] : "public", u = v.length > 4 && v[4] !== void 0 ? v[4] : !1, c = { displayName: n, targetUserIds: a, displayPictureUrl: i, visibility: s, isDirectMessage: u }, u && (c.visibility = "private"), g.next = 6, l(this, cn)[cn].sendMessagePromise($s.createChatChannel, _R.toBinary(c));
            case 6:
              return d = g.sent, h = $a.fromBinary(d.payload).chatChannels, g.abrupt("return", Vd.formatChannel(h[0]));
            case 9:
            case "end":
              return g.stop();
          }
      }, r, this);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateChannel", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.next = 2, l(this, cn)[cn].sendMessagePromise($s.updateChatChannel, DR.toBinary({ chatChannelId: n, targetUserIds: a.memberIds, displayName: a.displayName, displayPictureUrl: a.displayPictureUrl, visibility: a.visibility }));
            case 2:
              return i = c.sent, s = $a.fromBinary(i.payload).chatChannels, c.abrupt("return", Vd.formatChannel(s[0]));
            case 5:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getChannelMembers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, l(this, cn)[cn].sendMessagePromise($s.getChannelMembers, NR.toBinary({ chatChannelId: n }));
            case 3:
              return a = s.sent, s.abrupt("return", GR.fromBinary(a.payload).channelMembers.map(function(u) {
                var c = u.id, d = gc(u, Kg);
                return N(N({}, d), {}, { userId: c });
              }));
            case 7:
              return s.prev = 7, s.t0 = s.catch(0), s.abrupt("return", []);
            case 10:
            case "end":
              return s.stop();
          }
      }, r, this, [[0, 7]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "on", value: function(e, r) {
    var n = this, a, i;
    switch (e) {
      case $s.createChatChannel: {
        a = $a.fromBinary.bind($a), i = $a.create();
        break;
      }
      case $s.updateChatChannel: {
        a = $a.fromBinary.bind($a), i = $a.create();
        break;
      }
    }
    if (!a) {
      this.logger.warn("ChatChannelSocketHandler::Event ".concat(e, " is not recognized"));
      return;
    }
    l(this, cn)[cn].on(e, function(s) {
      var u = s.payload, c = i;
      try {
        c = a(u);
      } catch (d) {
        n.logger.error("ChatChannelSocketHandler::on::binary_decode_error", { error: d });
      }
      return r(c);
    });
  } }], [{ key: "formatChannel", value: function(e) {
    var r, n = e.latestMessageAndUnreadCount, a = N(N({}, e), {}, { id: e.chatChannelId, memberIds: e.targetUserIds, unreadCount: (r = n == null ? void 0 : n.unreadCount) !== null && r !== void 0 ? r : 0 });
    return n != null && n.message && (a.latestMessage = jn.formatSocketServiceMessage(n.message)), delete a.chatChannelId, delete a.targetUserIds, delete a.latestMessageAndUnreadCount, a;
  } }]);
}()), to = Vd;
qp([D.trace("ChatChannelHandler.createChannel")], to.prototype, "createChannel", 1);
qp([D.trace("ChatChannelHandler.updateChannel")], to.prototype, "updateChannel", 1);
qp([D.trace("ChatChannelHandler.getChannelMembers")], to.prototype, "getChannelMembers", 1);
var cA = Object.defineProperty, dA = Object.getOwnPropertyDescriptor, Wn = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? dA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && cA(e, r, a), a;
}, wt = /* @__PURE__ */ function(o) {
  return o[o.TEXT = 0] = "TEXT", o[o.IMAGE = 1] = "IMAGE", o[o.FILE = 2] = "FILE", o[o.CUSTOM = 3] = "CUSTOM", o;
}(wt || {}), tr = /* @__PURE__ */ E("socket"), fs = /* @__PURE__ */ E("context"), wn = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, tr, { writable: !0, value: void 0 }), Object.defineProperty(this, fs, { writable: !0, value: void 0 }), l(this, tr)[tr] = e, l(this, fs)[fs] = t;
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, fs)[fs].getValue("telemetry");
      }
    )
    /**
    * @private access
    * Not available for external use
    */
  }, { key: "logger", get: function() {
    return l(this, fs)[fs].getValue("logger");
  } }, { key: "getChatMessages", value: function() {
    return l(this, tr)[tr].sendMessagePromise(Ir.getMessages);
  } }, { key: "getChatMessagesPaginated", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s, u, c, d, h = arguments;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              return s = h.length > 3 && h[3] !== void 0 ? h[3] : 0, u = h.length > 4 && h[4] !== void 0 ? h[4] : "", c = { timeStamp: n, size: a, from: s, reversed: i, channelId: u }, f.next = 5, l(this, tr)[tr].sendMessagePromise(Ir.getPaginatedMessages, rR.toBinary(c));
            case 5:
              if (d = f.sent, d.payload) {
                f.next = 8;
                break;
              }
              return f.abrupt("return", { messages: [], next: !1 });
            case 8:
              return f.abrupt("return", nR.fromBinary(d.payload));
            case 9:
            case "end":
              return f.stop();
          }
      }, r, this);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendMessageToRoom", value: function(e, r) {
    var n = { payloadType: r, payload: e };
    l(this, tr)[tr].sendMessage(Ir.sendMessageToRoom, sR.toBinary(n));
  } }, { key: "sendMessageToPeers", value: function(e, r, n) {
    var a = { payloadType: r, peerIds: n, payload: e };
    l(this, tr)[tr].sendMessage(Ir.sendMessageToPeers, lR.toBinary(a));
  } }, { key: "sendMessageToChannel", value: function(e, r, n) {
    var a = { payloadType: r, channelId: n, payload: e };
    l(this, tr)[tr].sendMessage(Ir.sendMessageToChannel, pR.toBinary(a));
  } }, { key: "sendMessage", value: function(e, r, n, a) {
    if (a && this.sendMessageToChannel(e, r, a), n && n.length > 0) {
      this.sendMessageToPeers(e, r, n);
      return;
    }
    this.sendMessageToRoom(e, r);
  } }, { key: "editMessage", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i, s, u) {
      var c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return c = { chatId: n, payloadType: i, payload: a }, s && (c.channelId = s), u !== void 0 && (c.pinned = u), v.next = 5, l(this, tr)[tr].sendMessagePromise(Ir.editMessage, fR.toBinary(c));
            case 5:
              return d = v.sent, v.abrupt("return", Ml.fromBinary(d.payload).message);
            case 7:
            case "end":
              return v.stop();
          }
      }, r, this);
    }));
    function e(r, n, a, i, s) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "deleteMessage", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return i = { chatId: n }, a && (i.channelId = a), d.next = 4, l(this, tr)[tr].sendMessagePromise(Ir.deleteMessage, TR.toBinary(i));
            case 4:
              return s = d.sent, u = Dl.fromBinary(s.payload), d.abrupt("return", N({ id: u.chatId }, u.channelId ? { channelId: u.channelId } : {}));
            case 7:
            case "end":
              return d.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "searchMessages", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s, u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return c = { searchTerm: n, timeStamp: (i = a.timestamp) !== null && i !== void 0 ? i : Date.now(), size: (s = a.size) !== null && s !== void 0 ? s : 75, from: 0, reversed: (u = a.reversed) !== null && u !== void 0 ? u : !0 }, a.channelId && (c.channelId = a.channelId), v.prev = 2, v.next = 5, l(this, tr)[tr].sendMessagePromise(Ir.searchChannelMessages, SR.toBinary(c));
            case 5:
              return d = v.sent, v.abrupt("return", tg.fromBinary(d.payload).messages);
            case 9:
              return v.prev = 9, v.t0 = v.catch(2), v.abrupt("return", []);
            case 12:
            case "end":
              return v.stop();
          }
      }, r, this, [[2, 9]]);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAllChannels", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.prev = 0, i.next = 3, l(this, tr)[tr].sendMessagePromise(Ir.getAllChatChannels);
            case 3:
              return n = i.sent, i.abrupt("return", $a.fromBinary(n.payload).chatChannels.map(to.formatChannel));
            case 7:
              return i.prev = 7, i.t0 = i.catch(0), i.abrupt("return", []);
            case 10:
            case "end":
              return i.stop();
          }
      }, r, this, [[0, 7]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "markLastReadMessage", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, l(this, tr)[tr].sendMessagePromise(Ir.markChannelIndexAsRead, CR.toBinary({ channelId: n, userId: a.userId, channelIndex: a.channelIndex }));
            case 2:
              return i = u.sent, u.abrupt("return", AR.fromBinary(i.payload).channelIndex);
            case 4:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setPinState", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return i = { chatId: n.id, pinned: a, channelId: n.channelId }, c.next = 3, l(this, tr)[tr].sendMessagePromise(Ir.pinMessage, mR.toBinary(i));
            case 3:
              return s = c.sent, c.abrupt("return", _l.fromBinary(s.payload));
            case 5:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "on", value: function(e, r) {
    var n = this, a, i;
    switch (e) {
      case Ir.sendMessageToRoom: {
        a = zc.fromBinary.bind(zc), i = zc.create();
        break;
      }
      case Ir.sendMessageToPeers: {
        a = Yc.fromBinary.bind(Yc), i = Yc.create();
        break;
      }
      case Ir.editMessage: {
        a = Ml.fromBinary.bind(Ml), i = Ml.create();
        break;
      }
      case Ir.pinMessage: {
        a = _l.fromBinary.bind(_l), i = _l.create();
        break;
      }
      case Ir.deleteMessage: {
        a = Dl.fromBinary.bind(Dl), i = Dl.create();
        break;
      }
    }
    if (!a) {
      this.logger.warn("ChatSocketHandler::Event ".concat(e, " is not recognized"));
      return;
    }
    l(this, tr)[tr].on(e, function(s) {
      var u = s.payload, c = i;
      try {
        c = a(u);
      } catch (d) {
        n.logger.error("chatSocketHandler::on::binary_decode_error", { error: d });
      }
      return r(c);
    });
  } }]);
}();
Wn([D.trace("SocketService.getChatMessages")], wn.prototype, "getChatMessages", 1);
Wn([D.trace("SocketService.getChatMessagesPaginated")], wn.prototype, "getChatMessagesPaginated", 1);
Wn([D.trace("SocketService.sendMessageToRoom")], wn.prototype, "sendMessageToRoom", 1);
Wn([D.trace("SocketService.sendMessageToPeers")], wn.prototype, "sendMessageToPeers", 1);
Wn([D.trace("SocketService.sendMessageToChannel")], wn.prototype, "sendMessageToChannel", 1);
Wn([D.trace("SocketService.sendMessage")], wn.prototype, "sendMessage", 1);
Wn([D.trace("SocketService.editMessage")], wn.prototype, "editMessage", 1);
Wn([D.trace("SocketService.deleteMessage")], wn.prototype, "deleteMessage", 1);
Wn([D.trace("SocketService.searchMessages")], wn.prototype, "searchMessages", 1);
Wn([D.trace("SocketService.getAllChannels")], wn.prototype, "getAllChannels", 1);
Wn([D.trace("SocketService.markLastReadMessage")], wn.prototype, "markLastReadMessage", 1);
function pA(o) {
  return o.replace(/([-_]\w)/g, function(t) {
    return t[1].toUpperCase();
  });
}
function Fn(o) {
  if (!o || Pe(o) !== "object")
    return o;
  if (Array.isArray(o))
    return o.map(function(e) {
      return Fn(e);
    });
  var t = {};
  return Object.keys(o).forEach(function(e) {
    var r = Av(e) ? e : pA(e);
    t[r] = Fn(o[e]);
  }), t;
}
function hA(o) {
  return o.replace(/[A-Z]/g, function(t) {
    return "_".concat(t.toLowerCase());
  });
}
function sg(o) {
  if (!o || Pe(o) !== "object")
    return o;
  if (Array.isArray(o))
    return o.map(function(e) {
      return sg(e);
    });
  var t = {};
  return Object.keys(o).forEach(function(e) {
    var r = Av(e) ? e : hA(e);
    t[r] = o[e];
  }), t;
}
function uc(o) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return o == null ? {} : (Object.getOwnPropertyNames(o).forEach(function(e) {
    if (typeof o[e] != "function") {
      if (Pe(o[e]) === "object") {
        uc(o[e], t[e] = {});
        return;
      }
      t[e] = o[e];
    }
  }), t);
}
var cv = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.defaults = void 0, this.defaults = { baseURL: t.baseURL, headers: { common: {} }, timeout: t.timeout, retry: t.retry, retryDelay: t.retryDelay };
  }
  return P(o, [{ key: "buildURL", value: function(e, r) {
    var n = this.defaults.baseURL, a = e.startsWith("http") ? e : "".concat(n).concat(e.startsWith("/") ? e : "/".concat(e));
    if (r) {
      var i = new URLSearchParams();
      return Object.entries(r).forEach(function(s) {
        var u = Me(s, 2), c = u[0], d = u[1];
        i.append(c, d);
      }), "".concat(a).concat(a.includes("?") ? "&" : "?").concat(i.toString());
    }
    return a;
  } }, { key: "request", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f, g, k, y, b, S, T, A, L;
      return p().wrap(function(M) {
        for (; ; )
          switch (M.prev = M.next) {
            case 0:
              return i = ((a = n.method) === null || a === void 0 ? void 0 : a.toUpperCase()) || "GET", s = this.buildURL(n.url || "", n.params), u = N(N({}, this.defaults.headers.common), n.headers), i !== "GET" && i !== "HEAD" && n.data && !u["Content-Type"] && (u["Content-Type"] = "application/json"), c = u["Content-Type"], d = c === "application/json" ? JSON.stringify(n.data) : n.data, h = { method: i, headers: u, body: i !== "GET" && i !== "HEAD" && n.data ? d : void 0 }, v = n.timeout || this.defaults.timeout, f = n.retry !== void 0 ? n.retry : this.defaults.retry, g = n.retryDelay || this.defaults.retryDelay, M.prev = 10, k = new AbortController(), y = setTimeout(function() {
                return k.abort();
              }, v), h.signal = k.signal, M.next = 16, fetch(s, h);
            case 16:
              if (b = M.sent, clearTimeout(y), S = null, T = b.headers.get("content-type"), !(T && T.includes("application/json"))) {
                M.next = 26;
                break;
              }
              return M.next = 23, b.json();
            case 23:
              S = M.sent, M.next = 29;
              break;
            case 26:
              return M.next = 28, b.text();
            case 28:
              S = M.sent;
            case 29:
              if (A = {}, b.headers.forEach(function(V, j) {
                A[j] = V;
              }), L = { data: S, status: b.status, statusText: b.statusText, headers: A, config: n }, b.ok) {
                M.next = 34;
                break;
              }
              throw L;
            case 34:
              return M.abrupt("return", L);
            case 37:
              if (M.prev = 37, M.t0 = M.catch(10), !(M.t0 instanceof Error && f > 0)) {
                M.next = 44;
                break;
              }
              return M.next = 42, new Promise(function(V) {
                return setTimeout(V, g);
              });
            case 42:
              return this.defaults.baseURL === "https://api.dyte.io" ? this.defaults.baseURL = "https://api.cluster.dyte.in" : this.defaults.baseURL === "https://api.cluster.dyte.in" && (this.defaults.baseURL = "https://api.dyte.io"), M.abrupt("return", this.request(N(N({}, n), {}, { retry: f - 1 })));
            case 44:
              throw M.t0;
            case 45:
            case "end":
              return M.stop();
          }
      }, r, this, [[10, 37]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "get", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i = arguments;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return a = i.length > 1 && i[1] !== void 0 ? i[1] : {}, u.abrupt("return", this.request(N(N({}, a), {}, { method: "GET", url: n })));
            case 2:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "post", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s = arguments;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return i = s.length > 2 && s[2] !== void 0 ? s[2] : {}, c.abrupt("return", this.request(N(N({}, i), {}, { method: "POST", url: n, data: a })));
            case 2:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "put", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s = arguments;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return i = s.length > 2 && s[2] !== void 0 ? s[2] : {}, c.abrupt("return", this.request(N(N({}, i), {}, { method: "PUT", url: n, data: a })));
            case 2:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), vA = 3, fA = 30, gA = 8e3, mA = /* @__PURE__ */ function() {
  function o(t, e) {
    var r = this;
    w(this, o), this.ipInfo = void 0, this.fetchClient = void 0, this.requests = void 0, this.roomName = void 0, this.roomUUID = void 0, this.authToken = void 0, this.organizationId = void 0, this.iceServers = void 0, this.pluginInformation = void 0, this.userDetails = void 0, this.roomDetails = void 0, this.context = void 0, this.context = t;
    var n = e || {}, a = n.timeout, i = a === void 0 ? gA : a, s = n.retry, u = s === void 0 ? vA : s, c = n.retryDelay, d = c === void 0 ? fA : c, h = n.baseURL, v = h === void 0 ? "https://api.dyte.io" : h, f = n.authToken, g = n.cachedUserDetails;
    this.iceServers = g == null ? void 0 : g.iceServers, this.pluginInformation = g == null ? void 0 : g.pluginInformation, this.userDetails = g == null ? void 0 : g.userDetails, this.roomDetails = g == null ? void 0 : g.roomDetails, this.requests = new cv({ baseURL: v, timeout: i, retry: u, retryDelay: d, responseType: "json" }), this.fetchClient = new cv({
      baseURL: "",
      // Empty baseURL for direct fetch calls
      timeout: i,
      retry: u,
      retryDelay: d,
      responseType: "json"
    }), this.setAuthToken(f, { bearer: !0 });
    var k = this.requests.request.bind(this.requests);
    this.requests.request = /* @__PURE__ */ function() {
      var y = m(/* @__PURE__ */ p().mark(function b(S) {
        var T, A, L, I, M, V, j;
        return p().wrap(function(O) {
          for (; ; )
            switch (O.prev = O.next) {
              case 0:
                return T = t.getValue("telemetry"), O.prev = 1, T.injectContext(r.requests.defaults.headers.common), O.next = 5, k(S);
              case 5:
                return A = O.sent, S.url !== T.logsEndpoint && r.logger.debug("xhr::fetch", { networkCall: { status: A.status, statusText: A.statusText, baseURL: S.baseURL || r.requests.defaults.baseURL, url: S.url, method: S.method } }), O.abrupt("return", A);
              case 10:
                if (O.prev = 10, O.t0 = O.catch(1), O.t0) {
                  O.next = 14;
                  break;
                }
                throw new U("Unknown network error occurred", "0011");
              case 14:
                throw ((L = O.t0.config) === null || L === void 0 ? void 0 : L.url) !== T.logsEndpoint && r.logger.error("xhr::fetch", { error: O.t0, networkCall: { status: O.t0.status, statusText: O.t0.statusText, baseURL: ((I = O.t0.config) === null || I === void 0 ? void 0 : I.baseURL) || r.requests.defaults.baseURL, url: (M = O.t0.config) === null || M === void 0 ? void 0 : M.url, retries: (V = O.t0.config) === null || V === void 0 ? void 0 : V.retry, method: (j = O.t0.config) === null || j === void 0 ? void 0 : j.method, isOnline: navigator.onLine ? "online" : "offline" } }), new U(O.t0.message || "Network request failed", "0011");
              case 16:
              case "end":
                return O.stop();
            }
        }, b, null, [[1, 10]]);
      }));
      return function(b) {
        return y.apply(this, arguments);
      };
    }();
  }
  return P(o, [{ key: "peerId", get: function() {
    return this.context.getValue("peerId");
  } }, { key: "logger", get: function() {
    return this.context.getValue("logger");
  } }, { key: "setAuthToken", value: function(e, r) {
    var n = r || {}, a = n.bearer;
    this.authToken = e, this.requests.defaults.headers.common.Authorization = a ? "Bearer ".concat(e) : e;
  } }, { key: "setHeader", value: function(e, r) {
    this.requests.defaults.headers.common[e] = r;
  } }, { key: "setRoomName", value: function(e) {
    this.roomName = e;
  } }, { key: "setRoomUUID", value: function(e) {
    this.roomUUID = e;
  } }, { key: "setOrganizationId", value: function(e) {
    this.organizationId = e;
  } }]);
}(), yA = Object.defineProperty, kA = Object.getOwnPropertyDescriptor, Pn = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? kA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && yA(e, r, a), a;
}, sn = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n;
    return w(this, t), n = C(this, t, [e, r]), n.telemetry = void 0, n.telemetry = e.getValue("telemetry"), n.setHeader("x-dyte-web-core-version", e.getValue("sdkVersion")), n;
  }
  return R(t, o), P(t, [{ key: "getIPDetails", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return a = this.peerId, c.prev = 1, c.next = 4, Ip.getIPDetails({ peerId: a, apiHostnames: qf(this.context), logger: $f });
            case 4:
              if (s = c.sent, this.logger.log("ipInfo", { ipInfo: s }), !((s == null || (i = s.loc) === null || i === void 0 ? void 0 : i.length) > 5)) {
                c.next = 8;
                break;
              }
              return c.abrupt("return", s);
            case 8:
              throw Error("Insufficient data");
            case 11:
              return c.prev = 11, c.t0 = c.catch(1), this.logger.warn("ApiClient.getRoomNodeLinkAndTitleV1 Failed to get ip details", { error: { name: c.t0.name, message: c.t0.message } }), c.abrupt("return", void 0);
            case 15:
            case "end":
              return c.stop();
          }
      }, n, this, [[1, 11]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getICEServers", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (!this.iceServers) {
                c.next = 2;
                break;
              }
              return c.abrupt("return", this.iceServers);
            case 2:
              return c.next = 4, this.requests.get("/iceservers");
            case 4:
              if (a = c.sent.data, i = a.success, s = a.iceServers, !i) {
                c.next = 10;
                break;
              }
              return (s == null ? void 0 : s.length) > 0 && (this.iceServers = s), c.abrupt("return", s);
            case 10:
              return c.abrupt("return", void 0);
            case 11:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPlugins", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s = this, u, c, d, h;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              if (!this.pluginInformation) {
                f.next = 2;
                break;
              }
              return f.abrupt("return", this.pluginInformation);
            case 2:
              return f.next = 4, this.requests.get("/v2/plugins/user");
            case 4:
              return u = f.sent.data.data.plugins, c = ((a = this.context.getValue("flagsmith").getValue(ve.V1_PLUGINS)) === null || a === void 0 || (a = a.toString()) === null || a === void 0 ? void 0 : a.split(",")) || [], d = u.reduce(function(g, k) {
                return g[c.includes(k.id) ? "v1" : "v2"].push(N(N({}, k), {}, { name: k.name.replace("v2", "") })), g;
              }, { v1: [], v2: [] }), (i = this.context.getValue("modules")) !== null && i !== void 0 && (i = i.devTools) !== null && i !== void 0 && (i = i.plugins) !== null && i !== void 0 && i.length && ((h = this.context.getValue("modules")) === null || h === void 0 || (h = h.devTools) === null || h === void 0 || h.plugins.forEach(function(g) {
                var k, y, b, S = N(N({}, tu), {}, { tags: ke(tu.tags), baseUrl: "http://localhost:".concat(g.port), name: g.name, picture: (k = g.picture) !== null && k !== void 0 ? k : tu.picture, createdAt: new Date().toISOString(), updatedAt: new Date().toISOString(), id: g.id, organizationId: s.organizationId, description: (y = g.description) !== null && y !== void 0 ? y : tu.description, staggered: (b = g.staggered) !== null && b !== void 0 ? b : tu.staggered });
                d.v2.push(S);
              })), f.abrupt("return", d.v2);
            case 9:
            case "end":
              return f.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPluginDetails", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.requests.get("/v2/plugins/view/".concat(a));
            case 2:
              return i = u.sent.data.data.plugin, u.abrupt("return", i);
            case 4:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPluginConfig", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.fetchClient.get("".concat(a, "/dyte-config.json"));
            case 2:
              return i = u.sent.data, u.abrupt("return", i);
            case 4:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "authorizePlugin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return i = { peerId: this.peerId }, c.next = 3, this.requests.post("/v2/plugins/authorize/".concat(a), i);
            case 3:
              return s = c.sent.data.data.token, c.abrupt("return", s);
            case 5:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPresignedUrls", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c, d, h;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              return s = Bo(this.context, "chat_upload_expiry"), u = { roomUUID: this.roomUUID, filename: a, expiry: typeof s == "number" ? s : void 0 }, this.context.getValue("flagsmith").hasFeature(ve.FEAT_CHAT_SDK) && (u.viewType = i), f.next = 5, this.requests.post("/v1/meetings/genPreSignedUploadUrl", u);
            case 5:
              return c = f.sent.data.data, d = c.getLocation, h = c.putLocation, f.abrupt("return", { getLocation: d, putLocation: h });
            case 9:
            case "end":
              return f.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "uploadFile",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (!(navigator.isReactNative && "uri" in a)) {
                  u.next = 11;
                  break;
                }
                return u.prev = 1, u.next = 4, fetch(i, { method: "PUT", headers: { "Content-Type": "application/octet-stream" }, body: { uri: a.uri, name: a.name } });
              case 4:
                u.next = 9;
                break;
              case 6:
                u.prev = 6, u.t0 = u.catch(1), this.logger.error("sendFileMessage::".concat(u.t0));
              case 9:
                u.next = 13;
                break;
              case 11:
                return u.next = 13, this.fetchClient.put(i, a, { headers: { "Content-Type": a.type } });
              case 13:
              case "end":
                return u.stop();
            }
        }, n, this, [[1, 6]]);
      }));
      function r(n, a) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "startLivestreaming",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                return i = a.manualIngestion, c.t0 = Fn, c.next = 4, this.requests.post("/v2/meetings/".concat(this.context.getValue("meetingId"), "/livestreams"), { manual_ingest: !!i });
              case 4:
                return c.t1 = c.sent, s = (0, c.t0)(c.t1).data.data, c.abrupt("return", { playbackUrl: s.playbackUrl, status: s.status, manualIngest: s.manualIngest, ingestionCredentials: s.streamKey ? { ingestionServer: s.ingestServer, streamKey: s.streamKey } : null });
              case 7:
              case "end":
                return c.stop();
            }
        }, n, this);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "stopLivestreaming", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.requests.post("/v2/meetings/".concat(this.context.getValue("meetingId"), "/active-livestream/stop")));
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getActiveLivestream", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.t0 = Fn, s.next = 3, this.requests.get("/v2/meetings/".concat(this.context.getValue("meetingId"), "/active-livestream"));
            case 3:
              return s.t1 = s.sent.data.data, a = (0, s.t0)(s.t1), s.abrupt("return", { playbackUrl: a.playbackUrl, status: a.status, manualIngest: a.manualIngest, ingestionCredentials: a.streamKey ? { ingestionServer: a.ingestServer, streamKey: a.streamKey } : null });
            case 6:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getUserDetails", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!this.userDetails) {
                s.next = 2;
                break;
              }
              return s.abrupt("return", this.userDetails);
            case 2:
              return s.next = 4, this.requests.get("v2/internals/participant-details");
            case 4:
              return a = s.sent.data.data, s.abrupt("return", Fn(a));
            case 6:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "startRecording", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.next = 2, this.requests.post("/v2/recordings", N(N({}, sg(a)), {}, { meeting_id: this.context.getValue("meetingId"), allow_multiple_recordings: !!i }));
            case 2:
              return s = c.sent, c.abrupt("return", s.data.data.id);
            case 4:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateRecording", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.requests.put("v2/recordings/".concat(a), { action: i }));
            case 1:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getActiveRecording", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.next = 2, this.requests.get("v2/recordings/active-recording/".concat(this.context.getValue("meetingId")));
            case 2:
              return a = c.sent.data.data, i = a.status, s = a.id, c.abrupt("return", { status: i, id: s });
            case 6:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getActiveTranscript", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.requests.get("v2/meetings/".concat(this.context.getValue("meetingId"), "/active-transcript"));
            case 2:
              return a = u.sent.data.data.transcript_download_url, u.prev = 3, u.next = 6, this.fetchClient.get(a);
            case 6:
              return i = u.sent, u.abrupt("return", { transcript: i.data });
            case 10:
              throw u.prev = 10, u.t0 = u.catch(3), new U("Cant fetch transcript s3 url", "1801");
            case 13:
            case "end":
              return u.stop();
          }
      }, n, this, [[3, 10]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getRoomNodeData", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s, u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return v.next = 2, this.getIPDetails();
            case 2:
              if (a = v.sent, this.ipInfo = a, !this.roomDetails) {
                v.next = 6;
                break;
              }
              return v.abrupt("return", this.roomDetails);
            case 6:
              return v.t0 = Fn, v.next = 9, this.requests.post("v2/internals/rooms", { ip_information: a });
            case 9:
              return v.t1 = v.sent.data.data, i = (0, v.t0)(v.t1), s = i.roomNodeLink, u = i.title, c = i.useHiveMedia, d = i.sfu, v.abrupt("return", { roomNodeUrl: s, meetingTitle: u, useHiveMedia: c != null ? c : !1, sfu: d });
            case 16:
            case "end":
              return v.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(mA);
Pn([D.trace("APIClient.getIPDetails")], sn.prototype, "getIPDetails", 1);
Pn([D.trace("APIClient.getICEServers")], sn.prototype, "getICEServers", 1);
Pn([D.trace("APIClient.getPlugins")], sn.prototype, "getPlugins", 1);
Pn([D.trace("APIClient.startLivestreaming")], sn.prototype, "startLivestreaming", 1);
Pn([D.trace("APIClient.stopLivestreaming")], sn.prototype, "stopLivestreaming", 1);
Pn([D.trace("APIClient.getActiveLivestream")], sn.prototype, "getActiveLivestream", 1);
Pn([D.trace("APIClient.getUserDetails")], sn.prototype, "getUserDetails", 1);
Pn([D.trace("APIClient.startRecording")], sn.prototype, "startRecording", 1);
Pn([D.trace("APIClient.stopRecording")], sn.prototype, "updateRecording", 1);
Pn([D.trace("APIClient.getActiveRecording")], sn.prototype, "getActiveRecording", 1);
Pn([D.trace("APIClient.getActiveTranscript")], sn.prototype, "getActiveTranscript", 1);
Pn([D.trace("APIClient.getRoomNodeData")], sn.prototype, "getRoomNodeData", 1);
var Ud;
function bA(o, t) {
  return Ud = new sn(o, t), Ud;
}
function pt() {
  return Ud;
}
function TA(o, t) {
  var e = t.replace(/<blockquote>[.\s\S]*<\/blockquote>\n\n/m, "");
  return "<blockquote>".concat(e, `</blockquote>

`).concat(o);
}
var zo = { maxInvocations: 5, period: 1 };
function Nt(o, t) {
  return function(e, r, n) {
    var a = n.value, i = 0, s = Date.now();
    return n.value = function() {
      var u = Date.now(), c = t ? this[t] : o;
      if (u - s > c.period * 1e3 && (s = u, i = 0), i >= c.maxInvocations)
        throw new U("Method rate limit ".concat(c.maxInvocations, " invocations/").concat(c.period, "sec exceeded"), "0013");
      i += 1;
      for (var d = arguments.length, h = new Array(d), v = 0; v < d; v++)
        h[v] = arguments[v];
      return a.apply(this, h);
    }, n;
  };
}
var wA = Object.defineProperty, PA = Object.getOwnPropertyDescriptor, ft = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? PA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && wA(e, r, a), a;
}, SA = ["text", "image", "file", "custom", "poll"], Hl = { maxInvocations: 180, period: 60 }, rt = (Y = /* @__PURE__ */ E("self"), zn = /* @__PURE__ */ E("participants"), $e = /* @__PURE__ */ E("chatSocketHandler"), Yn = /* @__PURE__ */ E("chatChannelSocketHandler"), da = /* @__PURE__ */ E("context"), Wl = /* @__PURE__ */ E("connectionHandler"), vo = /* @__PURE__ */ E("socketJoined"), /* @__PURE__ */ function(o) {
  function t(e, r, n, a, i) {
    var s;
    w(this, t);
    var u = e.getValue("logger");
    return s = C(this, t, [u]), Object.defineProperty(s, vo, { get: CA, set: void 0 }), Object.defineProperty(s, Wl, { get: EA, set: void 0 }), s.messages = void 0, s.channels = [], Object.defineProperty(s, Y, { writable: !0, value: void 0 }), Object.defineProperty(s, zn, { writable: !0, value: void 0 }), Object.defineProperty(s, $e, { writable: !0, value: void 0 }), Object.defineProperty(s, Yn, { writable: !0, value: void 0 }), Object.defineProperty(s, da, { writable: !0, value: void 0 }), s.maxTextLimit = 2e3, l(s, da)[da] = e, l(s, $e)[$e] = r, l(s, Yn)[Yn] = n, l(s, Y)[Y] = a, l(s, zn)[zn] = i, s.messages = [], s;
  }
  return R(t, o), P(t, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, da)[da].getValue("telemetry");
      }
    )
    /**
    	Set the max character limit of a text message
    */
  }, { key: "setMaxTextLimit", value: function(r) {
    this.maxTextLimit = r;
  } }, { key: "sendMessageInternal", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u, c, d = arguments;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              u = d.length > 3 && d[3] !== void 0 ? d[3] : {}, v.t0 = a.type, v.next = v.t0 === "text" ? 4 : v.t0 === "image" ? 8 : v.t0 === "file" ? 11 : 14;
              break;
            case 4:
              return c = u.replyTo && u.replyTo.type === "text" ? TA(a.message, u.replyTo.message) : a.message, v.next = 7, this.sendTextMessageInternal(c, i, s);
            case 7:
              return v.abrupt("break", 16);
            case 8:
              return v.next = 10, this.sendImageMessageInternal(a.image, i, s);
            case 10:
              return v.abrupt("break", 16);
            case 11:
              return v.next = 13, this.sendFileMessageInternal(a.file, i, s);
            case 13:
              return v.abrupt("break", 16);
            case 14:
              return this.logger.error("sendMessage::message_type_not_supported", { dyteChat: { messageType: a.type } }), v.abrupt("break", 16);
            case 16:
            case "end":
              return v.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendTextMessageInternal", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u, c, d, h, v;
      return p().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (!(a.length > this.maxTextLimit)) {
                g.next = 2;
                break;
              }
              throw new U("Max character limit breached", "0503");
            case 2:
              if (!(i && i.length > 0)) {
                g.next = 8;
                break;
              }
              if (!(!((d = l(this, Y)[Y].permissions) !== null && d !== void 0 && d.chatPrivate.canSend) || !((h = l(this, Y)[Y].permissions) !== null && h !== void 0 && h.chatPrivate.text))) {
                g.next = 6;
                break;
              }
              throw this.logger.error("sendTextMessage::private_chat_permission_denied"), new U("Could not send message to private chat.", "0501");
            case 6:
              g.next = 11;
              break;
            case 8:
              if (!(!((u = l(this, Y)[Y].permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((c = l(this, Y)[Y].permissions) !== null && c !== void 0 && (c = c.chatPublic) !== null && c !== void 0 && c.text))) {
                g.next = 11;
                break;
              }
              throw this.logger.error("sendTextMessage::public_chat_permission_denied"), new U("Could not send message to public chat.", "0501");
            case 11:
              if (a) {
                g.next = 14;
                break;
              }
              throw this.logger.error("sendTextMessage::message_can_not_be_empty"), new U("Message can not be empty.", "0502");
            case 14:
              if (!s) {
                g.next = 17;
                break;
              }
              return l(this, $e)[$e].sendMessageToChannel(a, wt.TEXT, s), g.abrupt("return");
            case 17:
              v = [], i && i.length > 0 && (i.push(l(this, Y)[Y].id), v = l(this, zn)[zn].joined.toArray().filter(function(k) {
                return i.includes(k.id);
              }).map(function(k) {
                return k.userId;
              }), v.push(l(this, Y)[Y].userId)), l(this, $e)[$e].sendMessage(a, wt.TEXT, i);
            case 20:
            case "end":
              return g.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendImageMessageInternal", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u, c, d, h, v, f, g, k, y, b;
      return p().wrap(function(T) {
        for (; ; )
          switch (T.prev = T.next) {
            case 0:
              if (!(i && i.length > 0)) {
                T.next = 6;
                break;
              }
              if (!(!((d = l(this, Y)[Y].permissions) !== null && d !== void 0 && d.chatPrivate.canSend) || !((h = l(this, Y)[Y].permissions) !== null && h !== void 0 && h.chatPrivate.files))) {
                T.next = 4;
                break;
              }
              return this.logger.error("sendImageMessage::private_chat_permission_denied"), T.abrupt("return");
            case 4:
              T.next = 9;
              break;
            case 6:
              if (!(!((u = l(this, Y)[Y].permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((c = l(this, Y)[Y].permissions) !== null && c !== void 0 && (c = c.chatPublic) !== null && c !== void 0 && c.files))) {
                T.next = 9;
                break;
              }
              return this.logger.error("sendImageMessage::permission_denied"), T.abrupt("return");
            case 9:
              if (a) {
                T.next = 12;
                break;
              }
              return this.logger.error("sendImageMessage::required_argument_image_can_not_be_empty"), T.abrupt("return");
            case 12:
              if (v = ["image/gif", "image/jpeg", "image/png"], v.includes(a.type)) {
                T.next = 16;
                break;
              }
              return this.logger.error("sendImageMessage::image_type_not_supported", { dyteChat: { imageType: a.type } }), T.abrupt("return");
            case 16:
              return T.prev = 16, f = pt(), T.next = 20, f.getPresignedUrls(a.name, l(this, Y)[Y].config.viewType);
            case 20:
              return g = T.sent, k = g.getLocation, y = g.putLocation, T.next = 25, f.uploadFile(a, y);
            case 25:
              if (!s) {
                T.next = 28;
                break;
              }
              return l(this, $e)[$e].sendMessageToChannel(k, wt.IMAGE, s), T.abrupt("return");
            case 28:
              b = [], i && i.length > 0 && (i.push(l(this, Y)[Y].id), b = l(this, zn)[zn].joined.toArray().filter(function(A) {
                return i.includes(A.id);
              }).map(function(A) {
                return A.userId;
              }), b.push(l(this, Y)[Y].userId)), l(this, $e)[$e].sendMessage(k, wt.IMAGE, i), T.next = 36;
              break;
            case 33:
              throw T.prev = 33, T.t0 = T.catch(16), new U("Error sending image message.", "0500", this.logger);
            case 36:
            case "end":
              return T.stop();
          }
      }, n, this, [[16, 33]]);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "sendFileMessageInternal",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
        var u, c, d, h, v, f, g, k, y, b;
        return p().wrap(function(T) {
          for (; ; )
            switch (T.prev = T.next) {
              case 0:
                if (!(i && i.length > 0)) {
                  T.next = 6;
                  break;
                }
                if (!(!((d = l(this, Y)[Y].permissions) !== null && d !== void 0 && d.chatPrivate.canSend) || !((h = l(this, Y)[Y].permissions) !== null && h !== void 0 && h.chatPrivate.files))) {
                  T.next = 4;
                  break;
                }
                return this.logger.error("sendFileMessage::private_chat_permission_denied"), T.abrupt("return");
              case 4:
                T.next = 9;
                break;
              case 6:
                if (!(!((u = l(this, Y)[Y].permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((c = l(this, Y)[Y].permissions) !== null && c !== void 0 && (c = c.chatPublic) !== null && c !== void 0 && c.files))) {
                  T.next = 9;
                  break;
                }
                return this.logger.error("sendFileMessage::permission_denied"), T.abrupt("return");
              case 9:
                if (a) {
                  T.next = 12;
                  break;
                }
                return this.logger.error("sendFileMessage::required_argument_file_can_not_be_empty"), T.abrupt("return");
              case 12:
                return T.prev = 12, v = pt(), T.next = 16, v.getPresignedUrls(a.name, l(this, Y)[Y].config.viewType);
              case 16:
                return f = T.sent, g = f.getLocation, k = f.putLocation, T.next = 21, v.uploadFile(a, k);
              case 21:
                if (!s) {
                  T.next = 24;
                  break;
                }
                return l(this, $e)[$e].sendMessageToChannel(JSON.stringify({ link: g, name: a.name, size: "size" in a ? a.size : 0 }), wt.FILE, s), T.abrupt("return");
              case 24:
                y = [], i && i.length > 0 && (i.push(l(this, Y)[Y].id), y = l(this, zn)[zn].joined.toArray().filter(function(A) {
                  return i.includes(A.id);
                }).map(function(A) {
                  return A.userId;
                }), y.push(l(this, Y)[Y].userId)), b = JSON.stringify({ link: g, name: a.name, size: "size" in a ? a.size : 0 }), l(this, $e)[$e].sendMessage(b, wt.FILE, i), T.next = 33;
                break;
              case 30:
                throw T.prev = 30, T.t0 = T.catch(12), new U("Error sending file message.", "0500", this.logger);
              case 33:
              case "end":
                return T.stop();
            }
        }, n, this, [[12, 30]]);
      }));
      function r(n, a, i) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "rateLimits",
    get: function() {
      return Hl;
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "updateRateLimits", value: function(r, n) {
    Hl.maxInvocations = r, Hl.period = n;
  } }, { key: "sendTextMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendTextMessageInternal(a, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendCustomMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c, d = this, h, v, f, g, k, y, b, S, T, A, L;
      return p().wrap(function(M) {
        for (; ; )
          switch (M.prev = M.next) {
            case 0:
              if (!(i && i.length > 0)) {
                M.next = 6;
                break;
              }
              if (!(!((b = l(this, Y)[Y].permissions) !== null && b !== void 0 && b.chatPrivate.canSend) || !((S = l(this, Y)[Y].permissions) !== null && S !== void 0 && S.chatPrivate.files) || !((T = l(this, Y)[Y].permissions) !== null && T !== void 0 && T.chatPrivate.text))) {
                M.next = 4;
                break;
              }
              return this.logger.error("sendCustomMessage::private_chat_permission_denied"), M.abrupt("return");
            case 4:
              M.next = 9;
              break;
            case 6:
              if (!(!((s = l(this, Y)[Y].permissions) !== null && s !== void 0 && (s = s.chatPublic) !== null && s !== void 0 && s.canSend) || !((u = l(this, Y)[Y].permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.files) || !((c = l(this, Y)[Y].permissions) !== null && c !== void 0 && (c = c.chatPublic) !== null && c !== void 0 && c.text))) {
                M.next = 9;
                break;
              }
              return this.logger.error("sendCustomMessage::permission_denied"), M.abrupt("return");
            case 9:
              return A = /* @__PURE__ */ function() {
                var V = m(/* @__PURE__ */ p().mark(function j($) {
                  var O, B, Q, F;
                  return p().wrap(function(q) {
                    for (; ; )
                      switch (q.prev = q.next) {
                        case 0:
                          if (q.prev = 0, typeof $ != "string") {
                            q.next = 3;
                            break;
                          }
                          return q.abrupt("return", { link: $ });
                        case 3:
                          return O = pt(), q.next = 6, O.getPresignedUrls($.name, l(d, Y)[Y].config.viewType);
                        case 6:
                          return B = q.sent, Q = B.getLocation, F = B.putLocation, q.next = 11, O.uploadFile($, F);
                        case 11:
                          return q.abrupt("return", { link: Q, type: $.type, name: $.name, size: $.size });
                        case 14:
                          throw q.prev = 14, q.t0 = q.catch(0), new U("Error sending image message.", "0500", d.logger);
                        case 17:
                        case "end":
                          return q.stop();
                      }
                  }, j, null, [[0, 14]]);
                }));
                return function($) {
                  return V.apply(this, arguments);
                };
              }(), M.t0 = N, M.t1 = N({}, a), M.t2 = {}, M.next = 15, Promise.all((h = (v = a.files) !== null && v !== void 0 ? v : []) === null || h === void 0 ? void 0 : h.map(/* @__PURE__ */ function() {
                var V = m(/* @__PURE__ */ p().mark(function j($) {
                  return p().wrap(function(B) {
                    for (; ; )
                      switch (B.prev = B.next) {
                        case 0:
                          return B.abrupt("return", A($));
                        case 1:
                        case "end":
                          return B.stop();
                      }
                  }, j);
                }));
                return function(j) {
                  return V.apply(this, arguments);
                };
              }()));
            case 15:
              return M.t3 = M.sent, M.next = 18, Promise.all((f = (g = a.images) !== null && g !== void 0 ? g : []) === null || f === void 0 ? void 0 : f.map(/* @__PURE__ */ function() {
                var V = m(/* @__PURE__ */ p().mark(function j($) {
                  return p().wrap(function(B) {
                    for (; ; )
                      switch (B.prev = B.next) {
                        case 0:
                          return B.abrupt("return", A($));
                        case 1:
                        case "end":
                          return B.stop();
                      }
                  }, j);
                }));
                return function(j) {
                  return V.apply(this, arguments);
                };
              }()));
            case 18:
              return M.t4 = M.sent, M.next = 21, Promise.all((k = (y = a.videos) !== null && y !== void 0 ? y : []) === null || k === void 0 ? void 0 : k.map(/* @__PURE__ */ function() {
                var V = m(/* @__PURE__ */ p().mark(function j($) {
                  return p().wrap(function(B) {
                    for (; ; )
                      switch (B.prev = B.next) {
                        case 0:
                          return B.abrupt("return", A($));
                        case 1:
                        case "end":
                          return B.stop();
                      }
                  }, j);
                }));
                return function(j) {
                  return V.apply(this, arguments);
                };
              }()));
            case 21:
              M.t5 = M.sent, M.t6 = { files: M.t3, images: M.t4, videos: M.t5 }, L = (0, M.t0)(M.t1, M.t2, M.t6), l(this, $e)[$e].sendMessage(JSON.stringify(L), wt.CUSTOM, i);
            case 25:
            case "end":
              return M.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendImageMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendImageMessageInternal(a, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendFileMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendFileMessageInternal(a, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendMessageInternal(a, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "editTextMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (((u = l(this, Y)[Y].permissions) === null || u === void 0 || (u = u.chatMessage) === null || u === void 0 ? void 0 : u.canEdit) !== "NONE") {
                v.next = 2;
                break;
              }
              throw new U("Not permitted to edit messages", "0501");
            case 2:
              if (!(!((c = l(this, Y)[Y].permissions) !== null && c !== void 0 && (c = c.chatPublic) !== null && c !== void 0 && c.canSend) || !((d = l(this, Y)[Y].permissions) !== null && d !== void 0 && (d = d.chatPublic) !== null && d !== void 0 && d.text))) {
                v.next = 5;
                break;
              }
              return this.logger.error("editTextMessage::permission_denied"), v.abrupt("return");
            case 5:
              if (i) {
                v.next = 8;
                break;
              }
              return this.logger.error("editTextMessage::message_can_not_be_empty"), v.abrupt("return");
            case 8:
              l(this, $e)[$e].editMessage(a, i, wt.TEXT, s);
            case 9:
            case "end":
              return v.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "editImageMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u, c, d, h, v, f, g;
      return p().wrap(function(y) {
        for (; ; )
          switch (y.prev = y.next) {
            case 0:
              if (!(!((u = l(this, Y)[Y].permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((c = l(this, Y)[Y].permissions) !== null && c !== void 0 && (c = c.chatPublic) !== null && c !== void 0 && c.files))) {
                y.next = 3;
                break;
              }
              return this.logger.error("editImageMessage::permission_denied"), y.abrupt("return");
            case 3:
              if (i) {
                y.next = 6;
                break;
              }
              return this.logger.error("editImageMessage::required_argument_image_can_not_be_empty"), y.abrupt("return");
            case 6:
              if (d = ["image/gif", "image/jpeg", "image/png"], d.includes(i.type)) {
                y.next = 10;
                break;
              }
              return this.logger.error("sendImageMessage::image_type_not_supported", { dyteChat: { imageType: i.type } }), y.abrupt("return");
            case 10:
              return y.prev = 10, h = pt(), y.next = 14, h.getPresignedUrls(i.name, l(this, Y)[Y].config.viewType);
            case 14:
              return v = y.sent, f = v.getLocation, g = v.putLocation, y.next = 19, h.uploadFile(i, g);
            case 19:
              l(this, $e)[$e].editMessage(a, f, wt.IMAGE, s), y.next = 25;
              break;
            case 22:
              throw y.prev = 22, y.t0 = y.catch(10), new U("Error editing image message.", "0500", this.logger);
            case 25:
            case "end":
              return y.stop();
          }
      }, n, this, [[10, 22]]);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "editFileMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u, c, d, h, v, f;
      return p().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (!(!((u = l(this, Y)[Y].permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((c = l(this, Y)[Y].permissions) !== null && c !== void 0 && (c = c.chatPublic) !== null && c !== void 0 && c.files))) {
                k.next = 3;
                break;
              }
              return this.logger.error("sendFileMessage::permission_denied"), k.abrupt("return");
            case 3:
              if (i) {
                k.next = 6;
                break;
              }
              return this.logger.error("sendFileMessage::required_argument_file_can_not_be_empty"), k.abrupt("return");
            case 6:
              return k.prev = 6, d = pt(), k.next = 10, d.getPresignedUrls(i.name, l(this, Y)[Y].config.viewType);
            case 10:
              return h = k.sent, v = h.getLocation, f = h.putLocation, k.next = 15, d.uploadFile(i, f);
            case 15:
              l(this, $e)[$e].editMessage(a, JSON.stringify({ link: v, name: i.name, size: "size" in i ? i.size : 0 }), wt.FILE, s), k.next = 21;
              break;
            case 18:
              throw k.prev = 18, k.t0 = k.catch(6), new U("Error editing file message.", "0500", this.logger);
            case 21:
            case "end":
              return k.stop();
          }
      }, n, this, [[6, 18]]);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "editMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              c.t0 = i.type, c.next = c.t0 === "text" ? 3 : c.t0 === "image" ? 5 : c.t0 === "file" ? 7 : 9;
              break;
            case 3:
              return this.editTextMessage(a, i.message, s), c.abrupt("break", 11);
            case 5:
              return this.editImageMessage(a, i.image, s), c.abrupt("break", 11);
            case 7:
              return this.editFileMessage(a, i.file, s), c.abrupt("break", 11);
            case 9:
              return this.logger.error("editMessage::message_type_not_supported", { dyteChat: { messageType: i.type } }), c.abrupt("break", 11);
            case 11:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "deleteMessage",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
        var s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                if (((s = l(this, Y)[Y].permissions) === null || s === void 0 || (s = s.chatMessage) === null || s === void 0 ? void 0 : s.canDelete) !== "NONE") {
                  c.next = 2;
                  break;
                }
                throw new U("Not permitted to delete messages", "0501");
              case 2:
                l(this, $e)[$e].deleteMessage(a, i);
              case 3:
              case "end":
                return c.stop();
            }
        }, n, this);
      }));
      function r(n, a) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Returns an array of messages sent by a specific userId.
    * @param userId The user id of the user that sent the message.
    */
  }, {
    key: "getMessagesByUser",
    value: function(r) {
      return this.messages.filter(function(n) {
        return n.userId === r;
      });
    }
    /**
    * Returns an array of 'text', 'image' or 'file' messages.
    * @param type 'text', 'image', or 'file'.
    */
  }, {
    key: "getMessagesByType",
    value: function(r) {
      return this.messages.filter(function(n) {
        return n.type === r;
      });
    }
    /**
    * Pins a chat message
    * @param id ID of the message to be pinned
    */
  }, { key: "pin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (l(this, vo)[vo]) {
                u.next = 2;
                break;
              }
              throw new U("Can`t pin message without joining room", "0505");
            case 2:
              if (l(this, Y)[Y].permissions.pinParticipant) {
                u.next = 4;
                break;
              }
              throw new U("You do not have permission to pin messages.", "0501");
            case 4:
              if (i = this.messages.find(function(c) {
                return c.id === a;
              }), !i) {
                u.next = 8;
                break;
              }
              return l(this, $e)[$e].setPinState(i, !0), u.abrupt("return");
            case 8:
              throw new U("No message found with id: ".concat(a), "0504");
            case 9:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "unpin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (l(this, vo)[vo]) {
                u.next = 2;
                break;
              }
              throw new U("Can`t unpin message without joining room", "0505");
            case 2:
              if (l(this, Y)[Y].permissions.pinParticipant) {
                u.next = 4;
                break;
              }
              throw new U("You do not have permission to unpin messages.", "0501");
            case 4:
              if (i = this.messages.find(function(c) {
                return c.id === a;
              }), !i) {
                u.next = 8;
                break;
              }
              return l(this, $e)[$e].setPinState(i, !1), u.abrupt("return");
            case 8:
              throw new U("No message found with id: ".concat(a), "0504");
            case 9:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getMessages", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u, c, d, h = arguments;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              return u = h.length > 3 && h[3] !== void 0 ? h[3] : 0, c = h.length > 4 && h[4] !== void 0 ? h[4] : void 0, f.next = 4, l(this, $e)[$e].getChatMessagesPaginated(a, i, s, u, c);
            case 4:
              return d = f.sent, f.abrupt("return", { messages: d.messages.map(function(g) {
                return jn.formatSocketServiceMessage(g);
              }), next: d.next });
            case 6:
            case "end":
              return f.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "createChannel", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c, d, h, v = arguments;
      return p().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (u = v.length > 2 && v[2] !== void 0 ? v[2] : {}, c = (s = l(this, Y)[Y].permissions) === null || s === void 0 ? void 0 : s.chatChannel, !c) {
                g.next = 9;
                break;
              }
              if (c.canCreate !== "NONE") {
                g.next = 5;
                break;
              }
              throw new U("Not permitted to create channels", "0501");
            case 5:
              if (!(u.visibility === "public" && !(c.canCreate === "PUBLIC" || c.canCreate === "ALL"))) {
                g.next = 7;
                break;
              }
              throw new U("Not permitted to create public channels", "0501");
            case 7:
              if (!(u.visibility === "private" && !(c.canCreate === "PRIVATE" || c.canCreate === "ALL"))) {
                g.next = 9;
                break;
              }
              throw new U("Not permitted to create private channels", "0501");
            case 9:
              if (!(!a || a.trim().length === 0)) {
                g.next = 11;
                break;
              }
              throw new U("channel name cannot be empty.", "0510");
            case 11:
              return d = ke(/* @__PURE__ */ new Set([].concat(ke(i), [l(this, Y)[Y].userId]))), g.next = 14, l(this, Yn)[Yn].createChannel(a.trim(), d, u.displayPictureUrl, u.visibility, u.isDirectMessage);
            case 14:
              return h = g.sent, g.abrupt("return", h);
            case 16:
            case "end":
              return g.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateChannel", value: function(r, n) {
    var a, i, s, u, c, d = this.channels.find(function(f) {
      return f.id === r;
    }), h = (a = l(this, Y)[Y].permissions) === null || a === void 0 ? void 0 : a.chatChannel;
    if (h) {
      if (h.canUpdate === "NONE")
        throw new U("Not permitted to update channels", "0501");
      if (d.visibility === "public" && !(h.canUpdate === "PUBLIC" || h.canUpdate === "ALL"))
        throw new U("Not permitted to update public channels", "0501");
      if (d.visibility === "private" && !(h.canUpdate === "PRIVATE" || h.canUpdate === "ALL"))
        throw new U("Not permitted to update private channels", "0501");
    }
    var v = { memberIds: (i = n.memberIds) !== null && i !== void 0 ? i : d.memberIds, displayName: (s = n.displayName) !== null && s !== void 0 ? s : d.displayName, displayPictureUrl: (u = n.displayPictureUrl) !== null && u !== void 0 ? u : d.displayPictureUrl, visibility: (c = n.visibility) !== null && c !== void 0 ? c : d.visibility };
    return l(this, Yn)[Yn].updateChannel(r, v);
  } }, { key: "sendMessageToChannel", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u = arguments;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return s = u.length > 2 && u[2] !== void 0 ? u[2] : {}, d.abrupt("return", this.sendMessageInternal(a, null, i, s));
            case 2:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getChannelMembers", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", l(this, Yn)[Yn].getChannelMembers(a));
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "searchMessages", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u = arguments;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (i = u.length > 1 && u[1] !== void 0 ? u[1] : {}, l(this, da)[da].getValue("flagsmith").hasFeature(ve.FEAT_CHAT_SDK_SEARCH)) {
                d.next = 3;
                break;
              }
              throw new U("searchMessages is temporarily disabled!", "0506");
            case 3:
              return d.next = 5, l(this, $e)[$e].searchMessages(a, i);
            case 5:
              return s = d.sent, d.abrupt("return", s.map(jn.formatSocketServiceMessage));
            case 7:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "markLastReadMessage",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
        var s, u;
        return p().wrap(function(d) {
          for (; ; )
            switch (d.prev = d.next) {
              case 0:
                return d.next = 2, l(this, $e)[$e].markLastReadMessage(a, i);
              case 2:
                s = this.channels.find(function(h) {
                  return h.id === a;
                }), s && (u = N(N({}, s), {}, { unreadCount: 0 }), this.channels = this.channels.map(function(h) {
                  return h.id === a ? u : h;
                }), this.emit("channelMessageUpdate", u));
              case 4:
              case "end":
                return d.stop();
            }
        }, n, this);
      }));
      function r(n, a) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Returns an array of pinned messages.
    */
  }, { key: "pinned", get: function() {
    return this.messages.filter(function(r) {
      return r.pinned;
    });
  } }]);
}(an));
function EA() {
  return l(this, da)[da].getValue("connectionHandler");
}
function CA() {
  return l(this, Wl)[Wl].socketJoined === !0;
}
ft([D.trace("DyteChat.sendTextMessage"), Nt(Hl)], rt.prototype, "sendTextMessage", 1);
ft([D.trace("DyteChat.sendImageMessage"), Nt({ maxInvocations: 20, period: 60 })], rt.prototype, "sendImageMessage", 1);
ft([D.trace("DyteChat.sendFileMessage"), Nt({ maxInvocations: 20, period: 60 })], rt.prototype, "sendFileMessage", 1);
ft([D.trace("DyteChat.sendMessage"), Nt({ maxInvocations: 180, period: 60 })], rt.prototype, "sendMessage", 1);
ft([D.trace("DyteChat.editTextMessage")], rt.prototype, "editTextMessage", 1);
ft([D.trace("DyteChat.editImageMessage")], rt.prototype, "editImageMessage", 1);
ft([D.trace("DyteChat.editFileMessage")], rt.prototype, "editFileMessage", 1);
ft([D.trace("DyteChat.editMessage")], rt.prototype, "editMessage", 1);
ft([D.trace("DyteChat.deleteMessage")], rt.prototype, "deleteMessage", 1);
ft([D.trace("DyteChat.createChannel")], rt.prototype, "createChannel", 1);
ft([D.trace("DyteChat.updateChannel")], rt.prototype, "updateChannel", 1);
ft([D.trace("DyteChat.sendMessageToChannel")], rt.prototype, "sendMessageToChannel", 1);
ft([D.trace("DyteChat.getChannelMembers")], rt.prototype, "getChannelMembers", 1);
ft([D.trace("DyteChat.searchMessages")], rt.prototype, "searchMessages", 1);
ft([D.trace("DyteChat.markLastReadMessage")], rt.prototype, "markLastReadMessage", 1);
rt = ft([vt("0500")], rt);
var RA = Object.defineProperty, AA = Object.getOwnPropertyDescriptor, IA = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? AA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && RA(e, r, a), a;
}, Os = (dn = /* @__PURE__ */ E("context"), /* @__PURE__ */ function() {
  function o(t, e, r, n, a) {
    w(this, o), this.chat = void 0, this.chatSocketHandler = void 0, this.chatChannelSocketHandler = void 0, this.self = void 0, Object.defineProperty(this, dn, { writable: !0, value: void 0 }), l(this, dn)[dn] = t, this.chatSocketHandler = e, this.chatChannelSocketHandler = r, this.chat = new rt(t, e, r, n, a), this.self = n, this.setupEvents();
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, dn)[dn].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, dn)[dn].getValue("logger");
  } }, { key: "getChatMessages", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!(this.self.config.viewType === "LIVESTREAM" || this.self.config.viewType === "CHAT" || l(this, dn)[dn].getValue("flagsmith").hasFeature(ve.FEAT_PAGINATED_CHAT))) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              return s.next = 4, this.chatSocketHandler.getChatMessages();
            case 4:
              if (n = s.sent, n != null && n.payload) {
                s.next = 7;
                break;
              }
              return s.abrupt("return");
            case 7:
              a = tg.fromBinary(n.payload).messages, this.chat.messages = a.map(function(u) {
                return Os.formatSocketServiceMessage(u);
              });
            case 9:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupEvents", value: function() {
    var e = this;
    l(this, dn)[dn].getValue("peerSessionStore").on(H.SOCKET_SERVICE_ROOM_JOINED, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              e.getChatMessages();
            case 1:
            case "end":
              return a.stop();
          }
      }, r);
    }))), this.chatSocketHandler.on(Ir.sendMessageToRoom, function(r) {
      var n = Os.formatSocketServiceMessage(r.message);
      if (!n.channelId)
        e.chat.messages = [].concat(ke(e.chat.messages), [n]);
      else {
        var a = e.chat.channels.find(function(i) {
          return i.id === n.channelId;
        });
        a && (a.latestMessage = n, a.unreadCount += 1, e.chat.emit("channelMessageUpdate", a));
      }
      e.chat.emit("chatUpdate", { action: "add", message: n, messages: e.chat.messages });
    }), this.chatSocketHandler.on(Ir.sendMessageToPeers, function(r) {
      var n = Os.formatSocketServiceMessage(r.message);
      e.chat.messages = [].concat(ke(e.chat.messages), [n]), e.chat.emit("chatUpdate", { action: "add", message: n, messages: e.chat.messages });
    }), this.chatSocketHandler.on(Ir.editMessage, function(r) {
      var n = Os.formatSocketServiceMessage(r.message);
      if (n.channelId) {
        e.chat.emit("chatUpdate", { action: "edit", message: n, messages: e.chat.messages });
        return;
      }
      var a = e.chat.messages.findIndex(function(i) {
        return i.id === n.id;
      });
      a !== -1 && (e.chat.messages[a] = n, e.chat.emit("chatUpdate", { action: "edit", message: n, messages: e.chat.messages }));
    }), this.chatSocketHandler.on(Ir.deleteMessage, function(r) {
      if (r.channelId) {
        e.chat.emit("chatUpdate", { action: "delete", message: { id: r.chatId, channelId: r.channelId }, messages: e.chat.messages });
        return;
      }
      var n = e.chat.messages.findIndex(function(u) {
        return u.id === r.chatId;
      });
      if (n !== -1) {
        var a = e.chat.messages.splice(n, 1), i = Me(a, 1), s = i[0];
        e.chat.emit("chatUpdate", { action: "delete", message: s, messages: e.chat.messages });
      }
    }), this.chatChannelSocketHandler.on($s.createChatChannel, function(r) {
      var n = Me(r.chatChannels, 1), a = n[0], i = to.formatChannel(a);
      e.chat.channels.push(i), e.chat.emit("channelCreate", i);
    }), this.chatSocketHandler.on(Ir.pinMessage, function(r) {
      var n = e.chat.messages.findIndex(function(i) {
        return i.id === r.chatId;
      });
      if (n !== -1) {
        var a = e.chat.messages[n];
        a.pinned = r.pinned, e.chat.messages[n] = a, e.chat.emit("chatUpdate", { action: "edit", message: a, messages: e.chat.messages });
      }
    }), this.chatChannelSocketHandler.on($s.updateChatChannel, function(r) {
      var n = Me(r.chatChannels, 1), a = n[0], i = to.formatChannel(a);
      e.chat.channels = e.chat.channels.map(function(s) {
        return s.id === i.id ? i : s;
      }), e.chat.emit("channelUpdate", i);
    });
  } }], [{ key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i, s, u) {
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return d.abrupt("return", new Os(n, a, i, s, u));
            case 1:
            case "end":
              return d.stop();
          }
      }, r);
    }));
    function e(r, n, a, i, s) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "formatMessage",
    value: function(e) {
      return N(N({}, e), {}, { time: new Date(e.time), type: SA[e.type] });
    }
    /**
    * @access private
    * This function formates the chat message coming from
    * socket service. This is not meant for external use.
    */
  }, { key: "formatSocketServiceMessage", value: function(e) {
    var r = e.createdAt * 1e3, n = { displayName: e.displayName, id: e.chatId, time: r, timeMs: e.createdAtMs, type: e.payloadType, isEdited: e.isEdited, userId: e.userId, targetUserIds: e.targetUserIds, channelId: e.channelId, channelIndex: e.channelIndex, message: "", link: "", name: "", html: "", images: [], videos: [], files: [], size: 0, pinned: e.pinned };
    switch (n.type) {
      case wt.TEXT: {
        n.message = e.payload;
        break;
      }
      case wt.IMAGE: {
        n.link = e.payload;
        break;
      }
      case wt.FILE: {
        var a = JSON.parse(e.payload), i = a.link, s = a.name, u = a.size;
        n.link = i, n.name = s, n.size = u;
        break;
      }
      case wt.CUSTOM: {
        var c = JSON.parse(e.payload), d = c.html, h = c.images, v = c.message, f = c.videos, g = c.files;
        n.message = v, n.html = d, n.images = h, n.videos = f, n.files = g;
        break;
      }
    }
    return Os.formatMessage(n);
  } }]);
}()), jn = Os;
IA([D.trace("ChatController.setupEvents")], jn.prototype, "setupEvents", 1);
var _A = Object.defineProperty, MA = Object.getOwnPropertyDescriptor, DA = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? MA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && _A(e, r, a), a;
}, jd = (Jl = /* @__PURE__ */ E("connectionHandler"), ml = /* @__PURE__ */ E("socketJoined"), si = /* @__PURE__ */ E("self"), oi = /* @__PURE__ */ E("pollSocketHandler"), Do = /* @__PURE__ */ E("context"), /* @__PURE__ */ function(o) {
  function t(e, r, n) {
    var a;
    w(this, t);
    var i = e.getValue("logger");
    return a = C(this, t, [i]), Object.defineProperty(a, ml, { get: LA, set: void 0 }), Object.defineProperty(a, Jl, { get: OA, set: void 0 }), a.items = void 0, Object.defineProperty(a, si, { writable: !0, value: void 0 }), Object.defineProperty(a, oi, { writable: !0, value: void 0 }), Object.defineProperty(a, Do, { writable: !0, value: void 0 }), l(a, Do)[Do] = e, l(a, si)[si] = r, l(a, oi)[oi] = n, a.items = [], a;
  }
  return R(t, o), P(t, [{ key: "create", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c = arguments;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (s = c.length > 2 && c[2] !== void 0 ? c[2] : !1, u = c.length > 3 && c[3] !== void 0 ? c[3] : !1, l(this, ml)[ml]) {
                h.next = 4;
                break;
              }
              throw new U("Can't create polls without joining room", "0705");
            case 4:
              if (l(this, si)[si].permissions.polls.canCreate) {
                h.next = 7;
                break;
              }
              return this.logger.error("DytePolls::create::permission_denied"), h.abrupt("return");
            case 7:
              if (!(!a || !i)) {
                h.next = 10;
                break;
              }
              return this.logger.error("DytePolls::question_and_options_can_not_be_empty", { dytePolls: { hasQuestion: !!a, optionsLength: i == null ? void 0 : i.length } }), h.abrupt("return");
            case 10:
              if (!(i.length < 2)) {
                h.next = 13;
                break;
              }
              return this.logger.error("DytePolls::there_must_be_at_least_two_options", { dytePolls: { hasQuestion: !!a, optionsLength: i.length } }), h.abrupt("return");
            case 13:
              return h.next = 15, l(this, oi)[oi].createPoll(a, i, s, u);
            case 15:
            case "end":
              return h.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "vote", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (l(this, si)[si].permissions.polls.canVote) {
                u.next = 3;
                break;
              }
              return this.logger.error("DytePolls::vote::permission_denied"), u.abrupt("return");
            case 3:
              return u.next = 5, l(this, oi)[oi].votePoll(a, i);
            case 5:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(an));
function OA() {
  return l(this, Do)[Do].getValue("connectionHandler");
}
function LA() {
  var o;
  return ((o = l(this, Jl)[Jl]) === null || o === void 0 ? void 0 : o.socketJoined) === !0;
}
jd = DA([vt("0700")], jd);
var NA = Object.defineProperty, $A = Object.getOwnPropertyDescriptor, VA = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? $A(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && NA(e, r, a), a;
}, Ro = (pn = /* @__PURE__ */ E("context"), ui = /* @__PURE__ */ E("self"), Qn = /* @__PURE__ */ E("pollSocketHandler"), /* @__PURE__ */ function() {
  function o(t, e, r) {
    w(this, o), this.polls = void 0, Object.defineProperty(this, pn, { writable: !0, value: void 0 }), Object.defineProperty(this, ui, { writable: !0, value: void 0 }), Object.defineProperty(this, Qn, { writable: !0, value: void 0 }), this.polls = new jd(t, e, r), l(this, ui)[ui] = e, l(this, pn)[pn] = t, l(this, Qn)[Qn] = r, this.setupEvents();
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, pn)[pn].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, pn)[pn].getValue("logger");
  } }, { key: "canViewPolls", value: function() {
    return l(this, ui)[ui].permissions.polls.canView;
  } }, { key: "setupEvents", value: function() {
    var e = this, r = { [Ba.createPoll]: function(i) {
      i.poll && e.updatePoll(Ro.formatSocketServicePoll(i.poll));
    }, [Ba.updatePoll]: function(i) {
      i.poll && e.updatePoll(Ro.formatSocketServicePoll(i.poll));
    }, [Ba.votePoll]: function(i) {
      i.poll && e.updatePoll(Ro.formatSocketServicePoll(i.poll));
    } }, n = function() {
      l(e, pn)[pn].getValue("peerSessionStore").on(H.SOCKET_SERVICE_ROOM_JOINED, function() {
        e.getPolls();
      }), Object.keys(r).map(Number).forEach(function(s) {
        l(e, Qn)[Qn].on(s, r[s]);
      });
    }, a = function() {
      l(e, pn)[pn].getValue("peerSessionStore").on(H.SOCKET_SERVICE_ROOM_JOINED, function() {
        e.getPolls();
      }), Object.keys(r).map(Number).forEach(function(s) {
        l(e, Qn)[Qn].removeListeners(s);
      });
    };
    l(this, ui)[ui].permissions.on("permissionsUpdate", /* @__PURE__ */ function() {
      var i = m(/* @__PURE__ */ p().mark(function s(u) {
        var c;
        return p().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (u != null && u.polls) {
                  h.next = 2;
                  break;
                }
                return h.abrupt("return");
              case 2:
                if (!(u != null && (c = u.polls) !== null && c !== void 0 && c.canView)) {
                  h.next = 8;
                  break;
                }
                return h.next = 5, e.getPolls();
              case 5:
                n(), h.next = 10;
                break;
              case 8:
                e.polls.items = [], a();
              case 10:
              case "end":
                return h.stop();
            }
        }, s);
      }));
      return function(s) {
        return i.apply(this, arguments);
      };
    }()), this.canViewPolls() && n();
  } }, { key: "updatePoll", value: function(e) {
    if (this.canViewPolls()) {
      var r = this.polls.items.findIndex(function(a) {
        return a.id === e.id;
      });
      if (r > -1) {
        var n = JSON.stringify(this.polls.items[r]);
        this.polls.items[r] = e, n !== JSON.stringify(e) && this.polls.emit("pollsUpdate", { polls: this.polls.items, newPoll: !1 });
        return;
      }
      this.polls.items = [].concat(ke(this.polls.items), [e]), this.polls.emit("pollsUpdate", { polls: this.polls.items, newPoll: !0 });
    }
  } }, { key: "getPolls", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, l(this, Qn)[Qn].getPolls();
            case 2:
              if (n = u.sent, n != null && n.payload) {
                u.next = 5;
                break;
              }
              return u.abrupt("return");
            case 5:
              a = G1.fromBinary(n.payload), i = a.polls, this.polls.items = i.map(function(c) {
                return Ro.formatSocketServicePoll(c);
              });
            case 7:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", new Ro(n, a, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, r);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "formatSocketServicePoll", value: function(e) {
    var r = e.options.map(function(n) {
      return { count: n.count, text: n.text, votes: n.votes.map(function(a) {
        return { id: a.userId, name: a.name };
      }) };
    });
    return { anonymous: e.anonymous, createdBy: e.createdBy, createdByUserId: e.createdByUserId, hideVotes: e.hideVotes, id: e.pollId, options: r, question: e.question, voted: e.votes };
  } }]);
}()), og = Ro;
VA([D.trace("PollController.setupEvents")], og.prototype, "setupEvents", 1);
var UA = Object.defineProperty, jA = Object.getOwnPropertyDescriptor, FA = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? jA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && UA(e, r, a), a;
}, ug = /* @__PURE__ */ function(o) {
  return o[o.User = 0] = "User", o[o.Meeting = 1] = "Meeting", o;
}(ug || {}), Fd = (Ii = /* @__PURE__ */ E("context"), fo = /* @__PURE__ */ E("connectionHandler"), Xn = /* @__PURE__ */ E("self"), go = /* @__PURE__ */ E("roomSocketHandler"), /* @__PURE__ */ function(o) {
  function t(e, r, n, a, i) {
    var s;
    w(this, t);
    var u = e.getValue("logger");
    return s = C(this, t, [u]), Object.defineProperty(s, fo, { get: HA, set: void 0 }), s.selfActiveTab = void 0, s.broadcastTabChanges = void 0, Object.defineProperty(s, Ii, { writable: !0, value: void 0 }), Object.defineProperty(s, Xn, { writable: !0, value: void 0 }), Object.defineProperty(s, go, { writable: !0, value: void 0 }), s.viewType = void 0, s.meetingStartedTimestamp = void 0, s.meetingTitle = void 0, s.sessionId = void 0, l(s, Ii)[Ii] = e, l(s, Xn)[Xn] = r, s.viewType = n, l(s, go)[go] = a, s.meetingTitle = i, s.broadcastTabChanges = r.permissions.canSpotlight, s;
  }
  return R(t, o), P(t, [{ key: "socketState", get: function() {
    return l(this, fo)[fo].socketState;
  } }, { key: "mediaState", get: function() {
    return l(this, fo)[fo].mediaState;
  } }, {
    key: "meetingId",
    get: function() {
      return l(this, Ii)[Ii].getValue("meetingId");
    }
    /**
    * Sets current user as broadcasting tab changes
    * @param broadcastTabChanges
    */
  }, {
    key: "setBroadcastTabChanges",
    value: function(r) {
      if (!l(this, Xn)[Xn].permissions.canSpotlight)
        throw this.logger.error("DyteSpotlight::setSpotlighted::permission_denied"), new U("User does not have permission to toggle spotlight", "0801");
      this.broadcastTabChanges = r, this.emit("broadcastTabChangesUpdate", this.broadcastTabChanges), this.broadcastTabChanges && this.assertActiveTabToRoom();
    }
    /**
    * Sets current active tab for user
    * @param spotlightTab
    */
  }, { key: "setSelfActiveTab", value: function(r, n) {
    var a;
    this.logger.info("DyteSpotlight::setActiveTab", { spotlight: { currentTab: { id: r.id, type: r.type } } }), this.selfActiveTab = r, n === 0 && this.emit("selfTabUpdate", r), (a = l(this, Xn)[Xn].permissions) !== null && a !== void 0 && a.canSpotlight && this.broadcastTabChanges && n === 0 && this.assertActiveTabToRoom();
  } }, { key: "assertActiveTabToRoom", value: function() {
    l(this, go)[go].broadcastMessage("spotlight", { userId: l(this, Xn)[Xn].userId, currentTab: this.selfActiveTab });
  } }]);
}(an));
function HA() {
  return l(this, Ii)[Ii].getValue("connectionHandler");
}
Fd = FA([vt("0800")], Fd);
function BA(o) {
  var t = "", e = [""], r = [e], n = 0, a = 0, i = !0, s, u = Hn(o), c;
  try {
    for (u.s(); !(c = u.n()).done; )
      s = c.value, s === '"' ? (i && s === t && (e[n] += s), i = !i) : s === "," && i ? s = e[++n] = "" : s === `
` && i ? (t === "\r" && (e[n] = e[n].slice(0, -1)), e = r[++a] = [s = ""], n = 0) : e[n] += s, t = s;
  } catch (d) {
    u.e(d);
  } finally {
    u.f();
  }
  return r;
}
var qA = Object.defineProperty, GA = Object.getOwnPropertyDescriptor, lg = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? GA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && qA(e, r, a), a;
}, Vi = (mo = /* @__PURE__ */ E("context"), /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    w(this, t);
    var n = e.getValue("logger");
    return r = C(this, t, [n]), r.transcripts = void 0, Object.defineProperty(r, mo, { writable: !0, value: void 0 }), l(r, mo)[mo] = e, r.transcripts = [], r;
  }
  return R(t, o), P(t, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, mo)[mo].getValue("telemetry");
    }
  ) }, { key: "getActiveTranscript", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.prev = 0, a = pt(), c.next = 4, a.getActiveTranscript();
            case 4:
              i = c.sent, s = i.transcript, this.transcripts = Vi.parseTranscripts(s), c.next = 11;
              break;
            case 9:
              c.prev = 9, c.t0 = c.catch(0);
            case 11:
            case "end":
              return c.stop();
          }
      }, n, this, [[0, 9]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "onTranscript", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (s = this.transcripts.filter(function(h) {
                var v = h.peerId;
                return v === a.peerId;
              }), !(s != null && (i = s.at(-1)) !== null && i !== void 0 && i.isPartialTranscript)) {
                d.next = 7;
                break;
              }
              return u = s.at(-1), u.transcript = a.transcript, u.isPartialTranscript = a.isPartialTranscript, this.emit("transcript", u), d.abrupt("return");
            case 7:
              this.transcripts = [].concat(ke(this.transcripts), [a]), this.emit("transcript", a);
            case 9:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }], [{
    key: "init",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
        var s, u;
        return p().wrap(function(d) {
          for (; ; )
            switch (d.prev = d.next) {
              case 0:
                s = new Vi(a), u = a.getValue("logger");
                try {
                  i && s.getActiveTranscript();
                } catch (h) {
                  u.error("Error fetching active transcriptions ", h);
                }
                return d.abrupt("return", s);
              case 4:
              case "end":
                return d.stop();
            }
        }, n);
      }));
      function r(n, a) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Parse a single line transcript
    */
  }, {
    key: "parseTranscript",
    value: function(r) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      if (r) {
        var a = BA(r), i = Me(a, 1), s = Me(i[0], 6), u = s[0], c = s[1], d = s[2], h = s[3], v = s[4], f = s[5], g = { id: eo(), name: v, peerId: c, userId: d, customParticipantId: h, transcript: f, isPartialTranscript: n, date: new Date(parseInt(u, 10) * 1e3) };
        return g;
      }
    }
    /**
    * Parse a multi-line transcript
    */
  }, { key: "parseTranscripts", value: function(r) {
    return r ? r.split(`
`).map(function(n) {
      return Vi.parseTranscript(n, !1);
    }).filter(Boolean) : [];
  } }]);
}(an));
lg([D.trace("DyteAi.getActiveTranscript")], Vi.prototype, "getActiveTranscript", 1);
Vi = lg([vt("0000")], Vi);
var WA = Object.defineProperty, JA = Object.getOwnPropertyDescriptor, KA = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? JA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && WA(e, r, a), a;
}, cg = (hn = /* @__PURE__ */ E("self"), li = /* @__PURE__ */ E("roomSocketHandler"), Dr = /* @__PURE__ */ E("context"), /* @__PURE__ */ function() {
  function o(t, e, r, n, a, i) {
    w(this, o), this.meta = void 0, this.ai = void 0, Object.defineProperty(this, hn, { writable: !0, value: void 0 }), Object.defineProperty(this, li, { writable: !0, value: void 0 }), this.aiSocketHandler = void 0, Object.defineProperty(this, Dr, { writable: !0, value: void 0 }), l(this, Dr)[Dr] = t, this.meta = new Fd(t, e, e.config.viewType, r, i), this.ai = n, l(this, hn)[hn] = e, l(this, li)[li] = r, this.aiSocketHandler = a, e.config.viewType !== Lt.Chat && this.setupEvents();
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, Dr)[Dr].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, Dr)[Dr].getValue("logger");
  } }, { key: "conditionallySetActiveTab", value: function(e) {
    var r;
    e != null && e.currentTab && ((r = this.meta.selfActiveTab) === null || r === void 0 ? void 0 : r.id) !== e.currentTab.id && (this.meta.setSelfActiveTab(e.currentTab, ug.Meeting), this.meta.emit("activeTabUpdate", e.currentTab));
  } }, { key: "setupEvents", value: function() {
    var e = this;
    l(this, Dr)[Dr].getValue("peerSessionStore").on(H.TRANSPORT_STATE_UPDATE, function(r) {
      e.meta.emit("mediaConnectionUpdate", r);
    }), l(this, Dr)[Dr].getValue("peerSessionStore").on(H.SOCKET_STATE_UPDATE, function(r) {
      e.meta.emit("socketConnectionUpdate", r);
    }), l(this, Dr)[Dr].getValue("peerSessionStore").on(H.ROOM_STATE, function(r) {
      var n = r.createdAt, a = r.roomUuid, i = e.meta.meetingStartedTimestamp;
      if (a && (e.meta.sessionId = a), n && !i) {
        var s = new Date(n * 1e3);
        e.meta.meetingStartedTimestamp = s, e.meta.emit("meetingStartTimeUpdate", { meetingStartedTimestamp: e.meta.meetingStartedTimestamp });
      }
    }), l(this, Dr)[Dr].getValue("peerSessionStore").on(H.PRODUCER_SCORE_UPDATE, function(r) {
      var n = r.score;
      n < 5 && e.meta.emit("poorConnection", { score: n });
    }), l(this, hn)[hn].permissions.canSpotlight && (this.logger.info("DyteMetaController::Asserting Spotlight"), this.meta.selfActiveTab && l(this, li)[li].broadcastMessage("spotlight", { userId: l(this, hn)[hn].userId, currentTab: this.meta.selfActiveTab })), l(this, Dr)[Dr].getValue("peerSessionStore").on(H.PEER_JOINED_INTERNAL, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                l(e, hn)[hn].permissions.canSpotlight && e.meta.selfActiveTab && l(e, li)[li].broadcastToPeers("spotlight", [a.id], { userId: l(e, hn)[hn].userId, currentTab: e.meta.selfActiveTab });
              case 1:
              case "end":
                return s.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), l(this, Dr)[Dr].getValue("peerSessionStore").on(H.ROOM_MESSAGE, function(r) {
      var n, a, i;
      if ("type" in r) {
        if (r.type !== "spotlight")
          return;
        i = N(N({}, r), r.payload);
      } else if ("roomMessageType" in r) {
        if (r.roomMessageType !== "spotlight")
          return;
        i = r;
      } else
        return;
      e.logger.info("Spotlight Assertion Received", { spotlight: { spotlighter: { id: i.userId }, currentTab: { id: (n = i.currentTab) === null || n === void 0 ? void 0 : n.id, type: (a = i.currentTab) === null || a === void 0 ? void 0 : a.type } } }), e.conditionallySetActiveTab(i);
    }), l(this, Dr)[Dr].getValue("peerSessionStore").on(H.MESSAGE, function(r) {
      var n, a, i;
      if ("type" in r) {
        if (r.type !== "spotlight")
          return;
        i = N(N({}, r), r.payload);
      } else if ("roomMessageType" in r) {
        if (r.roomMessageType !== "spotlight")
          return;
        i = r;
      } else
        return;
      e.logger.info("Spotlight Assertion Received", { spotlight: { spotlighter: { id: i.userId }, currentTab: { id: (n = i.currentTab) === null || n === void 0 ? void 0 : n.id, type: (a = i.currentTab) === null || a === void 0 ? void 0 : a.type } } }), e.conditionallySetActiveTab(i);
    }), this.aiSocketHandler.on(X.transcript, function(r) {
      var n = r.meetingId, a = r.transcript, i = r.isPartial, s;
      try {
        s = Vi.parseTranscript(a, i);
      } catch (v) {
        e.logger.error("Failed to parse transcript: ".concat(a), v);
      }
      if (!s) {
        e.logger.warn("Received empty transcript data");
        return;
      }
      e.ai.onTranscript(s), e.meta.emit("transcript", s);
      var u = s, c = u.peerId, d = u.name, h = u.transcript;
      e.logger.debug("".concat(n, " Received transcript for peer ").concat(c, " - ").concat(d, ": ").concat(h));
    });
  } }], [{ key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i, s, u) {
      var c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return h.next = 2, Vi.init(n, a.permissions.transcriptionEnabled);
            case 2:
              return c = h.sent, h.abrupt("return", new cg(n, a, i, c, s, u));
            case 4:
            case "end":
              return h.stop();
          }
      }, r);
    }));
    function e(r, n, a, i, s) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}()), dg = cg;
KA([D.trace("MetaController.setupEvents")], dg.prototype, "setupEvents", 1);
var au = {}, xa = {
  /**
  * Lock a method to prevent concurrency
  * @param config - configuration for the lock
  * @param config.methodName - config.methodName Name of method to expose in logs
  *	and to the user (if necessary).
  * @param config.lockName - Unique string to differentiate the method from others.
  * @param config.timeout - Release lock in given milliseconds if method doesn't get resolved.
  *
  *	Do not use common function names such as joinRoom as the lockName,
  *	instead use filename.functionname, if a suitable name couldn't be found.
  * @returns locked instance.
  *
  * It will throw error with name `UnsupportedConcurrentMethodExecution`,
  *	if lock couldn't be acquired.
  *
  * Note:
  *	Make sure that the methodName is explanatory on its own, if exposed to end users.
  * Eg: `meeting.joinRoom` is a much better choice than `joinRoom`.
  */
  executeWithLock(o) {
    var t = o.methodName, e = o.lockName, r = o.timeout;
    return function(n, a, i) {
      var s = i.value;
      return i.value = function() {
        for (var c, d, h = arguments.length, v = new Array(h), f = 0; f < h; f++)
          v[f] = arguments[f];
        var g = (c = (this === null || this === void 0 ? void 0 : this.peerId) || ((d = v[0]) === null || d === void 0 ? void 0 : d.authToken)) !== null && c !== void 0 ? c : "", k = "".concat(e, "-").concat(g), y = this === null || this === void 0 ? void 0 : this.logger;
        if (au[k]) {
          var b = new Error("Unsupported concurrent calls on Dyte method: ".concat(t, "."));
          throw b.name = "UnsupportedConcurrentMethodExecution", y == null || y.error("DyteLocker::UnsupportedConcurrentMethodExecution", { error: { stack: b.stack }, dyteLocker: { methodName: t, lockName: k } }), b;
        }
        au[k] = !0;
        var S = setTimeout(function() {
          return delete au[k];
        }, r), T = s.apply(this, v);
        return Promise.resolve(T).then(function() {
          delete au[k], clearTimeout(S);
        }).catch(function() {
          delete au[k], clearTimeout(S);
        }), T;
      }, i;
    };
  }
}, zA = Object.defineProperty, YA = Object.getOwnPropertyDescriptor, co = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? YA(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && zA(e, r, a), a;
}, zr = /* @__PURE__ */ E("stageSocketHandler"), Zc = /* @__PURE__ */ E("roomSocketHandler"), oe = /* @__PURE__ */ E("self"), iu = /* @__PURE__ */ E("participants"), gt = /* @__PURE__ */ E("stageRequests"), qe = /* @__PURE__ */ E("context"), su = /* @__PURE__ */ E("roomNodeClient"), gs = /* @__PURE__ */ E("setStatus"), Hi = /* @__PURE__ */ function(o) {
  function t(e, r, n, a, i) {
    var s;
    w(this, t);
    var u = e.getValue("logger");
    return s = C(this, t, [u]), Object.defineProperty(s, gs, { value: XA }), Object.defineProperty(s, su, { get: QA, set: void 0 }), Object.defineProperty(s, zr, { writable: !0, value: void 0 }), Object.defineProperty(s, Zc, { writable: !0, value: void 0 }), Object.defineProperty(s, oe, { writable: !0, value: void 0 }), Object.defineProperty(s, iu, { writable: !0, value: void 0 }), Object.defineProperty(s, gt, { writable: !0, value: void 0 }), Object.defineProperty(s, qe, { writable: !0, value: void 0 }), l(s, qe)[qe] = e, l(s, zr)[zr] = a, l(s, Zc)[Zc] = i, l(s, oe)[oe] = r, l(s, iu)[iu] = n, l(s, gt)[gt] = [], s.setupEvents(), s;
  }
  return R(t, o), P(t, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, qe)[qe].getValue("telemetry");
    }
  ) }, { key: "status", get: function() {
    return l(this, qe)[qe].getValue("stageStatus");
  } }, { key: "setupEvents", value: function() {
    var r = this, n = {
      /**
      * NOTE(ishita1805): Update stageRequests when socket sends them.
      */
      [H.GET_STAGE_REQUESTS]: function() {
        var s = m(/* @__PURE__ */ p().mark(function u(c) {
          return p().wrap(function(h) {
            for (; ; )
              switch (h.prev = h.next) {
                case 0:
                  l(r, gt)[gt] = c;
                case 1:
                case "end":
                  return h.stop();
              }
          }, u);
        }));
        return function(u) {
          return s.apply(this, arguments);
        };
      }(),
      /**
      * NOTE(ishita1805): Update stageRequests when a peer
      * who has requested leaves/joins the meeting
      */
      [H.UPDATE_STAGE_REQUESTS]: function() {
        var s = m(/* @__PURE__ */ p().mark(function u(c) {
          var d, h, v, f;
          return p().wrap(function(k) {
            for (; ; )
              switch (k.prev = k.next) {
                case 0:
                  d = c.add, h = l(r, gt)[gt].length, v = r.getAccessRequests(), f = v.stageRequests, (d || f.length > h) && r.emit("newStageRequest", { count: f.length }), r.emit("stageAccessRequestUpdate", f);
                case 5:
                case "end":
                  return k.stop();
              }
          }, u);
        }));
        return function(u) {
          return s.apply(this, arguments);
        };
      }()
    }, a = function() {
      Object.entries(n).forEach(function(u) {
        var c = Me(u, 2), d = c[0], h = c[1];
        l(r, qe)[qe].getValue("peerSessionStore").onAsync(d, h);
      });
    }, i = function() {
      Object.entries(n).forEach(function(u) {
        var c = Me(u, 2), d = c[0], h = c[1];
        l(r, qe)[qe].getValue("peerSessionStore").removeListener(d, h);
      });
    };
    l(this, oe)[oe].permissions.on("permissionsUpdate", function(s) {
      var u = s.canAcceptProductionRequests;
      u !== void 0 && (l(r, oe)[oe].permissions.acceptStageRequests ? (a(), l(r, zr)[zr].getStageRequests()) : (i(), l(r, gt)[gt] = [], r.emit("stageAccessRequestUpdate", l(r, gt)[gt])));
    }), l(this, oe)[oe].permissions.acceptStageRequests && a();
  } }, { key: "getAccessRequests", value: function() {
    if (!l(this, oe)[oe].permissions.stageEnabled)
      throw this.logger.error("DyteStage::stage_disabled"), new U("Stage is disabled", "2003");
    if (!l(this, oe)[oe].permissions.acceptStageRequests)
      throw this.logger.error("DyteStage::get_access_request::permission_denied"), new U("You do not have permission to perform this action", "2001");
    var r = l(this, iu)[iu].joined.toArray().filter(function(n) {
      return n.stageStatus === "REQUESTED_TO_JOIN_STAGE";
    }).map(function(n) {
      return { displayName: n.name, userId: n.userId, peerId: n.id };
    });
    return l(this, gt)[gt] = r, { stageRequests: l(this, gt)[gt] };
  } }, { key: "requestAccess", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, oe)[oe].permissions.stageEnabled) {
                i.next = 3;
                break;
              }
              throw this.logger.error("DyteStage::stage_disabled"), new U("Stage is disabled", "2003");
            case 3:
              if (this.status === "OFF_STAGE") {
                i.next = 5;
                break;
              }
              throw new U("Unable to request access you are currently ".concat(this.status), "2006");
            case 5:
              if (l(this, oe)[oe].permissions.stageAccess !== ne.Allowed) {
                i.next = 8;
                break;
              }
              return l(this, gs)[gs]("ACCEPTED_TO_JOIN_STAGE"), i.abrupt("return");
            case 8:
              l(this, zr)[zr].requestAccess(), l(this, gs)[gs]("REQUESTED_TO_JOIN_STAGE");
            case 10:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "cancelRequestAccess", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, oe)[oe].permissions.stageEnabled) {
                i.next = 3;
                break;
              }
              throw this.logger.error("DyteStage::stage_disabled"), new U("Stage is disabled", "2003");
            case 3:
              l(this, zr)[zr].cancelRequestAccess(), l(this, gs)[gs]("OFF_STAGE");
            case 5:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "grantAccess", value: function(r) {
    if (!l(this, oe)[oe].roomJoined)
      throw new U("Can`t grant for participant without joining room");
    if (!l(this, oe)[oe].permissions.stageEnabled)
      throw this.logger.error("DyteStage::stage_disabled"), new U("Stage is disabled", "2003");
    if (!l(this, oe)[oe].permissions.acceptStageRequests)
      throw this.logger.error("DyteStage::grant_access::permission_denied"), new U("You do not have permission to perform this action", "2001");
    return l(this, zr)[zr].grantAccess(r);
  } }, {
    key: "denyAccess",
    value: function(r) {
      if (!l(this, oe)[oe].roomJoined)
        throw new U("Can`t rejectRequestToJoinStage for participant without joining room", "2005");
      if (!l(this, oe)[oe].permissions.stageEnabled)
        throw this.logger.error("DyteStage::stage_disabled"), new U("Stage is disabled", "2003");
      if (!l(this, oe)[oe].permissions.acceptStageRequests)
        throw this.logger.error("DyteStage::deny_access::permission_denied"), new U("You do not have permission to perform this action", "2001");
      return l(this, zr)[zr].denyAccess(r);
    }
    /**
    * Returns the peerId of the current user
    */
  }, { key: "peerId", get: function() {
    return l(this, qe)[qe].getValue("peerId");
  } }, { key: "join", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = l(this, qe)[qe].getValue("viewType"), this.status !== "ON_STAGE") {
                s.next = 3;
                break;
              }
              throw new U("You are already on stage.", "2006");
            case 3:
              if (!(this.status !== "ACCEPTED_TO_JOIN_STAGE" || l(this, oe)[oe].permissions.stageAccess === ne.NotAllowed)) {
                s.next = 5;
                break;
              }
              throw new U("Unable to join stage you are currently ".concat(this.status), "2006");
            case 5:
              return l(this, qe)[qe].setValue("stageStatus", "ON_STAGE", !1), s.next = 8, l(this, zr)[zr].joinStage();
            case 8:
              if (a !== Lt.Livestream) {
                s.next = 12;
                break;
              }
              return s.next = 11, l(this, qe)[qe].getValue("selfController").joinRoom();
            case 11:
              return s.abrupt("return");
            case 12:
              l(this, qe)[qe].notify("stageStatus"), l(this, oe)[oe].audioEnabled && l(this, su)[su].shareMic(l(this, oe)[oe].audioTrack), l(this, oe)[oe].videoEnabled && l(this, su)[su].shareWebcam(l(this, oe)[oe].videoTrack);
            case 15:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "leave",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        return p().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (l(this, oe)[oe].permissions.stageEnabled) {
                  i.next = 3;
                  break;
                }
                throw this.logger.error("DyteStage::stage_disabled"), new U("Stage is disabled", "2003");
              case 3:
                if (this.status === "ON_STAGE" || this.status === "ACCEPTED_TO_JOIN_STAGE") {
                  i.next = 5;
                  break;
                }
                throw new U("Unable to leave stage you are currently ".concat(this.status), "2006");
              case 5:
                return l(this, oe)[oe].setIsPinned(!1), l(this, qe)[qe].setValue("stageStatus", "OFF_STAGE", !1), i.next = 9, l(this, zr)[zr].leaveStage(l(this, oe)[oe].userId);
              case 9:
                return i.prev = 9, i.next = 12, l(this, qe)[qe].getValue("peerSessionStore").emitAsync(H.LEAVE_MEDIA_ROOM, "stageLeft");
              case 12:
                i.next = 17;
                break;
              case 14:
                i.prev = 14, i.t0 = i.catch(9), this.logger.error("DyteStage::leave::emitAsync::failed", { error: i.t0 });
              case 17:
                l(this, qe)[qe].notify("stageStatus");
              case 18:
              case "end":
                return i.stop();
            }
        }, n, this, [[9, 14]]);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Method to kick a user off the stage
    *
    * `permissions.acceptStageRequests` privilege required
    */
  }, { key: "kick", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (l(this, oe)[oe].roomJoined) {
                s.next = 2;
                break;
              }
              throw new U("Can`t kick participant without joining room", "2005");
            case 2:
              if (l(this, oe)[oe].permissions.stageEnabled) {
                s.next = 5;
                break;
              }
              throw this.logger.error("DyteStage::stage_disabled"), new U("Stage is disabled", "2003");
            case 5:
              if (l(this, oe)[oe].permissions.acceptStageRequests) {
                s.next = 8;
                break;
              }
              throw this.logger.error("DyteStage::kick::permission_denied"), new U("You do not have permissions for kick", "2001");
            case 8:
              return s.abrupt("return", l(this, zr)[zr].kick(a));
            case 9:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(an);
function QA() {
  return l(this, qe)[qe].getValue("roomNodeClient");
}
function XA(o) {
  return Hd.apply(this, arguments);
}
function Hd() {
  return Hd = m(/* @__PURE__ */ p().mark(function o(t) {
    return p().wrap(function(r) {
      for (; ; )
        switch (r.prev = r.next) {
          case 0:
            if (this.status !== t) {
              r.next = 2;
              break;
            }
            return r.abrupt("return");
          case 2:
            l(this, qe)[qe].setValue("stageStatus", t);
          case 3:
          case "end":
            return r.stop();
        }
    }, o, this);
  })), Hd.apply(this, arguments);
}
co([D.trace("DyteStage.getStageRequests")], Hi.prototype, "getAccessRequests", 1);
co([D.trace("DyteStage.requestAccess")], Hi.prototype, "requestAccess", 1);
co([D.trace("DyteStage.cancelRequestAccess")], Hi.prototype, "cancelRequestAccess", 1);
co([D.trace("DyteStage.grantAccess")], Hi.prototype, "grantAccess", 1);
co([D.trace("DyteStage.denyAccess")], Hi.prototype, "denyAccess", 1);
co([xa.executeWithLock({ methodName: "joinStage", lockName: "DyteStage.join", timeout: 5e3 }), D.trace("DyteStage.joinStage")], Hi.prototype, "join", 1);
co([D.trace("DyteStage.leaveStage")], Hi.prototype, "leave", 1);
function ZA(o) {
  return !(o.viewType === "LIVESTREAM" || o.viewType === "CHAT");
}
function Gp(o) {
  switch (o) {
    case Ga.UNSPECIFIED:
      return "OFF_STAGE";
    case Ga.REQUESTED_STAGE:
      return "REQUESTED_TO_JOIN_STAGE";
    case Ga.APPROVED_STAGE:
      return "ACCEPTED_TO_JOIN_STAGE";
    case Ga.OFF_STAGE:
      return "OFF_STAGE";
    case Ga.ON_STAGE:
      return "ON_STAGE";
    default:
      return "OFF_STAGE";
  }
}
var xA = Object.defineProperty, eI = Object.getOwnPropertyDescriptor, rI = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? eI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && xA(e, r, a), a;
}, En = /* @__PURE__ */ E("self"), ya = /* @__PURE__ */ E("participants"), Cn = /* @__PURE__ */ E("stageSocketHandler"), ou = /* @__PURE__ */ E("stageRequestCount"), fr = /* @__PURE__ */ E("context"), pg = /* @__PURE__ */ function() {
  function o(t, e, r, n, a) {
    w(this, o), this.stage = void 0, Object.defineProperty(this, En, { writable: !0, value: void 0 }), Object.defineProperty(this, ya, { writable: !0, value: void 0 }), Object.defineProperty(this, Cn, { writable: !0, value: void 0 }), Object.defineProperty(this, ou, { writable: !0, value: 0 }), Object.defineProperty(this, fr, { writable: !0, value: void 0 }), l(this, fr)[fr] = t, this.stage = new Hi(t, n, a, e, r), l(this, Cn)[Cn] = e, l(this, En)[En] = n, l(this, ya)[ya] = a, this.setupEvents();
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, fr)[fr].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, fr)[fr].getValue("logger");
  } }, { key: "setupEvents", value: function() {
    var e = this;
    l(this, fr)[fr].subscribe("stageStatus", function(r) {
      e.stage.emit("stageStatusUpdate", r);
    }), l(this, Cn)[Cn].on(X.grantStageAccess, function() {
      l(e, En)[En].permissions.stageAccess !== ne.Allowed && (e.stage.emit("stageRequestApproved"), e.setStageStatus("ACCEPTED_TO_JOIN_STAGE"));
    }), l(this, Cn)[Cn].on(X.peerStageStatusUpdate, function(r) {
      r !== void 0 && (r.peerId === l(e, En)[En].id ? e.selfStageStatusHandler(r) : e.peerStageStatusHandler(r));
    }), l(this, Cn)[Cn].on(X.denyStageAccess, function() {
      l(e, En)[En].permissions.stageAccess !== ne.Allowed && (e.stage.emit("stageRequestRejected"), e.setStageStatus("OFF_STAGE"));
    }), l(this, Cn)[Cn].on(X.getStageRequests, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                if (l(e, En)[En].permissions.stageAccess === ne.Allowed) {
                  c.next = 2;
                  break;
                }
                return c.abrupt("return");
              case 2:
                return s = (i = a == null ? void 0 : a.stageRequests) !== null && i !== void 0 ? i : [], c.next = 5, l(e, fr)[fr].getValue("peerSessionStore").emitAsync(H.GET_STAGE_REQUESTS, s);
              case 5:
                l(e, ou)[ou] < s.length && s.length > 0 && e.stage.emit("newStageRequest", { count: s.length }), l(e, ou)[ou] = s.length, e.stage.emit("stageAccessRequestUpdate", s);
              case 8:
              case "end":
                return c.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }());
  } }, { key: "getCurrentStageRequests", value: function() {
    var e = l(this, ya)[ya].joined.toArray().filter(function(r) {
      return r.stageStatus === "REQUESTED_TO_JOIN_STAGE";
    }).map(function(r) {
      return { displayName: r.name, userId: r.userId, peerId: r.id };
    });
    return e;
  } }, {
    key: "setStageStatus",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n) {
        return p().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (this.stage.status !== n) {
                  i.next = 2;
                  break;
                }
                return i.abrupt("return");
              case 2:
                l(this, fr)[fr].setValue("stageStatus", n);
              case 3:
              case "end":
                return i.stop();
            }
        }, r, this);
      }));
      function e(r) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * NOTE(ishita1805): Runs for cases like:
    * - Being kicked from stage
    * - Socket-Client inconsistency
    */
  }, {
    key: "selfStageStatusHandler",
    value: function(e) {
      var r = Gp(e.stageType), n = l(this, fr)[fr].getValue("stageStatus");
      if (n !== r)
        switch (e.stageType) {
          case 1:
            l(this, fr)[fr].setValue("stageStatus", "ACCEPTED_TO_JOIN_STAGE", !1), this.stage.join();
            break;
          case 2:
          case 3:
            this.setStageStatus(n);
            break;
          case 0:
          case 4:
          default:
            l(this, fr)[fr].setValue("stageStatus", "ACCEPTED_TO_JOIN_STAGE", !1), this.stage.leave();
            break;
        }
    }
    /**
    * NOTE(ishita1805): Source of truth for updating peer stage status
    */
  }, { key: "peerStageStatusHandler", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (a = l(this, ya)[ya].joined.get(n.peerId), i = l(this, ya)[ya].viewMode === "ACTIVE_GRID", a) {
                u.next = 5;
                break;
              }
              return this.logger.warn("err::peerStageStatusUpdate: participant not found"), u.abrupt("return");
            case 5:
              u.t0 = n.stageType, u.next = u.t0 === 1 ? 8 : u.t0 === 2 ? 11 : u.t0 === 3 ? 13 : (u.t0 === 0 || u.t0 === 4, 15);
              break;
            case 8:
              return a.setStageStatus("ON_STAGE"), i && l(this, fr)[fr].getValue("peerSessionStore").emit(H.UPDATE_ACTIVE), u.abrupt("break", 18);
            case 11:
              return a.setStageStatus("ACCEPTED_TO_JOIN_STAGE"), u.abrupt("break", 18);
            case 13:
              return a.setStageStatus("REQUESTED_TO_JOIN_STAGE"), u.abrupt("break", 18);
            case 15:
              return a.setStageStatus("OFF_STAGE"), i && l(this, fr)[fr].getValue("peerSessionStore").emit(H.UPDATE_ACTIVE), u.abrupt("break", 18);
            case 18:
              l(this, fr)[fr].getValue("peerSessionStore").emit(H.UPDATE_PEER_STAGE_STATUS, { id: a.id, status: a.stageStatus });
            case 19:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}();
rI([D.trace("DyteStage.setupEvents")], pg.prototype, "setupEvents", 1);
var tI = Object.defineProperty, nI = Object.getOwnPropertyDescriptor, Cc = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? nI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && tI(e, r, a), a;
}, Lr = { getPeer: 14, getPeers: 15, chatMessage: 16, getRoomName: 17, getDisplayTitle: 18, getPluginInitiator: 19, customPluginEventToParent: 20, peerJoined: 22, peerLeft: 23, sendData: 24, stageStatusUpdate: 25, peerStageStatusUpdate: 26 }, qo = (Ye = /* @__PURE__ */ E("pluginSocketHandler"), Or = /* @__PURE__ */ E("self"), ci = /* @__PURE__ */ E("participants"), di = /* @__PURE__ */ E("chat"), Ct = /* @__PURE__ */ E("startedAt"), pi = /* @__PURE__ */ E("authToken"), vn = /* @__PURE__ */ E("context"), hi = /* @__PURE__ */ E("meetingTitle"), /* @__PURE__ */ function(o) {
  function t(e, r, n, a, i, s, u) {
    var c, d = r.baseURL, h = r.createdAt, v = r.description, f = r.id, g = r.name, k = r.organizationId, y = r.picture, b = r.private, S = r.published, T = r.staggered, A = r.tags, L = r.type, I = r.updatedAt;
    w(this, t);
    var M = e.getValue("logger");
    return c = C(this, t, [M]), Object.defineProperty(c, Ye, { writable: !0, value: void 0 }), c.baseURL = void 0, c.createdAt = void 0, c.description = void 0, c.id = void 0, c.name = void 0, Object.defineProperty(c, Or, { writable: !0, value: void 0 }), Object.defineProperty(c, ci, { writable: !0, value: void 0 }), Object.defineProperty(c, di, { writable: !0, value: void 0 }), c.organizationId = void 0, c.picture = void 0, c.private = void 0, c.published = void 0, c.staggered = void 0, c.tags = void 0, c.type = void 0, c.updatedAt = void 0, Object.defineProperty(c, Ct, { writable: !0, value: void 0 }), c.config = void 0, Object.defineProperty(c, pi, { writable: !0, value: void 0 }), c.active = void 0, c.iframes = void 0, c.enabledBy = void 0, Object.defineProperty(c, vn, { writable: !0, value: void 0 }), Object.defineProperty(c, hi, { writable: !0, value: void 0 }), l(c, vn)[vn] = e, c.baseURL = d, c.createdAt = new Date(h), c.description = v, c.id = f, c.name = g, l(c, Or)[Or] = a, c.organizationId = k, c.picture = y, c.private = b, c.published = S, c.staggered = T, c.tags = A, c.type = L, c.updatedAt = new Date(I), c.active = !1, c.iframes = /* @__PURE__ */ new Map(), l(c, Ye)[Ye] = n, l(c, ci)[ci] = i, l(c, di)[di] = s, c.enabledBy = "", l(c, hi)[hi] = u, c;
  }
  return R(t, o), P(t, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, vn)[vn].getValue("telemetry");
    }
  ) }, { key: "sendIframeEvent", value: function(r) {
    this.iframes.size && this.iframes.forEach(function(n) {
      var a = n.iframe;
      a && (navigator.isReactNative ? a.postMessage(JSON.stringify(r)) : a.contentWindow.postMessage(r, "*"));
    });
  } }, { key: "handleIframeMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d, h, v, f, g, k, y;
      return p().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (this.active) {
                S.next = 2;
                break;
              }
              return S.abrupt("return");
            case 2:
              i = a, s = i.payload, u = i.uuid, c = i.type, S.t0 = c, S.next = S.t0 === se.customPluginEventToRoom ? 7 : S.t0 === se.customPluginEventToPeers ? 9 : S.t0 === se.enablePluginForRoom ? 11 : S.t0 === se.enablePluginForPeers ? 13 : S.t0 === se.disablePluginForRoom ? 15 : S.t0 === se.disablePluginForPeers ? 17 : S.t0 === se.storeInsertKeys ? 19 : S.t0 === se.storeGetKeys ? 21 : S.t0 === se.storeDeleteKeys ? 23 : S.t0 === se.storeDelete ? 25 : S.t0 === Lr.chatMessage ? 27 : S.t0 === Lr.getPeer ? 41 : S.t0 === Lr.getPeers ? 46 : S.t0 === Lr.getPluginInitiator ? 49 : S.t0 === Lr.getDisplayTitle ? 51 : S.t0 === Lr.getRoomName ? 53 : S.t0 === Lr.customPluginEventToParent ? 55 : 57;
              break;
            case 7:
              return l(this, Ye)[Ye].customPluginEventToRoom(this.id, s, u), S.abrupt("break", 57);
            case 9:
              return l(this, Ye)[Ye].customPluginEventToPeers(this.id, s.peerIds, s, u), S.abrupt("break", 57);
            case 11:
              return l(this, Ye)[Ye].enablePluginForRoom(this.id, u), S.abrupt("break", 57);
            case 13:
              return l(this, Ye)[Ye].enablePluginForPeers(this.id, s.peerIds, u), S.abrupt("break", 57);
            case 15:
              return l(this, Ye)[Ye].disablePluginForRoom(this.id, u), S.abrupt("break", 57);
            case 17:
              return l(this, Ye)[Ye].disablePluginForPeers(this.id, s.peerIds, u), S.abrupt("break", 57);
            case 19:
              return l(this, Ye)[Ye].storeInsertKeys(this.id, s.store, s.insertKeys, u), S.abrupt("break", 57);
            case 21:
              return l(this, Ye)[Ye].storeGetKeys(this.id, s.store, s.getKeys, u), S.abrupt("break", 57);
            case 23:
              return l(this, Ye)[Ye].storeDeleteKeys(this.id, s.store, s.deleteKeys, u), S.abrupt("break", 57);
            case 25:
              return l(this, Ye)[Ye].storeDelete(this.id, s.store, u), S.abrupt("break", 57);
            case 27:
              if (d = s.messagePayload, h = s.peerIds, l(this, di)[di]) {
                S.next = 31;
                break;
              }
              return this.sendIframeEvent({ type: Lr.chatMessage, uuid: i.uuid, payload: { error: "Chat is disabled for this room." } }), S.abrupt("return");
            case 31:
              return S.prev = 31, S.next = 34, l(this, di)[di].sendMessage(d, h);
            case 34:
              this.sendIframeEvent({ type: Lr.chatMessage, uuid: i.uuid, payload: { success: !0 } }), S.next = 40;
              break;
            case 37:
              S.prev = 37, S.t1 = S.catch(31), this.sendIframeEvent({ type: Lr.chatMessage, uuid: i.uuid, payload: { error: S.t1 } });
            case 40:
              return S.abrupt("break", 57);
            case 41:
              return g = s.peerId, k = N(N({}, l(this, Or)[Or]), {}, { id: l(this, Or)[Or].id, isRecorder: (v = l(this, Or)[Or].permissions) === null || v === void 0 ? void 0 : v.isRecorder, isHidden: l(this, Or)[Or].permissions.hiddenParticipant, stageStatus: l(this, Or)[Or].stageStatus }), g ? (f = l(this, ci)[ci].joined.get(s.peerId), l(this, Or)[Or].id === g && (f = k)) : f = k, this.sendIframeEvent({ type: Lr.getPeer, payload: { peer: f && uc(f) }, uuid: i.uuid }), S.abrupt("break", 57);
            case 46:
              return y = l(this, ci)[ci].joined.toArray().map(function(T) {
                return uc(T);
              }), this.sendIframeEvent({ type: Lr.getPeers, payload: { peers: y }, uuid: i.uuid }), S.abrupt("break", 57);
            case 49:
              return this.sendIframeEvent({ type: Lr.getPluginInitiator, payload: { enabledBy: this.enabledBy }, uuid: i.uuid }), S.abrupt("break", 57);
            case 51:
              return this.sendIframeEvent({ type: Lr.getDisplayTitle, payload: { displayTitle: l(this, hi)[hi] }, uuid: i.uuid }), S.abrupt("break", 57);
            case 53:
              return this.sendIframeEvent({ type: Lr.getRoomName, payload: { roomName: l(this, vn)[vn].getValue("meetingId") }, uuid: i.uuid }), S.abrupt("break", 57);
            case 55:
              return this.emit(i.payload.eventName, i.payload.data), S.abrupt("break", 57);
            case 57:
            case "end":
              return S.stop();
          }
      }, n, this, [[31, 37]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "sendData",
    value: function(r) {
      this.active && (this.logger.info("DytePlugin::SendData", { plugin: { id: this.id, name: this.name, data: { eventName: r.eventName } } }), this.sendIframeEvent({ type: Lr.sendData, uuid: "", payload: r }));
    }
    /**
    * This method is used for cleaning up event listeners attached to an iframe. It must
    * be used before the iframe is removed from the DOM.
    * @param viewId ID of the view corresponding to this iframe. Default is 'default'.
    */
  }, {
    key: "removePluginView",
    value: function() {
      var r, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "default", a = (r = this.iframes.get(n)) !== null && r !== void 0 ? r : {}, i = a.iframe, s = a.listener;
      (i || s) && (navigator.isReactNative ? i.props.onMessage = void 0 : window.removeEventListener("message", s), this.iframes.delete(n));
    }
    /**
    * This method adds the communcation layer between the plugin inside the iframe
    * and the core application (meeting object) in the main window.
    * @param iframe Iframe element to display this plugin.
    * @param viewId ID of the view corresponding to this iframe. Default is 'default'.
    */
  }, { key: "addPluginView", value: function(r) {
    var n, a = this, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "default";
    if (!l(this, pi)[pi])
      throw this.logger.error("DytePlugin::addPluginView::no_auth_token_set_for_plugin"), new U("No auth token set for plugin.", "0602");
    if (!r)
      throw this.logger.error("DytePlugin::addPluginView::iframe_was_not_provided"), new U("Iframe was not provided.", "0603");
    this.removePluginView(i);
    var s = r, u = new URL(this.baseURL), c = { auth: l(this, pi)[pi], parent: navigator.isReactNative ? this.baseURL : window.location.origin, backend: l(this, vn)[vn].getValue("apiBase"), pluginId: this.id, roomName: (n = l(this, vn)[vn].getValue("meetingId")) !== null && n !== void 0 ? n : "", displayTitle: l(this, hi)[hi] };
    if (Object.keys(c).forEach(function(h) {
      u.searchParams.set(h, c[h]);
    }), s.src = u.href, s.allow = "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture", s.title = i, navigator.isReactNative)
      s.props.onMessage = function(h) {
        a.handleIframeMessage(JSON.parse(h.nativeEvent.data));
      }, this.iframes.set(i, { iframe: s });
    else {
      var d = /* @__PURE__ */ function() {
        var h = m(/* @__PURE__ */ p().mark(function v(f) {
          return p().wrap(function(k) {
            for (; ; )
              switch (k.prev = k.next) {
                case 0:
                  if (f.source !== r.contentWindow) {
                    k.next = 3;
                    break;
                  }
                  return k.next = 3, a.handleIframeMessage(f.data);
                case 3:
                case "end":
                  return k.stop();
              }
          }, v);
        }));
        return function(f) {
          return h.apply(this, arguments);
        };
      }();
      window.addEventListener("message", d), this.iframes.set(i, { iframe: s, listener: d });
    }
  } }, {
    key: "setActive",
    value: function(r) {
      var n;
      if (this.active = r, r) {
        var a;
        this.emit("stateUpdate", { active: this.active, pluginId: this.id, bind: this.addPluginView.bind(this), views: (a = this.config) === null || a === void 0 ? void 0 : a.views });
        return;
      }
      this.active = !1, this.emit("stateUpdate", { active: this.active, pluginId: this.id, views: (n = this.config) === null || n === void 0 ? void 0 : n.views });
    }
    /**
    * @access private
    * Not for external use
    */
    // NOTE(roerohan): Enable this plugin for the current user.
  }, { key: "activateForSelf", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return a = pt(), c.next = 3, a.authorizePlugin(this.id);
            case 3:
              return i = c.sent, l(this, pi)[pi] = i, l(this, Ct)[Ct] = new Date(), c.prev = 6, c.next = 9, a.getPluginConfig(this.baseURL);
            case 9:
              s = c.sent, this.config = s, c.next = 16;
              break;
            case 13:
              c.prev = 13, c.t0 = c.catch(6), this.logger.error("DytePlugin::activateForSelf", { error: c.t0 });
            case 16:
              this.setActive(!0), this.emit("enabled");
            case 18:
            case "end":
              return c.stop();
          }
      }, n, this, [[6, 13]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "deactivateForSelf",
    value: function() {
      var r = this;
      Array.from(this.iframes.keys()).forEach(function(n) {
        r.removePluginView(n);
      }), l(this, Ct)[Ct] = void 0, this.iframes.clear(), this.setActive(!1), this.emit("closed");
    }
    /**
    * @deprecated
    */
  }, { key: "enable", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.activateForSelf());
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disable", value: function() {
    return this.deactivateForSelf();
  } }, { key: "activate", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!this.active) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if ((a = l(this, Or)[Or].permissions) !== null && a !== void 0 && (a = a.plugins) !== null && a !== void 0 && a.canStart) {
                s.next = 4;
                break;
              }
              return s.abrupt("return");
            case 4:
              l(this, Ye)[Ye].addPlugin(this.id, this.staggered), l(this, Ct)[Ct] = new Date(), this.logger.info("plugin::activated", { plugin: { id: this.id, enabledBy: this.enabledBy, name: this.name } });
            case 7:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "deactivate", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.active) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if (!(!((a = l(this, Or)[Or].permissions) !== null && a !== void 0 && (a = a.plugins) !== null && a !== void 0 && a.canClose) && this.enabledBy !== l(this, Or)[Or].id)) {
                s.next = 4;
                break;
              }
              return s.abrupt("return");
            case 4:
              l(this, Ye)[Ye].removePlugin(this.id), this.logger.info("plugin::deactivated", { plugin: { id: this.id, name: this.name, duration: l(this, Ct)[Ct] ? new Date().getTime() - l(this, Ct)[Ct].getTime() : 0 } }), l(this, Ct)[Ct] = void 0;
            case 7:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(Jo));
Cc([Nt({ maxInvocations: 5, period: 1 })], qo.prototype, "sendData", 1);
Cc([D.trace("DytePlugin.activatePlugin")], qo.prototype, "activate", 1);
Cc([D.trace("DytePlugin.deactivatePlugin")], qo.prototype, "deactivate", 1);
qo = Cc([vt("0600")], qo);
var Ne = /* @__PURE__ */ E("eventEmitter"), ka = /* @__PURE__ */ E("listeners"), hg = /* @__PURE__ */ function(o) {
  function t(e) {
    var r, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0;
    w(this, t);
    var a = e.onAddEvent, i = e.onDeleteEvent, s = e.onClearEvent;
    return r = C(this, t), Object.defineProperty(r, Ne, { writable: !0, value: void 0 }), Object.defineProperty(r, ka, { writable: !0, value: void 0 }), r.onAddEvent = void 0, r.onDeleteEvent = void 0, r.onClearEvent = void 0, l(r, Ne)[Ne] = new Jo(n), r.onAddEvent = a, r.onDeleteEvent = i, r.onClearEvent = s, l(r, ka)[ka] = /* @__PURE__ */ new Map(), r;
  }
  return R(t, o), P(t, [{ key: "emit", value: function(r) {
    for (var n, a = arguments.length, i = new Array(a > 1 ? a - 1 : 0), s = 1; s < a; s++)
      i[s - 1] = arguments[s];
    return (n = l(this, Ne)[Ne]).emit.apply(n, [r].concat(i));
  } }, { key: "on", value: function(r, n) {
    return l(this, Ne)[Ne].on(r, n);
  } }, { key: "addListener", value: function(r, n) {
    return l(this, Ne)[Ne].addListener(r, n);
  } }, { key: "off", value: function(r, n) {
    return l(this, Ne)[Ne].off(r, n);
  } }, { key: "once", value: function(r, n) {
    return l(this, Ne)[Ne].once(r, n);
  } }, { key: "prependListener", value: function(r, n) {
    return l(this, Ne)[Ne].prependListener(r, n);
  } }, { key: "prependOnceListener", value: function(r, n) {
    return l(this, Ne)[Ne].prependOnceListener(r, n);
  } }, { key: "removeListener", value: function(r, n) {
    return l(this, Ne)[Ne].removeListener(r, n);
  } }, { key: "removeAllListeners", value: function(r) {
    return l(this, Ne)[Ne].removeAllListeners(r);
  } }, { key: "listeners", value: function(r) {
    return l(this, Ne)[Ne].listeners(r);
  } }, { key: "listenerCount", value: function(r) {
    return l(this, Ne)[Ne].listenerCount(r);
  } }, { key: "getMaxListeners", value: function() {
    return l(this, Ne)[Ne].getMaxListeners();
  } }, { key: "setMaxListeners", value: function(r) {
    return l(this, Ne)[Ne].setMaxListeners(r);
  } }, { key: "eventNames", value: function() {
    return l(this, Ne)[Ne].eventNames();
  } }, { key: "add", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return this.set(r.id, r, n);
  } }, { key: "set", value: function(r, n) {
    var a = this, i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0, s = Ce(t, "set", this, 3)([r, n]), u = function(d) {
      for (var h = arguments.length, v = new Array(h > 1 ? h - 1 : 0), f = 1; f < h; f++)
        v[f - 1] = arguments[f];
      a.emit.apply(a, [d, n].concat(v));
    };
    return l(this, ka)[ka].set(r, u), n.on("*", u), i && l(this, Ne)[Ne].emit(this.onAddEvent, n), s;
  } }, { key: "delete", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, i = this.get(r);
    if (!i)
      return !1;
    i.removeListener("*", l(this, ka)[ka].get(r));
    var s = Ce(t, "delete", this, 3)([r]);
    return a && i.removeAllListeners(), n && l(this, Ne)[Ne].emit(this.onDeleteEvent, i), s;
  } }, { key: "clear", value: function() {
    var r = this, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    this.forEach(function(s) {
      s.removeListener("*", l(r, ka)[ka].get(s.id)), a && s.removeAllListeners();
    });
    var i = Ce(t, "clear", this, 3)([]);
    return n && l(this, Ne)[Ne].emit(this.onClearEvent), i;
  } }, { key: "toArray", value: function() {
    return Array.from(this.values());
  } }]);
}(/* @__PURE__ */ Zs(Map)), dv = /* @__PURE__ */ function(o) {
  function t(e) {
    return w(this, t), C(this, t, [{ onAddEvent: "pluginAdded", onDeleteEvent: "pluginDeleted" }, e]);
  }
  return R(t, o), P(t, [{ key: "add", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return Ce(t, "add", this, 3)([r, n]);
  } }, { key: "delete", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    return Ce(t, "delete", this, 3)([r, n, a]);
  } }]);
}(hg), aI = Object.defineProperty, iI = Object.getOwnPropertyDescriptor, sI = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? iI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && aI(e, r, a), a;
}, Bd = /* @__PURE__ */ P(function o(t) {
  w(this, o), this.all = void 0, this.active = void 0, this.all = new dv(t), this.active = new dv(t);
});
Bd = sI([vt("0600")], Bd);
var oI = Object.defineProperty, uI = Object.getOwnPropertyDescriptor, Rc = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? uI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && oI(e, r, a), a;
}, vg = (Br = /* @__PURE__ */ E("pluginSocketHandler"), vi = /* @__PURE__ */ E("chatSocketHandler"), Zr = /* @__PURE__ */ E("context"), /* @__PURE__ */ function() {
  function o(t, e, r, n) {
    w(this, o), this.plugins = void 0, Object.defineProperty(this, Br, { writable: !0, value: void 0 }), Object.defineProperty(this, vi, { writable: !0, value: void 0 }), Object.defineProperty(this, Zr, { writable: !0, value: void 0 }), l(this, Br)[Br] = e, l(this, vi)[vi] = r, l(this, Zr)[Zr] = t, this.plugins = n, this.setupEvents();
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, Zr)[Zr].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, Zr)[Zr].getValue("logger");
  } }, { key: "getRoomPlugins", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a = this, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.next = 2, l(this, Br)[Br].getActivePlugins();
            case 2:
              return i = c.sent, s = i.plugins, (n = this.plugins.active) === null || n === void 0 || n.toArray().forEach(function(d) {
                a.disablePlugin({ id: d.id });
              }), c.next = 7, Promise.all(s.map(function(d) {
                return a.enablePlugin({ id: d.pluginId, enabledBy: d.enabledBy });
              }));
            case 7:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enablePlugin", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (a = n.id, i = n.enabledBy, s = this.plugins.all.get(a), s) {
                c.next = 4;
                break;
              }
              return c.abrupt("return");
            case 4:
              return c.next = 6, s.activateForSelf();
            case 6:
              s.enabledBy = i;
            case 7:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disablePlugin", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (a = n.id, i = this.plugins.all.get(a), i) {
                u.next = 4;
                break;
              }
              return u.abrupt("return");
            case 4:
              i.deactivateForSelf();
            case 5:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendIframeEvent", value: function(e, r, n, a) {
    var i = this.plugins.all.get(r);
    i && i.sendIframeEvent({ type: e, uuid: n, payload: a });
  } }, { key: "broadcastIframeEvent", value: function(e, r) {
    var n = this;
    this.plugins.active.forEach(function(a) {
      n.sendIframeEvent(e, a.id, "", r);
    });
  } }, { key: "setupEvents", value: function() {
    var e = this;
    this.plugins.all.on("stateUpdate", function(r) {
      var n = r.active, a = r.id;
      if (n) {
        e.plugins.active.add(e.plugins.all.get(a));
        return;
      }
      e.plugins.active.delete(a);
    }), l(this, Zr)[Zr].getValue("peerSessionStore").onAsync(H.SOCKET_SERVICE_ROOM_JOINED, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.next = 2, e.getRoomPlugins();
            case 2:
              e.logger.debug("[SOCKET_SERVICE_ROOM_JOINED] resolved request to fetch plugins.");
            case 3:
            case "end":
              return a.stop();
          }
      }, r);
    }))), l(this, Br)[Br].on(se.addPlugin, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                if (s = a.pluginId, !((i = e.plugins.all.get(s)) !== null && i !== void 0 && i.active)) {
                  c.next = 3;
                  break;
                }
                return c.abrupt("return");
              case 3:
                return c.next = 5, e.enablePlugin({ id: s, enabledBy: a.enabledBy });
              case 5:
              case "end":
                return c.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), l(this, Br)[Br].on(se.removePlugin, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                if (s = a.pluginId, (i = e.plugins.all.get(s)) !== null && i !== void 0 && i.active) {
                  c.next = 3;
                  break;
                }
                return c.abrupt("return");
              case 3:
                return c.next = 5, e.disablePlugin({ id: s });
              case 5:
              case "end":
                return c.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), [se.enablePluginForPeers, se.enablePluginForRoom].forEach(function(r) {
      l(e, Br)[Br].on(r, /* @__PURE__ */ function() {
        var n = m(/* @__PURE__ */ p().mark(function a(i, s) {
          return p().wrap(function(c) {
            for (; ; )
              switch (c.prev = c.next) {
                case 0:
                  e.sendIframeEvent(r, i.pluginId, s, { enabledBy: i.enabledBy });
                case 1:
                case "end":
                  return c.stop();
              }
          }, a);
        }));
        return function(a, i) {
          return n.apply(this, arguments);
        };
      }());
    }), [se.disablePluginForPeers, se.disablePluginForRoom].forEach(function(r) {
      l(e, Br)[Br].on(r, /* @__PURE__ */ function() {
        var n = m(/* @__PURE__ */ p().mark(function a(i, s) {
          return p().wrap(function(c) {
            for (; ; )
              switch (c.prev = c.next) {
                case 0:
                  e.sendIframeEvent(r, i.pluginId, s, { disabledBy: i.disabledBy });
                case 1:
                case "end":
                  return c.stop();
              }
          }, a);
        }));
        return function(a, i) {
          return n.apply(this, arguments);
        };
      }());
    }), [se.customPluginEventToPeers, se.customPluginEventToRoom].forEach(function(r) {
      l(e, Br)[Br].on(r, /* @__PURE__ */ function() {
        var n = m(/* @__PURE__ */ p().mark(function a(i, s) {
          return p().wrap(function(c) {
            for (; ; )
              switch (c.prev = c.next) {
                case 0:
                  e.sendIframeEvent(r, i.pluginId, s, { data: JSON.parse(new TextDecoder().decode(i.pluginData)) });
                case 1:
                case "end":
                  return c.stop();
              }
          }, a);
        }));
        return function(a, i) {
          return n.apply(this, arguments);
        };
      }());
    }), [se.storeInsertKeys, se.storeGetKeys, se.storeDeleteKeys].forEach(function(r) {
      l(e, Br)[Br].on(r, /* @__PURE__ */ function() {
        var n = m(/* @__PURE__ */ p().mark(function a(i, s) {
          var u, c;
          return p().wrap(function(h) {
            for (; ; )
              switch (h.prev = h.next) {
                case 0:
                  c = (u = i.storeItems) === null || u === void 0 ? void 0 : u.map(function(v) {
                    var f;
                    return { timestamp: v.timestamp, peerId: v.peerId, payload: JSON.parse((f = v.payload) !== null && f !== void 0 && f.length ? new TextDecoder().decode(v.payload) : "{}"), key: v.storeKey };
                  }), e.sendIframeEvent(r, i.pluginId, s, { storeName: i.storeName, storeItems: c });
                case 2:
                case "end":
                  return h.stop();
              }
          }, a);
        }));
        return function(a, i) {
          return n.apply(this, arguments);
        };
      }());
    }), l(this, Br)[Br].on(se.storeDelete, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a, i) {
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                e.sendIframeEvent(se.storeDelete, a.pluginId, i, { storeName: a.storeName });
              case 1:
              case "end":
                return u.stop();
            }
        }, n);
      }));
      return function(n, a) {
        return r.apply(this, arguments);
      };
    }()), l(this, vi)[vi].on(Ir.sendMessageToPeers, function(r) {
      var n = jn == null ? void 0 : jn.formatSocketServiceMessage(r.message);
      e.broadcastIframeEvent(Lr.chatMessage, { message: n });
    }), l(this, vi)[vi].on(Ir.sendMessageToRoom, function(r) {
      var n = jn == null ? void 0 : jn.formatSocketServiceMessage(r.message);
      e.broadcastIframeEvent(Lr.chatMessage, { message: n });
    }), l(this, Zr)[Zr].getValue("peerSessionStore").on(H.PEER_JOINED_INTERNAL, function(r) {
      var n = uc(r);
      e.broadcastIframeEvent(Lr.peerJoined, n);
    }), l(this, Zr)[Zr].getValue("peerSessionStore").on(H.PEER_CLOSED, function(r) {
      e.broadcastIframeEvent(Lr.peerLeft, r);
    }), l(this, Zr)[Zr].getValue("peerSessionStore").on(H.UPDATE_PEER_STAGE_STATUS, function(r) {
      e.broadcastIframeEvent(Lr.peerStageStatusUpdate, r);
    }), l(this, Zr)[Zr].subscribe("stageStatus", function(r) {
      e.broadcastIframeEvent(Lr.stageStatusUpdate, r);
    });
  } }], [{ key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i, s, u, c, d, h) {
      var v, f;
      return p().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              return v = n.getValue("logger"), f = new Bd(v), a.forEach(function(y) {
                var b = new qo(n, y, i, c, d, u, h);
                f.all.add(b);
              }), k.abrupt("return", new vg(n, i, s, f));
            case 4:
            case "end":
              return k.stop();
          }
      }, r);
    }));
    function e(r, n, a, i, s, u, c, d) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}()), cl = vg;
Rc([D.trace("PluginController.getRoomPlugins")], cl.prototype, "getRoomPlugins", 1);
Rc([D.trace("PluginController.enableForSelf")], cl.prototype, "enablePlugin", 1);
Rc([D.trace("PluginController.disableForSelf")], cl.prototype, "disablePlugin", 1);
Rc([D.trace("PluginController.setupEvents")], cl.prototype, "setupEvents", 1);
var uu = /* @__PURE__ */ E("context"), lI = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.mediaJoined = void 0, this.socketJoined = void 0, this.socketJoinAttempted = void 0, this.mediaJoinAttempted = void 0, this.socketState = void 0, this.mediaState = void 0, Object.defineProperty(this, uu, { writable: !0, value: void 0 }), this.mediaJoined = !1, this.socketJoined = !1, this.socketJoinAttempted = !1, this.mediaJoinAttempted = !1, this.socketState = { state: void 0, reconnected: !1, reconnectionAttempt: void 0 }, this.mediaState = { recv: void 0, send: void 0 }, l(this, uu)[uu] = t;
  }
  return P(o, [{ key: "joinAttempted", get: function() {
    return this.mediaJoinAttempted || this.socketJoinAttempted;
  } }, { key: "roomJoined", get: function() {
    return this.mediaJoined && this.socketJoined;
  } }, { key: "updateSocketConnectionState", value: function(e, r) {
    var n, a = this.socketState.reconnected;
    switch (e) {
      case "connected":
        n = { state: "connected", reconnected: a, reconnectionAttempt: void 0 };
        break;
      case "disconnected":
        n = { state: "disconnected", reconnected: !1, reconnectionAttempt: 0 }, this.socketJoined = !1;
        break;
      case "reconnected":
        n = { state: "connected", reconnected: !0, reconnectionAttempt: void 0 };
        break;
      case "reconnecting":
        n = { state: "reconnecting", reconnected: a, reconnectionAttempt: 0 };
        break;
      case "reconnectAttempt":
        n = { state: "reconnecting", reconnected: a, reconnectionAttempt: r };
        break;
      case "failed":
        n = { state: "failed", reconnected: a, reconnectionAttempt: void 0 }, this.socketJoined = !1;
        break;
    }
    n && (l(this, uu)[uu].getValue("peerSessionStore").emit(H.SOCKET_STATE_UPDATE, n), this.socketState = n);
  } }]);
}(), cI = Object.defineProperty, dI = Object.getOwnPropertyDescriptor, dl = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? dI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && cI(e, r, a), a;
}, no = (_i = /* @__PURE__ */ E("self"), fi = /* @__PURE__ */ E("context"), gi = /* @__PURE__ */ E("update"), /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n;
    w(this, t);
    var a = e.getValue("logger");
    return n = C(this, t, [a]), Object.defineProperty(n, gi, { value: pI }), Object.defineProperty(n, _i, { writable: !0, value: void 0 }), Object.defineProperty(n, fi, { writable: !0, value: void 0 }), n.recordingPeerIds = [], n.recordings = [], l(n, fi)[fi] = e, l(n, _i)[_i] = r, n;
  }
  return R(t, o), P(t, [{ key: "recordingState", get: function() {
    return this.recordings.some(function(r) {
      return r.state === "RECORDING";
    }) ? "RECORDING" : this.recordings.some(function(r) {
      return r.state === "PAUSED";
    }) ? "PAUSED" : this.recordings.some(function(r) {
      return r.state === "STARTING";
    }) ? "STARTING" : this.recordings.some(function(r) {
      return r.state === "STOPPING";
    }) ? "STOPPING" : "IDLE";
  } }, { key: "telemetry", get: function() {
    return l(this, fi)[fi].getValue("telemetry");
  } }, { key: "updateRecordings", value: function(r) {
    this.recordings = r, this.emit("recordingUpdate", this.recordingState);
  } }, { key: "start", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (l(this, _i)[_i].permissions.canRecord) {
                v.next = 3;
                break;
              }
              throw this.logger.error("DyteRecording::start::permission_denied"), new U("User does not have permission to start recording", "1001");
            case 3:
              if (!((a == null ? void 0 : a.allowMultiple) !== !0 && (this.recordingState === "STARTING" || this.recordingState === "RECORDING" || this.recordingState === "STOPPING"))) {
                v.next = 6;
                break;
              }
              throw this.logger.error("DyteRecording::start::recording_in_progress", { recording: { state: this.recordingState } }), new U("Cant start recording, recordingState irregular: ".concat(this.recordingState), "1005");
            case 6:
              return v.prev = 6, i = pt(), s = l(this, fi)[fi].getValue("defaults"), u = s.recording, c = u === void 0 ? {} : u, v.next = 11, i.startRecording(c, a == null ? void 0 : a.allowMultiple);
            case 11:
              d = v.sent, this.updateRecordings([].concat(ke(this.recordings), [{ id: d, state: "STARTING", type: "BROWSER" }])), v.next = 19;
              break;
            case 15:
              throw v.prev = 15, v.t0 = v.catch(6), this.logger.error("DyteRecording::stop::recording_failed_to_start", { error: v.t0 }), new U("Error while starting recording", "1000", this.logger);
            case 19:
            case "end":
              return v.stop();
          }
      }, n, this, [[6, 15]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "stop", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, gi)[gi]("stop", ["RECORDING", "PAUSED"], a);
            case 2:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "pause", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, gi)[gi]("pause", ["RECORDING"], a);
            case 2:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "resume", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, gi)[gi]("resume", ["PAUSED"], a);
            case 2:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(an));
function pI(o, t, e) {
  return qd.apply(this, arguments);
}
function qd() {
  return qd = m(/* @__PURE__ */ p().mark(function o(t, e, r) {
    var n = this, a, i;
    return p().wrap(function(u) {
      for (; ; )
        switch (u.prev = u.next) {
          case 0:
            if (l(this, _i)[_i].permissions.canRecord) {
              u.next = 3;
              break;
            }
            throw this.logger.error("DyteRecording::stop::permission_denied"), new U("User does not have permission to stop recording", "1001");
          case 3:
            if (a = [], r === void 0) {
              u.next = 14;
              break;
            }
            if (i = this.recordings.find(function(c) {
              return c.id === r;
            }), i !== void 0) {
              u.next = 8;
              break;
            }
            throw new U("Could not find the specified recording", "1004");
          case 8:
            if (!e.includes(i.state)) {
              u.next = 11;
              break;
            }
            return this.logger.error("DyteRecording::stop::recording_not_in_expected_state", { recording: { state: i.state } }), u.abrupt("return");
          case 11:
            a.push(i), u.next = 15;
            break;
          case 14:
            a = this.recordings.filter(function(c) {
              return e.includes(c.state);
            });
          case 15:
            a.forEach(/* @__PURE__ */ function() {
              var c = m(/* @__PURE__ */ p().mark(function d(h) {
                var v, f;
                return p().wrap(function(k) {
                  for (; ; )
                    switch (k.prev = k.next) {
                      case 0:
                        return v = h.state, t === "stop" && (h.state = "STOPPING", n.emit("recordingUpdate", "STOPPING")), k.prev = 2, f = pt(), k.next = 6, f.updateRecording(h.id, t);
                      case 6:
                        k.next = 13;
                        break;
                      case 8:
                        throw k.prev = 8, k.t0 = k.catch(2), n.logger.error("DyteRecording::stop::recording_failed_to_stop", { error: k.t0 }), h.state !== v && (h.state = v, n.emit("recordingUpdate", v)), new U("Error while stopping recording", "1000", n.logger);
                      case 13:
                      case "end":
                        return k.stop();
                    }
                }, d, null, [[2, 8]]);
              }));
              return function(d) {
                return c.apply(this, arguments);
              };
            }());
          case 16:
          case "end":
            return u.stop();
        }
    }, o, this);
  })), qd.apply(this, arguments);
}
dl([D.trace("DyteRecording.start")], no.prototype, "start", 1);
dl([D.trace("DyteRecording.stop")], no.prototype, "stop", 1);
dl([D.trace("DyteRecording.stop")], no.prototype, "pause", 1);
dl([D.trace("DyteRecording.stop")], no.prototype, "resume", 1);
no = dl([vt("1000")], no);
var hI = Object.defineProperty, vI = Object.getOwnPropertyDescriptor, fI = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? vI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && hI(e, r, a), a;
}, ba = /* @__PURE__ */ E("context"), fg = /* @__PURE__ */ function() {
  function o(t, e, r) {
    w(this, o), this.recording = void 0, this.room = void 0, Object.defineProperty(this, ba, { writable: !0, value: void 0 }), l(this, ba)[ba] = t, this.recording = new no(t, e), this.room = r, this.setupEvents();
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, ba)[ba].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, ba)[ba].getValue("logger");
  } }, { key: "getRecordingTypeFromProtoType", value: function(e) {
    var r;
    switch (e) {
      case Ys.BROWSER:
        r = "BROWSER";
        break;
      case Ys.COMPOSITE:
        r = "COMPOSITE";
        break;
      case Ys.TRACK:
        r = "TRACK";
        break;
      default:
        r = "BROWSER";
    }
    return r;
  } }, { key: "setupEvents", value: function() {
    var e = this;
    l(this, ba)[ba].getValue("peerSessionStore").on(H.ROOM_STATE, function(r) {
      r.activeRecordings.length !== 0 ? e.recording.updateRecordings(r.activeRecordings.map(function(n) {
        var a = e.getRecordingTypeFromProtoType(n.recordingType);
        return { id: n.recordingId, state: n.recordingStatus, type: a };
      })) : e.recording.recordings.length && e.recording.updateRecordings([]);
    }), this.room.on(X.recordingStarted, function(r) {
      var n = !1, a = ke(e.recording.recordings);
      if (a.forEach(function(s) {
        s.id === r.recordingId && (n = !0, s.state = "RECORDING");
      }), n === !1) {
        var i = e.getRecordingTypeFromProtoType(r.recordingType);
        a.push({ id: r.recordingId, state: "RECORDING", type: i });
      }
      e.recording.updateRecordings(a);
    }), this.room.on(X.recordingPaused, function(r) {
      var n = ke(e.recording.recordings);
      n.forEach(function(a) {
        a.id === r.recordingId && (a.state = "PAUSED");
      }), e.recording.updateRecordings(n);
    }), this.room.on(X.recordingStopped, function(r) {
      var n = ke(e.recording.recordings.filter(function(a) {
        return a.id !== r.recordingId;
      }));
      e.recording.updateRecordings(n);
    });
  } }]);
}();
fI([D.trace("RecordingController.setupEvents")], fg.prototype, "setupEvents", 1);
var Ta = /* @__PURE__ */ E("context"), gI = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), Object.defineProperty(this, Ta, { writable: !0, value: void 0 }), l(this, Ta)[Ta] = t;
  }
  return P(o, [{ key: "hasFeature", value: function(e) {
    var r;
    return (r = l(this, Ta)[Ta].getValue("flagsmith").hasFeature(e)) !== null && r !== void 0 ? r : !1;
  } }, { key: "getFeatureValue", value: function(e) {
    return l(this, Ta)[Ta].getValue("flagsmith").getValue(e);
  } }, { key: "getAllFeatures", value: function() {
    return l(this, Ta)[Ta].getValue("flagsmith").getAllFlags();
  } }]);
}(), mI = /* @__PURE__ */ function() {
  function o(t, e, r) {
    w(this, o), this.logger = void 0, this.features = void 0, this.browserSpecs = void 0, this.callStats = void 0, this.logger = t, this.features = e, this.browserSpecs = kr, this.callStats = r;
  }
  return P(o, null, [{ key: "init", value: function(e) {
    return new o(e.getValue("logger"), new gI(e), e.getValue("callstats"));
  } }]);
}(), yI = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.internals = void 0, this.internals = t;
  }
  return P(o, null, [{ key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return a = mI.init(n), s.abrupt("return", new o(a));
            case 2:
            case "end":
              return s.stop();
          }
      }, r);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), kI = Object.defineProperty, bI = Object.getOwnPropertyDescriptor, on = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? bI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && kI(e, r, a), a;
}, Fe = /* @__PURE__ */ E("mediaInterface"), be = /* @__PURE__ */ E("audioMediaHandler"), ye = /* @__PURE__ */ E("videoMediaHandler"), Wt = /* @__PURE__ */ E("audioOutputMediaHandler"), Yr = /* @__PURE__ */ E("screenShareMediaHandler"), lu = /* @__PURE__ */ E("autoSwitchDevice"), Ee = /* @__PURE__ */ E("context"), $t = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Gd, i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0;
    w(this, t);
    var s = e.getValue("logger");
    return n = C(this, t, [s]), Object.defineProperty(n, Fe, { writable: !0, value: void 0 }), Object.defineProperty(n, be, { writable: !0, value: void 0 }), Object.defineProperty(n, ye, { writable: !0, value: void 0 }), Object.defineProperty(n, Wt, { writable: !0, value: void 0 }), Object.defineProperty(n, Yr, { writable: !0, value: void 0 }), Object.defineProperty(n, lu, { writable: !0, value: void 0 }), Object.defineProperty(n, Ee, { writable: !0, value: void 0 }), n.audioUpdateInProgress = void 0, n.videoUpdateInProgress = void 0, l(n, Ee)[Ee] = e, n.audioUpdateInProgress = !1, n.videoUpdateInProgress = !1, l(n, Fe)[Fe] = new gg(e, r), l(n, be)[be] = new qI(e, l(n, Fe)[Fe], void 0, a), l(n, ye)[ye] = new QI(e, l(n, Fe)[Fe], void 0, a), l(n, Yr)[Yr] = new KI(l(n, Ee)[Ee], l(n, Fe)[Fe]), l(n, Wt)[Wt] = new WI(l(n, Fe)[Fe]), l(n, lu)[lu] = i, l(n, be)[be].on("trackMuted", n.onAudioTrackMuted.bind(n)), l(n, be)[be].on("trackChanged", n.onAudioTrackChanged.bind(n)), l(n, ye)[ye].on("trackChanged", n.onVideoTrackChanged.bind(n)), l(n, ye)[ye].on("trackEnded", n.onVideoTrackEnded.bind(n)), l(n, Yr)[Yr].on("trackEnded", n.onScreenShareEnded.bind(n)), n.onVisibilityChange = n.onVisibilityChange.bind(n), document.addEventListener("visibilitychange", n.onVisibilityChange), n;
  }
  return R(t, o), P(t, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, Ee)[Ee].getValue("telemetry");
    }
  ) }, {
    key: "context",
    set: function(r) {
      l(this, Ee)[Ee] = r;
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "onVisibilityChange",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        return p().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (l(this, Ee)[Ee].getValue("callstats").tabChanged(document.visibilityState === "visible"), document.visibilityState === "visible") {
                  i.next = 5;
                  break;
                }
                l(this, Ee)[Ee].getValue("callstats").browserBackgrounded(), i.next = 8;
                break;
              case 5:
                return l(this, Ee)[Ee].getValue("callstats").browserForegrounded(), i.next = 8, this.setupSpeaker();
              case 8:
              case "end":
                return i.stop();
            }
        }, n, this);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "repopulateAvailableDevices", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", !0);
            case 1:
            case "end":
              return i.stop();
          }
      }, n);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setupStreams", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s = this, u, c, d, h, v, f, g;
      return p().wrap(function(y) {
        for (; ; )
          switch (y.prev = y.next) {
            case 0:
              if (u = a.audio, c = a.video, u ? l(this, Ee)[Ee].getValue("callstats").audioOn() : l(this, Ee)[Ee].getValue("callstats").audioOff(), c ? l(this, Ee)[Ee].getValue("callstats").videoOn() : l(this, Ee)[Ee].getValue("callstats").videoOff(), !(u && c)) {
                y.next = 15;
                break;
              }
              return y.prev = 4, y.next = 7, l(this, Fe)[Fe].getAudioAndVideoTrack(l(this, be)[be].userSelectedDevice, l(this, ye)[ye].userSelectedDevice);
            case 7:
              v = y.sent, d = v.audioTrack, h = v.videoTrack, y.next = 15;
              break;
            case 12:
              y.prev = 12, y.t0 = y.catch(4), this.logger.error("LocalMediaHandler::init::Failed to get audio video tracks", { error: y.t0 });
            case 15:
              if (!(!d && u)) {
                y.next = 25;
                break;
              }
              return y.prev = 16, y.next = 19, l(this, Fe)[Fe].getAudioTrack(!1, l(this, be)[be].userSelectedDevice);
            case 19:
              d = y.sent, y.next = 25;
              break;
            case 22:
              y.prev = 22, y.t1 = y.catch(16), this.logger.error("LocalMediaHandler::init::Failed to get audio track", { error: y.t1 });
            case 25:
              if (!(!h && c)) {
                y.next = 35;
                break;
              }
              return y.prev = 26, y.next = 29, l(this, Fe)[Fe].getVideoTrack(l(this, ye)[ye].userSelectedDevice);
            case 29:
              h = y.sent, y.next = 35;
              break;
            case 32:
              y.prev = 32, y.t2 = y.catch(26), this.logger.error("LocalMediaHandler::init::Failed to get video track", { error: y.t2 });
            case 35:
              return u && !d && l(this, Ee)[Ee].getValue("callstats").audioOff(), c && !h && l(this, Ee)[Ee].getValue("callstats").videoOff(), y.next = 39, l(this, be)[be].setMediaTrack(d);
            case 39:
              return y.next = 41, l(this, ye)[ye].setMediaTrack(h);
            case 41:
              try {
                this.setupSpeaker();
              } catch (b) {
              }
              if (!h) {
                y.next = 47;
                break;
              }
              return y.next = 45, this.getDeviceById(h.getSettings().deviceId);
            case 45:
              f = y.sent, l(this, Ee)[Ee].getValue("callstats").selectedDevice("VIDEO", f);
            case 47:
              if (!d) {
                y.next = 52;
                break;
              }
              return y.next = 50, this.getDeviceById(d.getSettings().deviceId);
            case 50:
              g = y.sent, l(this, Ee)[Ee].getValue("callstats").selectedDevice("AUDIO", g);
            case 52:
              (i = l(this, Wt)[Wt].currentDevice) !== null && i !== void 0 && i.deviceId && l(this, Ee)[Ee].getValue("callstats").selectedDevice("SPEAKER", l(this, Wt)[Wt].currentDevice), l(this, Fe)[Fe].onDeviceChange(function(b, S, T) {
                s.onDeviceChange(S, T);
              });
            case 54:
            case "end":
              return y.stop();
          }
      }, n, this, [[4, 12], [16, 22], [26, 32]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getCurrentDevices", value: function() {
    return { audio: l(this, be)[be].currentDevice, video: l(this, ye)[ye].currentDevice, speaker: l(this, Wt)[Wt].currentDevice };
  } }, { key: "permissions", get: function() {
    return l(this, Fe)[Fe].permissions;
  } }, { key: "getAllDevices", value: function() {
    return l(this, Fe)[Fe].getAvailableDevices();
  } }, {
    key: "getDeviceById",
    value: function(r, n) {
      return l(this, Fe)[Fe].getDevice(r);
    }
    /**
    * Audio Input Handler
    */
  }, { key: "onAudioTrackMuted", value: function() {
    this.emit("AUDIO_TRACK_SILENT");
  } }, { key: "onAudioTrackChanged", value: function() {
    this.emit("AUDIO_TRACK_CHANGE");
  } }, { key: "rawAudioTrack", get: function() {
    return l(this, be)[be].mediaTrack;
  } }, { key: "audioTrack", get: function() {
    return l(this, be)[be].transformedMediaTrack;
  } }, { key: "audioEnabled", get: function() {
    return l(this, be)[be].trackEnabled;
  } }, { key: "enableAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!this.audioUpdateInProgress) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if (this.audioUpdateInProgress = !0, s.prev = 3, !a) {
                s.next = 9;
                break;
              }
              return s.next = 7, l(this, be)[be].enableTrack(!1, a);
            case 7:
              s.next = 11;
              break;
            case 9:
              return s.next = 11, l(this, be)[be].unmuteTrack();
            case 11:
              s.next = 15;
              break;
            case 13:
              s.prev = 13, s.t0 = s.catch(3);
            case 15:
              return s.prev = 15, this.audioUpdateInProgress = !1, s.finish(15);
            case 18:
            case "end":
              return s.stop();
          }
      }, n, this, [[3, 13, 15, 18]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableAudio", value: function() {
    l(this, be)[be].mediaTrack && !l(this, be)[be].isCustomTrack ? l(this, be)[be].muteTrack() : l(this, be)[be].disableTrack();
  } }, { key: "getAudioDevices", value: function(r) {
    return l(this, Fe)[Fe].getAudioInputDevices(r);
  } }, {
    key: "setAudioDevice",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, l(this, be)[be].setDevice(a);
              case 2:
                a != null && a.deviceId && l(this, Ee)[Ee].getValue("callstats").selectedDevice("AUDIO", a), this.emit("AUDIO_TRACK_CHANGE"), this.emit("DEVICE_CHANGE", { device: a });
              case 5:
              case "end":
                return s.stop();
            }
        }, n, this);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Audio Output Handler
    */
  }, { key: "setupSpeaker", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return a = this.getCurrentDevices(), i = a.speaker, d.next = 3, l(this, Wt)[Wt].setupSpeaker();
            case 3:
              if (s = this.getCurrentDevices(), u = s.speaker, (i == null ? void 0 : i.deviceId) !== (u == null ? void 0 : u.deviceId)) {
                d.next = 6;
                break;
              }
              return d.abrupt("return");
            case 6:
              u && this.emit("DEVICE_CHANGE", { device: u });
            case 7:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "setSpeakerDevice",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, l(this, Wt)[Wt].setupSpeaker(a);
              case 2:
                a != null && a.deviceId && l(this, Ee)[Ee].getValue("callstats").selectedDevice("SPEAKER", a), this.emit("DEVICE_CHANGE", { device: a });
              case 4:
              case "end":
                return s.stop();
            }
        }, n, this);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Video Handler
    */
  }, { key: "onVideoTrackChanged", value: function() {
    this.emit("VIDEO_TRACK_CHANGE");
  } }, { key: "onVideoTrackEnded", value: function() {
    this.emit("VIDEO_TRACK_CHANGE");
  } }, { key: "rawVideoTrack", get: function() {
    return l(this, ye)[ye].mediaTrack;
  } }, { key: "videoTrack", get: function() {
    return l(this, ye)[ye].transformedMediaTrack;
  } }, { key: "videoEnabled", get: function() {
    return l(this, ye)[ye].trackEnabled;
  } }, { key: "enableVideo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!this.videoUpdateInProgress) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if (this.videoUpdateInProgress = !0, s.prev = 3, !a) {
                s.next = 9;
                break;
              }
              return s.next = 7, l(this, ye)[ye].enableTrack(!1, a);
            case 7:
              s.next = 11;
              break;
            case 9:
              return s.next = 11, l(this, ye)[ye].unmuteTrack();
            case 11:
              s.next = 15;
              break;
            case 13:
              s.prev = 13, s.t0 = s.catch(3);
            case 15:
              return s.prev = 15, this.videoUpdateInProgress = !1, s.finish(15);
            case 18:
            case "end":
              return s.stop();
          }
      }, n, this, [[3, 13, 15, 18]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableVideo", value: function() {
    l(this, ye)[ye].disableTrack();
  } }, { key: "getVideoDevices", value: function(r) {
    return l(this, Fe)[Fe].getVideoInputDevices(r);
  } }, { key: "setVideoDevice", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, ye)[ye].setDevice(a);
            case 2:
              a != null && a.deviceId && l(this, Ee)[Ee].getValue("callstats").selectedDevice("VIDEO", a), this.emit("VIDEO_TRACK_CHANGE"), this.emit("DEVICE_CHANGE", { device: a });
            case 5:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "updateVideoConstraints",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, l(this, ye)[ye].updateConstraints(a);
              case 2:
              case "end":
                return s.stop();
            }
        }, n, this);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Screen Share Handler
    */
  }, { key: "onScreenShareEnded", value: function() {
    this.emit("SCREENSHARE_ENDED");
  } }, { key: "screenShareTracks", get: function() {
    return { audio: l(this, Yr)[Yr].audioMediaTrack, video: l(this, Yr)[Yr].videoMediaTrack };
  } }, { key: "screenShareEnabled", get: function() {
    return l(this, Yr)[Yr].trackEnabled;
  } }, { key: "enableScreenShare", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, l(this, Yr)[Yr].enableScreenShare();
            case 2:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableScreenShare", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              l(this, Yr)[Yr].disableScreenShare();
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateScreenshareConstraints", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, Yr)[Yr].updateConstraints(a);
            case 2:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "getSpeakerDevices",
    value: function(r) {
      return l(this, Fe)[Fe].getAudioOutputDevices(r);
    }
    /**
    * Middleware Utility
    */
  }, { key: "addAudioMiddleware", value: function(r) {
    return l(this, be)[be].addMiddleware(r);
  } }, { key: "removeAudioMiddleware", value: function(r) {
    return l(this, be)[be].removeMiddleware(r);
  } }, { key: "removeAllAudioMiddlewares", value: function() {
    return l(this, be)[be].removeAllMiddlewares();
  } }, { key: "addVideoMiddleware", value: function(r) {
    return l(this, ye)[ye].addMiddleware(r);
  } }, { key: "removeVideoMiddleware", value: function(r) {
    return l(this, ye)[ye].removeMiddleware(r);
  } }, { key: "removeAllVideoMiddlewares", value: function() {
    return l(this, ye)[ye].removeAllMiddlewares();
  } }, { key: "setVideoMiddlewareGlobalConfig", value: function(r) {
    return l(this, ye)[ye].setVideoMiddlewareGlobalConfig(r);
  } }, { key: "destruct", value: function() {
    l(this, be)[be].disableTrack(), l(this, ye)[ye].disableTrack(), l(this, ye)[ye].terminateMiddlewareWebWorker(), l(this, Yr)[Yr].disableScreenShare(), l(this, Fe)[Fe].destruct();
  } }, {
    key: "onDeviceChange",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
        var s, u = this, c;
        return p().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (this.emit("DEVICE_LIST_UPDATED", a), !(i || !l(this, lu)[lu])) {
                  h.next = 3;
                  break;
                }
                return h.abrupt("return");
              case 3:
                a == null || (s = a.added) === null || s === void 0 || s.forEach(/* @__PURE__ */ function() {
                  var v = m(/* @__PURE__ */ p().mark(function f(g) {
                    var k;
                    return p().wrap(function(b) {
                      for (; ; )
                        switch (b.prev = b.next) {
                          case 0:
                            if (!(g && !Gd(g))) {
                              b.next = 9;
                              break;
                            }
                            if (!(g.kind === "audioinput" && ((k = u.audioTrack) === null || k === void 0 ? void 0 : k.enabled) === !0)) {
                              b.next = 6;
                              break;
                            }
                            return b.next = 4, u.setAudioDevice(g);
                          case 4:
                            b.next = 9;
                            break;
                          case 6:
                            if (g.kind !== "audiooutput") {
                              b.next = 9;
                              break;
                            }
                            return b.next = 9, u.setSpeakerDevice(g);
                          case 9:
                          case "end":
                            return b.stop();
                        }
                    }, f);
                  }));
                  return function(f) {
                    return v.apply(this, arguments);
                  };
                }()), a == null || (c = a.removed) === null || c === void 0 || c.forEach(/* @__PURE__ */ function() {
                  var v = m(/* @__PURE__ */ p().mark(function f(g) {
                    var k, y;
                    return p().wrap(function(S) {
                      for (; ; )
                        switch (S.prev = S.next) {
                          case 0:
                            if (!(g.kind === "audiooutput" && ((k = u.getCurrentDevices().speaker) === null || k === void 0 ? void 0 : k.deviceId) === g.deviceId)) {
                              S.next = 7;
                              break;
                            }
                            return S.next = 3, u.getSpeakerDevices();
                          case 3:
                            if (y = S.sent.find(function(T) {
                              return T.deviceId !== g.deviceId;
                            }), !y) {
                              S.next = 7;
                              break;
                            }
                            return S.next = 7, u.setSpeakerDevice(y);
                          case 7:
                          case "end":
                            return S.stop();
                        }
                    }, f);
                  }));
                  return function(f) {
                    return v.apply(this, arguments);
                  };
                }());
              case 5:
              case "end":
                return h.stop();
            }
        }, n, this);
      }));
      function r(n, a) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Backward Compatibility
    */
  }, {
    key: "removeAllTracks",
    value: function() {
      this.destruct();
    }
    /**
    * NOTE(ravindra-dyte):
    * Purpose of this function is to ensure a way to reset tracks.
    * Our EdTech clients also call getUserMedia for their own proctoring systems,
    * which can cause our tracks to be blank despite having enabled true.
    *
    * To ensure that they can cleanup our tracks and re-request tracks,
    *  we need to remove the existing tracks.
    */
  }, {
    key: "removeAudioTrack",
    value: function() {
      l(this, be)[be].disableTrack();
    }
    /**
    * NOTE(ravindra-dyte):
    * Purpose of this function is to ensure a way to reset tracks.
    * Our EdTech clients also call getUserMedia for their own proctoring systems,
    * which can cause our tracks to be blank despite having enabled true.
    *
    * To ensure that they can cleanup our tracks and re-request tracks,
    *  we need to remove the existing tracks.
    */
  }, { key: "removeVideoTrack", value: function() {
    l(this, ye)[ye].disableTrack(), l(this, ye)[ye].terminateMiddlewareWebWorker();
  } }, { key: "removeDocumentEventListeners", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              document.removeEventListener("visibilitychange", this.onVisibilityChange);
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(Jo);
on([D.trace("MediaHandler.setupStreams")], $t.prototype, "setupStreams", 1);
on([D.trace("MediaHandler.enableAudio")], $t.prototype, "enableAudio", 1);
on([D.trace("MediaHandler.disableAudio")], $t.prototype, "disableAudio", 1);
on([D.trace("MediaHandler.setAudioDevice")], $t.prototype, "setAudioDevice", 1);
on([D.trace("MediaHandler.enableVideo")], $t.prototype, "enableVideo", 1);
on([D.trace("MediaHandler.disableVideo")], $t.prototype, "disableVideo", 1);
on([D.trace("MediaHandler.setVideoDevice")], $t.prototype, "setVideoDevice", 1);
on([D.trace("MediaHandler.updateVideoConstraints")], $t.prototype, "updateVideoConstraints", 1);
on([D.trace("MediaHandler.enableScreenShare")], $t.prototype, "enableScreenShare", 1);
on([D.trace("MediaHandler.disableScreenShare")], $t.prototype, "disableScreenShare", 1);
on([D.trace("MediaHandler.updateScreenshareConstraints")], $t.prototype, "updateScreenshareConstraints", 1);
on([D.trace("MediaHandler.destruct")], $t.prototype, "destruct", 1);
on([D.trace("MediaHandler.onDeviceChange")], $t.prototype, "onDeviceChange", 1);
function Ol(o, t, e) {
  switch (!0) {
    case kr.isChromiumBased():
      switch (t) {
        case "NotAllowedError":
          return e.includes("by system") ? "SYSTEM_DENIED" : o === "screenshare" ? "CANCELED" : "DENIED";
        case "NotReadableError":
        default:
          return "COULD_NOT_START";
      }
    case kr.isSafari():
      switch (t) {
        case "NotAllowedError":
          return "DENIED";
        default:
          return "COULD_NOT_START";
      }
    case kr.isFirefox():
      switch (t) {
        case "NotFoundError":
        case "NotReadableError":
          return "SYSTEM_DENIED";
        case "NotAllowedError":
          return "DENIED";
        case "AbortError":
        default:
          return "COULD_NOT_START";
      }
    default:
      return "COULD_NOT_START";
  }
}
var TI = [
  "virtual",
  "emulator",
  "krisp",
  "solstice conference",
  "teams",
  "loom",
  "zoom",
  "manycam",
  "blackhole",
  "displayport",
  "xsplit",
  // XSplit virtual camera
  "wirecast",
  // Wirecast virtual camera
  "vMix",
  // vMix virtual camera
  "elgato",
  // Elgato virtual camera
  "epiphan",
  // Epiphan virtual camera
  "voice changer",
  // Some voice changer software
  "voicemod",
  // Voicemod virtual audio device
  "morphvoxx"
  // MorphVOXX virtual audio device
];
function Gd(o) {
  var t, e, r = (t = o.label) === null || t === void 0 ? void 0 : t.toLowerCase();
  return ((e = kr._bowser) === null || e === void 0 ? void 0 : e.getOSName()) === "macOS" && r.includes("iphone") ? !0 : TI.some(function(n) {
    return r == null ? void 0 : r.includes(n);
  });
}
function wI(o, t, e) {
  return Wd.apply(this, arguments);
}
function Wd() {
  return Wd = m(/* @__PURE__ */ p().mark(function o(t, e, r) {
    var n, a, i, s, u, c, d;
    return p().wrap(function(v) {
      for (; ; )
        switch (v.prev = v.next) {
          case 0:
            if (e != null && e.length) {
              v.next = 2;
              break;
            }
            return v.abrupt("return", r);
          case 2:
            return n = t.getValue("logger"), a = new AudioContext(), v.next = 6, Promise.all(e == null ? void 0 : e.map(function(f) {
              return f(a);
            }));
          case 6:
            for (i = v.sent, s = a.createMediaStreamSource(new MediaStream([r])), u = a.createMediaStreamDestination(), v.prev = 9, c = s, d = 0; d < i.length; d += 1)
              c.connect(i[d]), c = i[d];
            c.connect(u), v.next = 19;
            break;
          case 15:
            return v.prev = 15, v.t0 = v.catch(9), n.error("getTransformedAudioTrack::middleware_execution_failed", { error: v.t0 }), v.abrupt("return", r);
          case 19:
            return v.abrupt("return", u.stream.getAudioTracks()[0]);
          case 20:
          case "end":
            return v.stop();
        }
    }, o, null, [[9, 15]]);
  })), Wd.apply(this, arguments);
}
var wa = /* @__PURE__ */ E("middlewareWebWorkerInterval"), cu = /* @__PURE__ */ E("context"), PI = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), Object.defineProperty(this, wa, { writable: !0, value: void 0 }), Object.defineProperty(this, cu, { writable: !0, value: void 0 }), l(this, cu)[cu] = t;
  }
  return P(o, [{ key: "logger", get: function() {
    return l(this, cu)[cu].getValue("logger");
  } }, { key: "terminateMiddlewareWebWorker", value: function() {
    if (l(this, wa)[wa])
      try {
        Nl.clearInterval(l(this, wa)[wa]), l(this, wa)[wa] = void 0;
      } catch (e) {
        this.logger.debug("WorkerTimers::terminateMiddlewareWebWorker::failed");
      }
  } }, { key: "getTransformedVideoTrack", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s = this, u, c, d, h, v, f, g, k, y, b;
      return p().wrap(function(T) {
        for (; ; )
          switch (T.prev = T.next) {
            case 0:
              if (n != null && n.length) {
                T.next = 2;
                break;
              }
              return T.abrupt("return", a);
            case 2:
              return u = document.createElement("canvas"), T.next = 5, Promise.all(n == null ? void 0 : n.map(function(A) {
                return A({ canvas: u, WorkerTimers: Nl });
              }));
            case 5:
              if (c = T.sent, !i.disablePerFrameCanvasRendering) {
                T.next = 11;
                break;
              }
              return d = u.captureStream(), h = d.getVideoTracks()[0], Object.defineProperty(h, "originalSettings", { value: a.getSettings() }), T.abrupt("return", h);
            case 11:
              v = document.createElement("video"), f = new MediaStream(), f.addTrack(a), g = u.getContext("2d"), v.srcObject = f, v.autoplay = !0, this.terminateMiddlewareWebWorker(), k = /* @__PURE__ */ function() {
                var A = m(/* @__PURE__ */ p().mark(function L() {
                  var I;
                  return p().wrap(function(V) {
                    for (; ; )
                      switch (V.prev = V.next) {
                        case 0:
                          if (!(a.enabled === !1 || a.readyState === "ended")) {
                            V.next = 5;
                            break;
                          }
                          return s.terminateMiddlewareWebWorker(), v.remove(), u.remove(), V.abrupt("return");
                        case 5:
                          V.prev = 5, g.drawImage(v, 0, 0), I = 0;
                        case 8:
                          if (!(I < c.length)) {
                            V.next = 15;
                            break;
                          }
                          if (typeof c[I] != "function") {
                            V.next = 12;
                            break;
                          }
                          return V.next = 12, c[I](u, g);
                        case 12:
                          I += 1, V.next = 8;
                          break;
                        case 15:
                          V.next = 20;
                          break;
                        case 17:
                          V.prev = 17, V.t0 = V.catch(5), s.logger.error("getTransformedVideoTrack::middleware_execution_failed", { error: V.t0 });
                        case 20:
                        case "end":
                          return V.stop();
                      }
                  }, L, null, [[5, 17]]);
                }));
                return function() {
                  return A.apply(this, arguments);
                };
              }();
              try {
                v.play();
              } catch (A) {
              }
              return v.addEventListener("play", function() {
                u.width = v.width || a.getSettings().width, u.height = v.width || a.getSettings().height, l(s, wa)[wa] = Nl.setInterval(k, 50);
              }, !1), y = u.captureStream(), b = y.getVideoTracks()[0], Object.defineProperty(b, "originalSettings", { value: a.getSettings() }), T.abrupt("return", b);
            case 25:
            case "end":
              return T.stop();
          }
      }, r, this);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), pv = { gross: { width: { ideal: 192 }, height: { ideal: 144 } }, qvga: { width: { ideal: 384 }, height: { ideal: 288 } }, pvga: { width: { ideal: 480 }, height: { ideal: 360 } }, vga: { width: { ideal: 640 }, height: { ideal: 480 } }, hd: { width: { ideal: 1280 }, height: { ideal: 720 } }, hd_cropped: { width: { ideal: 900 }, height: { ideal: 720 } }, fhd: { width: { ideal: 1920 }, height: { ideal: 1080 } } }, SI = [[320, [{ rid: "q", maxBitrate: 25e4, maxFramerate: 24, scalabilityMode: "L1T1" }]], [640, [{ rid: "q", scaleResolutionDownBy: 2, maxBitrate: 25e4, maxFramerate: 24, scalabilityMode: "L1T1" }, { rid: "h", maxBitrate: 7e5, maxFramerate: 30, scalabilityMode: "L1T1" }]], [1280, [{ rid: "q", scaleResolutionDownBy: 2, maxBitrate: 5e5, maxFramerate: 24, scalabilityMode: "L1T1" }, { rid: "h", maxBitrate: 13e5, maxFramerate: 30, scalabilityMode: "L1T1" }]], [1920, [{ rid: "q", scaleResolutionDownBy: 2, maxBitrate: 9e5, maxFramerate: 24, scalabilityMode: "L1T1" }, { rid: "h", maxBitrate: 15e5, maxFramerate: 30, scalabilityMode: "L1T1" }]]], EI = function(t, e) {
  var r, n = "getSettings" in e && e.getSettings().width || "getConstraints" in e && e.getConstraints().width || "originalSettings" in e && ((r = e.originalSettings) === null || r === void 0 ? void 0 : r.width), a = SI;
  t.getValue("flagsmith").hasFeature(ve.OVERRIDE_HIVE_SIMULCAST_DYNAMIC) && (a = JSON.parse(t.getValue("flagsmith").getValue(ve.OVERRIDE_HIVE_SIMULCAST_DYNAMIC)));
  var i = a.map(function(c) {
    var d = Me(c, 1), h = d[0];
    return h;
  }).sort(function(c, d) {
    return c - d;
  }), s = Number.MAX_VALUE, u = 0;
  return i.forEach(function(c, d) {
    Math.abs(c - n) < s && (s = Math.abs(c - n), u = d);
  }), a[u][1];
}, cr = /* @__PURE__ */ function(o) {
  return o.WEBCAM = "webcam", o.WEBCAM_BACKUP = "webcam_backup", o.MIC = "mic", o.SCREENSHARE_VIDEO = "screenshare_video", o.SCREENSHARE_AUDIO = "screenshare_audio", o;
}(cr || {}), CI = sT(), Eo = Fn(CI.config.media);
function RI(o) {
  var t = {};
  if (o.audio) {
    var e, r;
    t.audio = { enableStereo: (e = o.audio.enableStereo) !== null && e !== void 0 ? e : !1, enableHighBitrate: (r = o.audio.enableHighBitrate) !== null && r !== void 0 ? r : !1 };
  }
  return t.video = o.video.quality, t;
}
var Pa = /* @__PURE__ */ E("mediaConstraints"), mt = /* @__PURE__ */ E("context"), AI = /* @__PURE__ */ function() {
  function o(t, e) {
    var r = this;
    w(this, o), Object.defineProperty(this, Pa, { writable: !0, value: void 0 }), Object.defineProperty(this, mt, { writable: !0, value: void 0 }), this.getScreenShareConstraints = function() {
      var n, a, i, s, u, c, d, h, v, f = (n = l(r, Pa)[Pa]) === null || n === void 0 ? void 0 : n.screenshare, g = (a = f == null || (i = f.width) === null || i === void 0 ? void 0 : i.max) !== null && a !== void 0 ? a : 1920, k = (s = f == null || (u = f.height) === null || u === void 0 ? void 0 : u.max) !== null && s !== void 0 ? s : 1080, y = (c = f == null || (d = f.frameRate) === null || d === void 0 ? void 0 : d.max) !== null && c !== void 0 ? c : 5, b = (h = f == null || (v = f.frameRate) === null || v === void 0 ? void 0 : v.ideal) !== null && h !== void 0 ? h : 5, S = f == null ? void 0 : f.displaySurface, T = f == null ? void 0 : f.selfBrowserSurface;
      if (l(r, mt)[mt].getValue("flagsmith").getValue(ve.VAL_MIN_FRAMERATE)) {
        var A;
        b = parseInt((A = l(r, mt)[mt].getValue("flagsmith").getValue(ve.VAL_MIN_FRAMERATE)) === null || A === void 0 ? void 0 : A.toString(), 10);
      }
      var L = { width: { max: g }, height: { max: k }, frameRate: { ideal: b, max: y } };
      if (l(r, mt)[mt].getValue("flagsmith").hasFeature(ve.SCREENSHARE_CONSTRAINTS)) {
        var I, M = (I = l(r, mt)[mt].getValue("flagsmith").getValue(ve.SCREENSHARE_CONSTRAINTS)) === null || I === void 0 ? void 0 : I.toString();
        L = JSON.parse(M);
      }
      return S !== void 0 && ["monitor", "browser", "window"].includes(S) && (L = N(N({}, L), {}, { displaySurface: S })), T !== void 0 && (L = N(N({}, L), {}, { selfBrowserSurface: T })), { audio: !0, video: L };
    }, this.getAudioConstraints = function(n) {
      var a, i, s, u, c = {}, d = (a = l(r, Pa)[Pa]) === null || a === void 0 ? void 0 : a.audio, h = d != null && d.enableStereo ? 2 : 1;
      if (kr.isFirefox() || kr.isWebKitBased()) {
        var v, f, g;
        return c.audio = { deviceId: n, autoGainControl: (v = d == null ? void 0 : d.autoGainControl) !== null && v !== void 0 ? v : !0, echoCancellation: (f = d == null ? void 0 : d.echoCancellation) !== null && f !== void 0 ? f : !0, noiseSuppression: (g = d == null ? void 0 : d.noiseSupression) !== null && g !== void 0 ? g : !0, channelCount: h }, c;
      }
      return c.audio = { autoGainControl: (i = d == null ? void 0 : d.autoGainControl) !== null && i !== void 0 ? i : !0, echoCancellation: (s = d == null ? void 0 : d.echoCancellation) !== null && s !== void 0 ? s : !0, noiseSuppression: (u = d == null ? void 0 : d.noiseSupression) !== null && u !== void 0 ? u : !0, channelCount: h }, n && n !== "default" && (c.audio.deviceId = { exact: n }), c;
    }, this.getVideoConstraints = function(n) {
      var a, i, s, u = {}, c = (a = l(r, Pa)[Pa]) === null || a === void 0 ? void 0 : a.video, d = pv.vga;
      if (typeof c == "string" ? d = pv[c] : c !== void 0 && (d.height.ideal = c.height.ideal, d.width.ideal = c.width.ideal), d.frameRate = { ideal: (i = (s = d.frameRate) === null || s === void 0 ? void 0 : s.ideal) !== null && i !== void 0 ? i : 24 }, kr.isChromiumBased() && (d.frameRate.max = 30), l(r, mt)[mt].getValue("flagsmith").hasFeature(ve.VIDEO_CONSTRAINTS)) {
        var h, v = (h = l(r, mt)[mt].getValue("flagsmith").getValue(ve.VIDEO_CONSTRAINTS)) === null || h === void 0 ? void 0 : h.toString();
        d = JSON.parse(v);
      }
      return u.video = d, typeof u.video == "boolean" || (n ? u.video.deviceId = { exact: n } : u.video.facingMode = "user"), u;
    }, l(this, mt)[mt] = t, l(this, Pa)[Pa] = e;
  }
  return P(o, [{ key: "getUpdatedVideoConstraints", value: (
    // eslint-disable-next-line class-methods-use-this
    function(e) {
      var r = e;
      return r;
    }
  ) }]);
}(), xc = /* @__PURE__ */ function(o) {
  function t(e, r, n) {
    var a;
    return w(this, t), a = C(this, t, [r]), a.constraints = void 0, a.name = void 0, a.name = e, a.constraints = n, a;
  }
  return R(t, o), P(t);
}(/* @__PURE__ */ Zs(Error)), II = /* @__PURE__ */ function() {
  function o() {
    w(this, o), this.permissions = void 0, this.permissions = { audio: "NOT_REQUESTED", video: "NOT_REQUESTED", screenshare: "NOT_REQUESTED" };
  }
  return P(o, [{ key: "getAudioInputDevices", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = n, n) {
                s.next = 5;
                break;
              }
              return s.next = 4, this.getAvailableDevices();
            case 4:
              a = s.sent;
            case 5:
              return s.abrupt("return", a.filter(function(u) {
                return u.kind === "audioinput";
              }));
            case 6:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getVideoInputDevices", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = n, n) {
                s.next = 5;
                break;
              }
              return s.next = 4, this.getAvailableDevices();
            case 4:
              a = s.sent;
            case 5:
              return s.abrupt("return", a.filter(function(u) {
                return u.kind === "videoinput";
              }));
            case 6:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAudioOutputDevices", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = n, n) {
                s.next = 5;
                break;
              }
              return s.next = 4, this.getAvailableDevices();
            case 4:
              a = s.sent;
            case 5:
              return s.abrupt("return", a.filter(function(u) {
                return u.kind === "audiooutput";
              }));
            case 6:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), _I = Object.defineProperty, MI = Object.getOwnPropertyDescriptor, Jn = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? MI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && _I(e, r, a), a;
}, nn = (mi = /* @__PURE__ */ E("deviceChangeAbortController"), qr = /* @__PURE__ */ E("constraintsBuilder"), Ae = /* @__PURE__ */ E("context"), /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n;
    return w(this, t), n = C(this, t), n.availableDevices = void 0, Object.defineProperty(n, mi, { writable: !0, value: void 0 }), Object.defineProperty(n, qr, { writable: !0, value: void 0 }), Object.defineProperty(n, Ae, { writable: !0, value: void 0 }), l(n, Ae)[Ae] = e, l(n, qr)[qr] = new AI(e, r), l(n, mi)[mi] = new AbortController(), n.availableDevices = [], n.getAvailableDevices(), n;
  }
  return R(t, o), P(t, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, Ae)[Ae].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, Ae)[Ae].getValue("logger");
  } }, { key: "constraintsBuilder", get: function() {
    return l(this, qr)[qr];
  } }, { key: "destruct", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              (a = l(this, mi)[mi]) === null || a === void 0 || a.abort();
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "handlePermissionErrors", value: function(r, n) {
    var a = Ol(r, n.name, n.message);
    return this.permissions[r] = a, l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_ERROR, { message: a, constraints: n.constraints, kind: r }), a;
  } }, { key: "getAudioAndVideoTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c, d, h, v, f;
      return p().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              return s = { audio: l(this, qr)[qr].getAudioConstraints(a).audio, video: l(this, qr)[qr].getVideoConstraints(i).video }, k.prev = 1, this.logger.info("getUserMediaWithoutTimeout::requesting_user_media", { constraints: JSON.stringify(s) }), k.next = 5, navigator.mediaDevices.getUserMedia(s);
            case 5:
              if (u = k.sent, this.logger.info("getUserMediaWithoutTimeout::received_user_media", { constraints: JSON.stringify(s) }), c = u.getAudioTracks()[0], d = u.getVideoTracks()[0], this.permissions.audio = "ACCEPTED", this.permissions.video = "ACCEPTED", h = l(this, Ae)[Ae].getValue("flagsmith").hasFeature(ve.OBS_QUALITY), !(h && d.label.includes("OBS Virtual"))) {
                k.next = 20;
                break;
              }
              return k.next = 15, this.getVideoInputDevices();
            case 15:
              return v = k.sent, f = v.find(function(y) {
                return y.label.includes("OBS Virtual");
              }), k.next = 19, this.getVideoTrack(f.deviceId);
            case 19:
              d = k.sent;
            case 20:
              return l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" }), l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" }), k.abrupt("return", { audioTrack: c, videoTrack: d });
            case 25:
              throw k.prev = 25, k.t0 = k.catch(1), this.logger.error("WebMediaInterface.getAudioAndVideoTrack", { error: k.t0 }), new U("Couldnt fetch audio and video track", "1605");
            case 29:
            case "end":
              return k.stop();
          }
      }, n, this, [[1, 25]]);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAudioTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s = this, u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return v.next = 2, this.getAudioInputDevices();
            case 2:
              if (u = v.sent, u.length !== 0) {
                v.next = 7;
                break;
              }
              throw this.permissions.audio = "NO_DEVICES_AVAILABLE", l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" }), new U("No audio devices available", "1606");
            case 7:
              return c = /* @__PURE__ */ function() {
                var f = m(/* @__PURE__ */ p().mark(function g(k) {
                  var y, b, S, T, A, L, I, M;
                  return p().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return j.prev = 0, u = u.filter(function($) {
                            return $.deviceId !== k;
                          }), y = l(s, qr)[qr].getAudioConstraints(k), s.logger.info("getUserMediaWithoutTimeout::requesting_user_media", { constraints: JSON.stringify(y) }), j.next = 6, navigator.mediaDevices.getUserMedia(y);
                        case 6:
                          return b = j.sent.getAudioTracks(), S = Me(b, 1), T = S[0], s.logger.info("getUserMediaWithoutTimeout::received_user_media", { constraints: JSON.stringify(y) }), j.abrupt("return", T);
                        case 13:
                          if (j.prev = 13, j.t0 = j.catch(0), A = Ol("audio", j.t0.name, j.t0.message), L = new xc(j.t0.name, j.t0.message, y), A !== "COULD_NOT_START") {
                            j.next = 25;
                            break;
                          }
                          if (I = u.shift(), I) {
                            j.next = 21;
                            break;
                          }
                          throw L;
                        case 21:
                          return s.logger.info("getAudioTrack::gum_failed", { constraints: JSON.stringify(y), error: j.t0 }), M = l(s, qr)[qr].getAudioConstraints(I.deviceId), s.logger.info("getAudioTrack::retrying_gum_for_next_device", { constraints: JSON.stringify(M) }), j.abrupt("return", c(I.deviceId));
                        case 25:
                          throw L;
                        case 26:
                        case "end":
                          return j.stop();
                      }
                  }, g, null, [[0, 13]]);
                }));
                return function(k) {
                  return f.apply(this, arguments);
                };
              }(), v.prev = 8, v.next = 11, c(i);
            case 11:
              return d = v.sent, d.enabled = !a, this.permissions.audio !== "ACCEPTED" && (this.permissions.audio = "ACCEPTED", l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" })), v.abrupt("return", d);
            case 17:
              throw v.prev = 17, v.t0 = v.catch(8), v.t0.constraints && this.handlePermissionErrors("audio", v.t0), new U(v.t0.message, "1601");
            case 21:
            case "end":
              return v.stop();
          }
      }, n, this, [[8, 17]]);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getVideoTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s = this, u, c, d, h, v, f, g;
      return p().wrap(function(y) {
        for (; ; )
          switch (y.prev = y.next) {
            case 0:
              return u = l(this, Ae)[Ae].getValue("flagsmith").hasFeature(ve.OBS_QUALITY), y.next = 3, this.getCurrentDeviceLabel(a);
            case 3:
              if (y.t1 = i = y.sent, y.t0 = y.t1 === null, y.t0) {
                y.next = 7;
                break;
              }
              y.t0 = i === void 0;
            case 7:
              if (!y.t0) {
                y.next = 11;
                break;
              }
              y.t2 = void 0, y.next = 12;
              break;
            case 11:
              y.t2 = i.includes("OBS Virtual");
            case 12:
              return c = y.t2, d = u && c, y.next = 16, this.getVideoInputDevices();
            case 16:
              if (h = y.sent, h.length !== 0) {
                y.next = 21;
                break;
              }
              throw this.permissions.video = "NO_DEVICES_AVAILABLE", l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" }), new U("No video devices available", "1607");
            case 21:
              return v = /* @__PURE__ */ function() {
                var b = m(/* @__PURE__ */ p().mark(function S(T) {
                  var A, L, I, M, V, j, $, O, B, Q, F, z, q, te;
                  return p().wrap(function(he) {
                    for (; ; )
                      switch (he.prev = he.next) {
                        case 0:
                          return he.prev = 0, A = T, L = A, I = L.video, d && typeof I != "boolean" && (A = { video: { deviceId: I.deviceId } }), s.logger.info("getUserMediaWithoutTimeout::requesting_user_media", { constraints: JSON.stringify(A) }), he.next = 7, navigator.mediaDevices.getUserMedia(A);
                        case 7:
                          return M = he.sent.getVideoTracks(), V = Me(M, 1), j = V[0], d && typeof I != "boolean" && Pe(I.width) === "object" && ($ = j.getSettings(), O = $.width, B = $.height, Q = I.width.ideal, j.applyConstraints({ width: { ideal: Q }, height: { ideal: Math.floor(B * Q / O) }, frameRate: I.frameRate })), s.logger.info("getUserMediaWithoutTimeout::received_user_media", { constraints: JSON.stringify(A) }), he.abrupt("return", j);
                        case 15:
                          if (he.prev = 15, he.t0 = he.catch(0), F = Ol("video", he.t0.name, he.t0.message), z = new xc(he.t0.name, he.t0.message, T), F !== "COULD_NOT_START") {
                            he.next = 27;
                            break;
                          }
                          if (q = h.shift(), q) {
                            he.next = 23;
                            break;
                          }
                          throw z;
                        case 23:
                          return s.logger.info("getVideoTrack::gum_failed", { constraints: JSON.stringify(T), error: he.t0 }), te = l(s, qr)[qr].getVideoConstraints(q.deviceId), s.logger.info("getVideoTrack::retrying_gum_for_next_device", { constraints: JSON.stringify(te) }), he.abrupt("return", v({ video: te.video }));
                        case 27:
                          throw z;
                        case 28:
                        case "end":
                          return he.stop();
                      }
                  }, S, null, [[0, 15]]);
                }));
                return function(T) {
                  return b.apply(this, arguments);
                };
              }(), y.prev = 22, f = l(this, qr)[qr].getVideoConstraints(a), y.next = 26, v(f);
            case 26:
              return g = y.sent, this.permissions.video !== "ACCEPTED" && (this.permissions.video = "ACCEPTED", l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" })), y.abrupt("return", g);
            case 31:
              throw y.prev = 31, y.t3 = y.catch(22), y.t3.constraints && this.handlePermissionErrors("video", y.t3), new U(y.t3.message, "1602");
            case 35:
            case "end":
              return y.stop();
          }
      }, n, this, [[22, 31]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getScreenShareTracks", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a = this, i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return i = /* @__PURE__ */ function() {
                var h = m(/* @__PURE__ */ p().mark(function v(f) {
                  var g, k, y, b;
                  return p().wrap(function(T) {
                    for (; ; )
                      switch (T.prev = T.next) {
                        case 0:
                          return T.prev = 0, a.logger.info("getDisplayMediaWithoutTimeout::requesting_display_media", { constraints: JSON.stringify(f) }), l(a, Ae)[Ae].getValue("callstats").screenShareRequested(), T.next = 5, navigator.mediaDevices.getDisplayMedia(f);
                        case 5:
                          return g = T.sent, a.logger.info("getDisplayMediaWithoutTimeout::received_display_media", { constraints: JSON.stringify(f) }), T.abrupt("return", g);
                        case 10:
                          if (T.prev = 10, T.t0 = T.catch(0), k = Ol("video", T.t0.name, T.t0.message), y = new xc(T.t0.name, T.t0.message, f), b = { video: !0 }, !(Aw(f, b) || !l(a, Ae)[Ae].getValue("flagsmith").hasFeature(ve.SCREEENSHARE_CONSTRAINTS_RETRY))) {
                            T.next = 17;
                            break;
                          }
                          throw y;
                        case 17:
                          if (k !== "COULD_NOT_START") {
                            T.next = 19;
                            break;
                          }
                          return T.abrupt("return", i(b));
                        case 19:
                          throw y;
                        case 20:
                        case "end":
                          return T.stop();
                      }
                  }, v, null, [[0, 10]]);
                }));
                return function(f) {
                  return h.apply(this, arguments);
                };
              }(), d.prev = 1, s = l(this, qr)[qr].getScreenShareConstraints(), d.next = 5, i(s);
            case 5:
              return u = d.sent, this.permissions.screenshare !== "ACCEPTED" && (this.permissions.screenshare = "ACCEPTED", l(this, Ae)[Ae].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.permissions.screenshare, kind: "screenshare" })), d.abrupt("return", { audioTrack: u.getAudioTracks()[0], videoTrack: u.getVideoTracks()[0] });
            case 10:
              throw d.prev = 10, d.t0 = d.catch(1), d.t0.constraints && this.handlePermissionErrors("screenshare", d.t0), new U(d.t0.message, "1612");
            case 14:
            case "end":
              return d.stop();
          }
      }, n, this, [[1, 10]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getCurrentDeviceLabel", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.getDevice(a || "default");
            case 2:
              return i = u.sent, u.abrupt("return", i == null ? void 0 : i.label);
            case 4:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAvailableDevices", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, navigator.mediaDevices.enumerateDevices();
            case 3:
              return a = s.sent, this.availableDevices = a, s.abrupt("return", a);
            case 8:
              throw s.prev = 8, s.t0 = s.catch(0), this.logger.error("enumerate_devices_failed", { error: s.t0 }), new U("Failed to get available devices", "1609");
            case 12:
            case "end":
              return s.stop();
          }
      }, n, this, [[0, 8]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAvailableDevicesByKind", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, navigator.mediaDevices.enumerateDevices();
            case 3:
              return s.abrupt("return", s.sent.filter(function(u) {
                var c = u.kind;
                return a === c;
              }));
            case 6:
              throw s.prev = 6, s.t0 = s.catch(0), this.logger.error("enumerate_devices_failed", { error: s.t0 }), new U("Failed to get available devices by kind", "1609");
            case 10:
            case "end":
              return s.stop();
          }
      }, n, this, [[0, 6]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getDevice", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.prev = 0, u.next = 3, navigator.mediaDevices.enumerateDevices();
            case 3:
              return i = u.sent, u.abrupt("return", i.filter(function(c) {
                return c.deviceId === a;
              })[0]);
            case 7:
              throw u.prev = 7, u.t0 = u.catch(0), this.logger.error("enumerate_devices_failed", { error: u.t0 }), new U("Failed to get device", "1609");
            case 11:
            case "end":
              return u.stop();
          }
      }, n, this, [[0, 7]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "onDeviceChange", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              kr.supportsDeviceChangeEvent() && navigator.mediaDevices.addEventListener("devicechange", /* @__PURE__ */ function() {
                var c = m(/* @__PURE__ */ p().mark(function d(h) {
                  var v, f, g, k, y, b, S, T, A;
                  return p().wrap(function(I) {
                    for (; ; )
                      switch (I.prev = I.next) {
                        case 0:
                          return g = function(V) {
                            return "".concat(V.kind, "-").concat(V.deviceId, "-").concat(V.groupId);
                          }, k = i.availableDevices, y = new Set(k.map(function(M) {
                            return g(M);
                          })), I.next = 5, i.getAvailableDevices();
                        case 5:
                          b = I.sent, S = new Set(b.map(function(M) {
                            return g(M);
                          })), T = { added: b.filter(function(M) {
                            return !y.has(g(M));
                          }), removed: k.filter(function(M) {
                            return !S.has(g(M));
                          }), devices: b }, ((v = T.added) !== null && v !== void 0 && v.length || (f = T.removed) !== null && f !== void 0 && f.length) && (i.logger.info("repopulated_full_device_list", { devices: JSON.stringify(b) }), A = [].concat(ke(T.added), ke(T.removed)), A.some(function(M) {
                            return M.kind === "audioinput";
                          }) && l(i, Ae)[Ae].getValue("callstats").devices("AUDIO", b == null ? void 0 : b.filter(function(M) {
                            return M.kind === "audioinput";
                          })), A.some(function(M) {
                            return M.kind === "videoinput";
                          }) && l(i, Ae)[Ae].getValue("callstats").devices("VIDEO", b == null ? void 0 : b.filter(function(M) {
                            return M.kind === "videoinput";
                          })), A.some(function(M) {
                            return M.kind === "audiooutput";
                          }) && l(i, Ae)[Ae].getValue("callstats").devices("SPEAKER", b == null ? void 0 : b.filter(function(M) {
                            return M.kind === "audiooutput";
                          })), a(h, T, !1));
                        case 9:
                        case "end":
                          return I.stop();
                      }
                  }, d);
                }));
                return function(d) {
                  return c.apply(this, arguments);
                };
              }(), { signal: l(this, mi)[mi].signal });
            case 1:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(II));
Jn([D.trace("WebMediaInterface.destruct")], nn.prototype, "destruct", 1);
Jn([D.trace("WebMediaInterface.handlePermissionErrors")], nn.prototype, "handlePermissionErrors", 1);
Jn([D.trace("WebMediaInterface.getAudioAndVideoTrack")], nn.prototype, "getAudioAndVideoTrack", 1);
Jn([D.trace("WebMediaInterface.getAudioTrack")], nn.prototype, "getAudioTrack", 1);
Jn([D.trace("WebMediaInterface.getVideoTrack")], nn.prototype, "getVideoTrack", 1);
Jn([D.trace("WebMediaInterface.getScreenShareTracks")], nn.prototype, "getScreenShareTracks", 1);
Jn([D.trace("WebMediaInterface.getAvailableDevices")], nn.prototype, "getAvailableDevices", 1);
Jn([D.trace("WebMediaInterface.getAvailableDevicesByKind")], nn.prototype, "getAvailableDevicesByKind", 1);
Jn([D.trace("WebMediaInterface.getDevice")], nn.prototype, "getDevice", 1);
Jn([D.trace("WebMediaInterface.onDeviceChange")], nn.prototype, "onDeviceChange", 1);
nn = Jn([vt("1600")], nn);
var gg = nn, Fu = { setItem: function(t, e, r) {
  try {
    localStorage.setItem(t, e);
  } catch (n) {
    r == null || r.error("LocalStorage::setItem::crashed", { error: n, localStorage: { key: t, value: e } });
  }
}, getItem: function(t, e) {
  try {
    return localStorage.getItem(t);
  } catch (r) {
    e == null || e.error("LocalStorage::getItem::crashed", { error: r, localStorage: { key: t } });
  }
  return null;
} }, DI = function() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
  return new Promise(function(e) {
    return setTimeout(e, t);
  });
}, OI = function(t, e, r) {
  var n = typeof r == "number" ? r : 250, a = t.createMediaStreamSource(e), i = t.createAnalyser();
  i.fftSize = 2048, a.connect(i);
  var s = new Uint8Array(i.fftSize), u = !1;
  setTimeout(function() {
    u = !0;
  }, n);
  function c() {
    return u ? Promise.resolve(!0) : (i.getByteTimeDomainData(s), s.some(function(d) {
      return d !== 128 && d !== 0;
    }) ? Promise.resolve(!1) : DI().then(c));
  }
  return c().then(function(d) {
    return a.disconnect(), d;
  }, function(d) {
    throw a.disconnect(), d;
  });
}, LI = typeof AudioContext != "undefined" ? AudioContext : null, NI = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this._AudioContext = void 0, this.audioContext = void 0, this._audioContextRefContainers = void 0;
    var e = N({ AudioContext: LI }, t);
    Object.defineProperties(this, { _AudioContext: { value: e.AudioContext }, audioContext: { value: null, writable: !0 }, _audioContextRefContainers: { value: /* @__PURE__ */ new Set() }, AudioContextProvider: { enumerable: !0, value: o } });
  }
  return P(o, [{ key: "getOrCreate", value: function(e) {
    if (!this._audioContextRefContainers.has(e) && (this._audioContextRefContainers.add(e), this._AudioContext && !this.audioContext))
      try {
        this.audioContext = new this._AudioContext();
      } catch (r) {
      }
    return this.audioContext;
  } }, { key: "release", value: function(e) {
    this._audioContextRefContainers.has(e) && (this._audioContextRefContainers.delete(e), !this._audioContextRefContainers.size && this.audioContext && (this.audioContext.close(), this.audioContext = null));
  } }]);
}(), hv = new NI(), $I = 3, VI = 250;
function UI(o) {
  var t = {}, e = hv.getOrCreate(t), r = $I;
  function n() {
    return r -= 1, OI(e, o.srcObject, VI).then(function(a) {
      return a ? r > 0 ? n() : !0 : !1;
    }).catch(function() {
      return !0;
    });
  }
  return n().finally(function() {
    hv.release(t);
  });
}
function vv(o, t) {
  return Jd.apply(this, arguments);
}
function Jd() {
  return Jd = m(/* @__PURE__ */ p().mark(function o(t, e) {
    var r, n, a, i;
    return p().wrap(function(u) {
      for (; ; )
        switch (u.prev = u.next) {
          case 0:
            if (r = new Audio(), n = new MediaStream(), n.addTrack(e), r.srcObject = n, a = !1, u.prev = 5, i = r.play(), !i) {
              u.next = 10;
              break;
            }
            return u.next = 10, i;
          case 10:
            return u.next = 12, UI(r);
          case 12:
            a = u.sent, a && t.info("checkIfAudioTrackIsSilent::silence_detected"), u.next = 19;
            break;
          case 16:
            u.prev = 16, u.t0 = u.catch(5), t.error("checkIfAudioTrackIsSilent::failed_to_detect_silence", { error: u.t0 });
          case 19:
            return u.prev = 19, r.pause(), r.remove(), u.finish(19);
          case 23:
            return u.abrupt("return", a);
          case 24:
          case "end":
            return u.stop();
        }
    }, o, null, [[5, 16, 19, 23]]);
  })), Jd.apply(this, arguments);
}
var jI = Object.defineProperty, FI = Object.getOwnPropertyDescriptor, mg = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? FI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && jI(e, r, a), a;
}, lc = /* @__PURE__ */ function(o) {
  function t(e, r, n, a) {
    var i, s;
    w(this, t);
    var u = e.getValue("logger");
    return s = C(this, t, [u]), s.constructorName = s.constructor.name, s.userSelectedDevice = void 0, s.mediaInterface = void 0, s.isNonPreferredDevice = void 0, s._mediaTrack = void 0, s.transformedMediaTrack = void 0, s.middlewares = [], s.currentDevice = void 0, s.userPreferredDeviceKey = "Dyte::".concat(s.constructorName, "::UserDeviceID"), s.setUserPreferredDevice = function(c) {
      return Fu.setItem(s.userPreferredDeviceKey, c, s.logger);
    }, s.getUserPreferredDevice = function() {
      return Fu.getItem(s.userPreferredDeviceKey, s.logger);
    }, s.isCustomTrack = !1, s.context = void 0, s.context = e, s.mediaInterface = r, n && s.setMediaTrack(n), s.userSelectedDevice = (i = s.getUserPreferredDevice()) !== null && i !== void 0 ? i : void 0, s.isNonPreferredDevice = a, s.onTrackEnded = s.onTrackEnded.bind(s), s.onTrackMuted = s.onTrackMuted.bind(s), s;
  }
  return R(t, o), P(t, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return this.context.getValue("telemetry");
    }
  ) }, { key: "disableTrack", value: function() {
    var r;
    if (this.removeMediaTrackListeners(), !this.isCustomTrack) {
      var n;
      (n = this._mediaTrack) === null || n === void 0 || n.stop();
    }
    this._mediaTrack = void 0, (r = this.transformedMediaTrack) === null || r === void 0 || r.stop(), this.transformedMediaTrack = void 0;
  } }, { key: "mediaTrack", get: function() {
    return this._mediaTrack;
  } }, {
    key: "setMediaTrack",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        var i = this, s, u, c = arguments;
        return p().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                s = c.length > 1 && c[1] !== void 0 ? c[1] : !1, u = function(f) {
                  i.logger.error("".concat(i.constructorName, ".setMediaTrack.error"), { error: f });
                };
                try {
                  this.disableTrack();
                } catch (v) {
                  u(v);
                }
                return h.next = 5, this.conditionallyChangeTrack(a, s);
              case 5:
                return this._mediaTrack = h.sent, h.next = 8, this.setTransformedTrack();
              case 8:
                return h.prev = 8, this.addMediaTrackListeners(), h.next = 12, this.setCurrentDevice();
              case 12:
                h.next = 17;
                break;
              case 14:
                h.prev = 14, h.t0 = h.catch(8), u(h.t0);
              case 17:
              case "end":
                return h.stop();
            }
        }, n, this, [[8, 14]]);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Represents current audio/video state according to track status
    */
  }, {
    key: "trackEnabled",
    get: function() {
      return !!this.mediaTrack && this.mediaTrack.readyState === "live" && this.mediaTrack.enabled;
    }
    /**
    * Mutes track if it's present, DOES NOT STOP IT!
    * Only used for audio streams
    */
  }, { key: "muteTrack", value: function() {
    if (!this.mediaTrack) {
      this.logger.warn("BaseMediaHandler.muteTrack Tried muting with no track present");
      return;
    }
    this.transformedMediaTrack && (this.transformedMediaTrack.enabled = !1), this.mediaTrack.enabled = !1;
  } }, {
    key: "unmuteTrack",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        return p().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (i.prev = 0, this.mediaTrack) {
                  i.next = 6;
                  break;
                }
                return i.next = 4, this.enableTrack(!1);
              case 4:
                i.next = 7;
                break;
              case 6:
                this.mediaTrack.enabled = !0;
              case 7:
                i.next = 14;
                break;
              case 9:
                throw i.prev = 9, i.t0 = i.catch(0), this.logger.error("".concat(this.constructorName, ".unmuteTrack.error"), { error: i.t0 }), this.disableTrack(), new U("Failed to unmute track", "1611");
              case 14:
              case "end":
                return i.stop();
            }
        }, n, this, [[0, 9]]);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // NOTE(ishita1805): Not to be used for screenshare or audiooutput
  }, {
    key: "getCurrentDeviceId",
    value: function() {
      var r = this.mediaTrack.kind;
      switch (r) {
        case "audio": {
          var n, a = this.mediaTrack.getSettings(), i = a.deviceId;
          if (i)
            return i;
          var s = this.mediaTrack.getConstraints();
          return this.userSelectedDevice ? (s && Pe(s.deviceId) === "object" && "exact" in s.deviceId ? s.deviceId.exact : s.deviceId) || (s == null || (n = s.advanced) === null || n === void 0 ? void 0 : n[0].deviceId) || "default" : this.mediaTrack.getSettings().deviceId;
        }
        default:
          return this.mediaTrack.getSettings().deviceId;
      }
    }
    /**
    * Called after every track switch, maintains local state of current
    * selected device for this particular stream.
    */
  }, { key: "setCurrentDevice", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.mediaTrack) {
                u.next = 3;
                break;
              }
              return this.currentDevice = void 0, u.abrupt("return");
            case 3:
              if (i = this.getCurrentDeviceId(), ((a = this.currentDevice) === null || a === void 0 ? void 0 : a.deviceId) !== i) {
                u.next = 6;
                break;
              }
              return u.abrupt("return");
            case 6:
              return u.next = 8, this.mediaInterface.getDevice(i);
            case 8:
              this.currentDevice = u.sent;
            case 9:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "setDevice",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (a) {
                  s.next = 3;
                  break;
                }
                throw this.logger.warn("".concat(this.constructorName, ".setDevice No device received")), new U("No device received!", "1603");
              case 3:
                return this.userSelectedDevice = a.deviceId, this.setUserPreferredDevice(a.deviceId), s.next = 7, this.onSetDevice(a);
              case 7:
              case "end":
                return s.stop();
            }
        }, n, this);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Middleware Utility
    */
  }, { key: "addMiddleware", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!(kr.isWebKitBased() && !Y0.hasFeature(ve.ALLOW_SAFARI_MEDIA_MIDDLEWARES))) {
                s.next = 2;
                break;
              }
              return s.abrupt("return", { success: !1, message: "Middlewares are not supported in this WebKit engine based browser." });
            case 2:
              if (!this.middlewares.includes(a)) {
                s.next = 4;
                break;
              }
              return s.abrupt("return", { success: !1, message: "This middleware has been applied, already. Skipping." });
            case 4:
              if (s.prev = 4, this.middlewares.push(a), !this.trackEnabled) {
                s.next = 9;
                break;
              }
              return s.next = 9, this.setTransformedTrack();
            case 9:
              return s.abrupt("return", { success: !0, message: "Successfully added the middleware." });
            case 12:
              return s.prev = 12, s.t0 = s.catch(4), this.logger.error("While adding middleware", { error: s.t0 }), this.removeMiddleware(a), s.abrupt("return", { success: !1, message: s.t0 === null || s.t0 === void 0 ? void 0 : s.t0.message });
            case 17:
            case "end":
              return s.stop();
          }
      }, n, this, [[4, 12]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeMiddleware", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this.middlewares.indexOf(a, 0), !(i > -1)) {
                u.next = 13;
                break;
              }
              return u.prev = 2, this.middlewares.splice(i, 1), u.next = 6, this.setTransformedTrack(!0);
            case 6:
              return u.abrupt("return", { success: !0, message: "Successfully removed the middleware." });
            case 9:
              return u.prev = 9, u.t0 = u.catch(2), this.logger.error("While removing middleware", { error: u.t0 }), u.abrupt("return", { success: !1, message: u.t0 === null || u.t0 === void 0 ? void 0 : u.t0.message });
            case 13:
              return u.abrupt("return", { success: !1, message: "No such middleware was found. Skipping." });
            case 14:
            case "end":
              return u.stop();
          }
      }, n, this, [[2, 9]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeAllMiddlewares", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!((a = this.middlewares) !== null && a !== void 0 && a.length)) {
                s.next = 12;
                break;
              }
              return s.prev = 1, this.middlewares = [], s.next = 5, this.setTransformedTrack(!0);
            case 5:
              return s.abrupt("return", { success: !0, message: "Successfully removed all the middlewares." });
            case 8:
              return s.prev = 8, s.t0 = s.catch(1), this.logger.error("While removing all the middlewares", { error: s.t0 }), s.abrupt("return", { success: !1, message: s.t0 === null || s.t0 === void 0 ? void 0 : s.t0.message });
            case 12:
              return s.abrupt("return", { success: !1, message: "No middlewares were found. Skipping." });
            case 13:
            case "end":
              return s.stop();
          }
      }, n, this, [[1, 8]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "addMediaTrackListeners", value: function() {
    var r, n;
    this.mediaTrack && (this.logger.info("".concat(this.constructorName, ".addMediaTrackListeners for deviceId ").concat((r = this.mediaTrack) === null || r === void 0 || (r = r.getSettings()) === null || r === void 0 ? void 0 : r.deviceId, " of type ").concat((n = this.mediaTrack) === null || n === void 0 ? void 0 : n.kind)), this.mediaTrack.addEventListener("ended", this.onTrackEnded), this.mediaTrack.addEventListener("mute", this.onTrackMuted));
  } }, { key: "removeMediaTrackListeners", value: function() {
    var r, n;
    this.mediaTrack && (this.logger.info("".concat(this.constructorName, ".removeMediaTrackListeners for deviceId ").concat((r = this.mediaTrack) === null || r === void 0 || (r = r.getSettings()) === null || r === void 0 ? void 0 : r.deviceId, " of type ").concat((n = this.mediaTrack) === null || n === void 0 ? void 0 : n.kind)), this.logger.info("".concat(this.constructorName, ".removeMediaTrackListeners")), this.mediaTrack.removeEventListener("ended", this.onTrackEnded), this.mediaTrack.removeEventListener("mute", this.onTrackMuted));
  } }]);
}(Jo);
mg([D.trace("BaseMediaHandler.unmuteTrack")], lc.prototype, "unmuteTrack", 1);
lc = mg([vt("1600")], lc);
var yg = lc, HI = Object.defineProperty, BI = Object.getOwnPropertyDescriptor, Wp = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? BI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && HI(e, r, a), a;
}, ed = "[Dyte]nonSilentDeviceLabels", Ac = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, arguments);
  }
  return R(t, o), P(t, [{ key: "onSetDevice", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (a) {
                u.next = 3;
                break;
              }
              throw this.logger.warn("AudioMediaHandler.setDevice No device received"), new U("No device received!", "1603");
            case 3:
              if (a.kind === "audioinput") {
                u.next = 6;
                break;
              }
              throw this.logger.warn("AudioMediaHandler.setDevice Received non audio device"), new U("Non audio device received while setting device!", "1603");
            case 6:
              return u.prev = 6, i = this.trackEnabled, u.t0 = this, u.next = 11, this.mediaInterface.getAudioTrack(!i, this.userSelectedDevice);
            case 11:
              return u.t1 = u.sent, u.next = 14, u.t0.setMediaTrack.call(u.t0, u.t1);
            case 14:
              u.next = 21;
              break;
            case 16:
              throw u.prev = 16, u.t2 = u.catch(6), this.logger.error("AudioMediaHandler.setDevice.error", { error: u.t2 }), this.disableTrack(), new U(u.t2.message, "1604");
            case 21:
            case "end":
              return u.stop();
          }
      }, n, this, [[6, 16]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "enableTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (!this.trackEnabled) {
                c.next = 3;
                break;
              }
              return this.logger.warn("AudioMediaHandler.enableTrack Track already enabled!"), c.abrupt("return");
            case 3:
              if (!i) {
                c.next = 8;
                break;
              }
              return this.isCustomTrack = !0, c.next = 7, this.setMediaTrack(i, !0);
            case 7:
              return c.abrupt("return");
            case 8:
              return this.isCustomTrack = !1, c.next = 11, this.mediaInterface.getAudioTrack(a, this.userSelectedDevice);
            case 11:
              return s = c.sent, c.next = 14, this.setMediaTrack(s);
            case 14:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setTransformedTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!(!a && !((i = this.middlewares) !== null && i !== void 0 && i.length))) {
                u.next = 3;
                break;
              }
              return this.transformedMediaTrack = this.mediaTrack, u.abrupt("return");
            case 3:
              return u.prev = 3, u.next = 6, wI(this.context, this.middlewares, this.mediaTrack);
            case 6:
              this.transformedMediaTrack = u.sent, this.emit("trackChanged"), u.next = 14;
              break;
            case 10:
              u.prev = 10, u.t0 = u.catch(3), this.logger.error("AudioMediaHandler.setTransformedTrack", { error: u.t0 }), this.transformedMediaTrack = this.mediaTrack;
            case 14:
            case "end":
              return u.stop();
          }
      }, n, this, [[3, 10]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "onTrackEnded", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.logger.info("AudioMediaHandler.TrackEnded"), this.emit("trackEnded"), a = this.mediaTrack.enabled, this.disableTrack(), s.next = 6, this.enableTrack(!a);
            case 6:
              return s.next = 8, this.setTransformedTrack();
            case 8:
              this.emit("trackChanged");
            case 9:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "onTrackMuted", value: function() {
    this.logger.info("AudioMediaHandler.TrackMuted"), this.emit("trackMuted");
  } }, { key: "conditionallyChangeTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c, d, h, v, f, g, k = arguments;
      return p().wrap(function(b) {
        for (; ; )
          switch (b.prev = b.next) {
            case 0:
              if (s = k.length > 1 && k[1] !== void 0 ? k[1] : !1, a) {
                b.next = 3;
                break;
              }
              return b.abrupt("return", a);
            case 3:
              if (!(this.userSelectedDevice || s)) {
                b.next = 5;
                break;
              }
              return b.abrupt("return", a);
            case 5:
              return u = a, b.next = 8, this.mediaInterface.getAudioInputDevices();
            case 8:
              if (c = b.sent, d = this.isNonPreferredDevice ? c.filter(function(S) {
                return S && !i.isNonPreferredDevice(S);
              }) : c, d != null && d.length) {
                b.next = 12;
                break;
              }
              return b.abrupt("return", u);
            case 12:
              if (d.find(function(S) {
                return S.deviceId === a.getSettings().deviceId;
              })) {
                b.next = 18;
                break;
              }
              return u.stop(), this.logger.info("localmediahandler::setupstreams::found_audio_non_preferred"), b.next = 17, this.mediaInterface.getAudioTrack(!1, d[0].deviceId);
            case 17:
              u = b.sent;
            case 18:
              if (h = JSON.parse(Fu.getItem(ed, this.logger)), !(h != null && h.devices.some(function(S) {
                return S.label === u.label;
              }))) {
                b.next = 21;
                break;
              }
              return b.abrupt("return", u);
            case 21:
              return b.next = 23, vv(this.logger, u);
            case 23:
              if (b.sent) {
                b.next = 27;
                break;
              }
              return f = (v = h == null ? void 0 : h.devices.concat({ label: u.label })) !== null && v !== void 0 ? v : [{ label: u.label }], Fu.setItem(ed, JSON.stringify({ devices: f }), this.logger), b.abrupt("return", u);
            case 27:
              return this.logger.info("AudioMediaHandler.conditionallyChangeTrack.DetectedSilentTrack"), g = u.getSettings().deviceId, d.filter(function(S) {
                return S.deviceId !== g;
              }).some(/* @__PURE__ */ function() {
                var S = m(/* @__PURE__ */ p().mark(function T(A) {
                  var L;
                  return p().wrap(function(M) {
                    for (; ; )
                      switch (M.prev = M.next) {
                        case 0:
                          return M.next = 2, i.mediaInterface.getAudioTrack(!1, A.deviceId);
                        case 2:
                          return u = M.sent, M.next = 5, vv(i.logger, u);
                        case 5:
                          if (M.sent) {
                            M.next = 10;
                            break;
                          }
                          return L = h.devices.concat({ label: u.label }), Fu.setItem(ed, JSON.stringify({ devices: L }), i.logger), i.logger.info("AudioMediaHandler.conditionallyChangeTrack.SuccesfullyChangedTrack"), M.abrupt("return", !0);
                        case 10:
                          return i.logger.info("AudioMediaHandler.conditionallyChangeTrack.AnotherSilentTrackFound"), M.abrupt("return", !1);
                        case 12:
                        case "end":
                          return M.stop();
                      }
                  }, T);
                }));
                return function(T) {
                  return S.apply(this, arguments);
                };
              }()), b.abrupt("return", u);
            case 31:
            case "end":
              return b.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(yg);
Wp([D.trace("AudioMediaHandler.setTransformedTrack")], Ac.prototype, "setTransformedTrack", 1);
Wp([D.trace("AudioMediaHandler.onTrackEnded")], Ac.prototype, "onTrackEnded", 1);
Wp([D.trace("AudioMediaHandler.conditionallyChangeTrack")], Ac.prototype, "conditionallyChangeTrack", 1);
var qI = Ac, ms = /* @__PURE__ */ E("mediaInterface"), GI = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), Object.defineProperty(this, ms, { writable: !0, value: void 0 }), this.currentDevice = void 0, l(this, ms)[ms] = t;
  }
  return P(o, [{ key: "setupSpeaker", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s = this, u, c, d, h, v;
      return p().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (l(this, ms)[ms] instanceof gg) {
                g.next = 2;
                break;
              }
              return g.abrupt("return");
            case 2:
              if (u = n, n) {
                g.next = 10;
                break;
              }
              return g.next = 6, l(this, ms)[ms].getAvailableDevicesByKind("audiooutput");
            case 6:
              c = g.sent, d = c.filter(function(k) {
                return !Gd(k);
              }), h = Me(d, 1), u = h[0];
            case 10:
              if (u) {
                g.next = 12;
                break;
              }
              throw new U("No speaker found", "1608");
            case 12:
              if (((a = this.currentDevice) === null || a === void 0 ? void 0 : a.deviceId) !== u.deviceId) {
                g.next = 14;
                break;
              }
              return g.abrupt("return");
            case 14:
              if (this.currentDevice = u, v = document.querySelectorAll("audio"), (i = v[0]) !== null && i !== void 0 && i.setSinkId) {
                g.next = 18;
                break;
              }
              return g.abrupt("return");
            case 18:
              v.forEach(/* @__PURE__ */ function() {
                var k = m(/* @__PURE__ */ p().mark(function y(b) {
                  return p().wrap(function(T) {
                    for (; ; )
                      switch (T.prev = T.next) {
                        case 0:
                          if (!(typeof b.sinkId != "undefined" && s.currentDevice.deviceId && b.sinkId !== s.currentDevice.deviceId)) {
                            T.next = 8;
                            break;
                          }
                          return T.prev = 1, T.next = 4, b.setSinkId(s.currentDevice.deviceId);
                        case 4:
                          T.next = 8;
                          break;
                        case 6:
                          T.prev = 6, T.t0 = T.catch(1);
                        case 8:
                        case "end":
                          return T.stop();
                      }
                  }, y, null, [[1, 6]]);
                }));
                return function(y) {
                  return k.apply(this, arguments);
                };
              }());
            case 19:
            case "end":
              return g.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), WI = GI, du = /* @__PURE__ */ E("context"), JI = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n;
    w(this, t);
    var a = e.getValue("logger");
    return n = C(this, t, [a]), n.mediaInterface = void 0, n.audioMediaTrack = void 0, n.videoMediaTrack = void 0, Object.defineProperty(n, du, { writable: !0, value: void 0 }), l(n, du)[du] = e, n.mediaInterface = r, n;
  }
  return R(t, o), P(t, [{ key: "trackEnabled", get: function() {
    return !!this.videoMediaTrack;
  } }, { key: "enableScreenShare", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return d.prev = 0, d.next = 3, this.mediaInterface.getScreenShareTracks();
            case 3:
              if (i = d.sent, s = i.audioTrack, u = i.videoTrack, this.audioMediaTrack = s, this.videoMediaTrack = u, this.addMediaTrackListeners(), ((a = this.mediaInterface) === null || a === void 0 || (a = a.permissions) === null || a === void 0 ? void 0 : a.screenshare) !== "ACCEPTED") {
                d.next = 11;
                break;
              }
              return d.abrupt("return");
            case 11:
              this.mediaInterface.permissions && (this.mediaInterface.permissions.screenshare = "ACCEPTED", l(this, du)[du].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, { message: this.mediaInterface.permissions.screenshare, kind: "screenshare" })), d.next = 16;
              break;
            case 14:
              d.prev = 14, d.t0 = d.catch(0);
            case 16:
            case "end":
              return d.stop();
          }
      }, n, this, [[0, 14]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableScreenShare", value: function() {
    var r, n;
    this.removeMediaTrackListeners(), (r = this.audioMediaTrack) === null || r === void 0 || r.stop(), (n = this.videoMediaTrack) === null || n === void 0 || n.stop(), this.videoMediaTrack = void 0, this.audioMediaTrack = void 0;
  } }, { key: "updateConstraints", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.videoMediaTrack) {
                u.next = 2;
                break;
              }
              throw new U("No media track enabled!", "1610");
            case 2:
              if (i = this.mediaInterface, i.constraintsBuilder) {
                u.next = 5;
                break;
              }
              throw new U("update constraints not supported for non web clients", "1100", this.logger);
            case 5:
              try {
                this.videoMediaTrack.applyConstraints(i.constraintsBuilder.getUpdatedVideoConstraints(a)), this.addMediaTrackListeners();
              } catch (c) {
                this.logger.error("ScreenShareHandler.updateConstraints.error", { error: c });
              }
            case 6:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "addMediaTrackListeners", value: function() {
    var r;
    if ((r = this.videoMediaTrack) === null || r === void 0 || r.addEventListener("ended", this.onTrackEnded.bind(this)), kr.isWebKitBased()) {
      var n;
      (n = this.videoMediaTrack) === null || n === void 0 || n.addEventListener("mute", this.onTrackEnded.bind(this));
    }
  } }, { key: "removeMediaTrackListeners", value: function() {
    var r, n;
    (r = this.videoMediaTrack) === null || r === void 0 || r.removeEventListener("ended", this.onTrackEnded), (n = this.videoMediaTrack) === null || n === void 0 || n.removeEventListener("mute", this.onTrackEnded);
  } }, { key: "onTrackEnded", value: function() {
    this.emit("trackEnded");
  } }]);
}(Jo), KI = JI, zI = Object.defineProperty, YI = Object.getOwnPropertyDescriptor, Ic = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? YI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && zI(e, r, a), a;
}, ys = /* @__PURE__ */ E("videoMiddlewareUtils"), pu = /* @__PURE__ */ E("middlewareGlobalConfig"), pl = /* @__PURE__ */ function(o) {
  function t(e, r, n, a) {
    var i;
    return w(this, t), i = C(this, t, [e, r, n, a]), Object.defineProperty(i, ys, { writable: !0, value: void 0 }), Object.defineProperty(i, pu, { writable: !0, value: { disablePerFrameCanvasRendering: !1 } }), l(i, ys)[ys] = new PI(e), i;
  }
  return R(t, o), P(t, [{ key: "onSetDevice", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a) {
                s.next = 3;
                break;
              }
              throw this.logger.warn("VideoMediaHandler.setDevice No device received"), new U("No device received!", "1603");
            case 3:
              if (a.kind === "videoinput") {
                s.next = 6;
                break;
              }
              throw this.logger.warn("VideoMediaHandler.setDevice Received non video device", { devices: [a] }), new U("Non video device received while setting video device!", "1603");
            case 6:
              if (this.mediaTrack && this.mediaTrack.enabled) {
                s.next = 10;
                break;
              }
              return this.logger.warn("VideoMediaHandler.setDevice Tried switching device with video disabled", { devices: [a] }), this.currentDevice = a, s.abrupt("return");
            case 10:
              return s.prev = 10, s.t0 = this, s.next = 14, this.mediaInterface.getVideoTrack(this.userSelectedDevice);
            case 14:
              return s.t1 = s.sent, s.next = 17, s.t0.setMediaTrack.call(s.t0, s.t1);
            case 17:
              s.next = 24;
              break;
            case 19:
              throw s.prev = 19, s.t2 = s.catch(10), this.logger.error("VideoMediaHandler.setDevice.error", { error: s.t2 }), this.disableTrack(), new U("Failed to change device", "1600", this.logger);
            case 24:
            case "end":
              return s.stop();
          }
      }, n, this, [[10, 19]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "enableTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (!this.trackEnabled) {
                c.next = 3;
                break;
              }
              return this.logger.warn("VideoMediaHandler.enableTrack Track already enabled!"), c.abrupt("return");
            case 3:
              if (!i) {
                c.next = 8;
                break;
              }
              return this.isCustomTrack = !0, c.next = 7, this.setMediaTrack(i, !0);
            case 7:
              return c.abrupt("return");
            case 8:
              return this.isCustomTrack = !1, c.next = 11, this.mediaInterface.getVideoTrack(this.userSelectedDevice);
            case 11:
              return s = c.sent, c.next = 14, this.setMediaTrack(s);
            case 14:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setTransformedTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!(!a && !((i = this.middlewares) !== null && i !== void 0 && i.length))) {
                u.next = 3;
                break;
              }
              return this.transformedMediaTrack = this.mediaTrack, u.abrupt("return");
            case 3:
              return u.prev = 3, u.next = 6, l(this, ys)[ys].getTransformedVideoTrack(this.middlewares, this.mediaTrack, l(this, pu)[pu]);
            case 6:
              this.transformedMediaTrack = u.sent, this.emit("trackChanged"), u.next = 14;
              break;
            case 10:
              u.prev = 10, u.t0 = u.catch(3), this.logger.error("VideoMediaHandler.setTransformedTrack", { error: u.t0 }), this.transformedMediaTrack = this.mediaTrack;
            case 14:
            case "end":
              return u.stop();
          }
      }, n, this, [[3, 10]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setVideoMiddlewareGlobalConfig", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              l(this, pu)[pu] = a;
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateConstraints", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this._mediaTrack) {
                u.next = 2;
                break;
              }
              throw new U("No media track enabled!", "1610");
            case 2:
              if (i = this.mediaInterface, i.constraintsBuilder) {
                u.next = 5;
                break;
              }
              throw new U("update constraints not supported for non web clients", "1100", this.logger);
            case 5:
              return u.prev = 5, this._mediaTrack.applyConstraints(i.constraintsBuilder.getUpdatedVideoConstraints(a)), u.next = 9, this.setTransformedTrack();
            case 9:
              return this.addMediaTrackListeners(), u.next = 12, this.setCurrentDevice();
            case 12:
              u.next = 17;
              break;
            case 14:
              u.prev = 14, u.t0 = u.catch(5), this.logger.error("VideoMediaHandler.updateConstraints.error", { error: u.t0 });
            case 17:
            case "end":
              return u.stop();
          }
      }, n, this, [[5, 14]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "terminateMiddlewareWebWorker", value: function() {
    l(this, ys)[ys].terminateMiddlewareWebWorker();
  } }, { key: "onTrackEnded", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              this.logger.info("VideoMediaHandler.TrackEnded"), this.disableTrack(), this.emit("trackEnded");
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "onTrackMuted", value: function() {
    this.logger.info("VideoMediaHandler.TrackMuted"), this.emit("trackMuted");
  } }, { key: "conditionallyChangeTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c, d, h = arguments;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              if (s = h.length > 1 && h[1] !== void 0 ? h[1] : !1, a) {
                f.next = 3;
                break;
              }
              return f.abrupt("return", a);
            case 3:
              if (!(this.userSelectedDevice || s)) {
                f.next = 5;
                break;
              }
              return f.abrupt("return", a);
            case 5:
              return u = a, f.next = 8, this.mediaInterface.getVideoInputDevices();
            case 8:
              if (c = f.sent, d = this.isNonPreferredDevice ? c.filter(function(g) {
                return !i.isNonPreferredDevice(g);
              }) : c, d != null && d.length) {
                f.next = 12;
                break;
              }
              return f.abrupt("return", u);
            case 12:
              if (!window.FAST_DYTE) {
                f.next = 14;
                break;
              }
              return f.abrupt("return", u);
            case 14:
              if (d.find(function(g) {
                return g.deviceId === a.getSettings().deviceId;
              })) {
                f.next = 20;
                break;
              }
              return u.stop(), this.logger.info("localmediahandler::setupstreams::found_video_non_preferred"), f.next = 19, this.mediaInterface.getVideoTrack(d[0].deviceId);
            case 19:
              u = f.sent;
            case 20:
              return f.abrupt("return", u);
            case 21:
            case "end":
              return f.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(yg);
Ic([D.trace("VideoMediaHandler.setTransformedTrack")], pl.prototype, "setTransformedTrack", 1);
Ic([D.trace("VideoMediaHandler.setVideoMiddlewareGlobalConfig")], pl.prototype, "setVideoMiddlewareGlobalConfig", 1);
Ic([D.trace("VideoMediaHandler.onTrackEnded")], pl.prototype, "onTrackEnded", 1);
Ic([D.trace("VideoMediaHandler.conditionallyChangeTrack")], pl.prototype, "conditionallyChangeTrack", 1);
var QI = pl, fv = Fn(Up()), Rr = /* @__PURE__ */ E("config"), Sa = /* @__PURE__ */ E("theme"), hu = /* @__PURE__ */ E("name"), ks = /* @__PURE__ */ E("pluginsConfig"), XI = /* @__PURE__ */ function() {
  function o(t) {
    if (w(this, o), Object.defineProperty(this, Rr, { writable: !0, value: void 0 }), Object.defineProperty(this, Sa, { writable: !0, value: void 0 }), Object.defineProperty(this, hu, { writable: !0, value: void 0 }), Object.defineProperty(this, ks, { writable: !0, value: void 0 }), !t)
      throw new U("Could not load preset.", "0904");
    l(this, Rr)[Rr] = t.config, l(this, hu)[hu] = t.name, l(this, Sa)[Sa] = t.ui || Fn(Up().ui), l(this, ks)[ks] = t.permissions.plugins.config;
  }
  return P(o, [{
    key: "setupScreen",
    get: (
      /**
      * @deprecated
      * The `setupScreen` represents the setup screen for the meeting.
      */
      function() {
        return { isEnabled: !0 };
      }
    )
    /**
    * @deprecated
    * The `waitingRoom` contains the properties to show a layout when
    * the participant is in waiting to join the meeting.
    */
  }, {
    key: "waitingRoom",
    get: function() {
      return { isEnabled: !0 };
    }
    /**
    * @deprecated
    * The `controlBar` contains the properties to show the meeting control bar with
    * various action buttons for the meeting.
    * The `elements` key contains the various action buttons.
    */
  }, {
    key: "controlBar",
    get: function() {
      return { isEnabled: !0, elements: { chat: !0, fullscreen: !0, invite: !1, layout: !1, participants: !0, plugins: !0, polls: !0, reactions: !1, screenshare: !0 } };
    }
    /**
    * @deprecated
    * The `header` contains the properties to show the meeting header with various elements.
    * The `elements` key contains the following properties
    * `logo` - string value representing the public URL for the logo
    * `timer` - boolean value suggesting if the timer should be shown
    * `title` - boolean value suggesting if the meeting title should be shown
    * `participantCount` - boolean value suggesting if the participant count shuld be shown
    * `changeLayout` - boolean value suggesting if the participant can change layout
    */
  }, {
    key: "header",
    get: function() {
      return { isEnabled: !0, elements: { logo: l(this, Sa)[Sa].designTokens.logo, timer: !0, title: !0, participantCount: !0, changeLayout: !1 } };
    }
    /**
    * @deprecated
    * The `pipMode` property returns a boolean value
    * If true, picture-in-picture mode is enabled for the participant.
    */
  }, {
    key: "pipMode",
    get: function() {
      return !0;
    }
    /**
    * The `viewType` tells the type of the meeting
    * possible values are: GROUP_CALL| LIVESTREAM | CHAT | AUDIO_ROOM
    */
  }, {
    key: "viewType",
    get: function() {
      return l(this, Rr)[Rr].viewType;
    }
    /**
    * The `livestreamViewerQualities` specifies the allowed qualities of a stream,
    * that can be viewed by a livestream viewer
    * */
  }, {
    key: "livestreamViewerQualities",
    get: function() {
      return l(this, Rr)[Rr].livestreamViewerQualities || [];
    }
    /**
    * The `maxVideoStreams` contains the maximum video
    * streams for mobile and desktop
    */
  }, {
    key: "maxVideoStreams",
    get: function() {
      return l(this, Rr)[Rr].maxVideoStreams;
    }
    /**
    * The `maxScreenShareCount` contains the maximum
    * possible concurrent screen shares
    */
  }, {
    key: "maxScreenShareCount",
    get: function() {
      return l(this, Rr)[Rr].maxScreenshareCount;
    }
    /**
    * @deprecated in favour of permissions.plugins.config
    */
  }, {
    key: "plugins",
    get: function() {
      return [];
    }
    /**
    * The `disabledPlugins` property returns id of all disabled plugins
    */
  }, { key: "disabledPlugins", get: function() {
    var e = this;
    return Object.keys(l(this, ks)[ks]).filter(function(r) {
      var n = l(e, ks)[ks][r];
      return n.disabled;
    });
  } }, { key: "designTokens", get: function() {
    return l(this, Sa)[Sa].designTokens;
  } }, { key: "configDiff", get: function() {
    return l(this, Sa)[Sa].configDiff;
  } }, { key: "mediaConstraints", get: function() {
    var e, r, n, a, i, s, u, c, d, h, v, f;
    return { audio: { enableStereo: (e = (r = l(this, Rr)[Rr]) === null || r === void 0 || (r = r.media) === null || r === void 0 || (r = r.audio) === null || r === void 0 ? void 0 : r.enableStereo) !== null && e !== void 0 ? e : Eo.audio.enableStereo, enableHighBitrate: (n = (a = l(this, Rr)[Rr]) === null || a === void 0 || (a = a.media) === null || a === void 0 || (a = a.audio) === null || a === void 0 ? void 0 : a.enableHighBitrate) !== null && n !== void 0 ? n : Eo.audio.enableHighBitrate }, video: { quality: (i = (s = l(this, Rr)[Rr]) === null || s === void 0 || (s = s.media) === null || s === void 0 || (s = s.video) === null || s === void 0 ? void 0 : s.quality) !== null && i !== void 0 ? i : Eo.video.quality, frameRate: (u = (c = l(this, Rr)[Rr]) === null || c === void 0 || (c = c.media) === null || c === void 0 || (c = c.video) === null || c === void 0 ? void 0 : c.frameRate) !== null && u !== void 0 ? u : Eo.video.frameRate }, screenshare: { quality: (d = (h = l(this, Rr)[Rr]) === null || h === void 0 || (h = h.media) === null || h === void 0 || (h = h.screenshare) === null || h === void 0 ? void 0 : h.quality) !== null && d !== void 0 ? d : Eo.screenshare.quality, frameRate: (v = (f = l(this, Rr)[Rr]) === null || f === void 0 || (f = f.media) === null || f === void 0 || (f = f.screenshare) === null || f === void 0 ? void 0 : f.frameRate) !== null && v !== void 0 ? v : Eo.screenshare.frameRate } };
  } }, { key: "name", get: function() {
    return l(this, hu)[hu];
  } }], [{
    key: "fromResponse",
    value: function(e) {
      return new o(e);
    }
    /** @deprecated. Use init() */
  }, { key: "default", value: function() {
    return new o(fv);
  } }, { key: "init", value: function(e) {
    var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return !e || r ? new o(fv) : new o(e);
  } }]);
}(), ZI = Object.defineProperty, xI = Object.getOwnPropertyDescriptor, kg = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? xI(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && ZI(e, r, a), a;
}, bs = /* @__PURE__ */ E("self"), vu = /* @__PURE__ */ E("context"), Jp = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n;
    w(this, t);
    var a = e.getValue("logger");
    return n = C(this, t, [a]), Object.defineProperty(n, bs, { writable: !0, value: void 0 }), n.state = "IDLE", n.playbackUrl = void 0, n.ingestionCredentials = void 0, n.viewerCount = void 0, Object.defineProperty(n, vu, { writable: !0, value: void 0 }), l(n, bs)[bs] = r, l(n, vu)[vu] = e, n.viewerCount = 0, n;
  }
  return R(t, o), P(t, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, vu)[vu].getValue("telemetry");
    }
  ) }, { key: "setLivestreamState", value: function(r) {
    var n = this.state;
    this.state = r, n !== r && this.emitCurrentLivestreamState();
  } }, { key: "emitCurrentLivestreamState", value: function() {
    this.emit("livestreamUpdate", this.state);
  } }, { key: "start", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i, s, u, c, d = arguments;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (a = d.length > 0 && d[0] !== void 0 ? d[0] : { manualIngestion: !1 }, l(this, bs)[bs].permissions.canLivestream) {
                v.next = 4;
                break;
              }
              throw this.logger.error("DyteLivestream::start::permission_denied"), new U("User does not have permission to start livestreaming", "1901");
            case 4:
              return this.setLivestreamState("STARTING"), v.prev = 5, i = pt(), v.next = 9, i.startLivestreaming(a);
            case 9:
              s = v.sent, u = s.playbackUrl, c = s.ingestionCredentials, this.playbackUrl = u, this.ingestionCredentials = c, a != null && a.manualIngestion && this.setLivestreamState("WAITING_ON_MANUAL_INGESTION"), v.next = 22;
              break;
            case 17:
              throw v.prev = 17, v.t0 = v.catch(5), this.logger.error("DyteRecording::stop::livestream_failed_to_start", { error: v.t0 }), this.setLivestreamState("IDLE"), new U("Error while starting livestream", "1900", this.logger);
            case 22:
            case "end":
              return v.stop();
          }
      }, n, this, [[5, 17]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "stop", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (l(this, bs)[bs].permissions.canLivestream) {
                s.next = 3;
                break;
              }
              throw this.logger.error("DyteLivestream::stop::permission_denied"), new U("User does not have permission to stop livestreaming", "1901");
            case 3:
              if (!(this.state !== "LIVESTREAMING" && this.state !== "WAITING_ON_MANUAL_INGESTION")) {
                s.next = 6;
                break;
              }
              throw this.logger.error("DyteLivestream::stop::inconsistent_state"), new U("Livestream not started yet", "1902");
            case 6:
              return s.prev = 6, this.setLivestreamState("STOPPING"), a = pt(), s.next = 11, a.stopLivestreaming();
            case 11:
              s.next = 18;
              break;
            case 13:
              throw s.prev = 13, s.t0 = s.catch(6), this.logger.error("DyteLivestream::stop::livestream_failed_to_stop", { error: s.t0 }), this.setLivestreamState("STOPPING"), new U("Error while stopping livestream", "1900", this.logger);
            case 18:
            case "end":
              return s.stop();
          }
      }, n, this, [[6, 13]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(an);
kg([D.trace("livestream.start")], Jp.prototype, "start", 1);
kg([D.trace("livestream.stop")], Jp.prototype, "stop", 1);
var e_ = Object.defineProperty, r_ = Object.getOwnPropertyDescriptor, t_ = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? r_(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && e_(e, r, a), a;
}, Ts = /* @__PURE__ */ E("livestreamingPeerId"), ws = /* @__PURE__ */ E("self"), Jt = /* @__PURE__ */ E("livestreamSocketHandler"), yt = /* @__PURE__ */ E("context"), bg = /* @__PURE__ */ function() {
  function o(t, e, r) {
    w(this, o), this.livestream = void 0, Object.defineProperty(this, Ts, { writable: !0, value: void 0 }), Object.defineProperty(this, ws, { writable: !0, value: void 0 }), Object.defineProperty(this, Jt, { writable: !0, value: void 0 }), Object.defineProperty(this, yt, { writable: !0, value: void 0 }), l(this, yt)[yt] = t, l(this, ws)[ws] = e, this.livestream = new Jp(t, e), l(this, Jt)[Jt] = r, this.setupEvents();
  }
  return P(o, [{
    key: "logger",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, yt)[yt].getValue("logger");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "telemetry", get: function() {
    return l(this, yt)[yt].getValue("telemetry");
  } }, { key: "fetchInitialLivestreamingState", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return n = pt(), h.next = 3, n.getActiveLivestream();
            case 3:
              a = h.sent, i = a.status, s = a.playbackUrl, u = a.manualIngest, c = a.ingestionCredentials, this.livestream.playbackUrl = s, this.livestream.ingestionCredentials = c, i === "LIVE" && this.livestream.setLivestreamState("LIVESTREAMING"), i === "INVOKED" && u && this.livestream.setLivestreamState("WAITING_ON_MANUAL_INGESTION");
            case 12:
            case "end":
              return h.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupEvents", value: function() {
    var e = this;
    l(this, Jt)[Jt].on(X.startedLivestream, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (e.livestream.playbackUrl = a.playbackUrl, e.livestream.setLivestreamState("LIVESTREAMING"), s.prev = 2, !l(e, ws)[ws].permissions.canLivestream) {
                  s.next = 6;
                  break;
                }
                return s.next = 6, e.fetchInitialLivestreamingState();
              case 6:
                s.next = 11;
                break;
              case 8:
                s.prev = 8, s.t0 = s.catch(2), e.logger.error("Error: LivestreamController.fetchLivestream during startedLivestream re-fetch");
              case 11:
              case "end":
                return s.stop();
            }
        }, n, null, [[2, 8]]);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), l(this, Jt)[Jt].on(X.livestreamingInvoked, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (a.manualIngest) {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return");
              case 2:
                if (e.livestream.setLivestreamState("WAITING_ON_MANUAL_INGESTION"), s.prev = 3, !l(e, ws)[ws].permissions.canLivestream) {
                  s.next = 7;
                  break;
                }
                return s.next = 7, e.fetchInitialLivestreamingState();
              case 7:
                s.next = 12;
                break;
              case 9:
                s.prev = 9, s.t0 = s.catch(3), e.logger.error("Error: LivestreamController.fetchLivestream during livestreamingInvoked re-fetch");
              case 12:
              case "end":
                return s.stop();
            }
        }, n, null, [[3, 9]]);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), l(this, Jt)[Jt].on(X.stoppedLivestream, function() {
      e.livestream.setLivestreamState("IDLE"), e.livestream.playbackUrl = void 0, e.livestream.ingestionCredentials = void 0;
    }), l(this, Jt)[Jt].on(X.erroredLivestream, function() {
      e.livestream.setLivestreamState("IDLE"), e.livestream.playbackUrl = void 0;
    }), l(this, Jt)[Jt].on(X.roomPeerCount, function(r) {
      e.livestream.viewerCount = r.count, e.livestream.emit("viewerCountUpdate", r.count);
    }), l(this, yt)[yt].getValue("peerSessionStore").on(H.PEER_JOINED_INTERNAL, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i;
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                ((i = a.flags) === null || i === void 0 ? void 0 : i.hiddenParticipant) === !0 && a.recorderType === "LIVESTREAMER" && (l(e, Ts)[Ts] = a.id, e.livestream.setLivestreamState("LIVESTREAMING"));
              case 1:
              case "end":
                return u.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), l(this, yt)[yt].getValue("peerSessionStore").on(H.PEER_CLOSED, function(r) {
      r.id === l(e, Ts)[Ts] && (l(e, Ts)[Ts] = void 0, e.livestream.setLivestreamState("IDLE"));
    }), l(this, yt)[yt].getValue("peerSessionStore").onAsync(H.LEAVE_MEDIA_ROOM, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!e.livestream.playbackUrl) {
                a.next = 2;
                break;
              }
              return a.abrupt("return");
            case 2:
              return e.logger.info("Fetching livestreaming state on leave stage"), a.prev = 3, a.next = 6, e.fetchInitialLivestreamingState();
            case 6:
              a.next = 11;
              break;
            case 8:
              a.prev = 8, a.t0 = a.catch(3), e.logger.error("Failed to fetch livestreaming state on leave stage", { error: a.t0 });
            case 11:
            case "end":
              return a.stop();
          }
      }, r, null, [[3, 8]]);
    }))), l(this, yt)[yt].getValue("peerSessionStore").on(H.SOCKET_SERVICE_ROOM_JOINED, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.prev = 0, a.next = 3, e.fetchInitialLivestreamingState();
            case 3:
              a.next = 8;
              break;
            case 5:
              a.prev = 5, a.t0 = a.catch(0), e.logger.error("Error: LivestreamController.fetchLivestream");
            case 8:
            case "end":
              return a.stop();
          }
      }, r, null, [[0, 5]]);
    })));
  } }]);
}();
t_([D.trace("LivestreamController.setupEvents")], bg.prototype, "setupEvents", 1);
var n_ = Object.defineProperty, a_ = Object.getOwnPropertyDescriptor, hl = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? a_(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && n_(e, r, a), a;
}, ar = /* @__PURE__ */ E("data"), Rn = /* @__PURE__ */ E("meetingId"), An = /* @__PURE__ */ E("socketHandler"), rd = /* @__PURE__ */ E("update"), Yo = /* @__PURE__ */ function() {
  function o(t) {
    var e = t.name, r = t.socketHandler, n = t.meetingId;
    w(this, o), Object.defineProperty(this, rd, { value: i_ }), this.name = "", Object.defineProperty(this, ar, { writable: !0, value: {} }), Object.defineProperty(this, Rn, { writable: !0, value: "" }), Object.defineProperty(this, An, { writable: !0, value: void 0 }), this.rateLimitConfig = { maxInvocations: 5, period: 1 }, this.bulkRateLimitConfig = { maxInvocations: 5, period: 1 }, this.listeners = {}, this.name = e, l(this, An)[An] = r, l(this, Rn)[Rn] = n;
  }
  return P(o, [{ key: "set", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i = this, s, u, c = arguments;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              s = c.length > 2 && c[2] !== void 0 ? c[2] : !0, u = c.length > 3 && c[3] !== void 0 ? c[3] : !1, l(this, ar)[ar][n] = a, s && this.remoteSet(n, a), u && (this.listeners[n] && this.listeners[n].forEach(function(v) {
                return v({ [n]: l(i, ar)[ar][n] });
              }), this.listeners["*"] && this.listeners["*"].forEach(function(v) {
                return v({ [n]: l(i, ar)[ar][n] });
              }));
            case 5:
            case "end":
              return h.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "remoteSet", value: function(e, r) {
    l(this, An)[An].storeInsertKeys(l(this, Rn)[Rn], this.name, [{ key: e, payload: r }]);
  } }, { key: "bulkSet", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              n.forEach(function(u) {
                var c = u.key, d = u.payload;
                l(a, ar)[ar][c] = d;
              }), l(this, An)[An].storeInsertKeys(l(this, Rn)[Rn], this.name, n);
            case 2:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "update",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
        var i, s = arguments;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                i = s.length > 2 && s[2] !== void 0 ? s[2] : !0, l(this, rd)[rd](n, a, i);
              case 2:
              case "end":
                return c.stop();
            }
        }, r, this);
      }));
      function e(r, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line consistent-return
  }, { key: "delete", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s = arguments;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (a = s.length > 1 && s[1] !== void 0 ? s[1] : !0, i = s.length > 2 && s[2] !== void 0 ? s[2] : !1, l(this, ar)[ar][n] && delete l(this, ar)[ar][n], !a) {
                c.next = 5;
                break;
              }
              return c.abrupt("return", l(this, An)[An].storeDeleteKeys(l(this, Rn)[Rn], this.name, [{ key: n }]));
            case 5:
              i && (this.listeners[n] && (this.listeners[n].forEach(function(d) {
                return d({ [n]: void 0 });
              }), delete this.listeners[n]), this.listeners["*"] && this.listeners["*"].forEach(function(d) {
                return d({ [n]: void 0 });
              }));
            case 6:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "bulkDelete",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n) {
        var a = this;
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return n.forEach(function(u) {
                  var c = u.key;
                  l(a, ar)[ar][c] && delete l(a, ar)[ar][c];
                }), s.abrupt("return", l(this, An)[An].storeDeleteKeys(l(this, Rn)[Rn], this.name, n));
              case 2:
              case "end":
                return s.stop();
            }
        }, r, this);
      }));
      function e(r) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * @description Returns value for the given key.
    * @param {string} key - Unique identifier used to store value.
    * @returns {any} Value for the given key.
    */
  }, {
    key: "get",
    value: function(e) {
      if (l(this, ar)[ar][e])
        return l(this, ar)[ar][e];
    }
    /**
    * @description Returns the entire store.
    * @returns {StoreData} An instance of StoreData.
    */
  }, { key: "getAll", value: function() {
    return l(this, ar)[ar];
  } }, { key: "rateLimits", get: function() {
    return this.rateLimitConfig;
  } }, { key: "updateRateLimits", value: function(e, r) {
    this.rateLimitConfig.maxInvocations = e, this.rateLimitConfig.period = r;
  } }, {
    key: "bulkRateLimits",
    get: function() {
      return this.bulkRateLimitConfig;
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "updateBulkRateLimits",
    value: function(e, r) {
      this.bulkRateLimitConfig.maxInvocations = e, this.bulkRateLimitConfig.period = r;
    }
    /**
    * @description Listens for data change on a store key.
    * @param {string} key - Unique identifier used to store value.
    * @param {Function} cb - The callback function that gets executed
    * when data is modified.
    * @returns {void} void
    */
  }, {
    key: "subscribe",
    value: function(e, r) {
      if (this.listeners[e]) {
        this.listeners[e].push(r);
        return;
      }
      this.listeners[e] = [r];
    }
    /**
       * @description Removes all listeners for a key on the store.
       * @param {string} key - Unique identifier used to store value.
    * * @param {Function} cb - Callback to be removed.
       * @returns {void} void
       */
  }, { key: "unsubscribe", value: function(e, r) {
    if (r) {
      var n;
      this.listeners[e] = ((n = this.listeners[e]) === null || n === void 0 ? void 0 : n.filter(function(a) {
        return a !== r;
      })) || [];
      return;
    }
    this.listeners[e] && delete this.listeners[e];
  } }, { key: "populate", value: function(e) {
    l(this, ar)[ar] = e;
  } }]);
}();
function i_(o, t) {
  var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0, r, n = l(this, ar)[ar][o], a = Object.prototype.toString.call(t), i = Object.prototype.toString.call(n);
  if (a !== i) {
    this.set(o, t);
    return;
  }
  switch (i) {
    case "[object Array]":
      r = [].concat(ke(n), ke(t));
      break;
    case "[object Object]":
      r = N(N({}, n), t);
      break;
    case "[object Map]":
      r = new Map([].concat(ke(n), ke(t)));
      break;
    case "[object Set]":
      r = /* @__PURE__ */ new Set([].concat(ke(n), ke(t)));
      break;
    default:
      r = t;
      break;
  }
  this.set(o, r, e);
}
hl([Nt(zo, "rateLimitConfig")], Yo.prototype, "remoteSet", 1);
hl([Nt(zo, "bulkRateLimitConfig")], Yo.prototype, "bulkSet", 1);
hl([Nt(zo, "rateLimitConfig")], Yo.prototype, "update", 1);
hl([Nt(zo, "rateLimitConfig")], Yo.prototype, "delete", 1);
hl([Nt(zo, "bulkRateLimitConfig")], Yo.prototype, "bulkDelete", 1);
var Va = /* @__PURE__ */ E("pluginSocketHandler"), Ua = /* @__PURE__ */ E("meetingId"), Nu = /* @__PURE__ */ E("peerId"), Hu = /* @__PURE__ */ E("context"), Nn = /* @__PURE__ */ E("pendingInit"), td = /* @__PURE__ */ E("setup"), s_ = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, td, { value: u_ }), Object.defineProperty(this, Nu, { get: o_, set: void 0 }), this.stores = /* @__PURE__ */ new Map(), Object.defineProperty(this, Va, { writable: !0, value: void 0 }), Object.defineProperty(this, Ua, { writable: !0, value: "" }), Object.defineProperty(this, Hu, { writable: !0, value: void 0 }), Object.defineProperty(this, Nn, { writable: !0, value: /* @__PURE__ */ new Map() }), l(this, Va)[Va] = e, l(this, Ua)[Ua] = t.getValue("meetingId"), l(this, Hu)[Hu] = t, l(this, td)[td]();
  }
  return P(o, [{ key: "create", value: function(e) {
    var r = this, n = new Yo({ name: e, socketHandler: l(this, Va)[Va], meetingId: l(this, Ua)[Ua] });
    l(this, Va)[Va].storeGetKeys(l(this, Ua)[Ua], e, []);
    var a = new Promise(function(i, s) {
      var u = setTimeout(function() {
        return s(Error("Failed"));
      }, 3e3);
      l(r, Nn)[Nn].set(e, { rejectTimeout: u, resolve: i, store: n });
    });
    return a;
  } }]);
}();
function o_() {
  return l(this, Hu)[Hu].getValue("peerId");
}
function u_() {
  var o = this;
  [se.storeInsertKeys, se.storeGetKeys, se.storeDeleteKeys].forEach(function(t) {
    l(o, Va)[Va].on(t, /* @__PURE__ */ function() {
      var e = m(/* @__PURE__ */ p().mark(function r(n) {
        var a, i, s, u, c, d;
        return p().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                if (n.pluginId === l(o, Ua)[Ua]) {
                  v.next = 2;
                  break;
                }
                return v.abrupt("return");
              case 2:
                if (s = (a = n.storeItems) === null || a === void 0 ? void 0 : a.map(function(f) {
                  var g;
                  return { timestamp: f.timestamp, peerId: f.peerId, payload: JSON.parse((g = f.payload) !== null && g !== void 0 && g.length ? new TextDecoder().decode(f.payload) : "{}"), key: f.storeKey };
                }), t !== se.storeGetKeys) {
                  v.next = 9;
                  break;
                }
                return u = l(o, Nn)[Nn].get(n.storeName), c = o.stores.get(n.storeName) || (u == null ? void 0 : u.store), l(o, Nn)[Nn].get(n.storeName) && (o.stores.set(n.storeName, u.store), u.resolve(c), clearTimeout(u.rejectTimeout), l(o, Nn)[Nn].delete(n.storeName)), s.forEach(function(f) {
                  c.set(f.key, f.payload, !1, !1);
                }), v.abrupt("return");
              case 9:
                if (d = o.stores.get(n.storeName) || ((i = l(o, Nn)[Nn].get(n.storeName)) === null || i === void 0 ? void 0 : i.store), d !== void 0) {
                  v.next = 12;
                  break;
                }
                return v.abrupt("return");
              case 12:
                t === se.storeInsertKeys && s.forEach(function(f) {
                  var g = f.key, k = f.peerId, y = f.payload;
                  k !== l(o, Nu)[Nu] && d.set(g, y, !1, !0);
                }), t === se.storeDeleteKeys && s.forEach(function(f) {
                  var g = f.key, k = f.peerId;
                  k !== l(o, Nu)[Nu] && d.delete(g, !1, !0);
                });
              case 14:
              case "end":
                return v.stop();
            }
        }, r);
      }));
      return function(r) {
        return e.apply(this, arguments);
      };
    }());
  });
}
function Vs(o) {
  var t, e, r, n, a, i, s, u, c;
  return o ? { media: { audio: { enabled: o.audioEnabled, trackId: (t = o.audioTrack) === null || t === void 0 ? void 0 : t.id, permission: "mediaPermissions" in o ? (e = o.mediaPermissions) === null || e === void 0 ? void 0 : e.audio : null }, video: { enabled: o.videoEnabled, trackId: (r = o.videoTrack) === null || r === void 0 ? void 0 : r.id, permission: "mediaPermissions" in o ? (n = o.mediaPermissions) === null || n === void 0 ? void 0 : n.video : null }, screenshare: { enabled: o.screenShareEnabled, permission: "mediaPermissions" in o ? (a = o.mediaPermissions) === null || a === void 0 ? void 0 : a.screenshare : null, audio: { enabled: (i = o.screenShareTracks) === null || i === void 0 || (i = i.audio) === null || i === void 0 ? void 0 : i.enabled, trackId: (s = o.screenShareTracks) === null || s === void 0 || (s = s.audio) === null || s === void 0 ? void 0 : s.id }, video: { enabled: (u = o.screenShareTracks) === null || u === void 0 || (u = u.video) === null || u === void 0 ? void 0 : u.enabled, trackId: (c = o.screenShareTracks) === null || c === void 0 || (c = c.video) === null || c === void 0 ? void 0 : c.id } } } } : {};
}
var l_ = Object.defineProperty, c_ = Object.getOwnPropertyDescriptor, Qo = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? c_(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && l_(e, r, a), a;
}, d_ = 0.8, p_ = 1.2, Xa = (yi = /* @__PURE__ */ E("isPinned"), ki = /* @__PURE__ */ E("stageStatus"), $r = /* @__PURE__ */ E("context"), Zn = /* @__PURE__ */ E("roomNodeClient"), Tn = /* @__PURE__ */ E("audioPlayback"), xn = /* @__PURE__ */ E("mediaJoined"), yl = /* @__PURE__ */ E("socketJoined"), Rt = /* @__PURE__ */ E("self"), yo = /* @__PURE__ */ E("roomSocketHandler"), mn = /* @__PURE__ */ E("videoElements"), ea = /* @__PURE__ */ E("pip"), At = /* @__PURE__ */ E("maxSpatialLayer"), kl = /* @__PURE__ */ E("videoDimensionsUpdated"), ko = /* @__PURE__ */ E("updateVideos"), bl = /* @__PURE__ */ E("updateAudio"), Tl = /* @__PURE__ */ E("updateScreenShare"), /* @__PURE__ */ function(o) {
  function t(e, r, n, a) {
    var i;
    w(this, t);
    var s = e.getValue("logger");
    i = C(this, t, [s]), Object.defineProperty(i, Tl, { value: b_ }), Object.defineProperty(i, bl, { value: k_ }), Object.defineProperty(i, ko, { value: y_ }), Object.defineProperty(i, ea, { get: m_, set: void 0 }), Object.defineProperty(i, yl, { get: g_, set: void 0 }), Object.defineProperty(i, xn, { get: f_, set: void 0 }), Object.defineProperty(i, Tn, { get: v_, set: void 0 }), Object.defineProperty(i, Zn, { get: h_, set: void 0 }), i.id = void 0, i.userId = void 0, i.name = void 0, i.picture = void 0, i.isHost = void 0, i.customParticipantId = void 0, i.flags = void 0, i.device = void 0, i.videoTrack = void 0, i.audioTrack = void 0, i.screenShareTracks = void 0, i.videoEnabled = void 0, i.audioEnabled = void 0, i.screenShareEnabled = void 0, i.producers = void 0, i.manualProducerConfig = void 0, Object.defineProperty(i, yi, { writable: !0, value: void 0 }), i.supportsRemoteControl = !1, Object.defineProperty(i, ki, { writable: !0, value: void 0 }), i.presetName = void 0, Object.defineProperty(i, $r, { writable: !0, value: void 0 }), Object.defineProperty(i, Rt, { writable: !0, value: void 0 }), Object.defineProperty(i, yo, { writable: !0, value: void 0 }), Object.defineProperty(i, mn, { writable: !0, value: /* @__PURE__ */ new Map() }), Object.defineProperty(i, At, { writable: !0, value: 1 }), Object.defineProperty(i, kl, { writable: !0, value: jp(function(j) {
      if (i.videoTrack) {
        var $ = j.clientWidth, O = j.clientHeight, B = i.videoTrack.getSettings(), Q = B.width, F = B.height;
        if (!(!Q || !F)) {
          var z = F / O, q = Q / $, te = Math.max(z, q);
          te > p_ && l(i, At)[At] === 1 ? (l(i, At)[At] = 0, l(i, $r)[$r].getValue("peerSessionStore").emit(H.MAX_SPATIAL_LAYER_CHANGE, { peerId: i.id, maxSpatialLayer: l(i, At)[At] })) : te < d_ && l(i, At)[At] === 0 && (l(i, At)[At] = 1, l(i, $r)[$r].getValue("peerSessionStore").emit(H.MAX_SPATIAL_LAYER_CHANGE, { peerId: i.id, maxSpatialLayer: l(i, At)[At] }));
        }
      }
    }, 2e3) }), l(i, $r)[$r] = e;
    var u = r.id, c = r.userId, d = r.displayName, h = r.device, v = r.picture, f = r.isHost, g = r.flags, k = r.clientSpecificId, y = r.stageStatus, b = r.customParticipantId, S = r.audioMuted, T = r.audioTrack, A = r.videoEnabled, L = A === void 0 ? !1 : A, I = r.videoTrack, M = r.producers, V = r.metadata;
    return i.id = u, i.userId = c, i.name = d, i.device = h, i.picture = v, i.isHost = f, i.flags = g, i.manualProducerConfig = Dw, l(i, ki)[ki] = y != null ? y : "ON_STAGE", i.customParticipantId = b != null ? b : k, i.audioEnabled = !S, i.audioTrack = T, i.videoEnabled = L, i.videoTrack = I, i.screenShareTracks = { audio: void 0, video: void 0 }, i.producers = M != null ? M : [], i.presetName = V == null ? void 0 : V.preset_name, l(i, yi)[yi] = !1, l(i, Rt)[Rt] = n, l(i, yo)[yo] = a, i.setupEvents(), i.updateVideo = i.updateVideo.bind(i), l(i, ko)[ko](), i;
  }
  return R(t, o), P(t, [{ key: "clientSpecificId", get: (
    /**
    * @deprecated
    * Use `customParticipantId`
    */
    function() {
      return this.customParticipantId;
    }
  ) }, { key: "stageStatus", get: (
    /** Denotes the participants's current stage status. */
    function() {
      return l(this, ki)[ki];
    }
  ) }, { key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, $r)[$r].getValue("telemetry");
    }
  ) }, { key: "setVideoEnabled", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    this.videoEnabled = r, n && (this.logger.info("DyteParticipant::setVideoEnabled::videoUpdate", N({}, Vs(this))), this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }));
  } }, { key: "setAudioEnabled", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    this.audioEnabled = r, n && (this.logger.info("DyteParticipant::setAudioEnabled::audioUpdate", N({}, Vs(this))), this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack }));
  } }, { key: "setScreenShareEnabled", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    this.screenShareEnabled = r, n && this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks });
  } }, {
    key: "setupEvents",
    value: function() {
      this.on("videoUpdate", l(this, ko)[ko]), l(this, Tn)[Tn] && (this.on("audioUpdate", l(this, bl)[bl]), this.on("screenShareUpdate", l(this, Tl)[Tl]));
    }
    /**
    * Returns `participant.id` if user has permission
    * to pin participants.
    */
  }, { key: "pin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, xn)[xn]) {
                i.next = 2;
                break;
              }
              throw new U("Can`t pin participant without joining room", "1205");
            case 2:
              if (l(this, Rt)[Rt].permissions.pinParticipant) {
                i.next = 4;
                break;
              }
              throw new U("You do not have permission to pin participants.", "1201");
            case 4:
              return i.abrupt("return", l(this, Zn)[Zn].pinPeer(this.id));
            case 5:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "unpin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, xn)[xn]) {
                i.next = 2;
                break;
              }
              throw new U("Can`t unpin participant without joining room", "1205");
            case 2:
              if (l(this, Rt)[Rt].permissions.pinParticipant) {
                i.next = 4;
                break;
              }
              throw new U("You do not have permission to unpin participants.", "1201");
            case 4:
              return i.abrupt("return", l(this, Zn)[Zn].pinPeer(null));
            case 5:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setIsPinned", value: function(r) {
    var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    l(this, yi)[yi] = r;
    var i = r ? "pinned" : "unpinned";
    (n = l(this, ea)[ea]) === null || n === void 0 || n.updateSource(this.id, { pinned: r }), a && this.emit(i, this);
  } }, { key: "disableAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = this.id, this.logger.info("DyteParticipant::disable_audio", { dyteParticipant: { id: a } }), l(this, xn)[xn]) {
                s.next = 4;
                break;
              }
              throw new U("Can`t disable participant audio without joining room", "1205");
            case 4:
              if (!l(this, Rt)[Rt].permissions.canDisableParticipantAudio) {
                s.next = 6;
                break;
              }
              return s.abrupt("return", l(this, Zn)[Zn].disableAudio(a));
            case 6:
              throw this.logger.error("DyteParticipant::unauthorized_disable_audio", { dyteParticipant: { id: a } }), new U("Unauthorized: User does not have permission to disable participant audio.", "1201");
            case 8:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "kick", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = this.id, this.logger.info("DyteParticipant::kick", { dyteParticipant: { id: a } }), l(this, yl)[yl]) {
                s.next = 4;
                break;
              }
              throw new U("Can`t kick participant without joining room", "1205");
            case 4:
              if (!l(this, Rt)[Rt].permissions.kickParticipant) {
                s.next = 8;
                break;
              }
              return s.next = 7, l(this, $r)[$r].getValue("peerSessionStore").emitAsync(H.KICK_PEER, { peerId: a });
            case 7:
              return s.abrupt("return");
            case 8:
              throw this.logger.error("DyteParticipant::unauthorized_kick", { dyteParticipant: { id: a } }), new U("Unauthorized: User does not have permission to kick participants.", "1201");
            case 10:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableVideo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = this.id, this.logger.info("DyteParticipant::disable_video", { dyteParticipant: { id: a } }), l(this, xn)[xn]) {
                s.next = 4;
                break;
              }
              throw new U("Can`t disable participant video without joining room", "1205");
            case 4:
              if (!l(this, Rt)[Rt].permissions.canDisableParticipantVideo) {
                s.next = 6;
                break;
              }
              return s.abrupt("return", l(this, Zn)[Zn].disableVideo(a));
            case 6:
              throw this.logger.error("DyteParticipant::unauthorized_disable_video", { dyteParticipant: { id: a } }), new U("Unauthorized: User does not have permission to disable participant video.", "1201");
            case 8:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPermissions", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", l(this, yo)[yo].getUserPermissions(this.userId));
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "setStageStatus",
    value: function(r) {
      l(this, ki)[ki] = r, this.emit("stageStatusUpdate", this);
    }
    /**
    * Returns true if the participant is pinned.
    */
  }, { key: "isPinned", get: function() {
    return l(this, yi)[yi];
  } }, { key: "registerVideoElement", value: function(r) {
    var n, a = this, i, s;
    if (r) {
      var u;
      (n = l(this, mn)[mn].get(r)) === null || n === void 0 || (n = n.observer) === null || n === void 0 || n.disconnect(), "ResizeObserver" in window && (u = new ResizeObserver(function() {
        return l(a, kl)[kl](r);
      }), u.observe(r)), l(this, mn)[mn].set(r, { observer: u }), this.updateVideo(r), (i = l(this, ea)[ea]) === null || i === void 0 || i.addSource(this.id, r, this.videoEnabled, this.isPinned, this.name, this.picture, (s = this.raised) !== null && s !== void 0 ? s : !1);
    }
  } }, { key: "deregisterVideoElement", value: function(r) {
    var n, a;
    if (!r) {
      var i;
      (i = l(this, ea)[ea]) === null || i === void 0 || i.removeSource(this.id);
      return;
    }
    r.srcObject = void 0, (n = l(this, mn)[mn].get(r)) === null || n === void 0 || (n = n.observer) === null || n === void 0 || n.disconnect(), l(this, mn)[mn].delete(r), (a = l(this, ea)[ea]) === null || a === void 0 || a.removeSource(this.id);
  } }, { key: "updateVideo", value: (
    /**
    * Internal method, do not use
    */
    function(r) {
      if (this.videoEnabled) {
        var n;
        if (this.videoTrack == null)
          return;
        var a = (n = r.srcObject) === null || n === void 0 ? void 0 : n.getTracks()[0];
        if ((a == null ? void 0 : a.id) === this.videoTrack.id)
          return;
        var i = new MediaStream();
        i.addTrack(this.videoTrack), r.srcObject = i;
      } else
        r.srcObject = void 0;
      r.style.display = this.videoEnabled ? "block" : "none";
    }
  ) }]);
}(an));
function h_() {
  return l(this, $r)[$r].getValue("roomNodeClient");
}
function v_() {
  return l(this, $r)[$r].getValue("audioPlayback");
}
function f_() {
  return l(this, $r)[$r].getValue("connectionHandler").mediaJoined;
}
function g_() {
  return l(this, $r)[$r].getValue("connectionHandler").socketJoined;
}
function m_() {
  return l(this, $r)[$r].getValue("pip");
}
function y_() {
  Array.from(l(this, mn)[mn].keys()).forEach(this.updateVideo);
}
function k_() {
  if (this.audioEnabled && this.audioTrack) {
    var o;
    (o = l(this, Tn)[Tn]) === null || o === void 0 || o.addParticipantTrack(this.id, this.audioTrack);
  } else {
    var t;
    (t = l(this, Tn)[Tn]) === null || t === void 0 || t.removeParticipantTrack(this.id);
  }
}
function b_() {
  if (this.screenShareEnabled && this.screenShareTracks.audio) {
    var o;
    (o = l(this, Tn)[Tn]) === null || o === void 0 || o.addParticipantTrack("screenshare-".concat(this.id), this.screenShareTracks.audio);
  } else {
    var t;
    (t = l(this, Tn)[Tn]) === null || t === void 0 || t.removeParticipantTrack("screenshare-".concat(this.id));
  }
}
Qo([D.trace("DyteParticipant.disableAudio")], Xa.prototype, "disableAudio", 1);
Qo([D.trace("DyteParticipant.kick")], Xa.prototype, "kick", 1);
Qo([D.trace("DyteParticipant.disableVideo")], Xa.prototype, "disableVideo", 1);
Qo([D.trace("DyteParticipant.getPermissions")], Xa.prototype, "getPermissions", 1);
Qo([D.trace("DyteParticipant.setStageStatus")], Xa.prototype, "setStageStatus", 1);
Xa = Qo([vt("1200")], Xa);
var Us = /* @__PURE__ */ function(o) {
  function t(e, r) {
    w(this, t);
    var n = r != null ? r : {}, a = n.onAddEvent, i = a === void 0 ? "participantJoined" : a, s = n.onDeleteEvent, u = s === void 0 ? "participantLeft" : s, c = n.onClearEvent, d = c === void 0 ? "participantsCleared" : c;
    return C(this, t, [{ onAddEvent: i, onDeleteEvent: u, onClearEvent: d }, e]);
  }
  return R(t, o), P(t, [{ key: "add", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return this.has(r.id) && Object.is(this.get(r.id), r) === !1 && this.delete(r.id), Ce(t, "add", this, 3)([r, n]);
  } }, { key: "clear", value: function() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    return Ce(t, "clear", this, 3)([r, n]);
  } }, { key: "delete", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    return Ce(t, "delete", this, 3)([r, n, a]);
  } }]);
}(hg), In = /* @__PURE__ */ E("map"), T_ = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t, [e]), Object.defineProperty(r, In, { writable: !0, value: void 0 }), l(r, In)[In] = /* @__PURE__ */ new Map(), r;
  }
  return R(t, o), P(t, [{
    key: "__set",
    value: function(r, n) {
      return l(this, In)[In].set(r, n);
    }
    /**
    * @private
    */
  }, { key: "__clear", value: function() {
    return l(this, In)[In].clear();
  } }, { key: "get", value: function(r) {
    return l(this, In)[In].get(r);
  } }, { key: "toArray", value: function() {
    return Array.from(l(this, In)[In].values());
  } }]);
}(Jo), w_ = /* @__PURE__ */ function() {
  function o() {
    w(this, o), this._orderedArray = void 0, this._map = void 0, this._map = /* @__PURE__ */ new Map(), this._orderedArray = [];
  }
  return P(o, [{ key: "add", value: function(e, r) {
    if (!this._map.has(e)) {
      this._map.set(e, { peerId: e, priority: r }), this._orderedArray.splice(Math.max(r - 1, 0), 0, e);
      var n = this.index(e);
      return n;
    }
    var a = this.index(e);
    this.delete(e);
    var i = this.add(e, r);
    return a !== i ? i : -1;
  } }, { key: "delete", value: function(e) {
    if (this._map.has(e)) {
      var r = this.index(e);
      this._map.delete(e), this._orderedArray.splice(r, 1);
    }
  } }, { key: "index", value: function(e) {
    return this._map.has(e) ? this._orderedArray.indexOf(e) : -1;
  } }, { key: Symbol.iterator, value: function() {
    return this._orderedArray[Symbol.iterator]();
  } }]);
}(), P_ = /* @__PURE__ */ function() {
  function o() {
    w(this, o), this._activeSpeakerPeers = void 0, this._compulsoryPeers = void 0, this._activeSpeakerPeers = new w_(), this._compulsoryPeers = /* @__PURE__ */ new Set();
  }
  return P(o, [{ key: "add", value: function(e, r, n) {
    if (!e)
      return -1;
    if (r < 0)
      return this._compulsoryPeers.add(e), 0;
    var a = n.getValue("logger");
    if (this.compulsoryPeers.includes(e) && (r > 0 || r === 246267631)) {
      if (a.info("DyteSelectedPeer::removing_compulsory_peer", { selectedPeer: { peerId: e } }), this._removeFromCompulsoryPeer(e), r === 246267631)
        return -1;
    } else if (r === 229490415)
      return this.delete(e, n), -1;
    return this._activeSpeakerPeers.add(e, r);
  } }, { key: "delete", value: function(e, r) {
    var n = r == null ? void 0 : r.getValue("logger");
    n == null || n.info("DyteSelectedPeer::deleting_peer_from_selectedPeer", { selectedPeer: { peerId: e } }), this._removeFromCompulsoryPeer(e), this._activeSpeakerPeers.delete(e);
  } }, { key: "index", value: function(e) {
    return this._activeSpeakerPeers.index(e);
  } }, { key: "peers", get: function() {
    return Array.from(new Set(this.compulsoryPeers.concat(this.activeSpeakerPeers)));
  } }, { key: "compulsoryPeers", get: function() {
    return Array.from(this._compulsoryPeers.values());
  } }, { key: "activeSpeakerPeers", get: function() {
    return Array.from(this._activeSpeakerPeers);
  } }, { key: "_removeFromCompulsoryPeer", value: function(e) {
    this._compulsoryPeers.delete(e);
  } }]);
}(), Tg = new P_(), S_ = Object.defineProperty, E_ = Object.getOwnPropertyDescriptor, un = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? E_(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && S_(e, r, a), a;
}, C_ = ["ACTIVE_GRID", "PAGINATED", "MANUAL"], St = (_e = /* @__PURE__ */ E("context"), ra = /* @__PURE__ */ E("roomNodeClient"), ta = /* @__PURE__ */ E("socketJoined"), bi = /* @__PURE__ */ E("mediaJoined"), na = /* @__PURE__ */ E("self"), wr = /* @__PURE__ */ E("roomSocketHandler"), /* @__PURE__ */ function(o) {
  function t(e, r, n) {
    var a;
    w(this, t);
    var i = e.getValue("logger");
    return a = C(this, t, [i]), Object.defineProperty(a, bi, { get: I_, set: void 0 }), Object.defineProperty(a, ta, { get: A_, set: void 0 }), Object.defineProperty(a, ra, { get: R_, set: void 0 }), a.waitlisted = void 0, a.joined = void 0, a.active = void 0, a.videoSubscribed = void 0, a.audioSubscribed = void 0, a.pinned = void 0, a.all = void 0, Object.defineProperty(a, _e, { writable: !0, value: void 0 }), Object.defineProperty(a, na, { writable: !0, value: void 0 }), Object.defineProperty(a, wr, { writable: !0, value: void 0 }), a.rateLimitConfig = { maxInvocations: 5, period: 1 }, a.viewMode = void 0, a.currentPage = void 0, a.lastActiveSpeaker = void 0, a.selectedPeers = Tg, l(a, _e)[_e] = e, l(a, na)[na] = r, l(a, wr)[wr] = n, a.waitlisted = new Us(i), a.joined = new Us(i), a.videoSubscribed = new Us(i), a.audioSubscribed = new Us(i), a.active = a.videoSubscribed, a.pinned = new Us(i), a.all = new T_(i), a.viewMode = "ACTIVE_GRID", a.currentPage = 0, a.setupEvents(), a;
  }
  return R(t, o), P(t, [{ key: "pip", get: (
    /**
    * Return the controls for Picture-in-Picture
    */
    function() {
      return l(this, _e)[_e].getValue("pip");
    }
  ) }, { key: "rateLimits", get: function() {
    return this.rateLimitConfig;
  } }, {
    key: "updateRateLimits",
    value: function(r, n) {
      this.rateLimitConfig.maxInvocations = r, this.rateLimitConfig.period = n;
    }
    /**
    * @access private
    * Not for external use
    */
  }, { key: "telemetry", get: function() {
    return l(this, _e)[_e].getValue("telemetry");
  } }, {
    key: "setupEvents",
    value: function() {
      var r = this;
      l(this, _e)[_e].getValue("peerSessionStore").on(H.E2EE_ACTIVE_CONSUMER, function(a) {
        var i, s = a.peerId;
        ((i = l(r, _e)[_e].getValue("modules").e2ee) === null || i === void 0 ? void 0 : i.enabled) !== !0 && r.emit("media_decode_error", { reason: "Got encrypted media for participantId ".concat(s, ", but encryption wasn't enabled in init.defaults"), code: "1702" });
      });
      var n = l(this, _e)[_e].getValue("audioPlayback");
      n && this.audioSubscribed.on("participantLeft", function(a) {
        n.removeParticipantTrack(a.id);
      });
    }
    /**
    * Returns the number of participants who are joined in the meeting.
    */
  }, {
    key: "count",
    get: function() {
      return this.joined.size;
    }
    /**
    * Returns the maximum number of participants that can be present in
    * the active map.
    */
  }, {
    key: "maxActiveParticipantsCount",
    get: function() {
      var r;
      return (r = l(this, _e)[_e]) === null || r === void 0 ? void 0 : r.getValue("maxPreferredStreams");
    }
    /**
    * Updates the maximum number of participants that are populated in
    * the active map.
    *
    * @param limit: Updated max limit
    */
  }, {
    key: "setMaxActiveParticipantsCount",
    value: function(r) {
      if (r < 0 || r > 24)
        throw new U("0 <= Max active participants count limit <= 24", "1203");
      l(this, _e)[_e].setValue("maxPreferredStreams", r), l(this, bi)[bi] && l(this, _e)[_e].getValue("peerSessionStore").emit(H.UPDATE_ACTIVE);
    }
    /**
    * Returns the number of pages that are available in the meeting in PAGINATED mode.
    * If the meeting is in ACTIVE_GRID mode, this value will be 0.
    */
  }, {
    key: "pageCount",
    get: function() {
      if (this.viewMode === "PAGINATED") {
        var r = this.selectedPeers.compulsoryPeers.length, n = this.joined.toArray().filter(function(a) {
          return a.stageStatus === "ON_STAGE";
        });
        return Math.ceil((n.length - r) / Math.max(this.maxActiveParticipantsCount - r, 1));
      }
      return 0;
    }
    /**
    * Accepts requests from waitlisted participants if user
    * has appropriate permissions.
    * @param id peerId or userId of the waitlisted participant.
    */
  }, {
    key: "acceptWaitingRoomRequest",
    value: function(r) {
      var n, a;
      if (!l(this, ta)[ta])
        throw new U("Can`t accept waiting room request without joining room", "1205");
      var i = (n = (a = this.waitlisted.get(r)) === null || a === void 0 ? void 0 : a.userId) !== null && n !== void 0 ? n : r;
      return l(this, wr)[wr].acceptWaitingRoomRequest([i]);
    }
    /**
    * We need a new event for socket service events
    * since if we send them all together, sequence of events
    * can be unreliable
    */
  }, { key: "acceptAllWaitingRoomRequest", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return s = a.map(function(d) {
                var h, v;
                return (h = (v = i.waitlisted.get(d)) === null || v === void 0 ? void 0 : v.userId) !== null && h !== void 0 ? h : d;
              }), c.abrupt("return", l(this, wr)[wr].acceptWaitingRoomRequest(s));
            case 2:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "rejectWaitingRoomRequest", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (l(this, ta)[ta]) {
                d.next = 2;
                break;
              }
              throw new U("Can`t reject waiting room request without joining room", "1205");
            case 2:
              u = (i = (s = this.waitlisted.get(a)) === null || s === void 0 ? void 0 : s.userId) !== null && i !== void 0 ? i : a, l(this, wr)[wr].rejectWaitingRoomRequest([u]);
            case 4:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setViewMode", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.logger.info("DyteParticipants::set_view_mode", { pageNavigation: { viewMode: a, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), i = function(d) {
                return C_.includes(d);
              }, i(a)) {
                u.next = 5;
                break;
              }
              throw this.logger.error("DyteParticipants::setViewMode::invalid_view_mode", { pageNavigation: { viewMode: a, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), new U("Invalid view mode: ".concat(a, ". Try ACTIVE_GRID, PAGINATED or MANUAL."), "1207");
            case 5:
              if (this.viewMode !== a) {
                u.next = 8;
                break;
              }
              return this.logger.info("DyteParticipants::setViewMode::view_mode_same_as_previous"), u.abrupt("return");
            case 8:
              if (a !== "MANUAL") {
                u.next = 10;
                break;
              }
              throw new U("Manual Subscription is not enabled for your Organization. Please contact support.", "1208");
            case 10:
              this.viewMode = a, a === "PAGINATED" ? (this.currentPage = 1, l(this, _e)[_e].getValue("peerSessionStore").emit(H.UPDATE_ACTIVE, { page: this.currentPage })) : a === "ACTIVE_GRID" && (this.currentPage = 0, l(this, _e)[_e].getValue("peerSessionStore").emit(H.UPDATE_ACTIVE)), this.emit("viewModeChanged", { viewMode: a, currentPage: this.currentPage, pageCount: this.pageCount });
            case 13:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "subscribe", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c = arguments;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (s = c.length > 1 && c[1] !== void 0 ? c[1] : ["audio", "video", "screenshareAudio", "screenshareVideo"], this.viewMode === "MANUAL") {
                h.next = 3;
                break;
              }
              throw new U("MANUAL subscription mode was not activated.", "1206");
            case 3:
              return u = [], a.forEach(function(v) {
                var f = i.joined.get(v);
                if (f) {
                  if (s.includes("audio")) {
                    f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { audio: !0 }), i.videoSubscribed.add(f);
                    var g = f.producers.find(function(S) {
                      return S.kind === "audio" && !S.screenShare;
                    });
                    g && u.push(g);
                  }
                  if (s.includes("video")) {
                    f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { video: !0 }), i.audioSubscribed.add(f);
                    var k = f.producers.find(function(S) {
                      return S.kind === "video" && !S.screenShare;
                    });
                    k && u.push(k);
                  }
                  if (s.includes("screenshareAudio")) {
                    f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { screenshareAudio: !0 });
                    var y = f.producers.find(function(S) {
                      return S.kind === "audio" && S.screenShare;
                    });
                    u.push(y);
                  }
                  if (s.includes("screenshareVideo")) {
                    f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { screenshareVideo: !0 });
                    var b = f.producers.find(function(S) {
                      return S.kind === "video" && S.screenShare;
                    });
                    u.push(b);
                  }
                }
              }), h.next = 7, l(this, ra)[ra].createConsumers(u);
            case 7:
            case "end":
              return h.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "unsubscribe",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        var i = this, s, u, c = arguments;
        return p().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (s = c.length > 1 && c[1] !== void 0 ? c[1] : ["audio", "video", "screenshareAudio", "screenshareVideo"], this.viewMode === "MANUAL") {
                  h.next = 3;
                  break;
                }
                throw new U("MANUAL subscription mode was not activated.", "1206");
              case 3:
                return u = [], a.forEach(function(v) {
                  var f = i.joined.get(v);
                  if (f) {
                    if (s.includes("audio")) {
                      f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { audio: !1 });
                      var g = f.producers.find(function(S) {
                        return S.kind === "audio" && !S.screenShare;
                      });
                      g && u.push(g);
                    }
                    if (s.includes("video")) {
                      f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { video: !1 });
                      var k = f.producers.find(function(S) {
                        return S.kind === "video" && !S.screenShare;
                      });
                      k && u.push(k);
                    }
                    if (s.includes("screenshareAudio")) {
                      f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { screenshareAudio: !1 });
                      var y = f.producers.find(function(S) {
                        return S.kind === "audio" && S.screenShare;
                      });
                      u.push(y);
                    }
                    if (s.includes("screenshareVideo")) {
                      f.manualProducerConfig = N(N({}, f.manualProducerConfig), {}, { screenshareVideo: !1 });
                      var b = f.producers.find(function(S) {
                        return S.kind === "video" && S.screenShare;
                      });
                      u.push(b);
                    }
                  }
                }), h.next = 7, l(this, ra)[ra].closeConsumers(u);
              case 7:
              case "end":
                return h.stop();
            }
        }, n, this);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // NOTE(itzmanish): hive systems specific code
  }, { key: "getPeerIdsForCurrentPage", value: function() {
    var r = this;
    this.logger.info("DyteParticipants::getPeerIdsForCurrentPage()", { pageNavigation: { viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } });
    var n = this.selectedPeers.compulsoryPeers, a = n.filter(function(d) {
      return r.joined.has(d);
    }), i = Array.from(this.pinned.keys()).filter(function(d) {
      return !a.includes(d);
    }), s = Array.from(this.joined.toArray().filter(function(d) {
      return d.stageStatus === "ON_STAGE";
    }).map(function(d) {
      return d.id;
    })), u = Math.max((this.currentPage - 1) * (this.maxActiveParticipantsCount - a.length - i.length)), c = this.currentPage * (this.maxActiveParticipantsCount - a.length - i.length);
    return a.concat(i, s.slice(u, c));
  } }, { key: "setPage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.logger.info("DyteParticipants::set_page", { pageNavigation: { settingPage: a, viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), this.viewMode === "PAGINATED") {
                s.next = 3;
                break;
              }
              return s.abrupt("return");
            case 3:
              if (Number.isInteger(a)) {
                s.next = 6;
                break;
              }
              throw this.logger.error("DyteParticipants::invalid_page_number"), new U("Invalid page: ".concat(a, ". Page must be an integer and greater than 0 and less than or equal to .pageCount"), "1202");
            case 6:
              this.currentPage = a, l(this, _e)[_e].getValue("peerSessionStore").emit(H.UPDATE_ACTIVE, { page: a }), this.emit("pageChanged", { viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount });
            case 9:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableAllAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.logger.info("DyteParticipants::disable_all_audio", { actions: { disableAllAudio: { allowUnmute: a } } }), l(this, bi)[bi]) {
                s.next = 3;
                break;
              }
              throw new U("Can`t disable all audio without joining room", "1205");
            case 3:
              if (!l(this, na)[na].permissions.canAllowParticipantAudio) {
                s.next = 5;
                break;
              }
              return s.abrupt("return", l(this, ra)[ra].muteAll(a));
            case 5:
              throw this.logger.error("DyteParticipants::unauthorized_disable_all_audio", { actions: { disableAllAudio: { allowUnmute: a } } }), new U("Unauthorized: User does not have permission to disable peer audio.", "1201");
            case 7:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableAllVideo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (this.logger.info("DyteParticipants::disable_all_video"), l(this, bi)[bi]) {
                i.next = 3;
                break;
              }
              throw new U("Can`t disable all video without joining room", "1205");
            case 3:
              if (!l(this, na)[na].permissions.canAllowParticipantVideo) {
                i.next = 5;
                break;
              }
              return i.abrupt("return", l(this, ra)[ra].muteAllVideo());
            case 5:
              throw this.logger.error("DyteParticipants::unauthorized_disable_all_video"), new U("Unauthorized: User does not have permission to disable peer video.", "1201");
            case 7:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              this.joined.get(a).disableAudio();
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableVideo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              this.joined.get(a).disableVideo();
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "kick", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, _e)[_e].getValue("peerSessionStore").emitAsync(H.KICK_PEER, { peerId: a });
            case 2:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "kickAll", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.logger.info("DyteParticipants::kick_all"), a = l(this, _e)[_e].getValue("viewType"), !(a !== "LIVESTREAM" && !l(this, ta)[ta])) {
                u.next = 4;
                break;
              }
              throw new U("Can`t kick all without joining room", "1205");
            case 4:
              if (l(this, na)[na].permissions.kickParticipant) {
                u.next = 7;
                break;
              }
              throw this.logger.error("DyteParticipants::unauthorized_kick_all"), new U("Unauthorized: User does not have permission to kick peers.", "1201");
            case 7:
              i = l(this, _e)[_e].getValue("flagsmith").hasFeature(ve.PROPAGATE_KICK_ALL), l(this, wr)[wr].kickAll(i);
            case 9:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "broadcastMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (this.logger.info("DyteParticipants::broadcastMessage"), l(this, ta)[ta]) {
                d.next = 3;
                break;
              }
              throw new U("Can`t broadcast message without joining room", "1205");
            case 3:
              if (a != null && a.trim()) {
                d.next = 5;
                break;
              }
              throw new U("`type` must be a non-empty string.", "1209");
            case 5:
              if (!s) {
                d.next = 17;
                break;
              }
              if (!("meetingIds" in s)) {
                d.next = 11;
                break;
              }
              return d.next = 9, l(this, wr)[wr].broadcastToMeetings(a, s.meetingIds, i);
            case 9:
              d.next = 15;
              break;
            case 11:
              return u = [], "participantIds" in s ? u = s.participantIds : u = this.joined.toArray().filter(function(h) {
                var v;
                return (v = s.presetNames) === null || v === void 0 ? void 0 : v.includes(h.presetName);
              }).map(function(h) {
                return h.id;
              }), d.next = 15, l(this, wr)[wr].broadcastToPeers(a, u, i);
            case 15:
              d.next = 19;
              break;
            case 17:
              return d.next = 19, l(this, wr)[wr].broadcastMessage(a, i);
            case 19:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAllJoinedPeers", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return d.next = 2, l(this, wr)[wr].getRoomPeers(a, i, s);
            case 2:
              return u = d.sent, d.abrupt("return", u.peers.map(ei.formatSocketServiceMessage));
            case 4:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updatePermissions", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (s = this.joined.toArray().filter(function(h) {
                return a.includes(h.id);
              }).map(function(h) {
                return h.userId;
              }), u = ke(new Set(s)), u.length) {
                d.next = 4;
                break;
              }
              throw new U("Cannot update permissions, no valid userIDs found", "1204");
            case 4:
              l(this, wr)[wr].updatePermissions(u, i);
            case 5:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getParticipantsInMeetingPreJoin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", l(this, wr)[wr].getRoomPeersNonPaginated());
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(an));
function R_() {
  return l(this, _e)[_e].getValue("roomNodeClient");
}
function A_() {
  var o;
  return ((o = l(this, _e)[_e].getValue("connectionHandler")) === null || o === void 0 ? void 0 : o.socketJoined) === !0;
}
function I_() {
  var o;
  return ((o = l(this, _e)[_e].getValue("connectionHandler")) === null || o === void 0 ? void 0 : o.mediaJoined) === !0;
}
un([D.trace("DyteParticipants.setViewMode")], St.prototype, "setViewMode", 1);
un([D.trace("DyteParticipants.setPage")], St.prototype, "setPage", 1);
un([D.trace("DyteParticipants.disableAllAudio")], St.prototype, "disableAllAudio", 1);
un([D.trace("DyteParticipants.disableAllVideo")], St.prototype, "disableAllVideo", 1);
un([D.trace("DyteParticipants.disablePeerAudio")], St.prototype, "disableAudio", 1);
un([D.trace("DyteParticipants.disablePeerVideo")], St.prototype, "disableVideo", 1);
un([D.trace("DyteParticipants.kickPeer")], St.prototype, "kick", 1);
un([D.trace("DyteParticipants.kickAll")], St.prototype, "kickAll", 1);
un([D.trace("DyteParticipants.broadcastMessage"), Nt(zo, "rateLimitConfig")], St.prototype, "broadcastMessage", 1);
un([D.trace("DyteParticipants.getAllJoinedPeers"), Nt({ maxInvocations: 10, period: 60 })], St.prototype, "getAllJoinedPeers", 1);
un([D.trace("DyteParticipant.updatePermissions"), Nt({ maxInvocations: 1e3, period: 60 })], St.prototype, "updatePermissions", 1);
un([D.trace("DyteParticipants.getParticipantsInMeetingPreJoin")], St.prototype, "getParticipantsInMeetingPreJoin", 1);
St = un([vt("1200")], St);
var Go = /* @__PURE__ */ function(o) {
  return o.NEW = "new", o.CONNECTING = "connecting", o.RECONNECTING = "reconnecting", o.DISCONNECTED = "disconnected", o.CONNECTED = "connected", o.FAILED = "failed", o.CLOSED = "closed", o;
}(Go || {}), Mr = /* @__PURE__ */ function(o) {
  return o[o.HIVE = 1] = "HIVE", o[o.ROOM_NODE = 2] = "ROOM_NODE", o[o.CF = 3] = "CF", o;
}(Mr || {}), __ = Object.defineProperty, M_ = Object.getOwnPropertyDescriptor, po = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? M_(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && __(e, r, a), a;
}, Ao = (It = /* @__PURE__ */ E("currentView"), _t = /* @__PURE__ */ E("videoSubscribersSynced"), Mt = /* @__PURE__ */ E("audioSubscribersSynced"), aa = /* @__PURE__ */ E("consumersSyncing"), Ti = /* @__PURE__ */ E("resyncRequired"), /* @__PURE__ */ function() {
  function o(t, e, r, n) {
    var a = this;
    w(this, o), this.participants = void 0, this.self = void 0, this.selectedPeers = Tg, this.maxSpatialLayerUpdates = /* @__PURE__ */ new Map(), this.consumerPeerMap = void 0, this.events = void 0, this.roomSocketHandler = void 0, this.context = void 0, this.videoPeerConsumerMap = /* @__PURE__ */ new Map(), Object.defineProperty(this, It, { writable: !0, value: { mode: "ACTIVE_GRID", page: 0 } }), Object.defineProperty(this, _t, { writable: !0, value: void 0 }), Object.defineProperty(this, Mt, { writable: !0, value: void 0 }), Object.defineProperty(this, aa, { writable: !0, value: !1 }), Object.defineProperty(this, Ti, { writable: !0, value: !1 }), this.updateConsumerSpatialLayers = jp(function() {
      var s = {}, u = new Map(a.maxSpatialLayerUpdates);
      a.maxSpatialLayerUpdates.clear(), Array.from(u.entries()).forEach(function(c) {
        var d = Me(c, 2), h = d[0], v = d[1];
        s[v] === void 0 && (s[v] = { layer: v, consumerIds: [] }), s[v].consumerIds.push(h);
      }), Object.keys(s).forEach(function(c) {
        var d = s[c];
        a.logger.log("Switching max spatial layer to ".concat(d.layer), { consumerIds: d.consumerIds }), a.roomNodeClient.switchConsumersToLayer(d.consumerIds, d.layer);
      });
    }, 2e3), this.updateConsumers = /* @__PURE__ */ function() {
      var s = m(/* @__PURE__ */ p().mark(function u(c, d) {
        return p().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                if (v.prev = 0, c.length === 0) {
                  v.next = 5;
                  break;
                }
                return a.logger.info("Queueing create consumers for producers", { producers: c }), v.next = 5, a.roomNodeClient.createConsumers(c);
              case 5:
                v.next = 10;
                break;
              case 7:
                v.prev = 7, v.t0 = v.catch(0), a.logger.error("Error activating peers", { error: v.t0 });
              case 10:
                if (v.prev = 10, d.length === 0) {
                  v.next = 15;
                  break;
                }
                return a.logger.info("Queueing close consumers for producers", { producers: d }), v.next = 15, a.roomNodeClient.closeConsumers(d);
              case 15:
                v.next = 20;
                break;
              case 17:
                v.prev = 17, v.t1 = v.catch(10), a.logger.error("Error deactivating peers", { error: v.t1 });
              case 20:
              case "end":
                return v.stop();
            }
        }, u, null, [[0, 7], [10, 17]]);
      }));
      return function(u, c) {
        return s.apply(this, arguments);
      };
    }(), this.context = t;
    var i = t.getValue("logger");
    switch (l(this, _t)[_t] = new Us(i), l(this, Mt)[Mt] = new Us(i), this.roomSocketHandler = r, this.participants = new St(t, e, this.roomSocketHandler), this.self = e, this.consumerPeerMap = /* @__PURE__ */ new Map(), n) {
      case Mr.HIVE: {
        this.events = kn;
        break;
      }
      case Mr.CF: {
        this.events = Un;
        break;
      }
      default:
        this.events = kn;
    }
    e.config.viewType !== "CHAT" && this.setupEventsGlobal(), this.setupEvents();
  }
  return P(o, [{ key: "roomNodeClient", get: function() {
    return this.context.getValue("roomNodeClient");
  } }, { key: "mediaJoined", get: function() {
    var e;
    return ((e = this.roomNodeClient) === null || e === void 0 ? void 0 : e.mediaJoined) === !0;
  } }, { key: "pip", get: function() {
    return this.context.getValue("pip");
  } }, {
    key: "telemetry",
    get: function() {
      return this.context.getValue("telemetry");
    }
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return this.context.getValue("logger");
  } }, {
    key: "setupEvents",
    value: function() {
      var e = this;
      this.roomSocketHandler.on(X.getWaitingRoomRequests, this.waitingRoomRequestHandler.bind(this)), this.context.getValue("peerSessionStore").on(H.SOCKET_PEERS, /* @__PURE__ */ function() {
        var r = m(/* @__PURE__ */ p().mark(function n(a) {
          var i, s;
          return p().wrap(function(c) {
            for (; ; )
              switch (c.prev = c.next) {
                case 0:
                  i = e.context.getValue("flagsmith").hasFeature(ve.DEBUG_SOCKET_JOIN), i && (s = a && (a == null ? void 0 : a.length) < 20 ? { peers: JSON.stringify(a.map(function(d) {
                    return d.peerId;
                  })) } : void 0, e.logger.info("Processing socket peers", s)), a == null || a.forEach(function(d) {
                    d.waitlisted || e.onParticipantJoined(e.fromSocketService(d));
                  }), i && e.logger.info("Processed socket peers");
                case 4:
                case "end":
                  return c.stop();
              }
          }, n);
        }));
        return function(n) {
          return r.apply(this, arguments);
        };
      }()), this.roomSocketHandler.on(this.events.peerJoinedBroadcast, function(r) {
        var n = r.participant;
        e.context.getValue("flagsmith").hasFeature(ve.DEBUG_SOCKET_JOIN) && e.logger.info("events.peerJoinedBroadcast", { peers: n.peerId }), e.onMediaJoined(n.peerId, n.producerStates, n.capabilities);
      }), this.roomSocketHandler.on(this.events.selfJoinComplete, function(r) {
        var n = r.participants, a = r.selectedPeers, i = r.roomState;
        if (e.context.getValue("flagsmith").hasFeature(ve.DEBUG_SOCKET_JOIN)) {
          var s = n && (n == null ? void 0 : n.length) < 20 ? { peers: JSON.stringify(n.map(function(h) {
            return h.peerId;
          })) } : void 0;
          e.logger.info("events.selfJoinComplete", s);
        }
        n.forEach(function(h) {
          var v = h.peerId, f = h.producerStates, g = h.capabilities;
          return e.onMediaJoined(v, f, g);
        });
        var u = a != null ? a : {}, c = u.audioPeers, d = u.compulsoryPeers;
        i.pinnedPeerIds.length !== 0 && e.onParticipantPinned(i.pinnedPeerIds[0]), e.computeActivateParticipants(c != null ? c : [], d), e.context.getValue("peerSessionStore").emit(H.UPDATE_ACTIVE, { createAllConsumers: !0 });
      }), this.context.getValue("peerSessionStore").on(H.MAX_SPATIAL_LAYER_CHANGE, function(r) {
        var n = r.peerId, a = r.maxSpatialLayer, i = e.videoPeerConsumerMap.get(n);
        i && (e.maxSpatialLayerUpdates.set(i, a), e.updateConsumerSpatialLayers());
      }), this.context.getValue("peerSessionStore").on(H.NEW_PRODUCER, function(r) {
        var n = r.peerId, a = r.producer, i = e.participants.joined.get(n);
        if (!i) {
          e.logger.warn("ParticipantController::NEW_PRODUCER::participant not found", { producer: { id: a == null ? void 0 : a.producerId, kind: a == null ? void 0 : a.kind, status: "UNKNOWN", appData: { screenShare: a == null ? void 0 : a.screenShare } }, dyteParticipant: { id: n } });
          return;
        }
        if (i.producers.push(a), e.logger.info("ParticipantController::NEW_PRODUCER::producer_added_to_participant", { producer: { id: a == null ? void 0 : a.producerId, peerId: n, kind: a == null ? void 0 : a.kind, status: "UNKNOWN", appData: { screenShare: a == null ? void 0 : a.screenShare } } }), e.participants.viewMode === "MANUAL") {
          var s = !1, u = a.kind === "audio", c = a.kind === "video", d = i.manualProducerConfig;
          (u && (d.audio && !a.screenShare || d.screenshareAudio && a.screenShare) || c && (d.video && !a.screenShare || d.screenshareVideo && a.screenShare)) && (s = !0), s ? e.roomNodeClient.createConsumers([a]) : e.logger.info("ParticipantController::NEW_PRODUCER::not_consuming_producer", { producer: { id: a == null ? void 0 : a.producerId, peerId: n, kind: a == null ? void 0 : a.kind, status: "UNKNOWN", appData: { screenShare: a == null ? void 0 : a.screenShare } } });
          return;
        }
        (a == null ? void 0 : a.kind) === "audio" && e.participants.audioSubscribed.get(n) || (a == null ? void 0 : a.kind) === "video" && e.participants.videoSubscribed.get(n) || a != null && a.screenShare ? e.roomNodeClient.createConsumers([a]).catch(function(h) {
          e.logger.error("ParticipantController::createConsumer failed", { error: h });
        }) : e.logger.info("ParticipantController::NEW_PRODUCER::not_consuming_producer", { producer: { id: a == null ? void 0 : a.producerId, peerId: n, kind: a == null ? void 0 : a.kind, status: "UNKNOWN", appData: { screenShare: a == null ? void 0 : a.screenShare } } });
      }), this.context.getValue("peerSessionStore").on(H.PRODUCER_CLOSED, function(r) {
        var n = r.peerId, a = r.producerId, i = e.participants.joined.get(n);
        if (!i) {
          e.logger.warn("ParticipantController::NEW_PRODUCER::participant not found", { dyteParticipant: { id: n } });
          return;
        }
        i.producers = i.producers.filter(function(s) {
          return s.producerId !== a;
        });
      }), this.context.getValue("peerSessionStore").on(H.PRODUCER_TOGGLE, function(r) {
        var n = r.peerId, a = r.producerId, i = r.paused, s = r.kind, u = e.participants.joined.get(n);
        if (u) {
          s === "audio" && u.setAudioEnabled(!i);
          var c = u.producers.find(function(d) {
            return d.producerId === a;
          });
          c && (c.pause = i);
        }
      }), this.roomSocketHandler.on(this.events.globalPeerPinBroadcast, function(r) {
        var n;
        if (r && (n = r.participantId), !!e.mediaJoined) {
          var a = n;
          e.onParticipantPinned(a);
          var i = e.participants.joined.get(a);
          i && e.roomNodeClient.activatePeers(i.producers).catch(function(s) {
            e.logger.error("unable to create consumers", { error: s });
          });
        }
      }), this.roomSocketHandler.on(this.events.selectedPeer, function(r) {
        var n = r.audioPeers, a = r.compulsoryPeers;
        e.mediaJoined && e.onSelectedPeers(a.concat(n));
      }), this.roomSocketHandler.on(this.events.selectedPeerDiff, function(r) {
        var n = r.entries;
        if (e.mediaJoined) {
          var a = n.map(function(i) {
            return { peerId: i.peerId, priority: i.priority };
          });
          e.updateActiveParticipantsWithPriorities(a, !0);
        }
      });
    }
    /**
    * Socket Service only
    */
  }, { key: "waitingRoomRequestHandler", value: function(e) {
    var r = this, n = e.requests.filter(function(i) {
      return !r.participants.waitlisted.toArray().find(function(s) {
        return s.userId === i.userId;
      });
    }), a = this.participants.waitlisted.toArray().filter(function(i) {
      return !e.requests.find(function(s) {
        return s.userId === i.userId;
      });
    });
    n.forEach(function(i) {
      return r.participants.waitlisted.add(new Xa(r.context, { id: i.peerId, displayName: i.displayName, audioMuted: !0, videoEnabled: !1, audioTrack: void 0, videoTrack: void 0, stageStatus: "OFF_STAGE", userId: i.userId, flags: {}, isHost: !1, customParticipantId: i.customParticipantId, picture: i.picture, metadata: { preset_name: i.presetName } }, r.self, r.roomSocketHandler));
    }), a.forEach(function(i) {
      return r.participants.waitlisted.delete(i.id);
    });
  } }, { key: "maxPreferredStreams", get: function() {
    return this.participants.maxActiveParticipantsCount;
  } }, { key: "selectPagePeers", value: function(e) {
    var r = this, n = this.selectedPeers.compulsoryPeers, a = n.filter(function(h) {
      return r.participants.joined.has(h);
    }), i = Array.from(this.participants.pinned.keys()).filter(function(h) {
      return !a.includes(h);
    }), s = Array.from(this.participants.joined.toArray().filter(function(h) {
      return h.stageStatus === "ON_STAGE";
    }).map(function(h) {
      return h.id;
    })), u = Math.max((e - 1) * (this.maxPreferredStreams - a.length - i.length)), c = e * (this.maxPreferredStreams - a.length - i.length), d = a.concat(i, s.slice(u, c));
    return d;
  } }, { key: "selectActivePeers", value: function(e) {
    var r = this, n = /* @__PURE__ */ new Map(), a = Array.from(this.participants.joined.toArray().filter(function(g) {
      return g.stageStatus === "ON_STAGE";
    }).map(function(g) {
      return n.set(g.id, !0), g.id;
    })), i = this.selectedPeers.peers, s = this.participants.pinned.toArray().reduce(function(g, k) {
      return k.stageStatus !== "ON_STAGE" ? r.participants.pinned.delete(k.id) : g.push(k.id), g;
    }, []), u = this.self.stageStatus === "ON_STAGE" ? 1 : 0, c = e - u, d = new Set(i.concat(s).filter(function(g) {
      return g !== r.self.id && n.has(g);
    })), h = Array.from(d), v = c - d.size;
    if (v >= 0) {
      var f = a.filter(function(g) {
        return !d.has(g) && g !== r.self.id;
      }).slice(0, v);
      h = Array.from(d).concat(f);
    } else
      h = h.slice(0, c);
    return h;
  } }, { key: "updateSubscriptions", value: function(e, r) {
    var n = this, a = r != null ? r : {}, i = a.page, s = a.createAllConsumers;
    e && l(this, It)[It].mode !== e && (l(this, It)[It].mode = e), i && l(this, It)[It].page !== i && (l(this, It)[It].page = i);
    var u = l(this, It)[It], c = u.mode, d = u.page;
    switch (s && (l(this, _t)[_t].clear(), l(this, Mt)[Mt].clear()), c) {
      case "PAGINATED": {
        if (!d)
          return;
        var h = this.selectPagePeers(d), v = this.selectActivePeers(this.participants.maxActiveParticipantsCount + 4);
        this.updateParticipantsMap(this.participants.videoSubscribed, h), this.updateParticipantsMap(this.participants.audioSubscribed, v), this.logger.debug("ParticipantController::updateActive::updating_current_page_peers", { peerIds: h });
        break;
      }
      case "ACTIVE_GRID": {
        var f = this.selectActivePeers(this.participants.maxActiveParticipantsCount), g = this.selectActivePeers(this.participants.maxActiveParticipantsCount + 4);
        this.updateParticipantsMapMinReplacement(this.participants.videoSubscribed, f), this.updateParticipantsMap(this.participants.audioSubscribed, g);
        break;
      }
      default:
        throw new Error("View mode ".concat(e, " not supported"));
    }
    setTimeout(function() {
      return n.syncConsumers();
    }, l(this, It)[It].mode === "PAGINATED" && !l(this, aa)[aa] ? 200 : 0);
  } }, { key: "syncConsumers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a = this, i, s, u, c, d, h, v, f, g, k, y, b, S, T, A, L, I, M, V, j, $, O, B, Q;
      return p().wrap(function(z) {
        for (; ; )
          switch (z.prev = z.next) {
            case 0:
              if (((n = this.context.getValue("connectionHandler")) === null || n === void 0 || (n = n.mediaState) === null || n === void 0 || (n = n.recv) === null || n === void 0 ? void 0 : n.state) === "connected") {
                z.next = 2;
                break;
              }
              return z.abrupt("return");
            case 2:
              if (!l(this, aa)[aa]) {
                z.next = 5;
                break;
              }
              return l(this, Ti)[Ti] = !0, z.abrupt("return");
            case 5:
              if (l(this, aa)[aa] = !0, l(this, Ti)[Ti] = !1, i = [], s = [], this.context.getValue("flagsmith").hasFeature(ve.NEW_SYNC_CONSUMERS) ? (u = [], c = this.participants.videoSubscribed.toArray().reduce(function(q, te) {
                return te.videoEnabled ? (u.push(te.id), q.set(te.id, te)) : q;
              }, /* @__PURE__ */ new Map()), d = [], h = this.participants.audioSubscribed.toArray().reduce(function(q, te) {
                return te.audioEnabled ? (d.push(te.id), q.set(te.id, te)) : q;
              }, /* @__PURE__ */ new Map()), v = Ao.mapDiff(l(this, _t)[_t], c), f = Me(v, 2), g = f[0], k = f[1], this.updateParticipantsMap(l(this, _t)[_t], u), y = Ao.mapDiff(l(this, Mt)[Mt], h), b = Me(y, 2), S = b[0], T = b[1], this.updateParticipantsMap(l(this, Mt)[Mt], d), A = k.filter(function(q) {
                return !a.participants.videoSubscribed.get(q);
              }), L = T.filter(function(q) {
                return !a.participants.audioSubscribed.get(q);
              }), i = [].concat(ke(this.mapPeerIdsToProducers(g, ["video"])), ke(this.mapPeerIdsToProducers(S, ["audio"]))), s = [].concat(ke(this.mapPeerIdsToProducers(A, ["video"])), ke(this.mapPeerIdsToProducers(L, ["audio"])))) : (I = Ao.mapDiff(l(this, _t)[_t], this.participants.videoSubscribed), M = Me(I, 2), V = M[0], j = M[1], this.updateParticipantsMap(l(this, _t)[_t], this.participants.videoSubscribed.toArray().filter(function(q) {
                var te = q.videoEnabled;
                return !!te;
              }).map(function(q) {
                var te = q.id;
                return te;
              })), $ = Ao.mapDiff(l(this, Mt)[Mt], this.participants.audioSubscribed), O = Me($, 2), B = O[0], Q = O[1], this.updateParticipantsMap(l(this, Mt)[Mt], this.participants.audioSubscribed.toArray().filter(function(q) {
                var te = q.audioEnabled;
                return !!te;
              }).map(function(q) {
                var te = q.id;
                return te;
              })), i = [].concat(ke(this.mapPeerIdsToProducers(V, ["video"])), ke(this.mapPeerIdsToProducers(B, ["audio"]))), s = [].concat(ke(this.mapPeerIdsToProducers(j, ["video"])), ke(this.mapPeerIdsToProducers(Q, ["audio"])))), z.prev = 10, !(i.length > 0 || s.length > 0)) {
                z.next = 14;
                break;
              }
              return z.next = 14, this.updateConsumers(i, s);
            case 14:
              return z.prev = 14, l(this, aa)[aa] = !1, z.finish(14);
            case 17:
              l(this, Ti)[Ti] && this.syncConsumers();
            case 18:
            case "end":
              return z.stop();
          }
      }, r, this, [[10, , 14, 17]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "computeActivateParticipants", value: function(e, r) {
    var n = e.map(function(i, s) {
      return { peerId: i, priority: s + 1 };
    }), a = r == null ? void 0 : r.map(function(i, s) {
      return { peerId: i, priority: -(s + 1) };
    });
    n.push.apply(n, ke(a != null ? a : [])), n.length > 0 && this.updateActiveParticipantsWithPriorities(n);
  } }, { key: "fromSocketService", value: function(e) {
    var r = Ao.formatSocketServiceMessage(e);
    return new Xa(this.context, N(N({}, r), {}, { isHost: !1, videoEnabled: !1, audioMuted: !0, videoTrack: void 0, audioTrack: void 0 }), this.self, this.roomSocketHandler);
  } }, { key: "updatePipSource", value: function(e, r) {
    var n, a;
    r ? (n = this.pip) === null || n === void 0 || n.enableSource(e) : (a = this.pip) === null || a === void 0 || a.disableSource(e);
  } }, {
    key: "onMediaJoined",
    value: function(e, r, n) {
      var a = this;
      if (this.mediaJoined && e !== this.self.id) {
        var i = this.participants.joined.get(e);
        if (!i) {
          this.logger.warn("Received media.peerJoinedBroadcast for non-existent peer ".concat(e));
          return;
        }
        r.forEach(function(s) {
          s.kind === va.AUDIO && !s.screenShare ? i.setAudioEnabled(!s.pause) : s.kind === va.VIDEO && !s.screenShare && (i.setVideoEnabled(!s.pause), a.updatePipSource(i.id, !s.pause)), i.producers.push(N(N({}, s), {}, { producingTransportId: s.producingTransportId, kind: s.kind === va.AUDIO ? "audio" : "video", producingPeerId: e, mimeType: s.mimeType }));
        }), this.roomNodeClient.handlePeerCapabilities(e, n), this.context.getValue("flagsmith").hasFeature(ve.FORCE_VIDEO_CODEC) || this.roomNodeClient.shareWebcam(this.self.videoTrack), this.context.getValue("peerSessionStore").emit(H.UPDATE_ACTIVE);
      }
    }
    /**
    	* NOTE(roerohan): The following piece of code updates .active and ensures that the positions
    	* in the peer map are not affected by the order of the peerIds
    	* sent in the input. If a participant is present in the 3rd position in the
    	* map, and room node sends the peerId in the 2nd position, the participant
    	* should remain in the 3rd position.
    */
  }, { key: "updateParticipantsMapMinReplacement", value: function(e, r) {
    var n = this, a = Array.from(e.keys()), i = new Map(e), s = new Set(r), u = [];
    a.forEach(function(c, d) {
      (!s.has(c) || !n.participants.joined.get(c)) && u.push(d);
    }), r.forEach(function(c) {
      if (!e.get(c)) {
        if (a.length < r.length) {
          a.push(c);
          return;
        }
        var d = u.shift();
        a[d] = c;
      }
    }), u.forEach(function(c) {
      a.splice(c, 1);
    }), Array.from(e.keys()).forEach(function(c) {
      e.delete(c, !s.has(c));
    }), a.forEach(function(c) {
      if (!n.participants.joined.get(c)) {
        n.logger.warn("updateActiveParticipants::participant_not_in_joined_list", { dyteParticipant: { id: c } });
        return;
      }
      e.add(n.participants.joined.get(c), !i.get(c));
    }), e.emit("participantsUpdate");
  } }, { key: "updateParticipantsMap", value: function(e, r) {
    var n = this, a = Array.from(e.keys());
    a.forEach(function(i) {
      r.includes(i) || e.delete(i, !0);
    }), r.forEach(function(i) {
      e.get(i) || e.add(n.participants.joined.get(i), !0);
    }), e.emit("participantsUpdate");
  } }, { key: "updatePinnedParticipants", value: function() {
    var e = this;
    this.participants.pinned.forEach(function(r) {
      r.setIsPinned(!1), e.participants.pinned.delete(r.id);
    });
  } }, { key: "setupEventsGlobal", value: function() {
    var e = this;
    this.roomSocketHandler.on(X.joinRoom, function(r) {
      var n = r.peer;
      if (!n.waitlisted) {
        var a = e.context.getValue("flagsmith").hasFeature(ve.DEBUG_SOCKET_JOIN);
        a && e.logger.info("Processing socket join", { peers: n.peerId }), e.onParticipantJoined(e.fromSocketService(n)), a && e.logger.info("Processed socket join", { peers: n.peerId });
      }
    }), this.roomSocketHandler.on(X.leaveRoom, function(r) {
      var n = r.peer.peerId;
      e.selectedPeers.delete(n, e.context), e.onParticipantLeave(n);
    }), this.context.getValue("peerSessionStore").on(H.SOCKET_SERVICE_ROOM_JOINED, function() {
      e.self.permissions.acceptWaitingRequests && e.roomSocketHandler.getWaitingRoomRequests();
    }), this.self.permissions.on("permissionsUpdate", function(r) {
      var n = r.acceptWaitingRequests;
      n !== void 0 && (n ? e.roomSocketHandler.getWaitingRoomRequests() : e.participants.waitlisted.clear());
    }), this.context.getValue("peerSessionStore").on(H.SOCKET_SERVICE_DISCONNECTED, function() {
      e.participants.joined.clear(), e.participants.videoSubscribed.clear(), e.participants.audioSubscribed.clear(), e.participants.pinned.clear(), e.participants.currentPage = 0, e.participants.viewMode = "ACTIVE_GRID", e.participants.emit("viewModeChanged", { viewMode: "ACTIVE_GRID", currentPage: e.participants.currentPage, pageCount: e.participants.pageCount });
    }), this.context.getValue("peerSessionStore").on(H.CONSUMER_PAUSED, function(r) {
      var n = r.id;
      e.processConsumerPaused(n);
    }), this.context.getValue("peerSessionStore").on(H.CONSUMER_RESUMED, function(r) {
      var n = r.id;
      e.processConsumerResumed(n);
    }), this.context.getValue("peerSessionStore").on(H.NEW_CONSUMER, function(r) {
      var n = r.id;
      e.processNewConsumer(n);
    }), this.context.getValue("peerSessionStore").on(H.CONSUMER_CLOSED, function(r) {
      var n = r.id;
      e.processConsumerClosed(n);
    }), this.context.getValue("peerSessionStore").on(H.ROOM_MESSAGE, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s, u;
        return p().wrap(function(d) {
          for (; ; )
            switch (d.prev = d.next) {
              case 0:
                i = a.payload, s = a.type, u = a.timestamp, e.participants.emit("broadcastedMessage", { type: s, payload: i, timestamp: u });
              case 2:
              case "end":
                return d.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), this.context.getValue("peerSessionStore").on(H.MESSAGE, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s, u;
        return p().wrap(function(d) {
          for (; ; )
            switch (d.prev = d.next) {
              case 0:
                if (i = a.payload, s = a.type, u = a.timestamp, s !== "spotlight") {
                  d.next = 3;
                  break;
                }
                return d.abrupt("return");
              case 3:
                e.participants.emit("broadcastedMessage", { type: s, payload: i, timestamp: u });
              case 4:
              case "end":
                return d.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), this.context.getValue("peerSessionStore").on(H.LOW_CONSUMER_SCORE, function(r) {
      var n = r.peerId, a = r.score, i = r.kind, s = e.participants.joined.get(n);
      s && (s.emit("poorConnection", { score: a, kind: i }), e.participants.emit("poorConnection", { participantId: n, score: a, kind: i }));
    }), this.context.getValue("peerSessionStore").on(H.CONSUMER_SCORE_UPDATE, function(r) {
      var n, a = r.score, i = r.kind, s = r.appData, u = r.peerId, c = r.scoreStats, d = i === "video" && ((n = s == null ? void 0 : s.screenShare) !== null && n !== void 0 ? n : !1), h = e.participants.joined.get(u);
      h && (h.emit("mediaScoreUpdate", { kind: i, isScreenshare: d, score: a, participantId: u, scoreStats: c }), e.participants.emit("mediaScoreUpdate", { kind: i, isScreenshare: d, score: a, participantId: u, scoreStats: c }));
    }), this.context.getValue("peerSessionStore").onAsync(H.KICK_PEER, /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                return i = a.peerId, s = e.participants.joined.get(i), e.roomNodeClient.kick(i), c.next = 5, e.roomSocketHandler.kick(i);
              case 5:
                s ? s.emit("kicked") : e.participants.joined.emit("kicked", { id: i });
              case 6:
              case "end":
                return c.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), this.context.getValue("peerSessionStore").on(H.UPDATE_ACTIVE, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s = arguments;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              n = s.length > 0 && s[0] !== void 0 ? s[0] : {}, a = n.page, i = n.createAllConsumers, e.updateSubscriptions(a ? "PAGINATED" : "ACTIVE_GRID", { page: a, createAllConsumers: i });
            case 2:
            case "end":
              return c.stop();
          }
      }, r);
    })));
  } }, { key: "onParticipantPinned", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n) {
                s.next = 4;
                break;
              }
              return this.self.isPinned && this.self.setIsPinned(!1), this.participants.pinned.size !== 0 && this.updatePinnedParticipants(), s.abrupt("return");
            case 4:
              if (n !== this.self.id) {
                s.next = 8;
                break;
              }
              return this.participants.pinned.size !== 0 && this.updatePinnedParticipants(), this.self.setIsPinned(!0), s.abrupt("return");
            case 8:
              a = this.participants.joined.get(n), this.self.isPinned && this.self.setIsPinned(!1), this.updatePinnedParticipants(), a.setIsPinned(!0), this.participants.pinned.add(a);
            case 13:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onParticipantJoined", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              this.self.id !== n.id && !((a = n.flags) !== null && a !== void 0 && a.recorder) && !((i = n.flags) !== null && i !== void 0 && i.hidden_participant) && !((s = n.flags) !== null && s !== void 0 && s.hiddenParticipant) && (this.participants.videoSubscribed.delete(n.id), this.participants.audioSubscribed.delete(n.id), this.participants.joined.add(n), this.participants.waitlisted.delete(n.id), n.stageStatus === "REQUESTED_TO_JOIN_STAGE" && this.context.getValue("peerSessionStore").emit(H.UPDATE_STAGE_REQUESTS, { request: { displayName: n.name, userId: n.userId, peerId: n.id }, add: !0 })), this.context.getValue("peerSessionStore").emit(H.PEER_JOINED_INTERNAL, n);
            case 2:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onParticipantLeave", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              a = this.participants.joined.get(n), this.participants.joined.delete(n, !0, !0), this.participants.pinned.delete(n, !0, !0), this.participants.waitlisted.delete(n, !0, !0), this.roomNodeClient && (this.roomNodeClient.handlePeerLeaving(n), this.roomNodeClient.closeConsumers(a == null ? void 0 : a.producers)), a && a.stageStatus === "REQUESTED_TO_JOIN_STAGE" && this.context.getValue("peerSessionStore").emit(H.UPDATE_STAGE_REQUESTS, { request: { displayName: a.name, userId: a.userId, peerId: a.id }, add: !1 }), i = this.participants.currentPage, s = this.maxPreferredStreams * (i - 1), u = this.participants.videoSubscribed.get(n), s === 0 ? this.participants.setViewMode("ACTIVE_GRID") : this.participants.joined.size <= s ? i === 2 ? this.participants.setViewMode("ACTIVE_GRID") : this.participants.setPage(i - 1) : u && this.updateSubscriptions(i ? "PAGINATED" : "ACTIVE_GRID", { page: i });
            case 10:
            case "end":
              return d.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "processMedia", value: function(e) {
    var r, n = this.roomNodeClient.getConsumers(), a = (r = n.get(e)) !== null && r !== void 0 ? r : {}, i = a.peerId, s = a.kind, u = a.appData, c = a.track, d = a.producerId, h = a.rtpReceiver, v = a.paused, f = a.localId;
    if (!i)
      return this.logger.warn("processMedia::Peer ID is undefined", { consumer: { id: e, kind: s, peerId: i, appData: { supportsRemoteControl: !!(u != null && u.supportsRemoteControl), screenShare: !!(u != null && u.screenShare) }, remotelyPaused: v, producerId: d } }), {};
    var g = u;
    return s === "video" && g.screenShare !== !0 && this.videoPeerConsumerMap.set(i, e), this.logger.info("ParticipantController::processMedia", { consumer: { id: e, peerId: i, kind: s, appData: g, remotelyPaused: v, producerId: d } }), this.consumerPeerMap.set(e, { type: s, peerId: i, appData: g, remotelyPaused: v, producerId: d }), { peerId: i, kind: s, appData: g, remotelyPaused: v, track: c, producerId: d, rtpReceiver: h, localId: f };
  } }, { key: "processConsumerClosed", value: function(e) {
    var r = this, n = this.consumerPeerMap.get(e) || {}, a = n.peerId, i = n.type, s = n.appData, u = n.remotelyPaused, c = n.producerId, d = this.participants.joined.get(a);
    if (this.logger.info("ParticipantController::processConsumerClosed", { consumer: { id: e, peerId: a, appData: s, kind: i, remotelyPaused: u, producerId: c } }), this.consumerPeerMap.delete(e), i === "video" && s.screenShare !== !0 && this.videoPeerConsumerMap.delete(a), !!d) {
      var h = d.producers.find(function(f) {
        return f.producerId === c;
      });
      h && (h.consumer = { id: e, peerId: a, kind: void 0, appData: s, paused: u, producerId: c, rtpReceiver: void 0, localId: void 0 });
      var v = [];
      s && s.screenShare ? (d.setScreenShareEnabled(!1), this.context.getValue("callstats").consumerSharedMediaState(e, { screen: !1 }), d.screenShareTracks.video && v.push(d.screenShareTracks.video.id), d.screenShareTracks.audio && v.push(d.screenShareTracks.audio.id), d.screenShareTracks = { audio: void 0, video: void 0 }) : i === "audio" ? (d.setAudioEnabled(!1), d.audioTrack && v.push(d.audioTrack.id), this.context.getValue("callstats").consumerSharedMediaState(e, { audio: !1 }), d.audioTrack = void 0) : i === "video" && (d.setVideoEnabled(!1), this.updatePipSource(d.id, !1), d.videoTrack && v.push(d.videoTrack.id), this.context.getValue("callstats").consumerSharedMediaState(e, { video: !1 }), d.videoTrack = void 0), s.e2ee && v.forEach(function(f) {
        r.context.getValue("peerSessionStore").emit(H.E2EE_INACTIVE_CONSUMER, { peerId: a, trackId: f });
      });
    }
  } }, { key: "processConsumerResumed", value: function(e) {
    var r = this.processMedia(e), n = r.peerId, a = r.kind, i = r.appData, s = r.track, u = r.remotelyPaused, c = r.producerId, d = r.rtpReceiver, h = r.localId;
    if (n) {
      this.logger.info("ParticipantController::processConsumerResumed", { consumer: { id: e, peerId: n, kind: a, appData: i, remotelyPaused: u, producerId: c } });
      var v = this.participants.joined.get(n);
      if (v) {
        var f = v.producers.find(function(k) {
          return k.producerId === c;
        });
        if (f && (f.consumer = { id: e, peerId: n, kind: a, appData: i, paused: u, producerId: c, rtpReceiver: d, localId: h }), i.e2ee && this.context.getValue("peerSessionStore").emit(H.E2EE_ACTIVE_CONSUMER, { peerId: n, rtpReceiver: d, track: s }), i.screenShare) {
          var g;
          a === "video" ? v.screenShareTracks.video = s : a === "audio" && (v.screenShareTracks.audio = s), v.setScreenShareEnabled(!0), (g = this.context) === null || g === void 0 || g.getValue("callstats").consumerSharedMediaState(e, { screen: !0 });
          return;
        }
        a === "video" ? (v.videoTrack = s, v.setVideoEnabled(!0), this.updatePipSource(v.id, !0), this.context.getValue("callstats").consumerSharedMediaState(e, { video: !0 })) : a === "audio" && (v.audioTrack = s, v.setAudioEnabled(v.audioEnabled), this.context.getValue("callstats").consumerSharedMediaState(e, { audio: v.audioEnabled }));
      }
    }
  } }, { key: "processConsumerPaused", value: function(e) {
    this.logger.info("ParticipantController::processConsumerPaused called for consumerId: ".concat(e));
    var r = this.processMedia(e), n = r.peerId, a = r.kind, i = r.track, s = r.appData, u = r.remotelyPaused, c = r.producerId, d = r.rtpReceiver, h = r.localId;
    if (n) {
      this.logger.info("ParticipantController::processConsumerPaused", { consumer: { id: e, peerId: n, kind: a, appData: s, remotelyPaused: u, producerId: c } });
      var v = this.participants.joined.get(n);
      if (v) {
        var f = v.producers.find(function(g) {
          return g.producerId === c;
        });
        f && (f.consumer = { id: e, peerId: n, kind: a, appData: s, paused: u, producerId: c, rtpReceiver: d, localId: h }), i && s.e2ee && this.context.getValue("peerSessionStore").emit(H.E2EE_INACTIVE_CONSUMER, { peerId: n, trackId: i.id }), a === "video" ? (v.videoTrack = i, v.setVideoEnabled(!1), this.updatePipSource(v.id, !1), this.context.getValue("callstats").consumerSharedMediaState(e, { video: !1 })) : a === "audio" && (v.audioTrack = i, v.setAudioEnabled(v.audioEnabled), this.context.getValue("callstats").consumerSharedMediaState(e, { audio: v.audioEnabled }));
      }
    }
  } }, { key: "processNewConsumer", value: function(e) {
    var r = this.processMedia(e), n = r.peerId, a = r.kind, i = r.remotelyPaused, s = r.track, u = r.appData, c = r.producerId, d = r.rtpReceiver, h = r.localId;
    if (n) {
      this.logger.info("ParticipantController::processNewConsumer", { consumer: { id: e, peerId: n, kind: a, remotelyPaused: i, appData: u, producerId: c } });
      var v = this.participants.joined.get(n);
      if (v) {
        var f = v.producers.find(function(g) {
          return g.producerId === c;
        });
        if (f && (f.consumer = { id: e, peerId: n, kind: a, appData: u, paused: i, producerId: c, rtpReceiver: d, localId: h }), u.screenShare) {
          a === "video" ? v.screenShareTracks.video = s : a === "audio" && (v.screenShareTracks.audio = s), (!i || this.self.permissions.isRecorder || this.context.getValue("flagsmith").hasFeature(ve.SCREEENSHARE_ERR_HACK)) && v.setScreenShareEnabled(!0), u.supportsRemoteControl && (v.supportsRemoteControl = !0), this.participants.broadcastMessage("screenshareConsumerCreated", { producerId: c, peerId: n, screenShare: !0, consumerId: e, consumerPeerId: this.self.id }), this.logger.info("ParticipantController::newScreenshareConsumer::screenshareConsumerCreated", { consumer: { id: e, peerId: n, kind: a, remotelyPaused: i, appData: u, producerId: c } });
          return;
        }
        a === "video" ? (v.videoTrack = s, i || (v.setVideoEnabled(!0), this.updatePipSource(v.id, !0)), this.context.getValue("callstats").consumerSharedMediaState(e, { video: !i })) : a === "audio" && (v.audioTrack = s, i || v.setAudioEnabled(!0), this.context.getValue("callstats").consumerSharedMediaState(e, { audio: !i })), !i && u.e2ee && this.context.getValue("peerSessionStore").emit(H.E2EE_ACTIVE_CONSUMER, { peerId: n, rtpReceiver: d, track: s });
      }
    }
  } }, { key: "mapPeerIdsToProducers", value: function(e, r) {
    var n = this, a = function(u, c) {
      return u.filter(function(d) {
        var h = d.kind, v = d.screenShare;
        return c.includes(h) || v && c.includes("screenshare");
      });
    }, i = e.flatMap(function(s) {
      var u = n.participants.joined.get(s);
      if (u)
        return a(u.producers, r);
    }).filter(function(s) {
      return !!s;
    });
    return i;
  } }, { key: "onSelectedPeers", value: (
    // XXX dead code, this event is not fired
    function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (this.participants.viewMode === "ACTIVE_GRID") {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return");
              case 2:
                this.computeActivateParticipants(n, a);
              case 3:
              case "end":
                return s.stop();
            }
        }, r, this);
      }));
      function e(r, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
  ) }, { key: "updateActiveParticipantsWithPriorities", value: function(e) {
    var r = this, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    if (!this.mediaJoined) {
      this.logger.warn("Skipped::ParticipantController::updateActiveParticipantsWithPriorities", { roomJoined: this.mediaJoined });
      return;
    }
    e.forEach(function(i) {
      r.selectedPeers.add(i.peerId, i.priority, r.context);
    });
    var a = this.selectedPeers.activeSpeakerPeers.at(0);
    a !== void 0 && a !== this.participants.lastActiveSpeaker && (this.participants.lastActiveSpeaker = a, this.participants.emit("activeSpeaker", {
      peerId: a,
      volume: 1
      // priority
    })), n && this.updateSubscriptions(this.participants.viewMode);
  } }], [{ key: "mapDiff", value: function(e, r) {
    var n = [], a = [], i = Array.from(e.keys()), s = Array.from(r.keys());
    return i.forEach(function(u) {
      s.includes(u) || a.push(u);
    }), s.forEach(function(u) {
      i.includes(u) || n.push(u);
    }), [n, a];
  } }, { key: "formatSocketServiceMessage", value: function(e) {
    var r, n, a, i, s, u;
    if (e) {
      var c = Gp(e.stageType);
      return { id: e.peerId, userId: e.userId, name: e.displayName, displayName: e.displayName, stageType: c, customParticipantId: e.customParticipantId, presetId: e.presetId, picture: e.displayPictureUrl, waitlisted: e.waitlisted, stageStatus: c, metadata: { preset_name: (r = e.flags) === null || r === void 0 ? void 0 : r.presetName }, recorderType: (n = e.flags) === null || n === void 0 ? void 0 : n.recorderType, flags: { hiddenParticipant: (a = e.flags) === null || a === void 0 ? void 0 : a.hiddenParticipant, hidden_participant: (i = e.flags) === null || i === void 0 ? void 0 : i.hiddenParticipant, recorder: ((s = e.flags) === null || s === void 0 ? void 0 : s.recorderType) !== void 0 && ((u = e.flags) === null || u === void 0 ? void 0 : u.recorderType) !== "NONE" } };
    }
  } }]);
}()), ei = Ao;
po([D.trace("ParticipantController.setupEvents")], ei.prototype, "setupEvents", 1);
po([D.trace("ParticipantController.setupEvents")], ei.prototype, "setupEventsGlobal", 1);
po([D.trace("ParticipantController.processMedia")], ei.prototype, "processMedia", 1);
po([D.trace("ParticipantController.processConsumerClosed")], ei.prototype, "processConsumerClosed", 1);
po([D.trace("ParticipantController.processConsumerResumed")], ei.prototype, "processConsumerResumed", 1);
po([D.trace("ParticipantController.processConsumerPaused")], ei.prototype, "processConsumerPaused", 1);
po([D.trace("ParticipantController.processNewConsumer")], ei.prototype, "processNewConsumer", 1);
var nr = Fn(Up().permissions), G = /* @__PURE__ */ E("permissions"), Ps = /* @__PURE__ */ E("viewType"), ja = /* @__PURE__ */ E("context"), nd = /* @__PURE__ */ E("updatePermission"), gr = /* @__PURE__ */ E("stageStatus"), D_ = /* @__PURE__ */ function(o) {
  function t(e, r, n) {
    var a, i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    w(this, t);
    var s = e.getValue("logger");
    if (a = C(this, t, [s]), Object.defineProperty(a, gr, { get: O_, set: void 0 }), Object.defineProperty(a, G, { writable: !0, value: void 0 }), Object.defineProperty(a, Ps, { writable: !0, value: void 0 }), Object.defineProperty(a, ja, { writable: !0, value: void 0 }), Object.defineProperty(a, nd, { writable: !0, value: function(c) {
      var d = c.chat, h = c.connectedMeetings, v = c.plugins, f = c.polls, g = c.media, k = gc(c, zg);
      if (d && (d.private && Ci(l(a, G)[G].chat.private, d.private), d.public && Ci(l(a, G)[G].chat.public, d.public), a.emit("chatUpdate")), h && Ci(l(a, G)[G].connectedMeetings, h), g) {
        var y, b, S, T = function(I) {
          switch (I) {
            case Li.NONE:
              return ne.Allowed;
            case Li.ALLOWED:
              return ne.Allowed;
            case Li.NOT_ALLOWED:
              return ne.NotAllowed;
            case Li.CAN_REQUEST:
              return ne.CanRequest;
            default:
              return;
          }
        }, A = { audio: void 0, video: void 0, screenshare: void 0 };
        (y = g.audio) !== null && y !== void 0 && y.canProduce && (A.audio = { canProduce: T(g.audio.canProduce) }), (b = g.video) !== null && b !== void 0 && b.canProduce && (A.video = { canProduce: T(g.video.canProduce) }), (S = g.screenshare) !== null && S !== void 0 && S.canProduce && (A.screenshare = { canProduce: T(g.screenshare.canProduce) }), Ci(l(a, G)[G].media, A);
      }
      v && (Ci(l(a, G)[G].plugins, v), a.emit("pluginsUpdate")), f && (Ci(l(a, G)[G].polls, f), a.emit("pollsUpdate")), Object.keys(k).length !== 0 && Ci(l(a, G)[G], k), a.emit("permissionsUpdate", c);
    } }), !r)
      throw a.logger.error("DytePermissionsPreset::load_preset_permissions_failed"), new U("Could not load preset permissions.", "0904");
    return l(a, ja)[ja] = e, l(a, Ps)[Ps] = n, l(a, G)[G] = r, i && a.setupEvents(), a;
  }
  return R(t, o), P(t, [{
    key: "setupEvents",
    value: function() {
      l(this, ja)[ja].getValue("peerSessionStore").on(H.UPDATE_PERMISSIONS, l(this, nd)[nd]);
    }
    /** @deprecated. Use init() */
  }, {
    key: "mediaRoomType",
    get: function() {
      var r = l(this, ja)[ja].getValue("roomNodeOptions"), n = r.sfu;
      return n === Mr.CF ? "CF" : "HIVE";
    }
    /**
    * The `stageEnabled` property returns a boolean value.
    * If `true`, stage management is available for the participant.
    */
  }, { key: "stageEnabled", get: function() {
    var r;
    return ((r = l(this, G)[G]) === null || r === void 0 ? void 0 : r.stageEnabled) || l(this, Ps)[Ps] === Lt.Webinar || l(this, Ps)[Ps] === Lt.Livestream;
  } }, {
    key: "acceptStageRequests",
    get: function() {
      var r, n;
      return this.stageEnabled ? ((r = l(this, G)[G]) === null || r === void 0 ? void 0 : r.acceptStageRequests) || ((n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.canAcceptProductionRequests) : !1;
    }
    /**
    * The `stageAccess` property dictactes how a user interacts with the stage.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`;
    */
  }, {
    key: "stageAccess",
    get: function() {
      var r, n, a;
      return ((r = l(this, G)[G]) === null || r === void 0 ? void 0 : r.stageAccess) === ne.NotAllowed ? ne.NotAllowed : ((n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.stageAccess) === ne.CanRequest ? ne.CanRequest : ((a = l(this, G)[G]) === null || a === void 0 ? void 0 : a.stageAccess) === ne.Allowed || l(this, G)[G].media.audio.canProduce === ne.Allowed || l(this, G)[G].media.video.canProduce === ne.Allowed || l(this, G)[G].media.screenshare.canProduce === ne.Allowed ? ne.Allowed : l(this, G)[G].media.audio.canProduce === ne.CanRequest || l(this, G)[G].media.video.canProduce === ne.CanRequest || l(this, G)[G].media.screenshare.canProduce === ne.CanRequest ? ne.CanRequest : ne.NotAllowed;
    }
    /**
    * The `acceptWaitingRequests` returns boolean value.
    * If `true`, participant can accept the request of waiting participant.
    */
  }, {
    key: "acceptWaitingRequests",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.acceptWaitingRequests) !== null && r !== void 0 ? r : nr.acceptWaitingRequests;
    }
    /**
    * The `requestProduceVideo` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing video.
    */
  }, {
    key: "requestProduceVideo",
    get: function() {
      var r;
      return ((r = l(this, G)[G]) === null || r === void 0 || (r = r.media) === null || r === void 0 || (r = r.video) === null || r === void 0 ? void 0 : r.canProduce) === ne.CanRequest;
    }
    /**
    * The `requestProduceAudio` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing audio.
    */
  }, {
    key: "requestProduceAudio",
    get: function() {
      var r;
      return ((r = l(this, G)[G]) === null || r === void 0 || (r = r.media) === null || r === void 0 || (r = r.audio) === null || r === void 0 ? void 0 : r.canProduce) === ne.CanRequest;
    }
    /**
    * The `requestProduceScreenshare` returns boolean value.
    * If `true`, participant can send request to participants
    * about sharing screen.
    */
  }, {
    key: "requestProduceScreenshare",
    get: function() {
      var r;
      return ((r = l(this, G)[G]) === null || r === void 0 || (r = r.media) === null || r === void 0 || (r = r.screenshare) === null || r === void 0 ? void 0 : r.canProduce) === ne.CanRequest;
    }
    /**
    * The `canAllowParticipantAudio` returns boolean value.
    * If `true`, participant can enable other participants` audio.
    */
  }, {
    key: "canAllowParticipantAudio",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.disableParticipantAudio) !== null && r !== void 0 ? r : nr.disableParticipantAudio;
    }
    /**
    * The `canAllowParticipantScreensharing` returns boolean value.
    * If `true`, participant can enable other participants` screen share.
    */
  }, {
    key: "canAllowParticipantScreensharing",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.canAcceptProductionRequests) !== null && r !== void 0 ? r : nr.canAcceptProductionRequests;
    }
    /**
    * The `canAllowParticipantVideo` returns boolean value.
    * If `true`, participant can enable other participants` video.
    */
  }, {
    key: "canAllowParticipantVideo",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.disableParticipantVideo) !== null && r !== void 0 ? r : nr.disableParticipantVideo;
    }
    /**
    * If `true`, a participant can disable other participants` audio.
    */
  }, {
    key: "canDisableParticipantAudio",
    get: function() {
      return this.canAllowParticipantAudio;
    }
    /**
    * If `true`, a participant can disable other participants` video.
    */
  }, {
    key: "canDisableParticipantVideo",
    get: function() {
      return this.canAllowParticipantVideo;
    }
    /**
    * The `kickParticipant` returns boolean value.
    * If `true`, participant can remove other participants from the meeting.
    */
  }, {
    key: "kickParticipant",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.kickParticipant) !== null && r !== void 0 ? r : nr.kickParticipant;
    }
    /**
    * The `pinParticipant` returns boolean value.
    * If `true`, participant can pin a participant in the meeting.
    */
  }, {
    key: "pinParticipant",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.pinParticipant) !== null && r !== void 0 ? r : nr.pinParticipant;
    }
    /**
    * The `canRecord` returns boolean value.
    * If `true`, participant can record the meeting.
    */
  }, {
    key: "canRecord",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.canRecord) !== null && r !== void 0 ? r : nr.canRecord;
    }
    /**
    * @deprecated in favour of `waitingRoomBehaviour`.
    * The `waitingRoomType` returns string value.
    * type of waiting room behavior
    * possible values are `SKIP`, `ON_PRIVILEGED_USER_ENTRY`, `SKIP_ON_ACCEPT`
    */
  }, {
    key: "waitingRoomType",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.waitingRoomType) !== null && r !== void 0 ? r : nr.waitingRoomType;
    }
    /**
    * The `waitingRoomType` returns string value.
    * type of waiting room behavior
    * possible values are `SKIP`, `ON_PRIVILEGED_USER_ENTRY`, `SKIP_ON_ACCEPT`
    */
  }, {
    key: "waitingRoomBehaviour",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.waitingRoomType) !== null && r !== void 0 ? r : nr.waitingRoomType;
    }
    /**
    * The `plugins` tells if the participant can act on plugins
    * there are 2 permissions with boolean values, `canStart` and `canClose`.
    */
  }, {
    key: "plugins",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.plugins) !== null && r !== void 0 ? r : nr.plugins;
    }
    /**
    * The `polls` tells if the participant can use polls.
    * There are 3 permissions with boolean values, `canCreate`, `canVote`, `canViewResults`
    */
  }, {
    key: "polls",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.polls) !== null && r !== void 0 ? r : nr.polls;
    }
    /**
    * @deprecated in favour of `canProduceVideo`
    * The `produceVideo` shows permissions for enabling video.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "produceVideo",
    get: function() {
      return this.canProduceVideo;
    }
    /**
    * @deprecated
    * The `requestProduce` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing audio, video or screenshare.
    */
  }, {
    key: "requestProduce",
    get: function() {
      return l(this, G)[G].media.audio.canProduce === ne.CanRequest || l(this, G)[G].media.video.canProduce === ne.CanRequest || l(this, G)[G].media.screenshare.canProduce === ne.CanRequest;
    }
    /**
    * The `canProduceVideo` shows permissions for enabling video.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceVideo",
    get: function() {
      var r, n = (r = l(this, G)[G].media.video.canProduce) !== null && r !== void 0 ? r : nr.media.video.canProduce;
      return this.stageEnabled && (l(this, gr)[gr] === "ACCEPTED_TO_JOIN_STAGE" || l(this, gr)[gr] === "ON_STAGE") && n === ne.CanRequest ? ne.Allowed : this.stageEnabled && (l(this, gr)[gr] === "OFF_STAGE" || l(this, gr)[gr] === "REQUESTED_TO_JOIN_STAGE") && n === ne.Allowed ? ne.NotAllowed : n;
    }
    /**
    * @deprecated in favour of `canProduceScreenshare`
    * The `produceVideo` shows permissions for sharing screen.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "produceScreenshare",
    get: function() {
      return this.canProduceScreenshare;
    }
    /**
    * The `canProduceScreenshare` shows permissions for sharing screen.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceScreenshare",
    get: function() {
      var r, n = (r = l(this, G)[G].media.screenshare.canProduce) !== null && r !== void 0 ? r : nr.media.screenshare.canProduce;
      return this.stageEnabled && (l(this, gr)[gr] === "ACCEPTED_TO_JOIN_STAGE" || l(this, gr)[gr] === "ON_STAGE") && n === ne.CanRequest ? ne.Allowed : this.stageEnabled && (l(this, gr)[gr] === "OFF_STAGE" || l(this, gr)[gr] === "REQUESTED_TO_JOIN_STAGE") && n === ne.Allowed ? ne.NotAllowed : n;
    }
    /**
    * @deprecated in favour of `canProduceAudio`
    * The `produceAudio` shows permissions for enabling audio.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "produceAudio",
    get: function() {
      return this.canProduceAudio;
    }
    /**
    * The `canProduceAudio` shows permissions for enabling audio.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceAudio",
    get: function() {
      var r, n = (r = l(this, G)[G].media.audio.canProduce) !== null && r !== void 0 ? r : nr.media.audio.canProduce;
      return this.stageEnabled && (l(this, gr)[gr] === "ACCEPTED_TO_JOIN_STAGE" || l(this, gr)[gr] === "ON_STAGE") && n === ne.CanRequest ? ne.Allowed : this.stageEnabled && (l(this, gr)[gr] === "OFF_STAGE" || l(this, gr)[gr] === "REQUESTED_TO_JOIN_STAGE") && n === ne.Allowed ? ne.NotAllowed : n;
    }
    /**
    * The `chatPublic` shows permissions for public chat
    * there are 4 permissions
    * `canSend` - if true, the participant can send chat
    * `text` - if true, the participant can send text
    * `files` - if true, the participant can send files
    */
  }, {
    key: "chatPublic",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 || (n = n.chat) === null || n === void 0 ? void 0 : n.public) !== null && r !== void 0 ? r : nr.chat.public;
    }
    /**
    * The `chatPrivate` shows permissions for public chat
    * there are 4 permissions
    * `canSend` - if true, the participant can send private chat
    * `text` - if true, the participant can send text as private chat
    * `files` - if true, the participant can send files as private chat
    * `canReceive` - (optional) if true, the participant can receive private chat
    */
  }, { key: "chatPrivate", get: function() {
    var r, n;
    return (r = (n = l(this, G)[G]) === null || n === void 0 || (n = n.chat) === null || n === void 0 ? void 0 : n.private) !== null && r !== void 0 ? r : nr.chat.private;
  } }, { key: "chatChannel", get: function() {
    var r, n;
    return (r = (n = l(this, G)[G]) === null || n === void 0 || (n = n.chat) === null || n === void 0 ? void 0 : n.channel) !== null && r !== void 0 ? r : nr.chat.channel;
  } }, { key: "chatMessage", get: function() {
    var r, n;
    return (r = (n = l(this, G)[G]) === null || n === void 0 || (n = n.chat) === null || n === void 0 ? void 0 : n.message) !== null && r !== void 0 ? r : nr.chat.message;
  } }, {
    key: "connectedMeetings",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.connectedMeetings) !== null && r !== void 0 ? r : nr == null ? void 0 : nr.connectedMeetings;
    }
    /**
    * The `hiddenParticipant` returns boolean value.
    * If `true`, participant is hidden.
    */
  }, {
    key: "hiddenParticipant",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.hiddenParticipant) !== null && r !== void 0 ? r : nr.hiddenParticipant;
    }
    /**
    * The `showParticipantList` returns boolean value.
    * If `true`, participant list can be shown to the participant.
    */
  }, {
    key: "showParticipantList",
    get: function() {
      var r;
      return (r = l(this, G)[G].showParticipantList) !== null && r !== void 0 ? r : nr.showParticipantList;
    }
    /**
    * @deprecated in favour of `canChangeParticipantPermissions`
    * The `canChangeParticipantRole` returns boolean value.
    * If `true`, allow changing the participants' role.
    */
  }, {
    key: "canChangeParticipantRole",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.canChangeParticipantPermissions) !== null && r !== void 0 ? r : nr.canChangeParticipantPermissions;
    }
    /**
    * The `canChangeParticipantPermissions` returns boolean value.
    * If `true`, allow changing the participants' permissions.
    */
  }, {
    key: "canChangeParticipantPermissions",
    get: function() {
      var r, n;
      return (r = (n = l(this, G)[G]) === null || n === void 0 ? void 0 : n.canChangeParticipantPermissions) !== null && r !== void 0 ? r : nr.canChangeParticipantPermissions;
    }
    /**
    * @deprecated
    * The `canChangeTheme` returns boolean value.
    * If `true`, the participant can change the meeting theme.
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "canChangeTheme",
    get: function() {
      return !1;
    }
    /**
    * @deprecated in favour of individual production settings
    * The `canPresent` returns boolean value.
    * If `true`, the participant can become a presentor.
    */
  }, {
    key: "canPresent",
    get: function() {
      return l(this, G)[G].media.audio.canProduce === ne.Allowed || l(this, G)[G].media.video.canProduce === ne.Allowed || l(this, G)[G].media.screenshare.canProduce === ne.Allowed;
    }
    /**
    * @deprecated Use `acceptStageRequests` instead.
    */
  }, { key: "acceptPresentRequests", get: function() {
    return this.acceptStageRequests;
  } }, {
    key: "canEditDisplayName",
    get: function() {
      var r;
      return (r = l(this, G)[G].canEditDisplayName) !== null && r !== void 0 ? r : !1;
    }
    /**
    * @deprecated DyteSelf.config.maxScreenShareCount
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "maxScreenShareCount",
    get: function() {
      return 1;
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "isRecorder", get: function() {
    return l(this, G)[G].isRecorder;
  } }, {
    key: "canSpotlight",
    get: function() {
      return l(this, G)[G].canSpotlight;
    }
    /** Livestream */
  }, { key: "canLivestream", get: function() {
    return l(this, G)[G].canLivestream;
  } }, { key: "transcriptionEnabled", get: function() {
    return l(this, G)[G].transcriptionEnabled;
  } }], [{
    key: "fromResponse",
    value: function(r, n, a) {
      return new t(a, r, n, !0);
    }
    /** @deprecated. Use init() */
  }, { key: "default", value: function(r, n) {
    return new t(r, nr, n);
  } }, { key: "init", value: function(r, n, a) {
    var i;
    return a ? i = new t(r, a, n, !0) : i = new t(r, nr, n), i;
  } }]);
}(an);
function O_() {
  return l(this, ja)[ja].getValue("stageStatus");
}
var at = /* @__PURE__ */ E("context"), wg = /* @__PURE__ */ function(o) {
  function t() {
    var e;
    w(this, t);
    for (var r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    return e = C(this, t, [].concat(n)), e.localMediaHandler = void 0, Object.defineProperty(e, at, { writable: !0, value: void 0 }), e;
  }
  return R(t, o), P(t, [{
    key: "updatePermission",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        var a = this, i, s, u, c, d, h, v, f;
        return p().wrap(function(k) {
          for (; ; )
            switch (k.prev = k.next) {
              case 0:
                if (u = function(b, S) {
                  a.mediaPermissions[b] = S;
                  var T = { message: a.mediaPermissions[b], kind: b };
                  S === "DENIED" ? l(a, at)[at].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_ERROR, T) : l(a, at)[at].getValue("peerSessionStore").emit(H.MEDIA_PERMISSION_UPDATE, T);
                }, kr.getName() !== "firefox") {
                  k.next = 3;
                  break;
                }
                return k.abrupt("return");
              case 3:
                return c = "microphone", d = "camera", k.next = 7, (i = navigator) === null || i === void 0 || (i = i.permissions) === null || i === void 0 ? void 0 : i.query({ name: c });
              case 7:
                return h = k.sent, k.next = 10, (s = navigator) === null || s === void 0 || (s = s.permissions) === null || s === void 0 ? void 0 : s.query({ name: d });
              case 10:
                v = k.sent, f = function(b, S) {
                  switch (S) {
                    case "granted":
                      u(b, "ACCEPTED");
                      break;
                    case "denied":
                      u(b, "DENIED");
                      break;
                    case "prompt":
                      u(b, "NOT_REQUESTED");
                      break;
                  }
                  a.localMediaHandler.repopulateAvailableDevices();
                }, h && (h.onchange = function() {
                  return f("audio", h.state);
                }), v && (v.onchange = function() {
                  return f("video", v.state);
                });
              case 14:
              case "end":
                return k.stop();
            }
        }, n);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "populateMediaPermissionsInCallstats", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d, h;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              i = a.message, s = a.kind, f.t0 = s, f.next = f.t0 === "audio" ? 4 : f.t0 === "video" ? 7 : f.t0 === "screenshare" ? 9 : 11;
              break;
            case 4:
              return (u = l(this, at)[at]) === null || u === void 0 || u.getValue("callstats").mediaPermission("AUDIO", i), (c = l(this, at)[at]) === null || c === void 0 || c.getValue("callstats").mediaPermission("SPEAKER", i), f.abrupt("break", 11);
            case 7:
              return (d = l(this, at)[at]) === null || d === void 0 || d.getValue("callstats").mediaPermission("VIDEO", i), f.abrupt("break", 11);
            case 9:
              return (h = l(this, at)[at]) === null || h === void 0 || h.getValue("callstats").mediaPermission("SCREENSHARE", i), f.abrupt("break", 11);
            case 11:
            case "end":
              return f.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "peerId", get: function() {
    var r;
    return (r = l(this, at)[at]) === null || r === void 0 ? void 0 : r.getValue("peerId");
  } }, { key: "init", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a = this, i, s, u, c, d, h, v, f, g, k, y, b, S, T, A = arguments;
      return p().wrap(function(I) {
        for (; ; )
          switch (I.prev = I.next) {
            case 0:
              if (i = A.length > 0 && A[0] !== void 0 ? A[0] : {}, s = A.length > 1 && A[1] !== void 0 ? A[1] : !1, u = A.length > 2 && A[2] !== void 0 ? A[2] : null, kr.init(), !this.localMediaHandler) {
                I.next = 6;
                break;
              }
              return I.abrupt("return");
            case 6:
              if (I.prev = 6, d = !0, !(u != null && (c = u.getValue("defaults")) !== null && c !== void 0 && c.mediaHandler)) {
                I.next = 13;
                break;
              }
              d = !1, this.localMediaHandler = u.getValue("defaults").mediaHandler.localMediaHandler, I.next = 21;
              break;
            case 13:
              if (!navigator.RNLocalMediaHandlerImpl) {
                I.next = 20;
                break;
              }
              return h = navigator, v = h.RNLocalMediaHandlerImpl, I.next = 17, v.init(i);
            case 17:
              this.localMediaHandler = I.sent, I.next = 21;
              break;
            case 20:
              this.localMediaHandler = new $t(u, i.constraints, u == null || (f = u.getValue("defaults")) === null || f === void 0 ? void 0 : f.isNonPreferredDevice, u == null || (g = u.getValue("defaults")) === null || g === void 0 ? void 0 : g.autoSwitchAudioDevice);
            case 21:
              if (u == null || u.getValue("peerSessionStore").on(H.MEDIA_PERMISSION_UPDATE, /* @__PURE__ */ function() {
                var M = m(/* @__PURE__ */ p().mark(function V(j) {
                  return p().wrap(function(O) {
                    for (; ; )
                      switch (O.prev = O.next) {
                        case 0:
                          if (a.populateMediaPermissionsInCallstats({ message: j.message, kind: j.kind }), j.message !== "NOT_REQUESTED") {
                            O.next = 10;
                            break;
                          }
                          O.t0 = j == null ? void 0 : j.kind, O.next = O.t0 === "audio" ? 5 : O.t0 === "video" ? 7 : 9;
                          break;
                        case 5:
                          return a.rawAudioTrack && (a.logger.info("Disabling audio due to media permission update"), a.disableAudio()), O.abrupt("break", 10);
                        case 7:
                          return a.rawVideoTrack && (a.logger.info("Disabling video due to media permission update"), a.disableVideo()), O.abrupt("break", 10);
                        case 9:
                          return O.abrupt("break", 10);
                        case 10:
                          a.emit("mediaPermissionUpdate", j);
                        case 11:
                        case "end":
                          return O.stop();
                      }
                  }, V);
                }));
                return function(V) {
                  return M.apply(this, arguments);
                };
              }()), u == null || u.getValue("peerSessionStore").on(H.MEDIA_PERMISSION_ERROR, /* @__PURE__ */ function() {
                var M = m(/* @__PURE__ */ p().mark(function V(j) {
                  var $, O, B;
                  return p().wrap(function(F) {
                    for (; ; )
                      switch (F.prev = F.next) {
                        case 0:
                          $ = j.kind, O = j.message, B = j.constraints, a.populateMediaPermissionsInCallstats({ message: O, kind: $ }), $ === "audio" ? (a.logger.info("Disabling audio due to media permission error  skipping: ".concat(a.localMediaHandler.audioUpdateInProgress)), a.localMediaHandler.audioUpdateInProgress === !1 && a.disableAudio()) : $ === "video" && (a.logger.info("Disabling video due to media permission error skipping: ".concat(a.localMediaHandler.videoUpdateInProgress)), a.localMediaHandler.videoUpdateInProgress === !1 && a.disableVideo()), a.logger.error("SelfController::mediaPermissionError", { error: { message: O }, constraints: B, mediaPermissionsErrors: { kind: $, message: O } }), a.emit("mediaPermissionError", j), a.emit("mediaPermissionUpdate", { message: O, kind: $ });
                        case 6:
                        case "end":
                          return F.stop();
                      }
                  }, V);
                }));
                return function(V) {
                  return M.apply(this, arguments);
                };
              }()), !d) {
                I.next = 29;
                break;
              }
              if (this.logger.info("Setting up DyteSelfMedia streams using media handler. audio:".concat((k = i == null ? void 0 : i.audio) !== null && k !== void 0 ? k : !0, " video:").concat((y = i == null ? void 0 : i.video) !== null && y !== void 0 ? y : !0)), T = this.localMediaHandler.setupStreams({ video: (b = i == null ? void 0 : i.video) !== null && b !== void 0 ? b : !0, audio: (S = i == null ? void 0 : i.audio) !== null && S !== void 0 ? S : !0 }), s) {
                I.next = 29;
                break;
              }
              return I.next = 29, T;
            case 29:
              I.next = 34;
              break;
            case 31:
              I.prev = 31, I.t0 = I.catch(6), this.logger.error("DyteSelf::init::Failed To Setup Streams", { error: { name: I.t0.name, message: I.t0.message } });
            case 34:
            case "end":
              return I.stop();
          }
      }, n, this, [[6, 31]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "context",
    set: function(r) {
      l(this, at)[at] = r, this.localMediaHandler.context = r;
    }
    /**
    * Returns the `audioTrack`.
    */
  }, {
    key: "audioTrack",
    get: function() {
      return this.localMediaHandler.audioTrack;
    }
    /**
    * Returns the `rawAudioTrack` having no middleware executed on it.
    */
  }, {
    key: "rawAudioTrack",
    get: function() {
      return this.localMediaHandler.rawAudioTrack;
    }
    /**
    * Returns the current audio and video permissions given by the user.
    * 'ACCEPTED' if the user has given permission to use the media.
    * 'CANCELED' if the user has canceled the screenshare.
    * 'DENIED' if the user has denied permission to use the media.
    * 'SYS_DENIED' if the user's system has denied permission to use the media.
    * 'UNAVAILABLE' if the media is not available (or being used by a different application).
    */
  }, {
    key: "mediaPermissions",
    get: function() {
      return this.localMediaHandler.permissions;
    }
    /**
    * Adds the audio middleware to be executed on the raw audio stream.
    * If there are more than 1 audio middlewares,
    * they will be executed in the sequence they were added in.
    * If you want the sequence to be altered, please remove all previous middlewares and re-add.
    */
  }, { key: "addAudioMiddleware", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.localMediaHandler.addAudioMiddleware(a));
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeAudioMiddleware", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.localMediaHandler.removeAudioMiddleware(a));
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeAllAudioMiddlewares", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.localMediaHandler.removeAllAudioMiddlewares());
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "videoTrack",
    get: function() {
      return this.localMediaHandler.videoTrack;
    }
    /**
    * Returns the `videoTrack` having no middleware executed on it.
    */
  }, {
    key: "rawVideoTrack",
    get: function() {
      return this.localMediaHandler.rawVideoTrack;
    }
    /**
    * Adds the video middleware to be executed on the raw video stream.
    * If there are more than 1 video middlewares,
    * they will be executed in the sequence they were added in.
    * If you want the sequence to be altered, please remove all previous middlewares and re-add.
    */
  }, { key: "addVideoMiddleware", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.localMediaHandler.addVideoMiddleware(a));
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setVideoMiddlewareGlobalConfig", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i = arguments;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return a = i.length > 0 && i[0] !== void 0 ? i[0] : { disablePerFrameCanvasRendering: !1 }, u.abrupt("return", this.localMediaHandler.setVideoMiddlewareGlobalConfig(a));
            case 2:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeVideoMiddleware", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.localMediaHandler.removeVideoMiddleware(a));
            case 1:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeAllVideoMiddlewares", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.localMediaHandler.removeAllVideoMiddlewares());
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "screenShareTracks",
    get: function() {
      return this.localMediaHandler.screenShareTracks;
    }
    /**
    * Returns true if audio is enabled.
    */
  }, {
    key: "audioEnabled",
    get: function() {
      return this.localMediaHandler.audioEnabled;
    }
    /**
    * Returns true if video is enabled.
    */
  }, {
    key: "videoEnabled",
    get: function() {
      return this.localMediaHandler.videoEnabled;
    }
    /**
    * Returns true if screen share is enabled.
    */
  }, { key: "screenShareEnabled", get: function() {
    return this.localMediaHandler.screenShareEnabled;
  } }, { key: "enableAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.localMediaHandler.enableAudio();
            case 2:
              this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack });
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "enableVideo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.localMediaHandler.enableVideo();
            case 2:
              this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack });
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              this.localMediaHandler.disableAudio(), this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack });
            case 2:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "enableScreenShare", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.localMediaHandler.enableScreenShare();
            case 2:
              this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks });
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableScreenShare", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.localMediaHandler.disableScreenShare();
            case 2:
              this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks });
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "disableVideo",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        return p().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.next = 2, this.localMediaHandler.disableVideo();
              case 2:
                this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack });
              case 3:
              case "end":
                return i.stop();
            }
        }, n, this);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Returns the media devices currently being used.
    */
  }, {
    key: "getCurrentDevices",
    value: function() {
      return this.localMediaHandler.getCurrentDevices();
    }
    /**
    * Returns the local participant's audio devices.
    */
  }, { key: "getAudioDevices", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.localMediaHandler.getAudioDevices();
            case 2:
              return a = s.sent, s.abrupt("return", a);
            case 4:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getVideoDevices", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.localMediaHandler.getVideoDevices();
            case 2:
              return a = s.sent, s.abrupt("return", a);
            case 4:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getSpeakerDevices", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.localMediaHandler.getSpeakerDevices();
            case 2:
              return a = s.sent, s.abrupt("return", a);
            case 4:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "getDeviceById",
    value: function(r, n) {
      var a;
      return n === "audio" ? a = "audioinput" : n === "video" ? a = "videoinput" : n === "speaker" && (a = "audiooutput"), this.localMediaHandler.getDeviceById(r, a);
    }
    /**
    * Change the current media device that is being used by the local participant.
    * @param device The device that is to be used. A device of the same `kind` will be replaced.
    * the primary stream.
    */
  }, { key: "setDevice", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              s.t0 = a.kind, s.next = s.t0 === "audioinput" ? 3 : s.t0 === "audiooutput" ? 14 : s.t0 === "videoinput" ? 17 : 28;
              break;
            case 3:
              return s.prev = 3, s.next = 6, this.localMediaHandler.setAudioDevice(a);
            case 6:
              s.next = 10;
              break;
            case 8:
              s.prev = 8, s.t1 = s.catch(3);
            case 10:
              return s.prev = 10, this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack }), s.finish(10);
            case 13:
              return s.abrupt("break", 28);
            case 14:
              return s.next = 16, this.localMediaHandler.setSpeakerDevice(a);
            case 16:
              return s.abrupt("break", 28);
            case 17:
              return s.prev = 17, s.next = 20, this.localMediaHandler.setVideoDevice(a);
            case 20:
              s.next = 24;
              break;
            case 22:
              s.prev = 22, s.t2 = s.catch(17);
            case 24:
              return s.prev = 24, this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }), s.finish(24);
            case 27:
              return s.abrupt("break", 28);
            case 28:
              this.emit("deviceUpdate", { device: a });
            case 29:
            case "end":
              return s.stop();
          }
      }, n, this, [[3, 8, 10, 13], [17, 22, 24, 27]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(an), L_ = Object.defineProperty, N_ = Object.getOwnPropertyDescriptor, Et = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? N_(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && L_(e, r, a), a;
}, tt = (wi = /* @__PURE__ */ E("config"), or = /* @__PURE__ */ E("permissions"), Pi = /* @__PURE__ */ E("isPinned"), Ve = /* @__PURE__ */ E("context"), Dt = /* @__PURE__ */ E("pip"), Ue = /* @__PURE__ */ E("roomNodeClient"), Si = /* @__PURE__ */ E("audioPlayback"), Ie = /* @__PURE__ */ E("mediaJoined"), Mi = /* @__PURE__ */ E("previewVideoElements"), Di = /* @__PURE__ */ E("videoElements"), bo = /* @__PURE__ */ E("updateVideos"), /* @__PURE__ */ function(o) {
  function t(e, r, n, a, i) {
    var s, u;
    w(this, t);
    var c = e.getValue("logger");
    return u = C(this, t, [c]), Object.defineProperty(u, bo, { value: F_ }), Object.defineProperty(u, Ie, { get: j_, set: void 0 }), Object.defineProperty(u, Si, { get: U_, set: void 0 }), Object.defineProperty(u, Ue, { get: V_, set: void 0 }), Object.defineProperty(u, Dt, { get: $_, set: void 0 }), u.name = void 0, u.picture = void 0, u.customParticipantId = void 0, u.waitlistStatus = void 0, Object.defineProperty(u, wi, { writable: !0, value: void 0 }), Object.defineProperty(u, or, { writable: !0, value: void 0 }), Object.defineProperty(u, Pi, { writable: !0, value: void 0 }), u.role = void 0, u.userId = void 0, u.organizationId = void 0, u.supportsRemoteControl = !1, u.device = void 0, Object.defineProperty(u, Ve, { writable: !0, value: void 0 }), u.hidden = !1, u.presetName = void 0, u.roomState = "init", Object.defineProperty(u, Mi, { writable: !0, value: /* @__PURE__ */ new Set() }), Object.defineProperty(u, Di, { writable: !0, value: /* @__PURE__ */ new Set() }), l(u, Ve)[Ve] = e, u.userId = r.id, u.name = r.name, u.picture = r.picture, u.customParticipantId = (s = r.customParticipantId) !== null && s !== void 0 ? s : r.clientSpecificId, u.waitlistStatus = "none", l(u, or)[or] = n, l(u, wi)[wi] = a, u.hidden = !1, l(u, Pi)[Pi] = !1, u.organizationId = r.organizationId, u.supportsRemoteControl = kr.isElectron(), u.device = kr.getDeviceInfo(), u.presetName = i, a.viewType !== Lt.Chat && u.updatePermission(), u.updateVideo = u.updateVideo.bind(u), l(u, bo)[bo](), u;
  }
  return R(t, o), P(t, [{ key: "telemetry", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, Ve)[Ve].getValue("telemetry");
    }
  ) }, { key: "stageStatus", get: function() {
    return l(this, Ve)[Ve].getValue("stageStatus");
  } }, {
    key: "id",
    get: function() {
      return this.peerId;
    }
    /** NOTE(ishita1805): Discussed with Ravindra, added a duplicate for consistency
    * when using identifiers in DyteLocker.
    * We might want to look at deprecating the `id` sometime later. */
  }, { key: "peerId", get: function() {
    return l(this, Ve)[Ve].getValue("peerId");
  } }, { key: "cleanupEvents", value: function() {
    this.removeAllListeners("videoUpdate"), this.localMediaHandler.removeAllListeners("AUDIO_TRACK_CHANGE"), this.localMediaHandler.removeAllListeners("VIDEO_TRACK_CHANGE"), this.localMediaHandler.removeAllListeners("DEVICE_CHANGE"), this.localMediaHandler.removeAllListeners("DEVICE_LIST_UPDATED"), this.localMediaHandler.removeAllListeners("SCREENSHARE_TRACK_CHANGE"), this.localMediaHandler.removeAllListeners("SCREENSHARE_ENDED"), this.localMediaHandler.removeAllListeners("AUDIO_TRACK_SILENT"), this.localMediaHandler.removeAllListeners("FORCE_MUTE_AUDIO"), this.localMediaHandler.removeAllListeners("FORCE_MUTE_VIDEO"), l(this, or)[or].removeAllListeners("permissionsUpdate");
  } }, {
    key: "setupEvents",
    value: function() {
      var r = this;
      this.on("videoUpdate", l(this, bo)[bo]);
      var n = l(this, Si)[Si];
      n && n.onError(function(a) {
        r.emit("autoplayError", a);
      }), this.localMediaHandler.on("AUDIO_TRACK_CHANGE", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function a() {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (r.logger.info("DyteSelf::setupEvents::AUDIO_TRACK_CHANGE", N({}, Vs(r))), !(l(r, Ie)[Ie] && r.audioEnabled)) {
                  s.next = 11;
                  break;
                }
                return s.prev = 2, s.next = 5, l(r, Ue)[Ue].shareMic(r.audioTrack);
              case 5:
                s.next = 11;
                break;
              case 7:
                s.prev = 7, s.t0 = s.catch(2), r.logger.error("DyteSelf::setupEvents::Error while sharing mic", { error: s.t0 }), r.localMediaHandler.disableAudio();
              case 11:
                r.emit("audioUpdate", { audioEnabled: r.audioEnabled, audioTrack: r.audioTrack });
              case 12:
              case "end":
                return s.stop();
            }
        }, a, null, [[2, 7]]);
      }))), this.localMediaHandler.on("VIDEO_TRACK_CHANGE", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function a() {
        var i;
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (r.logger.info("DyteSelf::setupEvents::VIDEO_TRACK_CHANGE", N({}, Vs(r))), !(l(r, Ie)[Ie] && r.rawVideoTrack === void 0)) {
                  u.next = 6;
                  break;
                }
                r.logger.info("DyteSelf::VIDEO_TRACK_CHANGE::Forcing_disable_video"), r.disableVideo(), u.next = 22;
                break;
              case 6:
                if (!(r.videoEnabled && l(r, Ie)[Ie])) {
                  u.next = 22;
                  break;
                }
                return u.prev = 7, u.next = 10, l(r, Ue)[Ue].shareWebcam(r.videoTrack);
              case 10:
                if (i = u.sent, !(i && i.id !== r.videoTrack.id && l(r, Ve)[Ve].getValue("flagsmith").hasFeature(ve.EXP_RESHARE))) {
                  u.next = 14;
                  break;
                }
                return u.next = 14, l(r, Ue)[Ue].shareWebcam(r.videoTrack);
              case 14:
                u.next = 22;
                break;
              case 16:
                if (u.prev = 16, u.t0 = u.catch(7), r.logger.error("DyteSelf::setupEvents::failed shareWebcam", { error: u.t0 }), !r.videoEnabled) {
                  u.next = 22;
                  break;
                }
                return u.next = 22, r.localMediaHandler.disableVideo();
              case 22:
                r.emit("videoUpdate", { videoEnabled: r.videoEnabled, videoTrack: r.videoTrack });
              case 23:
              case "end":
                return u.stop();
            }
        }, a, null, [[7, 16]]);
      }))), this.localMediaHandler.on("DEVICE_CHANGE", /* @__PURE__ */ function() {
        var a = m(/* @__PURE__ */ p().mark(function i(s) {
          var u, c;
          return p().wrap(function(h) {
            for (; ; )
              switch (h.prev = h.next) {
                case 0:
                  u = s.device, r.emit("deviceUpdate", { device: u }), u.kind === "audiooutput" && typeof HTMLAudioElement.prototype.setSinkId == "function" && ((c = l(r, Si)[Si]) === null || c === void 0 || c.setSpeakerDevice(u.deviceId));
                case 3:
                case "end":
                  return h.stop();
              }
          }, i);
        }));
        return function(i) {
          return a.apply(this, arguments);
        };
      }()), this.localMediaHandler.on("DEVICE_LIST_UPDATED", function(a) {
        r.emit("deviceListUpdate", a);
      }), this.localMediaHandler.on("SCREENSHARE_TRACK_CHANGE", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function a() {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (l(r, Ie)[Ie]) {
                  s.next = 3;
                  break;
                }
                return r.logger.error("DyteSelf.SCREENSHARE_TRACK_CHANGE.LocalMediaInitialized_WithoutRoomNode"), s.abrupt("return");
              case 3:
                if (!r.screenShareEnabled) {
                  s.next = 15;
                  break;
                }
                return s.prev = 4, s.next = 7, l(r, Ue)[Ue].shareScreen(r.screenShareTracks);
              case 7:
                s.next = 15;
                break;
              case 9:
                if (s.prev = 9, s.t0 = s.catch(4), r.logger.error("DyteSelf::setupEvents::Error while sharing screen", { error: s.t0 }), !r.screenShareEnabled) {
                  s.next = 15;
                  break;
                }
                return s.next = 15, r.localMediaHandler.disableScreenShare();
              case 15:
                r.logger.info("DyteSelf::setupEvents::SCREENSHARE_TRACK_CHANGE", N({}, Vs(r))), r.emit("screenShareUpdate", { screenShareEnabled: r.screenShareEnabled, screenShareTracks: r.screenShareTracks });
              case 17:
              case "end":
                return s.stop();
            }
        }, a, null, [[4, 9]]);
      }))), this.localMediaHandler.on("SCREENSHARE_ENDED", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function a() {
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return r.logger.log("Disabling screenshare due to SCREENSHARE_ENDED"), s.next = 3, r.disableScreenShare();
              case 3:
                r.logger.info("DyteSelf::setupEvents::SCREENSHARE_ENDED", N({}, Vs(r)));
              case 4:
              case "end":
                return s.stop();
            }
        }, a);
      }))), this.localMediaHandler.on("AUDIO_TRACK_SILENT", function() {
        var a;
        (a = l(r, Ve)[Ve]) === null || a === void 0 || a.getValue("callstats").mediaTrackMuted("AUDIO");
      }), this.localMediaHandler.on("FORCE_MUTE_AUDIO", function() {
        r.disableAudio();
      }), this.localMediaHandler.on("FORCE_MUTE_VIDEO", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function a() {
        var i;
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (!l(r, Ie)[Ie]) {
                  u.next = 3;
                  break;
                }
                return u.next = 3, l(r, Ue)[Ue].pauseWebcam();
              case 3:
                r.emit("videoUpdate", { videoEnabled: r.videoEnabled, videoTrack: r.videoTrack }), (i = l(r, Ve)[Ve]) === null || i === void 0 || i.getValue("callstats").videoOff();
              case 5:
              case "end":
                return u.stop();
            }
        }, a);
      }))), l(this, or)[or].on("permissionsUpdate", function(a) {
        var i, s, u;
        a != null && (i = a.media) !== null && i !== void 0 && i.audio && l(r, or)[or].canProduceAudio !== ne.Allowed && (r.disableAudio(), r.logger.info("Disabled audio due to dynamic preset change: canProduceAudio: ".concat(r.permissions.canProduceAudio))), a != null && (s = a.media) !== null && s !== void 0 && s.video && l(r, or)[or].canProduceVideo !== ne.Allowed && (r.disableVideo(), r.logger.info("Disabled video due to dynamic preset change: canProduceVideo: ".concat(r.permissions.canProduceVideo))), a != null && (u = a.media) !== null && u !== void 0 && u.screenshare && l(r, or)[or].canProduceScreenshare !== ne.Allowed && (r.disableScreenShare(), r.logger.info("Disabled screenshare due to dynamic preset change: canProduceScreenshare: ".concat(r.permissions.canProduceScreenshare)));
      });
    }
    /**
    * Returns the current permission given to the user for the meeting.
    */
  }, {
    key: "permissions",
    get: function() {
      return l(this, or)[or];
    }
    /**
    * Returns configuration for the meeting.
    */
  }, { key: "config", get: function() {
    return l(this, wi)[wi];
  } }, { key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      if (l(this, wi)[wi].viewType === Lt.Livestream && this.stageStatus !== "ON_STAGE") {
        var r;
        return ((r = l(this, Ve)[Ve].getValue("connectionHandler")) === null || r === void 0 ? void 0 : r.socketJoined) === !0;
      }
      return l(this, Ie)[Ie];
    }
  ) }, { key: "setName", value: (
    /**
    * The name of the user can be set by calling this method.
    * This will get reflected to other participants ONLY if
    * this method is called before the room is joined.
    * @param name Name of the user.
    */
    function(r) {
      if (!r)
        throw new U("Name cannot be empty.", "1103");
      this.name = r;
    }
  ) }, { key: "setupTracks", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a, i = arguments;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return a = i.length > 0 && i[0] !== void 0 ? i[0] : {}, a.forceReset, u.next = 4, this.disableAudio();
            case 4:
              return u.next = 6, this.disableVideo();
            case 6:
              if (this.localMediaHandler.removeAudioTrack(), this.localMediaHandler.removeVideoTrack(), !a.audio) {
                u.next = 11;
                break;
              }
              return u.next = 11, this.enableAudio();
            case 11:
              if (!a.video) {
                u.next = 14;
                break;
              }
              return u.next = 14, this.enableVideo();
            case 14:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "destructMediaHandler", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.localMediaHandler.destruct());
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeDocumentEventListeners", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.localMediaHandler.removeDocumentEventListeners());
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "enableAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.permissions.canProduceAudio !== ne.NotAllowed) {
                u.next = 2;
                break;
              }
              return u.abrupt("return");
            case 2:
              if (!(l(this, or)[or].canProduceAudio === ne.CanRequest && (this.stageStatus === "OFF_STAGE" || this.stageStatus === "REQUESTED_TO_JOIN_STAGE"))) {
                u.next = 4;
                break;
              }
              return u.abrupt("return");
            case 4:
              if (!this.audioEnabled) {
                u.next = 6;
                break;
              }
              return u.abrupt("return");
            case 6:
              return (i = l(this, Ve)[Ve]) === null || i === void 0 || i.getValue("callstats").audioOn(), u.next = 9, this.localMediaHandler.enableAudio(a);
            case 9:
              if (!(l(this, Ie)[Ie] && this.stageStatus === "ON_STAGE")) {
                u.next = 23;
                break;
              }
              if (!this.audioTrack) {
                u.next = 20;
                break;
              }
              return u.prev = 11, u.next = 14, l(this, Ue)[Ue].shareMic(this.audioTrack);
            case 14:
              u.next = 20;
              break;
            case 16:
              u.prev = 16, u.t0 = u.catch(11), this.logger.error("DyteSelf::enableAudio::Error while sharing mic", { error: u.t0 }), this.localMediaHandler.disableAudio();
            case 20:
              if (this.audioEnabled) {
                u.next = 22;
                break;
              }
              return u.abrupt("return");
            case 22:
              l(this, Ue)[Ue].unmuteSelf();
            case 23:
              this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack });
            case 24:
            case "end":
              return u.stop();
          }
      }, n, this, [[11, 16]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "enableVideo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (l(this, or)[or].canProduceVideo !== ne.NotAllowed) {
                u.next = 2;
                break;
              }
              return u.abrupt("return");
            case 2:
              if (!(l(this, or)[or].canProduceVideo === ne.CanRequest && (this.stageStatus === "OFF_STAGE" || this.stageStatus === "REQUESTED_TO_JOIN_STAGE"))) {
                u.next = 4;
                break;
              }
              return u.abrupt("return");
            case 4:
              if (!this.videoEnabled) {
                u.next = 6;
                break;
              }
              return u.abrupt("return");
            case 6:
              return (i = l(this, Ve)[Ve]) === null || i === void 0 || i.getValue("callstats").videoOn(), u.next = 9, this.localMediaHandler.enableVideo(a);
            case 9:
              if (!(l(this, Ie)[Ie] && this.stageStatus === "ON_STAGE")) {
                u.next = 19;
                break;
              }
              return u.prev = 10, u.next = 13, l(this, Ue)[Ue].shareWebcam(this.videoTrack);
            case 13:
              u.next = 19;
              break;
            case 15:
              u.prev = 15, u.t0 = u.catch(10), this.logger.error("DyteSelf::enableVideo::Error while sharing video", { error: u.t0 }), this.videoEnabled && this.localMediaHandler.disableVideo();
            case 19:
              this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }), this.logger.info("DyteSelf.enableVideo", N({}, Vs(this)));
            case 21:
            case "end":
              return u.stop();
          }
      }, n, this, [[10, 15]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateVideoConstraints", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.localMediaHandler.updateVideoConstraints) {
                s.next = 2;
                break;
              }
              throw new U("Unsupported", "1102");
            case 2:
              return s.next = 4, this.localMediaHandler.updateVideoConstraints(a);
            case 4:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "enableScreenShare", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, Ie)[Ie]) {
                i.next = 2;
                break;
              }
              throw new U("Can`t enable screenshare without joining room", "1105");
            case 2:
              if (l(this, or)[or].canProduceScreenshare !== ne.NotAllowed) {
                i.next = 4;
                break;
              }
              return i.abrupt("return");
            case 4:
              if (!(l(this, or)[or].canProduceScreenshare === ne.CanRequest && (this.stageStatus === "OFF_STAGE" || this.stageStatus === "REQUESTED_TO_JOIN_STAGE"))) {
                i.next = 6;
                break;
              }
              return i.abrupt("return");
            case 6:
              if (!this.screenShareEnabled) {
                i.next = 8;
                break;
              }
              return i.abrupt("return");
            case 8:
              return i.next = 10, this.localMediaHandler.enableScreenShare();
            case 10:
              if (!(this.screenShareTracks.audio || this.screenShareTracks.video)) {
                i.next = 23;
                break;
              }
              return i.prev = 11, i.next = 14, l(this, Ue)[Ue].shareScreen(this.screenShareTracks);
            case 14:
              i.next = 22;
              break;
            case 16:
              if (i.prev = 16, i.t0 = i.catch(11), this.logger.error("DyteSelf::enableScreenShare::Error while sharing screen", { error: i.t0 }), !this.screenShareEnabled) {
                i.next = 22;
                break;
              }
              return i.next = 22, this.localMediaHandler.disableScreenShare();
            case 22:
              this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks });
            case 23:
            case "end":
              return i.stop();
          }
      }, n, this, [[11, 16]]);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateScreenshareConstraints", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.localMediaHandler.updateScreenshareConstraints) {
                s.next = 2;
                break;
              }
              throw new U("Unsupported", "1102");
            case 2:
              return s.next = 4, this.localMediaHandler.updateScreenshareConstraints(a);
            case 4:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableAudio", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.audioEnabled) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              this.localMediaHandler.disableAudio(), l(this, Ie)[Ie] && l(this, Ue)[Ue].muteSelf(), this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack }), (a = l(this, Ve)[Ve]) === null || a === void 0 || a.getValue("callstats").audioOff();
            case 6:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableVideo", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.videoEnabled) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              return s.next = 4, this.localMediaHandler.disableVideo();
            case 4:
              if (!l(this, Ie)[Ie]) {
                s.next = 7;
                break;
              }
              return s.next = 7, l(this, Ue)[Ue].pauseWebcam();
            case 7:
              this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }), (a = l(this, Ve)[Ve]) === null || a === void 0 || a.getValue("callstats").videoOff();
            case 9:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "disableScreenShare",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        return p().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (this.screenShareEnabled) {
                  i.next = 2;
                  break;
                }
                return i.abrupt("return");
              case 2:
                return i.next = 4, this.localMediaHandler.disableScreenShare();
              case 4:
                if (!l(this, Ie)[Ie]) {
                  i.next = 7;
                  break;
                }
                return i.next = 7, l(this, Ue)[Ue].disableScreenShare();
              case 7:
                this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks });
              case 8:
              case "end":
                return i.stop();
            }
        }, n, this);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Returns all media devices accessible by the local participant.
    */
  }, {
    key: "getAllDevices",
    value: function() {
      return this.localMediaHandler.getAllDevices();
    }
    /**
    * @access private
    * Not for external use.
    */
  }, {
    key: "setIsPinned",
    value: function(r) {
      var n, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      l(this, Pi)[Pi] = r;
      var i = r ? "pinned" : "unpinned";
      (n = l(this, Dt)[Dt]) === null || n === void 0 || n.updateSource(this.id, { pinned: r }), a && this.emit(i, this);
    }
    /**
    * Returns true if the current user is pinned.
    */
  }, {
    key: "isPinned",
    get: function() {
      return l(this, Pi)[Pi];
    }
    /**
    * Returns `self.id` if user has permission
    * to pin participants.
    */
  }, { key: "pin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, Ie)[Ie]) {
                i.next = 2;
                break;
              }
              throw new U("Can`t pin participants without joining room", "1105");
            case 2:
              return this.show(), i.abrupt("return", l(this, Ue)[Ue].pinPeer(this.id));
            case 4:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "unpin", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, Ie)[Ie]) {
                i.next = 2;
                break;
              }
              throw new U("Can`t unpin participants without joining room", "1105");
            case 2:
              return i.abrupt("return", l(this, Ue)[Ue].pinPeer(null));
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "hide", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, Ie)[Ie]) {
                i.next = 2;
                break;
              }
              throw new U("Can`t toggle participant tile without joining room", "1105");
            case 2:
              this.hidden = !0, this.emit("toggleTile", { hidden: this.hidden });
            case 4:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "show", value: function() {
    if (!l(this, Ie)[Ie])
      throw new U("Can`t toggle participant tile without joining room", "1105");
    this.hidden = !1, this.emit("toggleTile", { hidden: this.hidden });
  } }, { key: "setDevice", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (a) {
                h.next = 2;
                break;
              }
              throw new U("No device selected", "1104");
            case 2:
              if (c = this.getCurrentDevices(), !(a.deviceId && ((c == null || (i = c.audio) === null || i === void 0 ? void 0 : i.deviceId) === a.deviceId || (c == null || (s = c.video) === null || s === void 0 ? void 0 : s.deviceId) === a.deviceId || (c == null || (u = c.speaker) === null || u === void 0 ? void 0 : u.deviceId) === a.deviceId))) {
                h.next = 7;
                break;
              }
              if (this.logger.warn("DyteSelf.setDevice.setting_to_in_use_device", { devices: [a] }), !l(this, Ve)[Ve].getValue("flagsmith").hasFeature(ve.SKIP_SETTING_IN_USE_DEVICE)) {
                h.next = 7;
                break;
              }
              throw new U("Cannot set device currently in use", "1106");
            case 7:
              h.t0 = a.kind, h.next = h.t0 === "audioinput" ? 10 : h.t0 === "audiooutput" ? 22 : h.t0 === "videoinput" ? 25 : 37;
              break;
            case 10:
              return h.prev = 10, h.next = 13, this.localMediaHandler.setAudioDevice(a);
            case 13:
              h.next = 21;
              break;
            case 15:
              if (h.prev = 15, h.t1 = h.catch(10), !l(this, Ie)[Ie]) {
                h.next = 20;
                break;
              }
              return h.next = 20, l(this, Ue)[Ue].muteSelf();
            case 20:
              this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack });
            case 21:
              return h.abrupt("break", 37);
            case 22:
              return h.next = 24, this.localMediaHandler.setSpeakerDevice(a);
            case 24:
              return h.abrupt("break", 37);
            case 25:
              return h.prev = 25, h.next = 28, this.localMediaHandler.setVideoDevice(a);
            case 28:
              h.next = 36;
              break;
            case 30:
              if (h.prev = 30, h.t2 = h.catch(25), !l(this, Ie)[Ie]) {
                h.next = 35;
                break;
              }
              return h.next = 35, l(this, Ue)[Ue].pauseWebcam();
            case 35:
              this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack });
            case 36:
              return h.abrupt("break", 37);
            case 37:
            case "end":
              return h.stop();
          }
      }, n, this, [[10, 15], [25, 30]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "cleanUpTracks", value: function() {
    var r, n, a, i;
    (r = this.audioTrack) === null || r === void 0 || r.stop(), (n = this.rawAudioTrack) === null || n === void 0 || n.stop(), (a = this.videoTrack) === null || a === void 0 || a.stop(), (i = this.rawVideoTrack) === null || i === void 0 || i.stop();
  } }, { key: "playAudio", value: function() {
    var r;
    return (r = l(this, Si)[Si]) === null || r === void 0 ? void 0 : r.play();
  } }, { key: "registerVideoElement", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    if (r && (n ? l(this, Mi)[Mi].add(r) : l(this, Di)[Di].add(r), this.updateVideo(r), !n)) {
      var a, i;
      (a = l(this, Dt)[Dt]) === null || a === void 0 || a.addSource(this.id, r, this.videoEnabled, this.isPinned, this.name, this.picture, (i = this.raised) !== null && i !== void 0 ? i : !1);
    }
  } }, {
    key: "deregisterVideoElement",
    value: function(r) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      if (!r) {
        l(this, Dt)[Dt].removeSource(this.id);
        return;
      }
      r.srcObject = void 0, n ? l(this, Mi)[Mi].delete(r) : (l(this, Di)[Di].delete(r), l(this, Dt)[Dt].removeSource(this.id));
    }
    /**
    * Internal method, do not use
    */
  }, { key: "updateVideo", value: function(r) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    if (this.videoEnabled) {
      var a;
      if (this.videoTrack == null)
        return;
      var i = (a = r.srcObject) === null || a === void 0 ? void 0 : a.getTracks()[0];
      if ((i == null ? void 0 : i.id) === this.videoTrack.id)
        return;
      var s = new MediaStream();
      if (s.addTrack(this.videoTrack), r.srcObject = s, !n) {
        var u;
        (u = l(this, Dt)[Dt]) === null || u === void 0 || u.enableSource(this.id);
      }
    } else if (r.srcObject = void 0, !n) {
      var c;
      (c = l(this, Dt)[Dt]) === null || c === void 0 || c.disableSource(this.id);
    }
    r.style.display = this.videoEnabled ? "block" : "none";
  } }], [{ key: "__init__", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s, u, c) {
      var d, h, v, f, g, k, y, b, S, T, A, L, I = arguments;
      return p().wrap(function(V) {
        for (; ; )
          switch (V.prev = V.next) {
            case 0:
              if (y = I.length > 5 && I[5] !== void 0 ? I[5] : !1, b = (d = (h = a.getValue("defaults")) === null || h === void 0 ? void 0 : h.audio) !== null && d !== void 0 ? d : !0, S = (v = (f = a.getValue("defaults")) === null || f === void 0 ? void 0 : f.video) !== null && v !== void 0 ? v : !0, s.canProduceAudio !== "ALLOWED" && (b = !1), s.canProduceVideo !== "ALLOWED" && (S = !1), T = new tt(a, i, s, u, c), u.viewType !== Lt.Chat) {
                V.next = 8;
                break;
              }
              return V.abrupt("return", T);
            case 8:
              return A = RI(u.mediaConstraints), Ci(A, (g = a.getValue("defaults")) === null || g === void 0 ? void 0 : g.mediaConfiguration), L = (k = a.getValue("defaults")) === null || k === void 0 ? void 0 : k.mediaHandler, L && (L.context = a), V.next = 14, T.init({ audio: b, video: S, constraints: A }, y, a);
            case 14:
              return T.setupEvents(), V.abrupt("return", T);
            case 16:
            case "end":
              return V.stop();
          }
      }, n);
    }));
    function r(n, a, i, s, u) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(wg));
function $_() {
  return l(this, Ve)[Ve].getValue("pip");
}
function V_() {
  return l(this, Ve)[Ve].getValue("roomNodeClient");
}
function U_() {
  return l(this, Ve)[Ve].getValue("audioPlayback");
}
function j_() {
  var o;
  return ((o = l(this, Ve)[Ve].getValue("connectionHandler")) === null || o === void 0 ? void 0 : o.mediaJoined) === !0;
}
function F_() {
  var o = this;
  Array.from(l(this, Di)[Di]).forEach(function(t) {
    return o.updateVideo(t, !1);
  }), Array.from(l(this, Mi)[Mi]).forEach(function(t) {
    return o.updateVideo(t, !0);
  });
}
Et([D.trace("DyteSelf.cleanupEvents")], tt.prototype, "cleanupEvents", 1);
Et([D.trace("DyteSelf.setupEvents")], tt.prototype, "setupEvents", 1);
Et([D.trace("DyteSelf.setupTracks")], tt.prototype, "setupTracks", 1);
Et([D.trace("DyteSelf.destructMediaHandler")], tt.prototype, "destructMediaHandler", 1);
Et([D.trace("DyteSelf.removeDocumentEventListeners")], tt.prototype, "removeDocumentEventListeners", 1);
Et([xa.executeWithLock({ methodName: "meeting.self.enableAudio", lockName: "DyteSelf.toggleAudio", timeout: 3e3 }), D.trace("DyteSelf.enableAudio")], tt.prototype, "enableAudio", 1);
Et([xa.executeWithLock({ methodName: "meeting.self.enableVideo", lockName: "DyteSelf.toggleVideo", timeout: 3e3 }), D.trace("DyteSelf.enableVideo")], tt.prototype, "enableVideo", 1);
Et([D.trace("DyteSelf.updateVideoConstraints")], tt.prototype, "updateVideoConstraints", 1);
Et([D.trace("DyteSelf.enableScreenShare"), xa.executeWithLock({ methodName: "meeting.self.enableScreenShare", lockName: "DyteSelf.toggleScreenShare", timeout: 3e3 })], tt.prototype, "enableScreenShare", 1);
Et([D.trace("DyteSelf.updateScreenshareConstraints")], tt.prototype, "updateScreenshareConstraints", 1);
Et([xa.executeWithLock({ methodName: "meeting.self.disableAudio", lockName: "DyteSelf.toggleAudio", timeout: 3e3 }), D.trace("DyteSelf.disableAudio")], tt.prototype, "disableAudio", 1);
Et([xa.executeWithLock({ methodName: "meeting.self.disableVideo", lockName: "DyteSelf.toggleVideo", timeout: 3e3 }), D.trace("DyteSelf.disableVideo")], tt.prototype, "disableVideo", 1);
Et([xa.executeWithLock({ methodName: "meeting.self.disableScreenShare", lockName: "DyteSelf.toggleScreenShare", timeout: 3e3 }), D.trace("DyteSelf.disableScreenShare")], tt.prototype, "disableScreenShare", 1);
Et([D.trace("DyteSelf.setDevice")], tt.prototype, "setDevice", 1);
tt = Et([vt("1100")], tt);
var H_ = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t, [e != null ? e : "AwaitQueue stopped"]), r.name = "AwaitQueueStoppedError", typeof Error.captureStackTrace == "function" && Error.captureStackTrace(r, t), r;
  }
  return R(t, o), P(t);
}(/* @__PURE__ */ Zs(Error)), B_ = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t, [e != null ? e : "AwaitQueue task removed"]), r.name = "AwaitQueueRemovedTaskError", typeof Error.captureStackTrace == "function" && Error.captureStackTrace(r, t), r;
  }
  return R(t, o), P(t);
}(/* @__PURE__ */ Zs(Error)), fu = /* @__PURE__ */ E("logger"), Kd = /* @__PURE__ */ function() {
  function o(t) {
    var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    w(this, o), this.pendingTasks = /* @__PURE__ */ new Map(), this.nextTaskId = 0, this.stopping = !1, Object.defineProperty(this, fu, { writable: !0, value: void 0 }), this.log = e, l(this, fu)[fu] = { info: e && t ? t.info : function() {
    } };
  }
  return P(o, [{ key: "size", get: function() {
    return this.pendingTasks.size;
  } }, { key: "push", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s = this;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (a = a != null ? a : n.name, typeof n == "function") {
                c.next = 3;
                break;
              }
              throw new TypeError("given task is not a function");
            case 3:
              if (a)
                try {
                  Object.defineProperty(n, "name", { value: a });
                } catch (d) {
                }
              return c.abrupt("return", new Promise(function(d, h) {
                var v = { id: s.nextTaskId++, task: n, metadata: i, name: a, enqueuedAt: Date.now(), executedAt: void 0, completed: !1, resolve: function(g) {
                  if (!v.completed) {
                    v.completed = !0, s.pendingTasks.delete(v.id), d(g);
                    var k = s.pendingTasks.values(), y = Me(k, 1), b = y[0];
                    b && !b.executedAt && s.execute(b);
                  }
                }, reject: function(g) {
                  if (!v.completed && (v.completed = !0, s.pendingTasks.delete(v.id), h(g), !s.stopping)) {
                    var k = s.pendingTasks.values(), y = Me(k, 1), b = y[0];
                    b && !b.executedAt && s.execute(b);
                  }
                } };
                s.pendingTasks.set(v.id, v), s.pendingTasks.size === 1 && s.execute(v);
              }));
            case 5:
            case "end":
              return c.stop();
          }
      }, r);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stop", value: function() {
    this.stopping = !0;
    var e = Hn(this.pendingTasks.values()), r;
    try {
      for (e.s(); !(r = e.n()).done; ) {
        var n = r.value;
        n.reject(new H_());
      }
    } catch (a) {
      e.e(a);
    } finally {
      e.f();
    }
    this.stopping = !1;
  } }, { key: "remove", value: function(e) {
    var r = Array.from(this.pendingTasks.values())[e];
    r && r.reject(new B_());
  } }, { key: "get", value: function(e) {
    return Array.from(this.pendingTasks.values())[e];
  } }, { key: "dump", value: function() {
    var e = Date.now(), r = 0;
    return Array.from(this.pendingTasks.values()).map(function(n) {
      return { idx: r++, task: n.task, name: n.name, enqueuedTime: n.executedAt ? n.executedAt - n.enqueuedAt : e - n.enqueuedAt, executionTime: n.executedAt ? e - n.executedAt : 0 };
    });
  } }, { key: "execute", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (!n.executedAt) {
                c.next = 2;
                break;
              }
              throw new Error("task already being executed");
            case 2:
              return n.executedAt = Date.now(), c.prev = 3, a = this.pendingTasks.size, c.next = 7, n.task();
            case 7:
              i = c.sent, s = Date.now(), l(this, fu)[fu].info("AwaitQueue.push(".concat(n.name, ")_timings"), { awaitQueueTask: { id: n.id, metadata: n.metadata, queueSizeAtStart: a, execTime: (s - n.executedAt) / 1e3, taskStartTime: (n.executedAt - n.enqueuedAt) / 1e3 } }), n.resolve(i), c.next = 16;
              break;
            case 13:
              c.prev = 13, c.t0 = c.catch(3), n.reject(c.t0);
            case 16:
            case "end":
              return c.stop();
          }
      }, r, this, [[3, 13]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}();
function q_(o, t) {
  var e = new Error(t);
  return e.name = o, e;
}
var zd = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t, [e]), r.name = "UnsupportedError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(r, t) : r.stack = new Error(e).stack, r;
  }
  return R(t, o), P(t);
}(U), bn = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t, [e]), r.name = "InvalidStateError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(r, t) : r.stack = new Error(e).stack, r;
  }
  return R(t, o), P(t);
}(U), Qs = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t, [e]), r.name = "TransportConnectionError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(r, bn) : r.stack = new Error(e).stack, r;
  }
  return R(t, o), P(t);
}(U), gv = function(t) {
  return new Promise(function(e) {
    return setTimeout(e, t);
  });
};
function Pg(o, t) {
  return Yd.apply(this, arguments);
}
function Yd() {
  return Yd = m(/* @__PURE__ */ p().mark(function o(t, e) {
    return p().wrap(function(n) {
      for (; ; )
        switch (n.prev = n.next) {
          case 0:
            return n.abrupt("return", new Promise(/* @__PURE__ */ function() {
              var a = m(/* @__PURE__ */ p().mark(function i(s, u) {
                var c, d, h, v, f, g, k, y, b;
                return p().wrap(function(T) {
                  for (; ; )
                    switch (T.prev = T.next) {
                      case 0:
                        c = N({ strategy: "linear", maxRetryCount: 3, delayTime: 10 }, e), d = c.strategy, h = c.maxRetryCount, v = c.delayTime, f = 0, k = !1, y = function(L) {
                          k = !0, u(L);
                        };
                      case 4:
                        if (!(f < h)) {
                          T.next = 32;
                          break;
                        }
                        return T.prev = 5, T.next = 8, t(f, y);
                      case 8:
                        return b = T.sent, T.abrupt("return", s(b));
                      case 12:
                        if (T.prev = 12, T.t0 = T.catch(5), g = T.t0, !k) {
                          T.next = 17;
                          break;
                        }
                        return T.abrupt("break", 32);
                      case 17:
                        if (!(f < h)) {
                          T.next = 28;
                          break;
                        }
                        if (d !== "linear") {
                          T.next = 23;
                          break;
                        }
                        return T.next = 21, gv(v * (f + 1));
                      case 21:
                        T.next = 26;
                        break;
                      case 23:
                        if (d !== "exponential") {
                          T.next = 26;
                          break;
                        }
                        return T.next = 26, gv(v * (f + Math.max(0, f - 1)));
                      case 26:
                        T.next = 29;
                        break;
                      case 28:
                        return T.abrupt("break", 32);
                      case 29:
                        f += 1, T.next = 4;
                        break;
                      case 32:
                        return T.abrupt("return", u(g));
                      case 33:
                      case "end":
                        return T.stop();
                    }
                }, i, null, [[5, 12]]);
              }));
              return function(i, s) {
                return a.apply(this, arguments);
              };
            }()));
          case 1:
          case "end":
            return n.stop();
        }
    }, o);
  })), Yd.apply(this, arguments);
}
function G_(o) {
  return o.map(function(t) {
    var e = { channels: t.channels, clockRate: t.clockRate, mimeType: t.mimeType, sdpFmtpLine: t.sdpFmtpLine };
    return e;
  });
}
function W_(o) {
  return o.map(function(t) {
    var e = { uri: t.uri };
    return e;
  });
}
function Ll(o) {
  var t = { codecs: G_(o.codecs), headerExtensions: W_(o.headerExtensions ? o.headerExtensions : []) };
  return t;
}
function J_(o) {
  var t = RTCRtpReceiver.getCapabilities("audio"), e = RTCRtpReceiver.getCapabilities("video"), r = RTCRtpSender.getCapabilities("audio"), n = RTCRtpSender.getCapabilities("video");
  o && (e.codecs = e.codecs.filter(function(u) {
    var c = u.mimeType;
    return o === c;
  }), n.codecs = n.codecs.filter(function(u) {
    var c = u.mimeType;
    return o === c;
  }));
  var a = { audio: Ll(t), video: Ll(e) }, i = { audio: Ll(r), video: Ll(n) }, s = { sender: i, receiver: a };
  return s;
}
var Be = /* @__PURE__ */ E("socket"), K_ = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, Be, { writable: !0, value: void 0 }), this.events = void 0, this.sfuType = void 0, l(this, Be)[Be] = t, this.sfuType = e, this.events = e === Mr.CF ? Un : kn;
  }
  return P(o, [{ key: "joinRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s, u, c, d = arguments;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return s = d.length > 3 && d[3] !== void 0 ? d[3] : !1, u = d.length > 4 && d[4] !== void 0 ? d[4] : null, c = { roomUuid: n, displayName: a, prejoined: s, capabilities: i }, u && (c.location = u), v.next = 6, l(this, Be)[Be].sendMessagePromiseWithTimeout({ event: this.events.joinRoom, protobuf: CP.toBinary(c), timeout: 5e3 });
            case 6:
              return v.abrupt("return", v.sent.payload);
            case 7:
            case "end":
              return v.stop();
          }
      }, r, this);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "connectTransport", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return v.next = 2, l(this, Be)[Be].sendMessagePromise(this.events.createWebRTCTransport, eP.toBinary(n));
            case 2:
              return a = v.sent.payload, i = Wf.fromBinary(a), s = i.transportId, u = i.description, c = i.producerIds, d = { sdp: u == null ? void 0 : u.sdp, type: u.type }, v.abrupt("return", { transportId: s, answer: d, producerIds: c });
            case 6:
            case "end":
              return v.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "produce", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return h.next = 2, l(this, Be)[Be].sendMessagePromise(this.events.produce, HP.toBinary(n));
            case 2:
              return s = h.sent.payload, u = PS.fromBinary(s), c = { sdp: u == null || (a = u.description) === null || a === void 0 ? void 0 : a.sdp, type: u == null || (i = u.description) === null || i === void 0 ? void 0 : i.type }, h.abrupt("return", { answer: c, producerId: u.producerId });
            case 6:
            case "end":
              return h.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "consume", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (this.sfuType !== Mr.HIVE) {
                d.next = 2;
                break;
              }
              throw new Error("Hive does not support socket consumer operations");
            case 2:
              return d.next = 4, l(this, Be)[Be].sendMessagePromise(this.events.consume, NP.toBinary(n));
            case 4:
              return a = d.sent.payload, i = TS.fromBinary(a), s = i.consumerIdsMap.map, u = i.description, d.abrupt("return", { consumerStateMap: s, sessionDescription: u });
            case 7:
            case "end":
              return d.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "closeProducer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.next = 2, l(this, Be)[Be].sendMessagePromise(this.events.closeProducer, zP.toBinary(n));
            case 2:
              return a = c.sent.payload, i = _S.fromBinary(a), s = i.description, c.abrupt("return", s);
            case 5:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "closeConsumer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (this.sfuType !== Mr.HIVE) {
                i.next = 2;
                break;
              }
              throw new Error("Hive does not support socket consumer operations");
            case 2:
              return i.next = 4, l(this, Be)[Be].sendMessagePromise(this.events.closeConsumer, QP.toBinary(n));
            case 4:
              return i.abrupt("return", i.sent.payload);
            case 5:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateConsumersSimulcastConfig", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (this.sfuType !== Mr.HIVE) {
                i.next = 2;
                break;
              }
              throw new Error("Method not implemented");
            case 2:
              return i.next = 4, l(this, Be)[Be].sendMessagePromise(this.events.updateConsumersSimulcastConfig, jP.toBinary(n));
            case 4:
              return i.abrupt("return", i.sent.payload);
            case 5:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "hostControlForPeer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return i = { audio: a === "audio", screeShare: !1, video: a === "video", participantId: n }, h.next = 3, l(this, Be)[Be].sendMessagePromise(this.events.hostControlPeer, tS.toBinary(i));
            case 3:
              if (s = h.sent.payload, s) {
                h.next = 6;
                break;
              }
              return h.abrupt("return", !1);
            case 6:
              return u = VS.fromBinary(s), c = u.status, h.abrupt("return", c === "success");
            case 8:
            case "end":
              return h.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "hostControlForAll",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n) {
        var a, i, s, u;
        return p().wrap(function(d) {
          for (; ; )
            switch (d.prev = d.next) {
              case 0:
                return a = { audio: n === "audio", screenShare: !1, video: n === "video" }, d.next = 3, l(this, Be)[Be].sendMessagePromise(this.events.hostControlAllPeers, aS.toBinary(a));
              case 3:
                if (i = d.sent.payload, i) {
                  d.next = 6;
                  break;
                }
                return d.abrupt("return", !1);
              case 6:
                return s = jS.fromBinary(i), u = s.status, d.abrupt("return", u === "success");
              case 8:
              case "end":
                return d.stop();
            }
        }, r, this);
      }));
      function e(r) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Ideally should have been async with a response but
    * this is basically a fire and forget since socket does not
    * send a response at the moment
    */
  }, { key: "kickAll", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              n = { propagateKickAcrossRooms: !1 }, l(this, Be)[Be].sendMessagePromise(
                /**
                * Does not use mediaEventSlugs is the same irrespective of the SFU
                */
                X.kickAll,
                Yf.toBinary(n)
              );
            case 2:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kickPeer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              l(this, Be)[Be].sendMessagePromise(
                /**
                * Does not use mediaEventSlugs is the same irrespective of the SFU
                */
                X.kick,
                eg.toBinary(n)
              );
            case 1:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "changeDisplayName", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.next = 2, l(this, Be)[Be].sendMessagePromise(this.events.changeDisplayName, eS.toBinary(n));
            case 2:
              if (a = c.sent.payload, a) {
                c.next = 5;
                break;
              }
              return c.abrupt("return", !1);
            case 5:
              return i = HS.fromBinary(a), s = i.status, c.abrupt("return", s === "success");
            case 7:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "notifySelfJoinComplete", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return n = {}, s.next = 3, l(this, Be)[Be].sendMessagePromise(this.events.selfJoinComplete, AP.toBinary(n));
            case 3:
              return a = s.sent.payload, s.abrupt("return", _d.fromBinary(a));
            case 5:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "audioActivity", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              l(this, Be)[Be].sendMessage(this.events.audioActivity, tP.toBinary(n));
            case 1:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), gu = /* @__PURE__ */ E("context"), _c = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    return w(this, t), r = C(this, t), Object.defineProperty(r, gu, { writable: !0, value: void 0 }), l(r, gu)[gu] = e, r.setMaxListeners(1 / 0), r;
  }
  return R(t, o), P(t, [{ key: "logger", get: function() {
    return l(this, gu)[gu].getValue("logger");
  } }, { key: "safeEmit", value: function(r) {
    var n = this.listenerCount(r);
    try {
      for (var a = arguments.length, i = new Array(a > 1 ? a - 1 : 0), s = 1; s < a; s++)
        i[s - 1] = arguments[s];
      return this.emit.apply(this, [r].concat(i));
    } catch (u) {
      return this.logger.error("EnhancedEventEmitter:: safeEmit() | event listener ".concat(r, " threw an error"), { error: u }), Boolean(n);
    }
  } }, { key: "safeEmitAsPromise", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s, u, c, d = arguments;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              for (i = {}.EVENT_PROMISE_TIMEOUT ? parseInt({}.EVENT_PROMISE_TIMEOUT, 10) : 1e4, s = d.length, u = new Array(s > 1 ? s - 1 : 0), c = 1; c < s; c++)
                u[c - 1] = d[c];
              return v.abrupt("return", this.safeEmitAsPromiseWithTimeout.apply(this, [a, i].concat(u)));
            case 3:
            case "end":
              return v.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "safeEmitAsPromiseWithTimeout", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s = this, u, c, d, h = arguments;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              for (u = h.length, c = new Array(u > 2 ? u - 2 : 0), d = 2; d < u; d++)
                c[d - 2] = h[d];
              return f.abrupt("return", new Promise(function(g, k) {
                setTimeout(k, i, "event request timeout");
                try {
                  s.emit.apply(s, [a.toString()].concat(c, [g, k]));
                } catch (y) {
                  s.logger.error("EnhancedEventEmitter:: safeEmitAsPromise() | event listener for event ".concat(a.toString(), " threw an error [event:%s]:%o"), { error: y }), k(y);
                }
              }));
            case 2:
            case "end":
              return f.stop();
          }
      }, n);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(ht.EventEmitter), Kp = /* @__PURE__ */ function(o) {
  function t() {
    var e;
    w(this, t);
    for (var r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    return e = C(this, t, [].concat(n)), e._sendWebStream = new MediaStream(), e._sendScreenShareStream = new MediaStream(), e._direction = void 0, e.pc = void 0, e._transportReady = !1, e._mapMidTransceiver = /* @__PURE__ */ new Map(), e.enableHighBitrate = !1, e.enableStereo = !1, e.enableDtx = !0, e.sfu = Mr.HIVE, e;
  }
  return R(t, o), P(t, [{ key: "midTransceiverMap", get: function() {
    return this._mapMidTransceiver;
  } }, { key: "close", value: function() {
    if (this.logger.debug("".concat(this.name, "::close()")), this.pc)
      try {
        this.pc.close();
      } catch (r) {
        this.logger.error("".concat(this.name, "::pc.close()"), { error: r });
      }
  } }, { key: "restartIce", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a = this, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return this.logger.debug("".concat(this.name, "::restartIce()")), c.next = 3, this.pc.createOffer({ iceRestart: !0 });
            case 3:
              return i = c.sent, this.logger.debug("".concat(this.name, "::restartIce() | calling pc.setLocalDescription() [offer:").concat(JSON.stringify(i), "]")), s = /* @__PURE__ */ function() {
                var d = m(/* @__PURE__ */ p().mark(function h(v) {
                  return p().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          return a.logger.info("".concat(a.name, "::restartIce() | calling pc.setRemoteDescription() [answer:").concat(JSON.stringify(v), "]")), g.next = 3, a.pc.setRemoteDescription(v);
                        case 3:
                        case "end":
                          return g.stop();
                      }
                  }, h);
                }));
                return function(v) {
                  return d.apply(this, arguments);
                };
              }(), c.abrupt("return", { offerSdp: i, callback: s });
            case 7:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "init", value: function(r) {
    var n = r.direction, a = r.iceServers, i = r.iceTransportPolicy, s = r.additionalSettings, u = r.proprietaryConstraints, c = r.onTrackHandler;
    this.logger.debug("HandlerInterface::init()"), this._direction = n, this.pc = new RTCPeerConnection(N({ iceServers: a || [], iceTransportPolicy: i || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require" }, s), u), c && this.pc.addEventListener("track", function(d) {
      c(d);
    }), this._addEventListeners();
  } }, { key: "connect", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      var a = this, i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return this.sfu === Mr.CF ? this.pc.addTransceiver("video", { direction: "sendonly" }) : i = this.pc.createDataChannel("dyte"), d.next = 3, this.pc.createOffer();
            case 3:
              return s = d.sent, d.next = 6, this.pc.setLocalDescription(s);
            case 6:
              return this.logger.info("connect offer: ".concat(JSON.stringify(s))), u = /* @__PURE__ */ function() {
                var h = m(/* @__PURE__ */ p().mark(function v(f) {
                  var g;
                  return p().wrap(function(y) {
                    for (; ; )
                      switch (y.prev = y.next) {
                        case 0:
                          return a.logger.debug("".concat(a.name, "::connect() | calling pc.setRemoteDescription() [answer:").concat(JSON.stringify(f), "]")), y.next = 3, a.pc.setRemoteDescription(f);
                        case 3:
                          (g = i) === null || g === void 0 || g.close();
                        case 4:
                        case "end":
                          return y.stop();
                      }
                  }, v);
                }));
                return function(f) {
                  return h.apply(this, arguments);
                };
              }(), d.abrupt("return", { offerSdp: s, callback: u });
            case 9:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getTransportStats", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "_assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "_assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }, { key: "getReceiverStats", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this._assertRecvDirection(), i = this.midTransceiverMap.get(a), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "stopSending", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertSendDirection(), this.logger.debug("stopSending() [localId:".concat(a, "]")), s = this.midTransceiverMap.get(a), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.sender.replaceTrack(null), this.pc.removeTrack(s.sender), s.direction = "inactive", h.next = 10, this.pc.createOffer();
            case 10:
              return u = h.sent, this.logger.debug("stopSending() | calling pc.setLocalDescription() [offer:".concat(JSON.stringify(u), "]")), h.next = 14, this.pc.setLocalDescription(u);
            case 14:
              return c = /* @__PURE__ */ function() {
                var v = m(/* @__PURE__ */ p().mark(function f(g) {
                  return p().wrap(function(y) {
                    for (; ; )
                      switch (y.prev = y.next) {
                        case 0:
                          return i.logger.debug("stopSending() | calling pc.setRemoteDescription() [answer:".concat(JSON.stringify(g), "]")), y.next = 3, i.pc.setRemoteDescription(g);
                        case 3:
                          i.midTransceiverMap.delete(a);
                        case 4:
                        case "end":
                          return y.stop();
                      }
                  }, f);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: c });
            case 16:
            case "end":
              return h.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "replaceTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (this._assertSendDirection(), i ? this.logger.debug("replaceTrack() [localId:".concat(a, ", track.id:").concat(i.id, "]")) : this.logger.debug("replaceTrack() [localId:".concat(a, ", no track]")), s = this.midTransceiverMap.get(a), s) {
                c.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return c.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (this._assertSendDirection(), this.logger.debug("setMaxSpatialLayer() [localId:".concat(a, ", spatialLayer:").concat(i, "]")), s = this.midTransceiverMap.get(a), s) {
                d.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(h, v) {
                v <= i ? h.active = !0 : h.active = !1;
              }), d.next = 9, s.sender.setParameters(u);
            case 9:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (this._assertSendDirection(), this.logger.debug("setRtpEncodingParameters() [localId:".concat(a, ", params:").concat(JSON.stringify(i), "]")), s = this.midTransceiverMap.get(a), s) {
                d.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(h, v) {
                u.encodings[v] = N(N({}, h), i);
              }), d.next = 9, s.sender.setParameters(u);
            case 9:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "getSenderStats", value: function(r) {
    this._assertSendDirection();
    var n = this.midTransceiverMap.get(r);
    if (!n)
      throw new Error("associated RTCRtpTransceiver not found");
    return n.sender.getStats();
  } }, {
    key: "_addEventListeners",
    value: function() {
      var r = this;
      this.pc.addEventListener("icecandidate", function(n) {
        n.candidate && r.emit("@icecandidate", { candidate: n.candidate });
      }), this.pc.addEventListener("iceconnectionstatechange", function() {
        switch (r.pc.iceConnectionState) {
          case "checking":
            r.emit("@connectionstatechange", "connecting");
            break;
          case "connected":
          case "completed":
            r.emit("@connectionstatechange", "connected"), r._transportReady = !0;
            break;
          case "failed":
            r.emit("@connectionstatechange", "failed");
            break;
          case "disconnected":
            r.emit("@connectionstatechange", "disconnected");
            break;
          case "closed":
            r.emit("@connectionstatechange", "closed");
            break;
          default:
            r.logger.warn("unknown state");
            break;
        }
      }), this.pc.addEventListener("negotiationneeded", function() {
        r.emit("@negotiationneeded", {}), r.logger.debug("negotiationneeded");
      }), this.pc.addEventListener("icegatheringstatechange", function() {
        switch (r.pc.iceGatheringState) {
          case "gathering":
            r.logger.debug("icegatheringstatechange | gathering"), r.emit("@icegatheringstatechange", "gathering");
            break;
          case "complete":
            r.logger.debug("icegatheringstatechange | complete"), r.emit("@icegatheringstatechange", "complete");
            break;
          default:
            r.logger.warn("unknown state");
            break;
        }
      }), this.pc.addEventListener("icecandidateerror", function(n) {
        r.logger.warn("icecandidateerror", { error: { code: n.errorCode, message: n.errorText } });
      }), this.pc.addEventListener("datachannel", function(n) {
        r.logger.info("data channel created: ", { rtcChannel: { label: n.channel.label } });
        var a = n.channel;
        a.onopen = function() {
          r.logger.info("data channel open: ", { rtcChannel: { label: n.channel.label } }), r.safeEmit("dc_open", n.channel);
        }, a.onclose = function() {
          r.logger.warn("data channel closed: ", { rtcChannel: { label: n.channel.label } });
        }, a.onerror = function() {
          r.logger.error("data channel error: ", {
            rtcChannel: { label: n.channel.label }
            // error: error as unknown as LogData, // Need to fix this, where to get message, reason
          });
        };
      }), this.addCustomEventListeners();
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "addCustomEventListeners", value: function() {
  } }]);
}(_c), z_ = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, arguments);
  }
  return R(t, o), P(t, [{ key: "name", get: (
    // eslint-disable-next-line class-methods-use-this
    function() {
      return "Chrome74";
    }
  ) }, { key: "init", value: function(r) {
    var n = r.direction, a = r.iceServers, i = r.iceTransportPolicy, s = r.additionalSettings, u = r.proprietaryConstraints, c = r.onTrackHandler;
    this._direction = n, this.pc = new RTCPeerConnection(N({ iceServers: a || [], iceTransportPolicy: i || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }, s), u), c && this.pc.addEventListener("track", function(d) {
      c(d);
    }), this._addEventListeners();
  } }, { key: "send", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c, d, h, v, f, g, k, y, b, S;
      return p().wrap(function(A) {
        for (; ; )
          switch (A.prev = A.next) {
            case 0:
              return s = a.track, u = a.encodings, c = a.codecOptions, d = a.screenShare, this._assertSendDirection(), h = this.pc.addTransceiver(s, { direction: "sendonly", streams: [d ? this._sendScreenShareStream : this._sendWebStream], sendEncodings: u }), navigator.isReactNative || (this.logger.debug("creating new transceiver"), v = RTCRtpSender.getCapabilities(typeof s == "string" ? s : s.kind), this.logger.info("senders available params: ".concat(JSON.stringify(v))), f = [], c && c.length && c.forEach(function(L) {
                var I = v.codecs.find(function($) {
                  return $.mimeType.includes(L.name);
                });
                if (L.parameters) {
                  var M;
                  i.logger.debug("codecOption.parameters:".concat(JSON.stringify(L.parameters)));
                  var V = ((M = I.sdpFmtpLine) === null || M === void 0 ? void 0 : M.split(";")) || [];
                  V.push.apply(V, ke(L.parameters));
                  var j = Array.from(new Set(V).values());
                  I.sdpFmtpLine = j.join(";");
                }
                f.push(I);
              }), this.logger.info("selected codecs: ".concat(JSON.stringify(f))), h.setCodecPreferences(f)), A.next = 6, this.pc.createOffer();
            case 6:
              return g = A.sent, A.next = 9, this.pc.setLocalDescription(g);
            case 9:
              return c && c.findIndex(function(L) {
                var I = L.name;
                return I === "opus";
              }) >= 0 && (k = this.enableDtx, y = this.enableStereo, b = this.enableHighBitrate ? y ? 128e3 : 64e3 : y ? 64e3 : 32e3, g.sdp = g.sdp.replace("minptime=10;useinbandfec=1", "minptime=10;useinbandfec=1;".concat(k ? "usedtx=1;" : "").concat(y ? "stereo=1;sprop-stereo=1;" : "", "maxaveragebitrate=").concat(b)), g.sdp += `a=rtcp-fb:111 nack\r
`), this.midTransceiverMap.set(h.mid, h), S = /* @__PURE__ */ function() {
                var L = m(/* @__PURE__ */ p().mark(function I(M) {
                  return p().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return i.logger.debug("send() | calling pc.setRemoteDescription() [answer:".concat(JSON.stringify(M), "]")), j.next = 3, i.pc.setRemoteDescription(M);
                        case 3:
                          return j.abrupt("return", h.mid);
                        case 4:
                        case "end":
                          return j.stop();
                      }
                  }, I);
                }));
                return function(M) {
                  return L.apply(this, arguments);
                };
              }(), this.logger.debug("send() | calling pc.setLocalDescription() [offer: ".concat(JSON.stringify(g, void 0, 2), "]")), A.abrupt("return", { offerSdp: g, callback: S, sender: h.sender, mid: h.mid });
            case 14:
            case "end":
              return A.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "addCustomEventListeners", value: function() {
    var r = this;
    this.pc.addEventListener("datachannel", function(n) {
      var a = n.channel;
      a.onmessage = function(i) {
        r.safeEmit("datachannel", n.channel, String.fromCharCode.apply(String, ke(new Uint8Array(i.data))));
      };
    });
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function(r) {
      return function() {
        return new t(r);
      };
    }
  ) }]);
}(Kp), mv = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n;
    return w(this, t), n = C(this, t, [e]), n.supportsSendEncodings = !1, n.supportsSendEncodings = r.supportsSendEncodings, n;
  }
  return R(t, o), P(t, [{ key: "name", get: function() {
    return "Firefox60";
  } }, { key: "send", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c, d, h, v, f, g, k, y, b, S, T;
      return p().wrap(function(L) {
        for (; ; )
          switch (L.prev = L.next) {
            case 0:
              if (s = a.track, u = a.encodings, c = a.codecOptions, d = a.screenShare, this._assertSendDirection(), h = this.supportsSendEncodings && u !== void 0 ? { sendEncodings: u } : {}, v = this.pc.addTransceiver(s, N({ direction: "sendonly", streams: [d ? this._sendScreenShareStream : this._sendWebStream] }, h)), !(!this.supportsSendEncodings && u)) {
                L.next = 10;
                break;
              }
              return u.reverse(), f = v.sender.getParameters(), f.encodings = u, L.next = 10, v.sender.setParameters(f);
            case 10:
              return g = function(M, V) {
                var j, $ = Ln.parse(M), O = $.media[$.media.length - 1], B = O.rtp.filter(function(q) {
                  return V.some(function(te) {
                    return te.name === q.codec;
                  });
                }), Q = O.fmtp.filter(function(q) {
                  return B.some(function(te) {
                    return te.payload === q.payload;
                  });
                }), F = (j = O.rtcpFb) === null || j === void 0 ? void 0 : j.filter(function(q) {
                  return B.some(function(te) {
                    return te.payload === q.payload;
                  });
                }), z = B.map(function(q) {
                  return q.payload;
                });
                return $.media[$.media.length - 1].rtp = B, $.media[$.media.length - 1].fmtp = Q, $.media[$.media.length - 1].rtcpFb = F, $.media[$.media.length - 1].payloads = z.join(" "), Ln.write($);
              }, L.next = 13, this.pc.createOffer();
            case 13:
              return k = L.sent, k.sdp = g(k.sdp, c), this.logger.debug("send() | calling pc.setLocalDescription() [offer:".concat(JSON.stringify(k), "]")), L.next = 18, this.pc.setLocalDescription(k);
            case 18:
              return (s === "audio" || s.kind === "audio") && (y = this.enableDtx, b = this.enableStereo, S = this.enableHighBitrate ? b ? 128e3 : 64e3 : b ? 64e3 : 32e3, k.sdp = k.sdp.replace("minptime=10;useinbandfec=1", "minptime=10;useinbandfec=1;".concat(y ? "usedtx=1;" : "").concat(b ? "stereo=1;sprop-stereo=1;" : "", "maxaveragebitrate=").concat(S))), this.midTransceiverMap.set(v.mid, v), T = /* @__PURE__ */ function() {
                var I = m(/* @__PURE__ */ p().mark(function M(V) {
                  return p().wrap(function($) {
                    for (; ; )
                      switch ($.prev = $.next) {
                        case 0:
                          return i.logger.debug("send() | calling pc.setRemoteDescription() [answer:".concat(JSON.stringify(V), "]")), $.next = 3, i.pc.setRemoteDescription(V);
                        case 3:
                          return $.abrupt("return", v.mid);
                        case 4:
                        case "end":
                          return $.stop();
                      }
                  }, M);
                }));
                return function(V) {
                  return I.apply(this, arguments);
                };
              }(), L.abrupt("return", { offerSdp: k, callback: T, sender: v.sender, mid: v.mid });
            case 22:
            case "end":
              return L.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertSendDirection(), this.logger.debug("setMaxSpatialLayer() [localId:".concat(a, ", spatialLayer:").concat(i, "]")), s = this.midTransceiverMap.get(a), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), c = u.encodings.length - 1 - i, u.encodings.forEach(function(v, f) {
                f >= c ? v.active = !0 : v.active = !1;
              }), h.next = 10, s.sender.setParameters(u);
            case 10:
            case "end":
              return h.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "addCustomEventListeners", value: function() {
    var r = this;
    this.pc.addEventListener("datachannel", function(n) {
      var a = n.channel;
      a.onmessage = /* @__PURE__ */ function() {
        var i = m(/* @__PURE__ */ p().mark(function s(u) {
          var c;
          return p().wrap(function(h) {
            for (; ; )
              switch (h.prev = h.next) {
                case 0:
                  return h.next = 2, u.data.arrayBuffer();
                case 2:
                  c = h.sent, r.safeEmit("datachannel", n.channel, String.fromCharCode.apply(String, ke(new Uint8Array(c))));
                case 4:
                case "end":
                  return h.stop();
              }
          }, s);
        }));
        return function(s) {
          return i.apply(this, arguments);
        };
      }();
    });
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function(r, n) {
      return function() {
        return new t(r, n);
      };
    }
  ) }]);
}(Kp), Y_ = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, arguments);
  }
  return R(t, o), P(t, [{ key: "name", get: (
    // eslint-disable-next-line class-methods-use-this
    function() {
      return "Safari12";
    }
  ) }, { key: "send", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c, d, h, v, f, g, k, y, b, S;
      return p().wrap(function(A) {
        for (; ; )
          switch (A.prev = A.next) {
            case 0:
              return s = a.track, u = a.encodings, c = a.codecOptions, d = a.screenShare, this._assertSendDirection(), this.logger.debug("Safari12::creating new transceiver"), h = this.pc.addTransceiver(s, { direction: "sendonly", streams: [d ? this._sendScreenShareStream : this._sendWebStream], sendEncodings: u }), v = RTCRtpSender.getCapabilities(typeof s == "string" ? s : s.kind), this.logger.info("Safari12::senders available params: ".concat(JSON.stringify(v))), f = [], c && c.length > 0 && c.forEach(function(L) {
                var I = v.codecs.find(function($) {
                  return $.mimeType.includes(L.name);
                });
                if (L.parameters) {
                  var M;
                  i.logger.info("Safari12::codecOption.parameters:, ".concat(JSON.stringify(L.parameters)));
                  var V = ((M = I.sdpFmtpLine) === null || M === void 0 ? void 0 : M.split(";")) || [];
                  V.push.apply(V, ke(L.parameters));
                  var j = ke(new Set(V).values());
                  I.sdpFmtpLine = j.join(";");
                }
                f.push(I);
              }), this.logger.info("Safari12::selected codecs: ".concat(JSON.stringify(f))), h.setCodecPreferences(f), A.next = 12, this.pc.createOffer();
            case 12:
              return g = A.sent, A.next = 15, this.pc.setLocalDescription(g);
            case 15:
              return (s === "audio" || s.kind === "audio") && (k = this.enableStereo, y = this.enableDtx, b = this.enableHighBitrate ? k ? 128e3 : 64e3 : k ? 64e3 : 32e3, g.sdp = g.sdp.replace("minptime=10;useinbandfec=1", "minptime=10;useinbandfec=1;".concat(y ? "usedtx=1;" : "").concat(k ? "stereo=1;sprop-stereo=1;" : "", "maxaveragebitrate=").concat(b))), this.midTransceiverMap.set(h.mid, h), S = /* @__PURE__ */ function() {
                var L = m(/* @__PURE__ */ p().mark(function I(M) {
                  return p().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return i.logger.debug("Safari12::send() | calling pc.setRemoteDescription() [answer:".concat(JSON.stringify(M), "]")), j.next = 3, i.pc.setRemoteDescription(M);
                        case 3:
                          return j.abrupt("return", h.mid);
                        case 4:
                        case "end":
                          return j.stop();
                      }
                  }, I);
                }));
                return function(M) {
                  return L.apply(this, arguments);
                };
              }(), A.abrupt("return", { offerSdp: g, callback: S, sender: h.sender, mid: h.mid });
            case 19:
            case "end":
              return A.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "addCustomEventListeners", value: function() {
    var r = this;
    this.pc.ondatachannel = function(n) {
      var a = n.channel;
      a.onmessage = /* @__PURE__ */ function() {
        var i = m(/* @__PURE__ */ p().mark(function s(u) {
          var c;
          return p().wrap(function(h) {
            for (; ; )
              switch (h.prev = h.next) {
                case 0:
                  c = String.fromCharCode.apply(String, ke(new Uint8Array(u.data))), r.safeEmit("datachannel", n.channel, c);
                case 2:
                case "end":
                  return h.stop();
              }
          }, s);
        }));
        return function(s) {
          return i.apply(this, arguments);
        };
      }();
    };
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function(r) {
      return function() {
        return new t(r);
      };
    }
  ) }]);
}(Kp);
function Q_(o, t) {
  return typeof o == "undefined" ? t : typeof window != "undefined" && Object.getOwnPropertyDescriptor(window, "structuredClone") ? structuredClone(o) : JSON.parse(JSON.stringify(o));
}
var mu = /* @__PURE__ */ E("handler"), Ea = /* @__PURE__ */ E("paused"), kt = /* @__PURE__ */ E("closed"), ad = /* @__PURE__ */ E("context"), Tt = /* @__PURE__ */ E("metadata"), tl = /* @__PURE__ */ E("onTrackEnded"), id = /* @__PURE__ */ E("handleTrack"), sd = /* @__PURE__ */ E("destroyTrack"), X_ = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n, a;
    return w(this, t), a = C(this, t, [e]), Object.defineProperty(a, sd, { value: rM }), Object.defineProperty(a, id, { value: eM }), Object.defineProperty(a, tl, { value: x_ }), Object.defineProperty(a, Tt, { get: Z_, set: void 0 }), a.rtpReceiver = void 0, a.id = void 0, a.localId = void 0, a.producerId = void 0, a.producingTransportId = void 0, a.mimeType = void 0, a.track = void 0, a.peerId = void 0, a.appData = void 0, a.transceiver = void 0, Object.defineProperty(a, mu, { writable: !0, value: void 0 }), Object.defineProperty(a, Ea, { writable: !0, value: void 0 }), Object.defineProperty(a, kt, { writable: !0, value: void 0 }), Object.defineProperty(a, ad, { writable: !0, value: void 0 }), a.id = r.id, a.localId = r.localId, l(a, mu)[mu] = r.handler, a.appData = r.appData, a.peerId = r.producingPeerId, a.producingTransportId = r.producingTransportId, l(a, kt)[kt] = !1, a.producerId = r.producerId, a.track = r.track, l(a, Ea)[Ea] = (n = r.paused) !== null && n !== void 0 ? n : !1, a.mimeType = r.mimeType, a.transceiver = r.transceiver, a.rtpReceiver = r.rtpReceiver, l(a, id)[id](), l(a, ad)[ad] = e, a;
  }
  return R(t, o), P(t, [{
    key: "closed",
    get: function() {
      return l(this, kt)[kt];
    }
    /**
    * Kind of media on to this consumer
    */
  }, {
    key: "kind",
    get: function() {
      return this.track.kind;
    }
    /**
    * Indicates whether the consumer is paused
    */
  }, { key: "paused", get: function() {
    return l(this, Ea)[Ea];
  } }, {
    key: "close",
    value: (
      /**
      * Closes the Consumer.
      */
      function(r, n) {
        l(this, kt)[kt] || (this.logger.debug("Consumer::close() ".concat(r ? "with reason ".concat(r) : ""), l(this, Tt)[Tt]), l(this, kt)[kt] = !0, n && (l(this, sd)[sd](), this.transceiver.stop()), this.safeEmit("close", r));
      }
    )
    /**
    * Get associated RTCRtpReceiver stats.
    */
  }, { key: "getStats", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!l(this, kt)[kt]) {
                i.next = 2;
                break;
              }
              throw new bn("closed");
            case 2:
              return i.abrupt("return", l(this, mu)[mu].getReceiverStats(this.localId));
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "pause",
    value: function() {
      if (this.logger.debug("consumer::pause()", l(this, Tt)[Tt]), l(this, kt)[kt]) {
        this.logger.error("consumer::pause() | Consumer closed", l(this, Tt)[Tt]);
        return;
      }
      l(this, Ea)[Ea] = !0, this.track.enabled = !1, this.safeEmit("pause");
    }
    /**
    * Resumes receiving media.
    */
  }, { key: "resume", value: function() {
    if (this.logger.debug("consumer::resume()", l(this, Tt)[Tt]), l(this, kt)[kt]) {
      this.logger.error("Consumer::resume() | Consumer closed", l(this, Tt)[Tt]);
      return;
    }
    l(this, Ea)[Ea] = !1, this.track.enabled = !0, this.safeEmit("resume");
  } }]);
}(_c);
function Z_() {
  return { consumer: { id: this.id, appData: this.appData, peerId: this.peerId, kind: this.kind } };
}
function x_() {
  this.logger.debug('Consumer::track "ended" event', l(this, Tt)[Tt]), this.safeEmit("trackended");
}
function eM() {
  this.track.addEventListener("ended", l(this, tl)[tl].bind(this));
}
function rM() {
  try {
    this.track.removeEventListener("ended", l(this, tl)[tl]), this.track.stop();
  } catch (o) {
    this.logger.error("Consumer::destroyTrack()", N(N({}, l(this, Tt)[Tt]), {}, { error: o }));
  }
}
var it = /* @__PURE__ */ E("handler"), Ss = /* @__PURE__ */ E("stopTracks"), Es = /* @__PURE__ */ E("disableTrackOnPause"), Ca = /* @__PURE__ */ E("zeroRtpOnPause"), Qr = /* @__PURE__ */ E("closed"), Je = /* @__PURE__ */ E("track"), _n = /* @__PURE__ */ E("paused"), Cs = /* @__PURE__ */ E("maxSpatialLayer"), od = /* @__PURE__ */ E("context"), jr = /* @__PURE__ */ E("metadata"), tM = /* @__PURE__ */ function(o) {
  function t(e, r) {
    var n, a, i;
    return w(this, t), i = C(this, t, [e]), Object.defineProperty(i, jr, { get: nM, set: void 0 }), i.id = void 0, i.localId = void 0, Object.defineProperty(i, it, { writable: !0, value: void 0 }), i.kind = void 0, i.appData = void 0, i.rtpSender = void 0, Object.defineProperty(i, Ss, { writable: !0, value: void 0 }), Object.defineProperty(i, Es, { writable: !0, value: void 0 }), Object.defineProperty(i, Ca, { writable: !0, value: void 0 }), Object.defineProperty(i, Qr, { writable: !0, value: !1 }), Object.defineProperty(i, Je, { writable: !0, value: void 0 }), Object.defineProperty(i, _n, { writable: !0, value: void 0 }), Object.defineProperty(i, Cs, { writable: !0, value: void 0 }), Object.defineProperty(i, od, { writable: !0, value: void 0 }), i.id = r.id, i.localId = r.localId, l(i, Je)[Je] = r.track, i.kind = (n = r.track) === null || n === void 0 ? void 0 : n.kind, l(i, _n)[_n] = r.disableTrackOnPause ? !((a = r.track) !== null && a !== void 0 && a.enabled) : !1, l(i, Cs)[Cs] = void 0, l(i, Ss)[Ss] = r.stopTracks, l(i, Es)[Es] = r.disableTrackOnPause, l(i, Ca)[Ca] = r.zeroRtpOnPause, i.appData = r.appData || {}, i._onTrackEnded = i._onTrackEnded.bind(i), l(i, it)[it] = r.handler, i.rtpSender = r.rtpSender, i._handleTrack(), l(i, od)[od] = e, i;
  }
  return R(t, o), P(t, [{
    key: "closed",
    get: function() {
      return l(this, Qr)[Qr];
    }
    /**
    * The associated track.
    */
  }, {
    key: "track",
    get: function() {
      return l(this, Je)[Je];
    }
    /**
    * Whether the Producer is paused.
    */
  }, {
    key: "paused",
    get: function() {
      return l(this, _n)[_n];
    }
    /**
    * Max spatial layer.
    *
    * @type {Number | undefined}
    */
  }, { key: "maxSpatialLayer", get: function() {
    return l(this, Cs)[Cs];
  } }, { key: "close", value: (
    /**
    * Closes the Producer.
    */
    function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        var i, s, u, c, d;
        return p().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                if (!l(this, Qr)[Qr]) {
                  v.next = 2;
                  break;
                }
                return v.abrupt("return");
              case 2:
                if (this.logger.debug("Producer::close() ".concat(a ? "with reason ".concat(a) : ""), l(this, jr)[jr]), l(this, Qr)[Qr] = !0, this._destroyTrack(), a !== cc) {
                  v.next = 8;
                  break;
                }
                return this.safeEmit("close", { reason: a }), v.abrupt("return");
              case 8:
                return v.next = 10, l(this, it)[it].stopSending(this.localId);
              case 10:
                return i = v.sent, s = i.offerSdp, u = i.callback, v.next = 15, this.safeEmitAsPromise("close", { offer: s, reason: a });
              case 15:
                c = v.sent, d = c.answer, u(d);
              case 18:
              case "end":
                return v.stop();
            }
        }, n, this);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
  ) }, { key: "getStats", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!l(this, Qr)[Qr]) {
                i.next = 2;
                break;
              }
              throw new bn("closed");
            case 2:
              return i.abrupt("return", l(this, it)[it].getSenderStats(this.localId));
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "pause",
    value: function() {
      this.logger.debug("Producer::pause()", l(this, jr)[jr]), l(this, Qr)[Qr] && this.logger.error("Producer::pause() | Producer closed", l(this, jr)[jr]), l(this, _n)[_n] = !0, l(this, Je)[Je] && l(this, Es)[Es] && (l(this, Je)[Je].enabled = !1), l(this, Ca)[Ca] && l(this, it)[it].replaceTrack(this.localId, null), this.emit("pause");
    }
    /**
    * Resumes sending media.
    */
  }, {
    key: "resume",
    value: function() {
      if (this.logger.debug("Producer::resume()", l(this, jr)[jr]), l(this, Qr)[Qr]) {
        this.logger.error("Producer::resume() | Producer closed", l(this, jr)[jr]);
        return;
      }
      l(this, _n)[_n] = !1, l(this, Je)[Je] && l(this, Es)[Es] && (l(this, Je)[Je].enabled = !0), l(this, Ca)[Ca] && l(this, it)[it].replaceTrack(this.localId, l(this, Je)[Je]), this.emit("resume");
    }
    /**
    * Replaces the current track with a new one or null.
    */
  }, { key: "replaceTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = a.track, this.logger.debug("Producer::replaceTrack() trackId: ".concat(i == null ? void 0 : i.id), l(this, jr)[jr]), !l(this, Qr)[Qr]) {
                u.next = 7;
                break;
              }
              if (i && l(this, Ss)[Ss])
                try {
                  i.stop();
                } catch (c) {
                  this.logger.error("Producer::replaceTrack", N(N({}, l(this, jr)[jr]), {}, { error: c }));
                }
              throw new bn("closed");
            case 7:
              if (!(i && i.readyState === "ended")) {
                u.next = 9;
                break;
              }
              throw new bn("track ended");
            case 9:
              if (i !== l(this, Je)[Je]) {
                u.next = 12;
                break;
              }
              return this.logger.debug("replaceTrack() | same track, ignored trackId: ".concat(i.id), l(this, jr)[jr]), u.abrupt("return");
            case 12:
              if (!(!l(this, Ca)[Ca] || !l(this, _n)[_n])) {
                u.next = 15;
                break;
              }
              return u.next = 15, l(this, it)[it].replaceTrack(this.localId, i);
            case 15:
              this._destroyTrack(), l(this, Je)[Je] = i, this._handleTrack();
            case 18:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!l(this, Qr)[Qr]) {
                s.next = 4;
                break;
              }
              throw new bn("closed");
            case 4:
              if (this.kind === "video") {
                s.next = 8;
                break;
              }
              throw new zd("not a video Producer");
            case 8:
              if (typeof a == "number") {
                s.next = 10;
                break;
              }
              throw new TypeError("invalid spatialLayer");
            case 10:
              return s.next = 12, l(this, it)[it].setMaxSpatialLayer(this.localId, a);
            case 12:
              l(this, Cs)[Cs] = a;
            case 13:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!l(this, Qr)[Qr]) {
                s.next = 4;
                break;
              }
              throw new bn("closed");
            case 4:
              if (Pe(a) === "object") {
                s.next = 6;
                break;
              }
              throw new TypeError("invalid params");
            case 6:
              return s.next = 8, l(this, it)[it].setRtpEncodingParameters(this.localId, a);
            case 8:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "_onTrackEnded", value: function() {
    this.logger.debug('Producer::track "ended" event trackId: '.concat(this.track.id), l(this, jr)[jr]), this.safeEmit("trackended", this.track.id);
  } }, { key: "_handleTrack", value: function() {
    l(this, Je)[Je] && l(this, Je)[Je].addEventListener("ended", this._onTrackEnded);
  } }, { key: "_destroyTrack", value: function() {
    if (l(this, Je)[Je])
      try {
        l(this, Je)[Je].removeEventListener("ended", this._onTrackEnded), l(this, Ss)[Ss] && l(this, Je)[Je].stop();
      } catch (n) {
        var r;
        this.logger.error("Producer::_destroyTrack trackId: ".concat((r = this.track) === null || r === void 0 ? void 0 : r.id), N(N({}, l(this, jr)[jr]), {}, { error: n }));
      }
  } }]);
}(_c);
function nM() {
  return { producer: { id: this.id, appData: this.appData, kind: this.kind } };
}
function Sg(o) {
  return Pe(o) === "object" && !Array.isArray(o) && o !== null;
}
function zp(o) {
  return Math.random().toString(36).substring(2, 2 + o);
}
var Mc = 1;
function yv(o) {
  var t = o;
  return delete t.payload._bolt, t;
}
function aM(o) {
  return o.payload && Sg(o.payload);
}
function Eg(o) {
  var t, e;
  return aM(o) && (t = (e = o.payload._bolt) === null || e === void 0 ? void 0 : e.id) !== null && t !== void 0 ? t : "";
}
var Mn = /* @__PURE__ */ E("datachannelCache"), ud = /* @__PURE__ */ E("context"), Ra = /* @__PURE__ */ E("logger"), vl = /* @__PURE__ */ function(o) {
  function t(e, r, n, a) {
    var i;
    return w(this, t), i = C(this, t), i.channel = void 0, i.queue = void 0, i.serverProtocolVersion = void 0, Object.defineProperty(i, Mn, { writable: !0, value: /* @__PURE__ */ new Map() }), Object.defineProperty(i, ud, { writable: !0, value: void 0 }), Object.defineProperty(i, Ra, { writable: !0, value: void 0 }), i.respond = function(s, u) {
      var c = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, d;
      c ? d = t.createErrorResponse(s, u) : d = t.createResponse(s, u), i.channel.send(JSON.stringify(d));
    }, i.notify = function(s) {
      var u = t.createNotification(s);
      i.channel.send(JSON.stringify(u));
    }, i.request = /* @__PURE__ */ function() {
      var s = m(/* @__PURE__ */ p().mark(function u(c) {
        var d, h;
        return p().wrap(function(f) {
          for (; ; )
            switch (f.prev = f.next) {
              case 0:
                return d = t.createRequest(c), h = new Promise(function(g, k) {
                  var y = 2e4, b = d.payload._bolt.id, S = { id: b, method: d.type, resolve: function(A) {
                    i.queue.delete(b) && (clearTimeout(S.timer), g(A));
                  }, timer: setTimeout(function() {
                    i.queue.delete(b) && k(new Error("request timeout for message id: ".concat(b)));
                  }, y), cancel: function(A) {
                    i.queue.delete(b) && (clearTimeout(S.timer), k(A));
                  } };
                  i.queue.set(b, S);
                }), i.channel.send(JSON.stringify(d)), f.abrupt("return", h);
              case 4:
              case "end":
                return f.stop();
            }
        }, u);
      }));
      return function(u) {
        return s.apply(this, arguments);
      };
    }(), i.send = function(s) {
      var u = JSON.stringify(s), c = 16384;
      if (u.length > c) {
        for (var d = c - 200, h = Math.ceil(u.length / d), v = [], f = 0; f < h; f += 1) {
          var g = f * d, k = (f + 1) * d;
          v.push(u.slice(g, k));
        }
        for (var y = eo(), b = 0; b < h; b += 1) {
          var S = v[b], T = { id: y, count: h, chunkIndex: b, chunk: S }, A = JSON.stringify(T);
          l(i, Ra)[Ra].debug("Sending message chunk over dc: ".concat(A)), i.channel.send(A);
        }
      } else
        l(i, Ra)[Ra].debug("Sending message over dc: ".concat(u)), i.channel.send(u);
    }, i.processMessage = function(s) {
      l(i, Mn)[Mn].has(s.id) || l(i, Mn)[Mn].set(s.id, []);
      var u = l(i, Mn)[Mn].get(s.id);
      if (u[s.chunkIndex] = s, (u == null ? void 0 : u.length) === s.count && !u.some(function(f) {
        return f === void 0;
      })) {
        var c, d = l(i, Mn)[Mn].get(s.id), h = d == null ? void 0 : d.reduce(function(f, g) {
          return f + g.chunk;
        }, "");
        l(i, Mn)[Mn].delete(s.id);
        var v = JSON.parse(h);
        if (!v.payload || !Sg(v.payload))
          throw new Error("corrupted incoming message over dc", { cause: { code: "CORRUPT_DC_MESSAGE", values: v } });
        if (i.processBoltHandshake(v))
          return;
        if (i.serverProtocolVersion = (c = v.payload._bolt) === null || c === void 0 ? void 0 : c.version, !i.processResponseMsg(v))
          return v;
      }
    }, i.processResponseMsg = function(s) {
      var u = s.payload._bolt.id, c = i.queue.get(u);
      return c ? (l(i, Ra)[Ra].debug("resolving pending request with id: ".concat(u, ", complete response: ").concat(JSON.stringify(s))), s.type === "error" ? c.cancel(yv(s)) : c.resolve(yv(s)), !0) : !1;
    }, i.processBoltHandshake = function(s) {
      if (s.type === "_bolt" || s.type === "handshake") {
        var u, c;
        return i.respond((u = (c = s.payload._bolt) === null || c === void 0 ? void 0 : c.id) !== null && u !== void 0 ? u : zp(8), { type: "_bolt", payload: { message: "pong" } }), !0;
      }
      return !1;
    }, i.label = n, i.transportId = a, l(i, ud)[ud] = e, l(i, Ra)[Ra] = e.getValue("logger"), i.channel = r, i.queue = /* @__PURE__ */ new Map(), i;
  }
  return R(t, o), P(t);
}(ht.EventEmitter);
vl.createRequest = function(o) {
  var t;
  if ((t = o.payload) !== null && t !== void 0 && t._bolt)
    throw new Error("rpc fields are internal values");
  return { type: o.type, payload: N(N({}, o.payload), {}, { _bolt: { id: zp(8), type: "REQUEST", version: Mc } }) };
};
vl.createResponse = function(o, t) {
  var e;
  if ((e = t.payload) !== null && e !== void 0 && e._bolt)
    throw new Error("rpc fields are internal values");
  return { type: t.type, payload: N(N({}, t.payload), {}, { _bolt: { id: o, type: "RESPONSE", version: Mc } }) };
};
vl.createNotification = function(o) {
  var t;
  if ((t = o.payload) !== null && t !== void 0 && t._bolt)
    throw new Error("rpc fields are internal values");
  return { type: o.type, payload: N(N({}, o.payload), {}, { bolt: { id: zp(8), type: "NOTIFY", version: Mc } }) };
};
vl.createErrorResponse = function(o, t) {
  return { type: "error", payload: { error: t.message, _bolt: { id: o, type: "RESPONSE", version: Mc } } };
};
var cc = "transport closed", Aa = /* @__PURE__ */ E("sfu"), Ia = /* @__PURE__ */ E("context"), iM = /* @__PURE__ */ function(o) {
  function t(e, r, n) {
    var a, i, s, u, c = n.id, d = n.direction, h = n.handlerFactory, v = n.iceServers, f = n.iceTransportPolicy, g = n.proprietaryConstraints, k = n.additionalSettings, y = n.appData, b = n.config;
    w(this, t), u = C(this, t, [e]), u.awaitQueue = void 0, u.observer = void 0, Object.defineProperty(u, Aa, { writable: !0, value: void 0 }), u.id = void 0, u.serverId = void 0, u.direction = void 0, u.maxSctpMessageSize = void 0, u.handler = void 0, u.connectionState = "new", u.producers = void 0, u.consumers = void 0, u.datachannels = void 0, u.connected = !1, u.eventsDCReadyPromise = void 0, u.eventsDCReadyPromiseResolver = void 0, u.eventsDCFailureTimer = void 0, u.transportConnectionPromise = void 0, u.consumerTrackEvents = void 0, u.unknownTracksMap = void 0, u.appData = void 0, Object.defineProperty(u, Ia, { writable: !0, value: void 0 }), l(u, Ia)[Ia] = e;
    var S = e.getValue("logger");
    S.debug("constructor() [id: ".concat(c, ", direction: ").concat(d, "]")), l(u, Aa)[Aa] = r, u.id = c, u.direction = d;
    var T = Q_(k, {});
    return delete T.iceServers, delete T.iceTransportPolicy, delete T.bundlePolicy, delete T.rtcpMuxPolicy, delete T.sdpSemantics, u.producers = /* @__PURE__ */ new Map(), u.consumers = /* @__PURE__ */ new Map(), u.datachannels = /* @__PURE__ */ new Map(), u.consumerTrackEvents = /* @__PURE__ */ new Map(), u.unknownTracksMap = /* @__PURE__ */ new Map(), u.awaitQueue = new Kd(S, !0), u.handler = h(), u.handler.enableHighBitrate = (a = b == null ? void 0 : b.enableHighBitrate) !== null && a !== void 0 ? a : !1, u.handler.enableStereo = (i = b == null ? void 0 : b.enableStereo) !== null && i !== void 0 ? i : !1, u.handler.enableDtx = (s = b == null ? void 0 : b.enableDtx) !== null && s !== void 0 ? s : !0, u.handler.sfu = l(u, Aa)[Aa], u.handler.init({ onTrackHandler: u._ontrack.bind(u), direction: d, iceServers: v, iceTransportPolicy: f, additionalSettings: k, proprietaryConstraints: g }), u.appData = y || {}, u.transportConnectionPromise = new Promise(function(A) {
      u.once("connected", function() {
        A(!0);
      }), u.once("disconnect", function() {
        A(!1);
      }), u.once("close", function() {
        A(!1);
      });
    }), u.eventsDCReadyPromise = new Promise(function(A) {
      u.eventsDCReadyPromiseResolver = A;
    }), u.handler.on("@connectionstatechange", function(A) {
      A !== u.connectionState && (u.logger.debug("connection state changed to ".concat(A)), u.connectionState = A, A === "connected" && (u.connected = !0, u.emit("connected")), A === "disconnected" && (u.connected = !1, u.emit("disconnect")), (A === "failed" || A === "closed") && (u.connected = !1, u.emit("close")), u.closed || u.safeEmit("connectionstatechange", A));
    }), u.handler.on("@icecandidate", function(A) {
      var L = A.candidate;
      u.closed || u.safeEmit("icecandidate", L);
    }), u.handler.on("dc_open", function(A) {
      var L = u.datachannels.get(A.label);
      L || (L || (L = new vl(l(u, Ia)[Ia], A, A.label, u.serverId), u.datachannels.set(A.label, L)), u.eventsDCFailureTimer = setTimeout(function() {
        A.label === "events" && (u.eventsDCReadyPromiseResolver(!1), u.safeEmit("dc_error", A.label));
      }, 5e3));
    }), u.handler.on("datachannel", function(A, L) {
      A.label === "events" && (u.eventsDCReadyPromiseResolver(!0), u.eventsDCFailureTimer && clearTimeout(u.eventsDCFailureTimer));
      var I = u.datachannels.get(A.label);
      if (!I) {
        u.logger.error("unregistered datachannel for message", { rtcChannel: { label: A.label, message: L } });
        return;
      }
      try {
        var M = JSON.parse(L);
        u.logger.debug("datachannel message chunk recieved", { dataChannelMessageChunk: { id: M.id, count: M.count, chunkIndex: M.chunkIndex, chunk: M.chunk, transprtId: u.serverId } });
        var V = I.processMessage(M);
        if (!V)
          return;
        u.logger.debug("datachannel message with id:".concat(M.id, " on transport:").concat(u.serverId, "complete - ").concat(JSON.stringify(V))), u.emit("datachannel:".concat(A.label), I.label, V);
      } catch (j) {
        u.logger.error("error parsing message", { error: j });
      }
    }), u;
  }
  return R(t, o), P(t, [{ key: "closed", get: function() {
    return this.connectionState === "closed";
  } }, { key: "setServerId", value: function(r) {
    this.serverId = r;
  } }, { key: "getDatachannel", value: function(r) {
    return this.datachannels.get(r);
  } }, {
    key: "isEventsDCReady",
    get: function() {
      return this.eventsDCReadyPromise;
    }
    /**
    * Close the Transport.
    */
  }, {
    key: "close",
    value: function() {
      this.closed || (this.logger.debug("Transport close called"), this.connectionState = "closed", this.awaitQueue.stop(), this.awaitQueue = void 0, this.connected = !1, this.handler.close(), Array.from(this.producers.values()).forEach(function(r) {
        r.close(cc).catch(function() {
        });
      }), this.producers.clear(), Array.from(this.consumers.values()).forEach(function(r) {
        r.close(cc);
      }), this.consumers.clear(), this.consumerTrackEvents.clear(), this.emit("close"));
    }
    /**
    * Get associated Transport (RTCPeerConnection) stats.
    *
    * @returns {RTCStatsReport}
    */
  }, { key: "getStats", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!this.closed) {
                i.next = 2;
                break;
              }
              throw new bn("closed");
            case 2:
              return i.abrupt("return", this.handler.getTransportStats());
            case 3:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "connect",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n(a) {
        var i = this;
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                return u.prev = 0, u.next = 3, this.awaitQueue.push(/* @__PURE__ */ m(/* @__PURE__ */ p().mark(function c() {
                  var d, h, v, f, g, k;
                  return p().wrap(function(b) {
                    for (; ; )
                      switch (b.prev = b.next) {
                        case 0:
                          return b.next = 2, i.handler.connect();
                        case 2:
                          return d = b.sent, h = d.offerSdp, v = d.callback, b.next = 7, a(h);
                        case 7:
                          return f = b.sent, g = f.transportId, k = f.answer, i.setServerId(g), b.next = 13, v(k);
                        case 13:
                        case "end":
                          return b.stop();
                      }
                  }, c);
                })));
              case 3:
                return u.next = 5, this.transportConnectionPromise;
              case 5:
                if (u.sent) {
                  u.next = 7;
                  break;
                }
                throw new Error("ice connection failed");
              case 7:
                if (u.t0 = l(this, Aa)[Aa] === Mr.HIVE, !u.t0) {
                  u.next = 12;
                  break;
                }
                return u.next = 11, this.isEventsDCReady;
              case 11:
                u.t0 = !u.sent;
              case 12:
                if (!u.t0) {
                  u.next = 14;
                  break;
                }
                throw new Error("events datachannel not open");
              case 14:
                u.next = 20;
                break;
              case 16:
                throw u.prev = 16, u.t1 = u.catch(0), this.logger.error("transport failed to connect:", { error: u.t1 }), u.t1;
              case 20:
              case "end":
                return u.stop();
            }
        }, n, this, [[0, 16]]);
      }));
      function r(n) {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Restart ICE connection.
    */
  }, { key: "restartIce", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (this.logger.debug("restartIce()"), !this.closed) {
                i.next = 3;
                break;
              }
              throw new bn("closed");
            case 3:
              return i.abrupt("return", this.handler.restartIce());
            case 4:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "canProduce", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (i = a.track, s = a.appData, i) {
                c.next = 5;
                break;
              }
              throw new TypeError("missing track");
            case 5:
              if (this.direction === "send") {
                c.next = 9;
                break;
              }
              throw new zd("not a sending Transport");
            case 9:
              if (i.readyState !== "ended") {
                c.next = 13;
                break;
              }
              throw new bn("track ended");
            case 13:
              if (!(s && Pe(s) !== "object")) {
                c.next = 15;
                break;
              }
              throw new TypeError("if given, appData must be an object");
            case 15:
              return c.next = 17, this.transportConnectionPromise;
            case 17:
              if (c.sent) {
                c.next = 19;
                break;
              }
              throw new Qs("transport not connected");
            case 19:
              return c.abrupt("return", !0);
            case 20:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "produce", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s = this, u, c, d, h, v, f, g, k, y, b, S, T, A, L, I, M;
      return p().wrap(function(j) {
        for (; ; )
          switch (j.prev = j.next) {
            case 0:
              return j.next = 2, this.canProduce(a);
            case 2:
              if (u = j.sent, u) {
                j.next = 5;
                break;
              }
              throw new Error("Cannot produce");
            case 5:
              return c = a.track, d = a.encodings, h = a.codecOptions, v = a.stopTracks, f = v === void 0 ? !0 : v, g = a.disableTrackOnPause, k = g === void 0 ? !0 : g, y = a.zeroRtpOnPause, b = y === void 0 ? !1 : y, S = a.appData, T = S === void 0 ? {} : S, this.logger.debug("produce() [track:".concat(c.id, "]")), j.next = 9, this.awaitQueue.push(/* @__PURE__ */ m(/* @__PURE__ */ p().mark(function $() {
                var O, B, Q, F, z, q, te, le, he;
                return p().wrap(function(x) {
                  for (; ; )
                    switch (x.prev = x.next) {
                      case 0:
                        return x.next = 2, s.handler.send({ track: c, encodings: d, codecOptions: h, screenShare: T == null ? void 0 : T.screenShare });
                      case 2:
                        return O = x.sent, B = O.offerSdp, Q = O.callback, F = O.sender, z = O.mid, x.next = 9, i({ offer: B, kind: c.kind, paused: k ? !c.enabled || Object.hasOwn(c, "fakeTracks") : !1, appData: N(N({}, T || {}), {}, { mid: z }), codecOptions: h, producingTransportId: s.serverId });
                      case 9:
                        return q = x.sent, te = q.answer, le = q.producerId, x.next = 14, Q(te);
                      case 14:
                        return he = x.sent, x.abrupt("return", { producerId: le, localId: he, rtpSender: F });
                      case 16:
                      case "end":
                        return x.stop();
                    }
                }, $);
              })), "Transport.produce");
            case 9:
              return A = j.sent, L = A.producerId, I = A.localId, M = A.rtpSender, j.abrupt("return", this.createProducerObject({ id: L, localId: I, track: c, stopTracks: f, disableTrackOnPause: k, zeroRtpOnPause: b, appData: T, handler: this.handler, rtpSender: M }));
            case 14:
            case "end":
              return j.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "createProducerObject", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return s = new tM(l(this, Ia)[Ia], a), this.producers.set(s.id, s), s.once("close", function() {
                i.producers.delete(s.id);
              }), this.emit("newproducer", s), c.abrupt("return", s);
            case 5:
            case "end":
              return c.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeProducer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.awaitQueue.push(a.close.bind(a), "Transport.closeProducer");
            case 2:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "canConsume", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n() {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!this.closed) {
                i.next = 4;
                break;
              }
              throw new bn("closed");
            case 4:
              if (this.direction === "recv") {
                i.next = 6;
                break;
              }
              throw new zd("not a receiving transport");
            case 6:
              return i.next = 8, this.transportConnectionPromise;
            case 8:
              if (i.sent) {
                i.next = 10;
                break;
              }
              throw new Qs("transport not connected");
            case 10:
              return i.abrupt("return", !0);
            case 11:
            case "end":
              return i.stop();
          }
      }, n, this);
    }));
    function r() {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "consume", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u = this;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return d.abrupt("return", this.awaitQueue.push(/* @__PURE__ */ m(/* @__PURE__ */ p().mark(function h() {
                var v, f, g, k, y, b;
                return p().wrap(function(T) {
                  for (; ; )
                    switch (T.prev = T.next) {
                      case 0:
                        return v = {}, T.next = 3, i(a);
                      case 3:
                        if (f = T.sent, g = f.consumerStates, k = f.sessionDescription, y = f.failedProducers, g.forEach(function(A, L) {
                          v[L] = u.createConsumerObjectAndWaitForTrack(N(N({}, A), {}, { producerId: L }));
                        }), !k) {
                          T.next = 12;
                          break;
                        }
                        return u.logger.info("Session description found, sending negotiation request"), T.next = 12, s(k);
                      case 12:
                        return b = [], T.next = 15, Promise.all(Object.entries(v).map(function(A) {
                          var L = Me(A, 2), I = L[0], M = L[1];
                          return M.then(function(V) {
                            return b.push(V);
                          }).catch(function() {
                            u.logger.error("Failed to create consumer object, producer: ".concat(I), { error: { message: "This should not happen" }, transport: { serverId: u.serverId } });
                          });
                        }));
                      case 15:
                        return T.abrupt("return", { consumers: b, failedProducers: y });
                      case 16:
                      case "end":
                        return T.stop();
                    }
                }, h);
              })), "Transport.consume", { producersLength: a.length }));
            case 1:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeConsumers", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c, d, h;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              return f.prev = 0, s = a.map(function(g) {
                return g.transceiver.mid;
              }), u = t.parseCodecAndFmtpMappings(this.handler.pc.remoteDescription, s), c = t.parseHeaderExtensionMappings(this.handler.pc.remoteDescription), this.logger.info("Stopping transceivers", { consumerIds: a.map(function(g) {
                var k = g.id;
                return k;
              }) }), a.forEach(function(g) {
                return g.close(void 0, !0);
              }), f.next = 8, this.handler.pc.createOffer();
            case 8:
              return d = f.sent, this.logger.info("Created offer for closing consumers", { sdp: d.sdp }), d = t.setCodecAndFmtpMappings(d, s, u), d = t.setHeaderExtensionMappings(d, c), this.logger.info("Updated codec and fmtp mappings in close consumer offer", { sdp: d.sdp }), f.next = 15, this.setLocalDescription(d);
            case 15:
              return this.logger.info("Successfully set local description in close consumers"), f.next = 18, i(a, d);
            case 18:
              return h = f.sent, this.logger.info("Received answer in close consumers", { sdp: h.sdp }), f.next = 22, this.setRemoteDescription(h);
            case 22:
              this.logger.info("Remote description was set successfully in close consumers", { sdp: h.sdp }), f.next = 28;
              break;
            case 25:
              f.prev = 25, f.t0 = f.catch(0), this.logger.error("Failed to close consumers", { error: f.t0 });
            case 28:
            case "end":
              return f.stop();
          }
      }, n, this, [[0, 25]]);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setRemoteOffer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.prev = 0, this.logger.info("Received offer from SFU", { sdp: a.sdp }), c.next = 4, this.setRemoteDescription(a);
            case 4:
              return c.next = 6, this.handler.pc.createAnswer();
            case 6:
              return i = c.sent, this.logger.info("Created answer corresponding to received offer", { sdp: i.sdp }), s = Ln.parse(i.sdp), s.media = s.media.map(function(d) {
                if (d.type === "audio") {
                  var h = N({}, d), v = h.fmtp.find(function(g) {
                    return g.payload === 111;
                  });
                  v && (v.config += ";stereo=1;sprop-stereo=1"), h.rtcpFb || (h.rtcpFb = []);
                  var f = h.rtcpFb.some(function(g) {
                    return g.type === "nack";
                  });
                  return f || h.rtcpFb.push({ payload: parseInt(h.payloads, 10), type: "nack" }), h;
                }
                return d;
              }), i.sdp = Ln.write(s), this.logger.info("Setting munged SDP", { sdp: i.sdp }), c.next = 14, this.setLocalDescription(i);
            case 14:
              return this.logger.info("Successfully set local description", { sdp: i.sdp }), c.abrupt("return", i);
            case 18:
              throw c.prev = 18, c.t0 = c.catch(0), this.logger.error("Set remote offer failed", { error: c.t0 }), c.t0;
            case 22:
            case "end":
              return c.stop();
          }
      }, n, this, [[0, 18]]);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "_ontrack", value: function(r) {
    var n = this, a = r.track, i = r.transceiver, s = r.streams;
    this.logger.info("track event received [trackId: ".concat(a.id, "] [mid: ").concat(i.mid, "]"));
    var u;
    l(this, Aa)[Aa] === Mr.HIVE ? u = "".concat(s[0].id, ":").concat(a.kind) : u = "".concat(i.mid, ":").concat(a.kind), a.addEventListener("ended", function() {
      n.logger.info("rtc consumer track ended [trackId: ".concat(a.id, "]")), n.unknownTracksMap.delete(u);
    });
    var c = this.consumerTrackEvents.get(u);
    c ? (c(a, i), this.consumerTrackEvents.delete(u)) : (this.logger.warn("track event handler not found ".concat(u)), this.unknownTracksMap.set(u, r));
  } }, { key: "sendErrorOverDC", value: function(r, n, a) {
    var i = this.getDatachannel(r);
    if (!i)
      throw new Error("datachannel not found", { cause: { code: "DC_NOT_FOUND", values: { label: r } } });
    i.respond(n, a, !0);
  } }, { key: "sendResponseOverDC", value: function(r, n, a) {
    var i = this.getDatachannel(r);
    if (!i)
      throw new Error("datachannel not found", { cause: { code: "DC_NOT_FOUND", values: { label: r } } });
    i.respond(n, a);
  } }, { key: "createConsumerObjectAndWaitForTrack", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c, d, h, v, f, g, k, y, b, S;
      return p().wrap(function(A) {
        for (; ; )
          switch (A.prev = A.next) {
            case 0:
              return s = a.consumerId, u = a.producerId, c = a.producingPeerId, d = a.producingTransportId, h = a.streamId, v = a.paused, f = a.screenShare, g = a.appData, k = a.kind, y = a.mimeType, b = "".concat(h, ":").concat(k), S = N(N({}, a), {}, { name: "consumer creation task error", message: "consumer creation failed" }), A.abrupt("return", new Promise(/* @__PURE__ */ function() {
                var L = m(/* @__PURE__ */ p().mark(function I(M, V) {
                  var j, $, O;
                  return p().wrap(function(Q) {
                    for (; ; )
                      switch (Q.prev = Q.next) {
                        case 0:
                          j = setTimeout(function() {
                            i.logger.warn("Timed out waiting for track event ".concat(b, " producingPeerId: ").concat(c)), i.consumerTrackEvents.delete(b), S.isTimedout = !0, V(S);
                          }, 5e3), $ = function(z, q) {
                            try {
                              if (z.readyState === "ended")
                                clearTimeout(j), V(S);
                              else {
                                var te = z;
                                te.enabled = !0, i.handler.midTransceiverMap.set(q.mid, q);
                                var le = new X_(l(i, Ia)[Ia], { id: s, localId: q.mid, transceiver: q, track: te, paused: v, producerId: u, producingPeerId: c, producingTransportId: d, handler: i.handler, appData: N(N({}, g), {}, { screenShare: f, peerId: c }), rtpReceiver: q.receiver, mimeType: y });
                                i.consumers.set(s, le), le.once("close", function() {
                                  i.consumers.delete(le.id), i.handler.midTransceiverMap.delete(q.mid);
                                }), i.logger.info("consumer created for ", { consumer: { id: s, kind: k, appData: { screenShare: f }, peerId: c, producerId: u } }), i.emit("newconsumer", le), clearTimeout(j), M(le);
                              }
                            } catch (he) {
                              i.logger.warn("error while creating consumer:", he), clearTimeout(j), V(S);
                            }
                          }, O = i.unknownTracksMap.get(b), O ? (i.logger.info("track event already received [trackId: ".concat(O.track.id, "] [mid: ").concat(O.transceiver.mid, "]")), i.unknownTracksMap.delete(b), $(O.track, O.transceiver)) : (i.logger.info("Registering onTrack handler for key ".concat(b, " [producingPeerId: ").concat(c, "]")), i.consumerTrackEvents.set(b, $));
                        case 4:
                        case "end":
                          return Q.stop();
                      }
                  }, I);
                }));
                return function(I, M) {
                  return L.apply(this, arguments);
                };
              }()));
            case 4:
            case "end":
              return A.stop();
          }
      }, n);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setRemoteDescription", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.handler.pc.setRemoteDescription(a);
            case 2:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "setLocalDescription", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.logger.debug("".concat(this.direction, "() {transportId: ").concat(this.serverId, "} | calling pc.setLocalDescription() [offer:").concat(JSON.stringify(a), "]")), s.next = 3, this.handler.pc.setLocalDescription(a);
            case 3:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendDataChannelMessage", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (s = this.getDatachannel(a), s) {
                d.next = 3;
                break;
              }
              throw q_("DC_NOT_READY", "".concat(a, " datachannel not ready"));
            case 3:
              return d.next = 5, s.request(i);
            case 5:
              return u = d.sent.payload, this.logger.info("sendDataChannelMessage::response ".concat(JSON.stringify(u))), d.abrupt("return", u);
            case 8:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }], [{ key: "parseCodecAndFmtpMappings", value: function(r, n) {
    var a = Ln.parse(r.sdp), i = {};
    return a.media.forEach(function(s) {
      n.includes(s.mid.toString()) && (i[s.mid.toString()] = { rtp: s.rtp, fmtp: s.fmtp, payloads: s.payloads, rtcpFb: s.rtcpFb });
    }), i;
  } }, { key: "setCodecAndFmtpMappings", value: function(r, n, a) {
    var i = Ln.parse(r.sdp);
    i.media = i.media.map(function(u) {
      if (n.includes(u.mid.toString())) {
        var c = N({}, u);
        return c.rtp = a[u.mid.toString()].rtp, c.fmtp = a[u.mid.toString()].fmtp, c.payloads = a[u.mid.toString()].payloads, c.rtcpFb = a[u.mid.toString()].rtcpFb, c;
      }
      return u;
    });
    var s = N(N({}, r), {}, { sdp: Ln.write(i) });
    return s;
  } }, { key: "parseHeaderExtensionMappings", value: function(r) {
    var n = Ln.parse(r.sdp), a = {};
    return n.media.forEach(function(i) {
      a[i.mid] = i.ext;
    }), a;
  } }, { key: "setHeaderExtensionMappings", value: function(r, n) {
    var a = Ln.parse(r.sdp);
    a.media = a.media.map(function(s) {
      var u = N({}, s);
      return u.ext = n[s.mid], u;
    });
    var i = N(N({}, r), {}, { sdp: Ln.write(a) });
    return i;
  } }]);
}(_c);
function sM(o) {
  if ((typeof navigator == "undefined" ? "undefined" : Pe(navigator)) === "object" && navigator.product === "ReactNative") {
    if (typeof RTCPeerConnection == "undefined") {
      o.warn("Device::this._detectDevice() | unsupported ReactNative without RTCPeerConnection");
      return;
    }
    return o.debug("Device::this._detectDevice() | ReactNative handler chosen"), "Chrome74";
  }
  if ((typeof navigator == "undefined" ? "undefined" : Pe(navigator)) === "object" && typeof navigator.userAgent == "string") {
    var t = navigator.userAgent, e = Iv.getParser(t), r = e.getEngine();
    if (e.satisfies({ chrome: ">=74", chromium: ">=74", "microsoft edge": ">=88" }))
      return "Chrome74";
    if (e.satisfies({ chrome: ">=55", chromium: ">=55" }))
      return;
    if (e.satisfies({ firefox: ">=110" }))
      return "Firefox110";
    if (e.satisfies({ firefox: ">=60" }))
      return "Firefox60";
    if (e.satisfies({ ios: { OS: ">=14.3", firefox: ">=30.0" } }) || e.satisfies({ safari: ">=12.0" }) && typeof RTCRtpTransceiver != "undefined" && RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))
      return "Safari12";
    if (e.satisfies({ safari: ">=11" }) || e.satisfies({ "microsoft edge": ">=11" }) && e.satisfies({ "microsoft edge": "<=18" }))
      return;
    if (r.name && r.name.toLowerCase() === "blink") {
      var n = t.match(/(?:(?:Chrome|Chromium))[ /](\w+)/i);
      if (n) {
        var a = Number(n[1]);
        return a >= 74 ? "Chrome74" : void 0;
      }
      return "Chrome74";
    }
    if (r.name.toLowerCase() === "webkit" && e.getOS().name.toLowerCase() === "ios")
      return typeof RTCRtpTransceiver != "undefined" && RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection") ? "Safari12" : void 0;
    o.warn("Device::this._detectDevice() | browser not supported");
    return;
  }
  o.warn("Device::this._detectDevice() | unknown device");
}
var yu = /* @__PURE__ */ E("sfu"), Kt = /* @__PURE__ */ E("context"), _a = /* @__PURE__ */ E("logger"), oM = /* @__PURE__ */ function() {
  function o(t, e) {
    var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, n = r.handlerName, a = r.handlerFactory;
    w(this, o), this.handlerFactory = void 0, Object.defineProperty(this, yu, { writable: !0, value: void 0 }), Object.defineProperty(this, Kt, { writable: !0, value: void 0 }), Object.defineProperty(this, _a, { writable: !0, value: void 0 });
    var i = t.getValue("logger");
    if (i.debug("constructor()"), l(this, Kt)[Kt] = t, l(this, _a)[_a] = i, l(this, yu)[yu] = e, n && a)
      throw new TypeError("just one of handlerName or handlerInterface can be given");
    if (a)
      this.handlerFactory = a;
    else {
      if (n)
        l(this, _a)[_a].debug("Device::constructor() | handler given: ".concat(n));
      else if (n = sM(l(this, _a)[_a]), n)
        l(this, _a)[_a].debug("Device::constructor() | detected handler: ".concat(n));
      else
        throw new Error("device not supported");
      switch (n) {
        case "Chrome74":
          this.handlerFactory = z_.createFactory(l(this, Kt)[Kt]);
          break;
        case "Safari12":
          this.handlerFactory = Y_.createFactory(l(this, Kt)[Kt]);
          break;
        case "Firefox60":
          this.handlerFactory = mv.createFactory(l(this, Kt)[Kt], { supportsSendEncodings: !1 });
          break;
        case "Firefox110":
          this.handlerFactory = mv.createFactory(l(this, Kt)[Kt], { supportsSendEncodings: !0 });
          break;
        default:
          throw new TypeError('unknown handlerName "'.concat(n, '"'));
      }
    }
  }
  return P(o, [{ key: "createTransport", value: function(e) {
    var r = eo(), n = new iM(l(this, Kt)[Kt], l(this, yu)[yu], N(N({ id: r }, e), {}, { handlerFactory: this.handlerFactory }));
    return n;
  } }]);
}(), uM = 2e3, Xs = /* @__PURE__ */ E("device"), ir = /* @__PURE__ */ E("sendTransport"), sr = /* @__PURE__ */ E("recvTransport"), ku = /* @__PURE__ */ E("sendTransportConnectedCallback"), bu = /* @__PURE__ */ E("recvTransportConnectedCallback"), Wa = /* @__PURE__ */ E("socket"), js = /* @__PURE__ */ E("socketHandler"), Rs = /* @__PURE__ */ E("events"), ao = /* @__PURE__ */ E("metrics"), qa = /* @__PURE__ */ E("transportDisconnectedTimer"), Pt = /* @__PURE__ */ E("iceTransportPolicy"), Fs = /* @__PURE__ */ E("nodeType"), Gs = /* @__PURE__ */ E("connectionHandler"), Tu = /* @__PURE__ */ E("reset"), ld = /* @__PURE__ */ E("createTransports"), wu = /* @__PURE__ */ E("connectTransportWithRetry"), Qd = /* @__PURE__ */ E("connectTransport"), Xd = /* @__PURE__ */ E("createSendTransport"), Zd = /* @__PURE__ */ E("createRecvTransport"), xd = /* @__PURE__ */ E("setTransportEventHandlers"), ep = /* @__PURE__ */ E("transportConnectionRequest"), $u = /* @__PURE__ */ E("reconnectTransport"), nl = /* @__PURE__ */ E("updateTransportState"), lM = /* @__PURE__ */ function(o) {
  function t(e, r, n) {
    var a;
    switch (w(this, t), a = C(this, t), Object.defineProperty(a, nl, { value: bM }), Object.defineProperty(a, $u, { value: kM }), Object.defineProperty(a, ep, { value: yM }), Object.defineProperty(a, xd, { value: mM }), Object.defineProperty(a, Zd, { value: gM }), Object.defineProperty(a, Xd, { value: fM }), Object.defineProperty(a, Qd, { value: vM }), Object.defineProperty(a, wu, { value: hM }), Object.defineProperty(a, ld, { value: pM }), Object.defineProperty(a, Tu, { value: dM }), Object.defineProperty(a, Gs, { get: cM, set: void 0 }), a.context = void 0, Object.defineProperty(a, Xs, { writable: !0, value: void 0 }), Object.defineProperty(a, ir, { writable: !0, value: void 0 }), Object.defineProperty(a, sr, { writable: !0, value: void 0 }), Object.defineProperty(a, ku, { writable: !0, value: void 0 }), Object.defineProperty(a, bu, { writable: !0, value: void 0 }), Object.defineProperty(a, Wa, { writable: !0, value: void 0 }), Object.defineProperty(a, js, { writable: !0, value: void 0 }), Object.defineProperty(a, Rs, { writable: !0, value: void 0 }), Object.defineProperty(a, ao, { writable: !0, value: { transportFailureCount: { send: 0, recv: 0 }, lastConnectionTime: 0 } }), Object.defineProperty(a, qa, { writable: !0, value: void 0 }), Object.defineProperty(a, Pt, { writable: !0, value: "all" }), Object.defineProperty(a, Fs, { writable: !0, value: void 0 }), a.context = e, l(a, Wa)[Wa] = r, l(a, Fs)[Fs] = n, l(a, Xs)[Xs] = new oM(e, n), l(a, js)[js] = new K_(r, n), n) {
      case Mr.CF: {
        l(a, Rs)[Rs] = Un;
        break;
      }
      case Mr.HIVE:
      default: {
        l(a, Rs)[Rs] = kn;
        break;
      }
    }
    l(a, Gs)[Gs].mediaState = { send: { state: Go.NEW }, recv: { state: Go.NEW } };
    var i = Bo(a.context, "forceRelay");
    return (i || a.context.getValue("flagsmith").hasFeature(ve.FORCE_RELAY)) && (l(a, Pt)[Pt] = "relay"), a.logger.info("ICE Transport Policy initially set to ".concat(l(a, Pt)[Pt])), l(a, Tu)[Tu](), a;
  }
  return R(t, o), P(t, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return this.context.getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return this.context.getValue("logger");
  } }, { key: "socket", get: function() {
    return l(this, Wa)[Wa];
  } }, { key: "socketHandler", get: function() {
    return l(this, js)[js];
  } }, { key: "sendTransport", get: function() {
    return l(this, ir)[ir];
  } }, { key: "recvTransport", get: function() {
    return l(this, sr)[sr];
  } }, { key: "events", get: function() {
    return l(this, Rs)[Rs];
  } }, { key: "nodeType", get: function() {
    return l(this, Fs)[Fs];
  } }, { key: "sendTransportConnectedCallback", set: function(r) {
    l(this, ku)[ku] = r;
  } }, { key: "recvTransportConnectedCallback", set: function(r) {
    l(this, bu)[bu] = r;
  } }, { key: "setupTransports", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return d.next = 2, l(this, ld)[ld](a);
            case 2:
              return a.send && (s = l(this, wu)[wu](l(this, ir)[ir]).then(function(h) {
                try {
                  l(i, ku)[ku](h);
                } catch (v) {
                  i.logger.error("Failed to run send transport callback");
                }
              })), a.recv && (u = l(this, wu)[wu](l(this, sr)[sr]).then(function(h) {
                try {
                  l(i, bu)[bu](h);
                } catch (v) {
                  i.logger.error("Failed to run recv transport callback");
                }
              })), d.next = 6, Promise.all([s, u]);
            case 6:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "stopTransports", value: function(r) {
    if (r.send && this.sendTransport !== void 0) {
      var n = l(this, ir)[ir], a = n.id, i = n.serverId, s = n.direction;
      this.logger.info("Closing send transport", { transport: { id: a, serverId: i, type: s } }), l(this, ir)[ir].close(), l(this, ir)[ir].removeAllListeners(), l(this, ir)[ir] = void 0;
    }
    if (r.recv && this.recvTransport !== void 0) {
      var u, c, d = l(this, sr)[sr], h = d.id, v = d.serverId, f = d.direction;
      this.logger.info("Closing recv transport", { transport: { id: h, serverId: v, type: f } }), (u = l(this, sr)[sr]) === null || u === void 0 || u.close(), (c = l(this, sr)[sr]) === null || c === void 0 || c.removeAllListeners(), l(this, sr)[sr] = void 0;
    }
    l(this, Tu)[Tu]();
  } }, { key: "stopAllTransports", value: function() {
    this.logger.info("Closing all transports"), this.stopTransports({ send: !0, recv: !0 });
  } }, { key: "handleErrors", value: (
    // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars
    function(r) {
      throw new Error("Method not implemented.");
    }
  ) }]);
}(ht.EventEmitter);
function cM() {
  return this.context.getValue("connectionHandler");
}
function dM() {
  l(this, qa)[qa] = { send: void 0, recv: void 0 };
}
function pM(o) {
  return rp.apply(this, arguments);
}
function rp() {
  return rp = m(/* @__PURE__ */ p().mark(function o(t) {
    var e = this, r, n, a, i, s, u, c, d, h, v;
    return p().wrap(function(g) {
      for (; ; )
        switch (g.prev = g.next) {
          case 0:
            return r = Bo(this.context, "forceRelay"), (r || this.context.getValue("flagsmith").hasFeature(ve.FORCE_RELAY)) && (l(this, Pt)[Pt] = "relay"), this.logger.info("ICE Transport Policy set to ".concat(l(this, Pt)[Pt])), n = pt(), g.next = 6, n.getICEServers().catch(function(k) {
              return e.logger.warn("failed to get iceservers from server: ".concat(k.message)), [];
            });
          case 6:
            a = g.sent, t.send && (h = this.context.getValue("flagsmith").hasFeature(ve.DISABLE_OPUS_DTX_CF), l(this, Xd)[Xd]({ iceServers: a, additionalSettings: { encodedInsertableStreams: (i = this.context.getValue("modules").e2ee) === null || i === void 0 ? void 0 : i.enabled }, config: { enableHighBitrate: (s = (u = this.context.getValue("defaults").mediaConfiguration) === null || u === void 0 || (u = u.audio) === null || u === void 0 ? void 0 : u.enableHighBitrate) !== null && s !== void 0 ? s : !1, enableStereo: (c = (d = this.context.getValue("defaults").mediaConfiguration) === null || d === void 0 || (d = d.audio) === null || d === void 0 ? void 0 : d.enableStereo) !== null && c !== void 0 ? c : !1, enableDtx: l(this, Fs)[Fs] === Mr.HIVE ? !0 : !!h }, iceTransportPolicy: l(this, Pt)[Pt] })), t.recv && l(this, Zd)[Zd]({ iceServers: a, additionalSettings: { encodedInsertableStreams: (v = this.context.getValue("modules").e2ee) === null || v === void 0 ? void 0 : v.enabled }, iceTransportPolicy: l(this, Pt)[Pt] });
          case 9:
          case "end":
            return g.stop();
        }
    }, o, this);
  })), rp.apply(this, arguments);
}
function hM(o) {
  return tp.apply(this, arguments);
}
function tp() {
  return tp = m(/* @__PURE__ */ p().mark(function o(t) {
    var e = this, r, n, a, i;
    return p().wrap(function(u) {
      for (; ; )
        switch (u.prev = u.next) {
          case 0:
            return r = t.id, n = t.serverId, a = t.direction, l(this, xd)[xd](t), u.prev = 2, i = this.context.getValue("flagsmith").hasFeature(ve.ENABLE_HIVE_INFINITE_RETRIES) ? 1 / 0 : 3, u.next = 6, Pg(/* @__PURE__ */ function() {
              var c = m(/* @__PURE__ */ p().mark(function d(h, v) {
                return p().wrap(function(g) {
                  for (; ; )
                    switch (g.prev = g.next) {
                      case 0:
                        if (h > 0 && e.logger.debug("Retrying transport connect, count: ".concat(h), { transport: { id: r, serverId: n, type: a } }), g.prev = 1, !t.closed) {
                          g.next = 4;
                          break;
                        }
                        throw new Qs("Cannot reconnect closed transport");
                      case 4:
                        return g.next = 6, l(e, Qd)[Qd](t);
                      case 6:
                        g.next = 15;
                        break;
                      case 8:
                        if (g.prev = 8, g.t0 = g.catch(1), !(g.t0 instanceof Qs)) {
                          g.next = 13;
                          break;
                        }
                        return v(g.t0), g.abrupt("return");
                      case 13:
                        throw e.logger.error("Failed to connect transport, retrying", { transport: t, error: g.t0 }), g.t0;
                      case 15:
                      case "end":
                        return g.stop();
                    }
                }, d, null, [[1, 8]]);
              }));
              return function(d, h) {
                return c.apply(this, arguments);
              };
            }(), { delayTime: 100, strategy: "exponential", maxRetryCount: i });
          case 6:
            return u.abrupt("return", t);
          case 9:
            throw u.prev = 9, u.t0 = u.catch(2), this.logger.error("Failed to connect send transport after retry: ".concat(t.id), { error: u.t0, transport: { id: r, serverId: n, type: a } }), t.close(), t.removeAllListeners(), u.t0;
          case 15:
          case "end":
            return u.stop();
        }
    }, o, this, [[2, 9]]);
  })), tp.apply(this, arguments);
}
function vM(o) {
  return np.apply(this, arguments);
}
function np() {
  return np = m(/* @__PURE__ */ p().mark(function o(t) {
    var e = this, r, n;
    return p().wrap(function(i) {
      for (; ; )
        switch (i.prev = i.next) {
          case 0:
            if (r = t.id, n = t.direction, this.logger.info("Connecting ".concat(n, " transport"), { transport: { id: r, type: n } }), l(this, Wa)[Wa].isConnected) {
              i.next = 4;
              break;
            }
            throw new Qs("Socket is not connected");
          case 4:
            if (t.connectionState !== "closed") {
              i.next = 6;
              break;
            }
            throw new Qs("Transport is closed");
          case 6:
            return i.prev = 6, i.next = 9, t.connect(function(s) {
              return l(e, ep)[ep](n, s);
            });
          case 9:
            this.logger.info("Connected ".concat(n, " transport"), { transport: { id: r, serverId: t.serverId, type: n } }), i.next = 18;
            break;
          case 12:
            if (i.prev = 12, i.t0 = i.catch(6), l(this, ao)[ao].transportFailureCount[n] += 1, i.t0.message !== "ice connection failed") {
              i.next = 17;
              break;
            }
            throw new Qs(i.t0.message);
          case 17:
            throw i.t0;
          case 18:
          case "end":
            return i.stop();
        }
    }, o, this, [[6, 12]]);
  })), np.apply(this, arguments);
}
function fM(o) {
  if (l(this, ir)[ir] && l(this, ir)[ir].connected) {
    var t, e;
    this.logger.info("Transport send is already connected", { transport: { id: (t = l(this, ir)[ir]) === null || t === void 0 ? void 0 : t.id, serverId: (e = l(this, ir)[ir]) === null || e === void 0 ? void 0 : e.serverId, type: "send" } });
    return;
  }
  l(this, ir)[ir] = l(this, Xs)[Xs].createTransport(N(N({}, o), {}, { direction: "send" })), this.context.getValue("callstats").configureSendTransport(l(this, ir)[ir]);
}
function gM(o) {
  if (l(this, sr)[sr] && l(this, sr)[sr].connected) {
    var t, e;
    this.logger.info("Transport recv is already connected", { transport: { id: (t = l(this, sr)[sr]) === null || t === void 0 ? void 0 : t.id, serverId: (e = l(this, sr)[sr]) === null || e === void 0 ? void 0 : e.serverId, type: "recv" } });
    return;
  }
  l(this, sr)[sr] = l(this, Xs)[Xs].createTransport(N(N({}, o), {}, { direction: "recv" })), this.context.getValue("callstats").configureRecvTransport(l(this, sr)[sr]);
}
function mM(o) {
  var t = this, e = o.direction, r = o.id;
  o.on("connectionstatechange", /* @__PURE__ */ function() {
    var n = m(/* @__PURE__ */ p().mark(function a(i) {
      var s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              l(t, nl)[nl]({ state: i, direction: e }), t.logger.info("Transport connection state changed for ".concat(e, " transport"), { transport: { id: r, serverId: o.serverId, type: e, status: i } }), s = function() {
                var h = l(t, qa)[qa][e];
                h !== void 0 && (clearTimeout(h), l(t, qa)[qa][e] = void 0);
              }, c.t0 = i, c.next = c.t0 === "connected" ? 6 : c.t0 === "disconnected" ? 9 : c.t0 === "failed" ? 11 : 18;
              break;
            case 6:
              return s(), l(t, ao)[ao].lastConnectionTime = performance.now(), c.abrupt("break", 18);
            case 9:
              return l(t, qa)[qa][e] = setTimeout(/* @__PURE__ */ m(/* @__PURE__ */ p().mark(function d() {
                return p().wrap(function(v) {
                  for (; ; )
                    switch (v.prev = v.next) {
                      case 0:
                        return t.logger.warn("".concat(e, " transport is in disconnected state, reconnecting transport"), { transport: { id: r, serverId: o.serverId, type: e } }), v.next = 3, l(t, $u)[$u](o.direction);
                      case 3:
                      case "end":
                        return v.stop();
                    }
                }, d);
              })), uM), c.abrupt("break", 18);
            case 11:
              if (!o.closed) {
                c.next = 13;
                break;
              }
              return c.abrupt("return");
            case 13:
              return s(), t.logger.warn("".concat(e, " transport is in failed state, reconnecting transport"), { transport: { id: r, serverId: o.serverId, type: e } }), c.next = 17, l(t, $u)[$u](o.direction);
            case 17:
              return c.abrupt("break", 18);
            case 18:
            case "end":
              return c.stop();
          }
      }, a);
    }));
    return function(a) {
      return n.apply(this, arguments);
    };
  }()), o.on("icecandidate", /* @__PURE__ */ function() {
    var n = m(/* @__PURE__ */ p().mark(function a(i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              t.logger.debug("Sending iceCandidate:", { iceCandidate: i });
            case 1:
            case "end":
              return u.stop();
          }
      }, a);
    }));
    return function(a) {
      return n.apply(this, arguments);
    };
  }()), o.on("datachannel:events", /* @__PURE__ */ function() {
    var n = m(/* @__PURE__ */ p().mark(function a(i, s) {
      var u, c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              t.logger.debug("Got data channel message on event:", { rtcChannel: { label: i, message: s } }), v.prev = 1, v.t0 = s.type, v.next = v.t0 === "handshake" ? 5 : v.t0 === "hub-disconnect" ? 8 : v.t0 === "error" ? 11 : 12;
              break;
            case 5:
              return u = { type: "handshake", payload: { message: "pong" } }, o.sendResponseOverDC(i, Eg(s), u), v.abrupt("break", 13);
            case 8:
              return t.logger.debug("media hub disconnected, full_reconnect: ".concat((c = s.payload) === null || c === void 0 ? void 0 : c.full_reconnect)), ((d = s.payload) === null || d === void 0 ? void 0 : d.full_reconnect) === !0 && t.handleErrors("rejoin"), v.abrupt("break", 13);
            case 11:
              return v.abrupt("break", 13);
            case 12:
              return v.abrupt("break", 13);
            case 13:
              v.next = 18;
              break;
            case 15:
              v.prev = 15, v.t1 = v.catch(1), t.logger.error("Unable to handle the incoming datachannel message on channel ".concat(i));
            case 18:
            case "end":
              return v.stop();
          }
      }, a, null, [[1, 15]]);
    }));
    return function(a, i) {
      return n.apply(this, arguments);
    };
  }()), o.on("dc_error", function() {
    o.direction === "recv" && (t.logger.warn("Events datachannel did not open in 5s", { country: D.location.country }), t.handleErrors("reconnectRecvTransport"));
  });
}
function yM(o, t) {
  return ap.apply(this, arguments);
}
function ap() {
  return ap = m(/* @__PURE__ */ p().mark(function o(t, e) {
    var r, n, a, i;
    return p().wrap(function(u) {
      for (; ; )
        switch (u.prev = u.next) {
          case 0:
            return r = t === "recv", u.prev = 1, n = e.sdp, a = e.type, i = { consuming: r, description: { sdp: n, type: a, target: r ? Qa.SUBSCRIBER : Qa.PUBLISHER }, producers: [] }, u.abrupt("return", l(this, js)[js].connectTransport(i));
          case 7:
            throw u.prev = 7, u.t0 = u.catch(1), this.logger.error("Error in ".concat(t, " transport connection:"), { error: u.t0, country: D.location.country }), u.t0;
          case 11:
          case "end":
            return u.stop();
        }
    }, o, this, [[1, 7]]);
  })), ap.apply(this, arguments);
}
function kM(o) {
  return ip.apply(this, arguments);
}
function ip() {
  return ip = m(/* @__PURE__ */ p().mark(function o(t) {
    var e;
    return p().wrap(function(n) {
      for (; ; )
        switch (n.prev = n.next) {
          case 0:
            return this.logger.info("Called reconnect transport", { transport: { type: t } }), this.stopTransports({ [t]: !0 }), e = this.context.getValue("flagsmith").hasFeature(ve.HIVE_TRANSPORT_FORCE_RELAY_ON_ICE_FAILED), e && l(this, Wa)[Wa].isConnected && l(this, ao)[ao].transportFailureCount[t] > 2 && (this.logger.warn("Multiple disconnections in ".concat(t, " transport, forcing relay")), l(this, Pt)[Pt] = "relay"), n.next = 6, this.setupTransports({ [t]: !0 });
          case 6:
            n.t0 = t, n.next = n.t0 === "send" ? 9 : n.t0 === "recv" ? 12 : 15;
            break;
          case 9:
            return this.logger.info("Transport reconnected", { transport: l(this, ir)[ir] }), this.context.getValue("peerSessionStore").emit(H.RESET_PRODUCER_STATE), n.abrupt("break", 16);
          case 12:
            return this.logger.info("Transport reconnected", { transport: l(this, sr)[sr] }), this.context.getValue("peerSessionStore").emit(H.UPDATE_ACTIVE, { createAllConsumers: !0 }), n.abrupt("break", 16);
          case 15:
            this.logger.warn("Unknown transport direction", { transport: { type: t } });
          case 16:
            l(this, nl)[nl]({ state: Go.CONNECTED, direction: t });
          case 17:
          case "end":
            return n.stop();
        }
    }, o, this);
  })), ip.apply(this, arguments);
}
function bM(o) {
  var t = o.state, e = o.direction;
  l(this, Gs)[Gs].mediaState[e] = { state: t }, this.context.getValue("peerSessionStore").emit(H.TRANSPORT_STATE_UPDATE, N({ transport: e }, l(this, Gs)[Gs].mediaState[e]));
}
var Pu = /* @__PURE__ */ E("context"), cd = /* @__PURE__ */ E("setTransportEvents"), TM = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, cd, { value: wM }), Object.defineProperty(this, Pu, { writable: !0, value: void 0 }), this.recvTransport = e, l(this, cd)[cd](), l(this, Pu)[Pu] = t;
  }
  return P(o, [{ key: "logger", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, Pu)[Pu].getValue("logger");
    }
  ) }, { key: "create", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (!(!n || n && n.length === 0)) {
                h.next = 2;
                break;
              }
              throw new Error("List of producers is required");
            case 2:
              return a = n.map(function(v) {
                var f = v.producerId, g = v.producingTransportId, k = v.kind, y = v.mimeType;
                return { producerId: f, producingTransportId: g, preferredCodec: N(N({}, k === "video" && y ? { video: y } : {}), k === "audio" && y ? { audio: y } : {}) };
              }), i = { type: "create_consumer", payload: { producers: a } }, h.next = 6, this.recvTransport.sendDataChannelMessage("events", i);
            case 6:
              return s = h.sent, u = /* @__PURE__ */ new Map(), n.forEach(function(v) {
                return u.set(v.producerId, v);
              }), c = /* @__PURE__ */ new Map(), Object.entries(s).forEach(function(v) {
                var f = Me(v, 2), g = f[0], k = f[1], y = u.get(k.producerId);
                y && c.set(k.producerId, { consumerId: g, producingTransportId: y.producingTransportId, producingPeerId: y.producingPeerId, kind: y.kind, paused: y.pause, streamId: k.streamId, trackId: k.trackId, screenShare: y.screenShare, mimeType: y.mimeType, appData: {} });
              }), h.abrupt("return", { consumerStates: c });
            case 12:
            case "end":
              return h.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "negotiate", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return d.prev = 0, this.logger.debug("Received offer over dc: ".concat(n.sdp, " for transport")), d.next = 4, this.recvTransport.setRemoteOffer(n);
            case 4:
              return s = d.sent, u = { type: "answer", payload: { type: s.type, sdp: s.sdp } }, this.logger.debug("datachannel answer: ".concat(JSON.stringify(u))), this.recvTransport.sendResponseOverDC(i, a, u), d.abrupt("return", s);
            case 11:
              throw d.prev = 11, d.t0 = d.catch(0), this.logger.error("datachannel:events::Error:", d.t0), d.t0.code !== "DC_NOT_FOUND" && this.recvTransport.sendErrorOverDC(i, a, d.t0), d.t0;
            case 16:
            case "end":
              return d.stop();
          }
      }, r, this, [[0, 11]]);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "close", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (n.length) {
                d.next = 2;
                break;
              }
              return d.abrupt("return", {});
            case 2:
              return a = n.map(function(h) {
                return h.id;
              }), this.logger.info("Closing consumers: ".concat(JSON.stringify(a))), i = { type: "close_consumers", payload: { consumers: a } }, d.next = 7, this.recvTransport.sendDataChannelMessage("events", i);
            case 7:
              return s = d.sent, u = s.failedConsumers, d.abrupt("return", { failedConsumers: u });
            case 10:
            case "end":
              return d.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "switchConsumersToLayer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (s = this.recvTransport.getDatachannel("events"), s) {
                h.next = 4;
                break;
              }
              return this.logger.warn("events datachannel not found"), h.abrupt("return");
            case 4:
              return u = (i = n == null ? void 0 : n.map(function(v) {
                var f = v.id;
                return f;
              })) !== null && i !== void 0 ? i : [], c = { type: "switch_consumer_layer", payload: { consumerIds: u, layer: a } }, h.next = 8, s.request(c);
            case 8:
              this.logger.info("Consumers switched layers to ".concat(a), { consumerIds: u });
            case 9:
            case "end":
              return h.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}();
function wM() {
  var o = this, t = this.recvTransport;
  t.on("datachannel:events", /* @__PURE__ */ function() {
    var e = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              c.prev = 0, c.t0 = a.type, c.next = c.t0 === "negotiation" ? 4 : 8;
              break;
            case 4:
              return i = a.payload.sdp, s = { sdp: i, type: "offer" }, o.negotiate(s, Eg(a), n), c.abrupt("break", 9);
            case 8:
              return c.abrupt("break", 9);
            case 9:
              c.next = 14;
              break;
            case 11:
              c.prev = 11, c.t1 = c.catch(0), o.logger.error("Unable to handle the incoming datachannel message on channel ".concat(n));
            case 14:
            case "end":
              return c.stop();
          }
      }, r, null, [[0, 11]]);
    }));
    return function(r, n) {
      return e.apply(this, arguments);
    };
  }());
}
var Su = /* @__PURE__ */ E("context"), Xr = /* @__PURE__ */ E("logger"), PM = /* @__PURE__ */ function() {
  function o(t, e, r, n, a) {
    w(this, o), Object.defineProperty(this, Su, { writable: !0, value: void 0 }), Object.defineProperty(this, Xr, { writable: !0, value: void 0 }), this.events = e, this.recvTransport = r, this.socket = n, this.socketHandler = a, l(this, Su)[Su] = t, l(this, Xr)[Xr] = t.getValue("logger");
  }
  return P(o, [{ key: "create", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this, i, s, u, c, d, h;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              if (!(!n || n && n.length === 0)) {
                f.next = 2;
                break;
              }
              throw new Error("List of producers is required");
            case 2:
              return i = /* @__PURE__ */ new Map(), s = [], n.forEach(function(g) {
                var k = g.producingPeerId, y = g.producerId, b = g.producingTransportId, S = l(a, Su)[Su].getValue("flagsmith").hasFeature(ve.ENABLE_CF_SIMULCAST) ? { simulcast: { preferredRid: "h", priorityOrdering: "asciibetical", ridNotAvailable: "asciibetical" } } : {};
                i.set(y, k), s.push(N({ producingPeerId: k, producerId: y, producingTransportId: b }, S));
              }), f.next = 7, this.socketHandler.consume({ requests: s, consumingTransportId: this.recvTransport.serverId });
            case 7:
              return u = f.sent, c = /* @__PURE__ */ new Map(), n.forEach(function(g) {
                return c.set(g.producerId, g);
              }), d = /* @__PURE__ */ new Map(), h = [], Object.entries(u.consumerStateMap).forEach(function(g) {
                var k = Me(g, 2), y = k[0], b = k[1], S = c.get(y);
                if (S) {
                  if (b.errorCode) {
                    l(a, Xr)[Xr].warn("Consumer request failed for producer ".concat(y), { error: { message: b.errorCode } }), h.push(N(N({}, S), {}, { errorCode: b.errorCode }));
                    return;
                  }
                  var T = {};
                  try {
                    T = JSON.parse(b.producerState.appData);
                  } catch (A) {
                  }
                  d.set(y, { consumerId: b.consumerId, producingTransportId: S.producingTransportId, producingPeerId: S.producingPeerId, kind: S.kind, paused: S.pause, streamId: b.producerTrack.streamId, trackId: b.producerTrack.trackId, screenShare: S.screenShare, mimeType: S.mimeType, appData: T });
                }
              }), f.abrupt("return", { consumerStates: d, sessionDescription: u.sessionDescription, failedProducers: h });
            case 14:
            case "end":
              return f.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "negotiate", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.prev = 0, l(this, Xr)[Xr].info("Negotiating socket consumer", { transport: this.recvTransport }), l(this, Xr)[Xr].debug("setting remote offer: ".concat(JSON.stringify(n), " on recvTransport"), { transport: this.recvTransport }), u.next = 5, this.recvTransport.setRemoteOffer(n);
            case 5:
              return a = u.sent, i = { transportId: this.recvTransport.serverId, description: { sdp: a.sdp, type: a.type, target: Qa.SUBSCRIBER } }, l(this, Xr)[Xr].debug("sending renegotiate request: ".concat(JSON.stringify(i), " on recvTransport"), { transport: this.recvTransport }), u.next = 10, this.socket.sendMessagePromise(this.events.renegotiateSessionDescription, iP.toBinary(i));
            case 10:
              return l(this, Xr)[Xr].info("Renegotiation done", { transport: this.recvTransport }), u.abrupt("return", a);
            case 14:
              return u.prev = 14, u.t0 = u.catch(0), l(this, Xr)[Xr].error("Failed to renegotiate", { error: u.t0 }), u.abrupt("return", void 0);
            case 18:
            case "end":
              return u.stop();
          }
      }, r, this, [[0, 14]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "close", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (n.length) {
                u.next = 2;
                break;
              }
              return u.abrupt("return", {});
            case 2:
              return i = /* @__PURE__ */ function() {
                var c = m(/* @__PURE__ */ p().mark(function d(h, v) {
                  var f, g, k, y;
                  return p().wrap(function(S) {
                    for (; ; )
                      switch (S.prev = S.next) {
                        case 0:
                          return f = h.map(function(T) {
                            return T.localId;
                          }), l(a, Xr)[Xr].info("Closing consumers: ".concat(JSON.stringify(f))), g = { description: { sdp: v.sdp, type: v.type, target: Qa.SUBSCRIBER }, consumerIds: f, consumingTransportId: a.recvTransport.serverId }, S.next = 5, a.socketHandler.closeConsumer(g);
                        case 5:
                          return k = S.sent, y = DS.fromBinary(k).description, S.abrupt("return", { sdp: y.sdp, type: y.type });
                        case 8:
                        case "end":
                          return S.stop();
                      }
                  }, d);
                }));
                return function(h, v) {
                  return c.apply(this, arguments);
                };
              }(), u.next = 5, this.recvTransport.awaitQueue.push(function() {
                return a.recvTransport.closeConsumers(n, i);
              }, "ConsumerStrategy.close", { consumersLength: n.length });
            case 5:
              return u.abrupt("return", {});
            case 6:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "switchConsumersToLayer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return i = { requests: [], consumingTransportId: this.recvTransport.serverId }, s = n.filter(function(d) {
                return d && d.id;
              }), s.forEach(function(d) {
                var h = d.id, v = d.producingTransportId, f = d.localId;
                i.requests.push({ producerId: h, producingTransportId: v, mid: f, simulcast: { preferredRid: a === 0 ? "q" : "h", priorityOrdering: "asciibetical", ridNotAvailable: "asciibetical" } });
              }), c.next = 5, this.socketHandler.updateConsumersSimulcastConfig(i);
            case 5:
              l(this, Xr)[Xr].info("Consumers switched layers to ".concat(a), { consumerIds: s == null ? void 0 : s.map(function(d) {
                var h = d.id;
                return h;
              }) });
            case 6:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), SM = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.socketHandler = t;
  }
  return P(o, [{ key: "create", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f, g, k, y, b;
      return p().wrap(function(T) {
        for (; ; )
          switch (T.prev = T.next) {
            case 0:
              return s = n.offer, u = n.kind, c = n.paused, d = n.appData, h = n.codecOptions, v = n.producingTransportId, f = o.getMSIDFromSDP(s.sdp, u), g = { description: { sdp: s.sdp, type: s.type, target: Qa.PUBLISHER }, paused: c, kind: u, msid: f, appData: JSON.stringify(d), screenShare: (a = d.screenShare) !== null && a !== void 0 ? a : !1, mimeType: "".concat(u, "/").concat((i = h[0]) === null || i === void 0 ? void 0 : i.name), producingTransportId: v }, T.next = 5, this.socketHandler.produce(g);
            case 5:
              return k = T.sent, y = k.answer, b = k.producerId, T.abrupt("return", { answer: y, producerId: b });
            case 9:
            case "end":
              return T.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "getMSIDFromSDP", value: function(e, r) {
    var n = Ln.parse(e), a = n.media.filter(function(i) {
      return r === "video" ? i.type === "video" : i.type === "audio";
    }).at(-1).msid;
    return a;
  } }]);
}(), Fa = /* @__PURE__ */ E("producers"), $n = /* @__PURE__ */ E("consumers"), As = /* @__PURE__ */ E("producerIdToConsumerIdMap"), Bu = /* @__PURE__ */ E("producerStrategy"), ut = /* @__PURE__ */ E("consumerStrategy"), dd = /* @__PURE__ */ E("metrics"), tn = /* @__PURE__ */ E("producersToConsume"), Hs = /* @__PURE__ */ E("processConsumerTimeout"), qu = /* @__PURE__ */ E("processConsumers"), pd = /* @__PURE__ */ E("producerCreationRequest"), hd = /* @__PURE__ */ E("handleProducer"), sp = /* @__PURE__ */ E("consumerCreationRequest"), op = /* @__PURE__ */ E("handleConsumer"), EM = /* @__PURE__ */ function(o) {
  function t(e, r, n) {
    var a;
    return w(this, t), a = C(this, t, [e, r, n]), Object.defineProperty(a, op, { value: _M }), Object.defineProperty(a, sp, { value: IM }), Object.defineProperty(a, hd, { value: AM }), Object.defineProperty(a, pd, { value: RM }), Object.defineProperty(a, qu, { value: CM }), Object.defineProperty(a, Fa, { writable: !0, value: void 0 }), Object.defineProperty(a, $n, { writable: !0, value: void 0 }), Object.defineProperty(a, As, { writable: !0, value: void 0 }), Object.defineProperty(a, Bu, { writable: !0, value: void 0 }), Object.defineProperty(a, ut, { writable: !0, value: void 0 }), Object.defineProperty(a, dd, { writable: !0, value: { producerCreationFailureCount: 0, consumerCreationFailureCount: 0, producerNotReadyFailureCount: 0 } }), Object.defineProperty(a, tn, { writable: !0, value: [] }), Object.defineProperty(a, Hs, { writable: !0, value: void 0 }), a.context = e, a.sendTransportConnectedCallback = /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function i() {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              l(a, Bu)[Bu] = new SM(a.socketHandler);
            case 1:
            case "end":
              return u.stop();
          }
      }, i);
    })), a.recvTransportConnectedCallback = /* @__PURE__ */ function() {
      var i = m(/* @__PURE__ */ p().mark(function s(u) {
        return p().wrap(function(d) {
          for (; ; )
            switch (d.prev = d.next) {
              case 0:
                l(a, As)[As].clear(), d.t0 = a.nodeType, d.next = d.t0 === Mr.CF ? 4 : (d.t0 === Mr.HIVE, 6);
                break;
              case 4:
                return l(a, ut)[ut] = new PM(a.context, a.events, u, a.socket, a.socketHandler), d.abrupt("break", 7);
              case 6:
                l(a, ut)[ut] = new TM(a.context, u);
              case 7:
              case "end":
                return d.stop();
            }
        }, s);
      }));
      return function(s) {
        return i.apply(this, arguments);
      };
    }(), a.reset(), a;
  }
  return R(t, o), P(t, [{ key: "socketHandler", get: function() {
    return Ce(t, "socketHandler", this, 1);
  } }, { key: "producers", get: function() {
    return l(this, Fa)[Fa];
  } }, { key: "consumers", get: function() {
    return l(this, $n)[$n];
  } }, {
    key: "producerIdToConsumerIdMap",
    get: function() {
      return l(this, As)[As];
    }
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return this.context.getValue("logger");
  } }, { key: "reset", value: function() {
    l(this, Fa)[Fa] = /* @__PURE__ */ new Map(), l(this, $n)[$n] = /* @__PURE__ */ new Map(), l(this, As)[As] = /* @__PURE__ */ new Map();
  } }, { key: "createProducer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (!(!this.sendTransport || this.sendTransport.closed)) {
                d.next = 2;
                break;
              }
              throw new Error("Send transport is closed");
            case 2:
              return d.prev = 2, d.next = 5, this.sendTransport.produce(a, l(this, pd)[pd].bind(this));
            case 5:
              return u = d.sent, (s = a.appData) !== null && s !== void 0 && s.e2ee && this.context.getValue("peerSessionStore").emit(H.E2EE_ACTIVE_PRODUCER, u), l(this, hd)[hd](u, i), d.abrupt("return", u);
            case 11:
              throw d.prev = 11, d.t0 = d.catch(2), this.logger.error("Failed to create producer", { error: d.t0 }), l(this, dd)[dd].producerCreationFailureCount += 1, d.t0;
            case 16:
            case "end":
              return d.stop();
          }
      }, n, this, [[2, 11]]);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeProducer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (s = this.producers.get(a), s) {
                d.next = 4;
                break;
              }
              return this.logger.warn("Producer with ID ".concat(a, " was not found")), d.abrupt("return");
            case 4:
              return i != null && i.stopTrack && s.track.stop(), d.prev = 5, d.next = 8, this.sendTransport.closeProducer(s);
            case 8:
              (u = this.context.getValue("modules").e2ee) !== null && u !== void 0 && u.enabled && this.context.getValue("peerSessionStore").emit(H.E2EE_INACTIVE_PRODUCER, s), d.next = 14;
              break;
            case 11:
              d.prev = 11, d.t0 = d.catch(5), this.logger.error("Failed to close producer on server", { error: d.t0, producer: s });
            case 14:
            case "end":
              return d.stop();
          }
      }, n, this, [[5, 11]]);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeAllProducers", value: function() {
    return Promise.all(Array.from(l(this, Fa)[Fa].entries()).map(function(r) {
      var n = Me(r, 2), a = n[1];
      return a.close();
    }));
  } }, { key: "createConsumer", value: function(r) {
    return this.createConsumers([r]);
  } }, { key: "createConsumers", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return l(this, Hs)[Hs] || clearTimeout(l(this, Hs)[Hs]), l(this, tn)[tn] = l(this, tn)[tn].concat(a), s.next = 4, l(this, qu)[qu]();
            case 4:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeConsumer", value: function(r) {
    return this.closeConsumers([r]);
  } }, { key: "closeConsumers", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (l(this, ut)[ut]) {
                h.next = 2;
                break;
              }
              return h.abrupt("return");
            case 2:
              if (s = a.map(function(v) {
                return i.consumers.get(v);
              }).filter(function(v) {
                return v !== void 0;
              }), s.length !== 0) {
                h.next = 5;
                break;
              }
              return h.abrupt("return");
            case 5:
              return h.next = 7, l(this, ut)[ut].close(s);
            case 7:
              u = h.sent, c = u.failedConsumers, c != null && c.length && this.logger.warn("Failed to close some consumers", { consumerIds: c });
            case 10:
            case "end":
              return h.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeAllConsumers", value: function() {
    return this.closeConsumers(Array.from(l(this, $n)[$n].keys()));
  } }, { key: "switchConsumersToLayer", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i) {
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              l(this, ut)[ut].switchConsumersToLayer(a, i);
            case 1:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n, a) {
      return e.apply(this, arguments);
    }
    return r;
  }() }]);
}(lM);
function CM() {
  return up.apply(this, arguments);
}
function up() {
  return up = m(/* @__PURE__ */ p().mark(function o() {
    var t = this, e, r, n, a, i, s, u, c;
    return p().wrap(function(h) {
      for (; ; )
        switch (h.prev = h.next) {
          case 0:
            if (!(!this.recvTransport || this.recvTransport.closed)) {
              h.next = 2;
              break;
            }
            throw new Error("Recv transport is closed");
          case 2:
            if (e = 500, r = l(this, tn)[tn].splice(0, l(this, tn)[tn].length), h.prev = 4, n = new Set(Array.from(this.consumers.values()).map(function(v) {
              var f = v.producerId;
              return f;
            })), a = r.filter(function(v) {
              var f = v.producerId;
              return !t.producers.get(f) && !n.has(f);
            }), a.length !== 0) {
              h.next = 9;
              break;
            }
            return h.abrupt("return");
          case 9:
            return h.next = 11, this.recvTransport.consume(a, l(this, sp)[sp].bind(this), l(this, ut)[ut].negotiate.bind(l(this, ut)[ut]));
          case 11:
            i = h.sent, s = i.consumers, u = i.failedProducers, s.forEach(l(this, op)[op].bind(this)), u != null && u.length && (this.logger.error("Failed to create consumers for producers", { producers: u }), c = u.filter(function(v) {
              var f = v.errorCode, g = v.producerId;
              return f === "not_found_track_error" ? (t.logger.error("Track not found for producer: ".concat(g, ". This will not be retried.")), !1) : f === "backend_error" ? (t.logger.error("Unrecoverable error: backend error"), !1) : !0;
            }), l(this, tn)[tn] = l(this, tn)[tn].concat(c), l(this, Hs)[Hs] = setTimeout(l(this, qu)[qu].bind(this), e)), h.next = 26;
            break;
          case 18:
            if (h.prev = 18, h.t0 = h.catch(4), this.logger.error("failed to consume on transport", { error: h.t0 }), !(h.t0.errorCode === "internal_error" && h.t0.errorDescription === "Backend error" || h.t0.errorCode === "invalid_session_description")) {
              h.next = 26;
              break;
            }
            this.logger.error("Irrecoverable error, closing current recvTransport to create a new one", { transport: this.recvTransport, error: { code: h.t0.errorCode, message: h.t0.errorDescription } });
            try {
              this.stopTransports({ recv: !0 });
            } catch (v) {
            }
            return h.next = 26, this.setupTransports({ recv: !0 });
          case 26:
          case "end":
            return h.stop();
        }
    }, o, this, [[4, 18]]);
  })), up.apply(this, arguments);
}
function RM(o) {
  return l(this, Bu)[Bu].create(o);
}
function AM(o, t) {
  var e = this;
  o.on("close", /* @__PURE__ */ function() {
    var r = m(/* @__PURE__ */ p().mark(function n(a, i) {
      var s, u, c, d, h;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              if (s = a.offer, u = a.reason, e.logger.info("producer::closing", { debuggingHint: u, producer: N(N({}, o), {}, { status: "closing" }) }), u === cc) {
                f.next = 16;
                break;
              }
              return c = { producerId: o.id, description: { sdp: s.sdp, type: s.type, target: Qa.PUBLISHER } }, f.prev = 4, f.next = 7, e.socketHandler.closeProducer(c);
            case 7:
              d = f.sent, h = { sdp: d == null ? void 0 : d.sdp, type: d == null ? void 0 : d.type }, e.logger.info("producer::closed", { producer: N(N({}, o), {}, { status: "closed" }) }), i({ answer: h }), f.next = 16;
              break;
            case 13:
              f.prev = 13, f.t0 = f.catch(4), e.logger.error("producer close error", f.t0);
            case 16:
              e.producers.delete(o.id), t();
            case 18:
            case "end":
              return f.stop();
          }
      }, n, null, [[4, 13]]);
    }));
    return function(n, a) {
      return r.apply(this, arguments);
    };
  }()), o.on("trackended", function() {
    e.logger.info("producer::trackended", { producer: N(N({}, o), {}, { status: "UNKNOWN" }) });
  }), l(this, Fa)[Fa].set(o.id, o);
}
function IM(o) {
  return lp.apply(this, arguments);
}
function lp() {
  return lp = m(/* @__PURE__ */ p().mark(function o(t) {
    var e;
    return p().wrap(function(n) {
      for (; ; )
        switch (n.prev = n.next) {
          case 0:
            return n.prev = 0, n.next = 3, this.recvTransport.canConsume();
          case 3:
            return n.next = 5, l(this, ut)[ut].create(t);
          case 5:
            return e = n.sent, n.abrupt("return", e);
          case 9:
            throw n.prev = 9, n.t0 = n.catch(0), this.logger.error("Error in consume request", { error: n.t0 }), n.t0;
          case 13:
          case "end":
            return n.stop();
        }
    }, o, this, [[0, 9]]);
  })), lp.apply(this, arguments);
}
function _M(o) {
  var t = this;
  o.on("close", /* @__PURE__ */ function() {
    var e = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              t.logger.debug("consumer closed", { consumer: { closureReason: n, id: o.id, kind: o.kind, appData: o.appData } }), l(t, $n)[$n].delete(o.id), t.context.getValue("peerSessionStore").emit(H.CONSUMER_CLOSED, { id: o.id });
            case 3:
            case "end":
              return i.stop();
          }
      }, r);
    }));
    return function(r) {
      return e.apply(this, arguments);
    };
  }()), l(this, $n)[$n].set(o.id, o), this.producerIdToConsumerIdMap.set(o.producerId, o.id), this.context.getValue("peerSessionStore").emit(H.NEW_CONSUMER, { id: o.id, appData: o.appData, peerId: o.peerId });
}
var Eu = /* @__PURE__ */ E("zeroCrossingThreshold"), Cu = /* @__PURE__ */ E("minVoiceDuration"), Ru = /* @__PURE__ */ E("hangoverFrames"), Is = /* @__PURE__ */ E("initialEnergyThreshold"), Ws = /* @__PURE__ */ E("noiseAdaptationRate"), Js = /* @__PURE__ */ E("voiceAdaptationRate"), Gu = /* @__PURE__ */ E("minEnergyThreshold"), Wu = /* @__PURE__ */ E("maxEnergyThreshold"), _s = /* @__PURE__ */ E("energyRatioThreshold"), _r = /* @__PURE__ */ E("currentEnergyThreshold"), lt = /* @__PURE__ */ E("backgroundNoiseEnergy"), ot = /* @__PURE__ */ E("voiceDetected"), Ma = /* @__PURE__ */ E("consecutiveVoiceFrames"), Da = /* @__PURE__ */ E("hangoverCount"), en = /* @__PURE__ */ E("noiseEnergyHistory"), Ju = /* @__PURE__ */ E("noiseHistorySize"), vd = /* @__PURE__ */ E("updateEnergyThreshold"), fd = /* @__PURE__ */ E("updateNoiseEstimate"), cp = /* @__PURE__ */ E("calculateEnergy"), dp = /* @__PURE__ */ E("calculateZeroCrossingRate"), Yp = /* @__PURE__ */ function() {
  function o() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = t.initialEnergyThreshold, r = e === void 0 ? 0.015 : e, n = t.zeroCrossingThreshold, a = n === void 0 ? 20 : n, i = t.minVoiceDuration, s = i === void 0 ? 3 : i, u = t.hangoverFrames, c = u === void 0 ? 5 : u, d = t.noiseAdaptationRate, h = d === void 0 ? 0.95 : d, v = t.voiceAdaptationRate, f = v === void 0 ? 0.99 : v, g = t.minEnergyThreshold, k = g === void 0 ? 5e-3 : g, y = t.maxEnergyThreshold, b = y === void 0 ? 0.2 : y, S = t.energyRatioThreshold, T = S === void 0 ? 1.5 : S, A = t.noiseHistorySize, L = A === void 0 ? 50 : A;
    w(this, o), Object.defineProperty(this, fd, { value: DM }), Object.defineProperty(this, vd, { value: MM }), Object.defineProperty(this, Eu, { writable: !0, value: void 0 }), Object.defineProperty(this, Cu, { writable: !0, value: void 0 }), Object.defineProperty(this, Ru, { writable: !0, value: void 0 }), Object.defineProperty(this, Is, { writable: !0, value: void 0 }), Object.defineProperty(this, Ws, { writable: !0, value: void 0 }), Object.defineProperty(this, Js, { writable: !0, value: void 0 }), Object.defineProperty(this, Gu, { writable: !0, value: void 0 }), Object.defineProperty(this, Wu, { writable: !0, value: void 0 }), Object.defineProperty(this, _s, { writable: !0, value: void 0 }), Object.defineProperty(this, _r, { writable: !0, value: void 0 }), Object.defineProperty(this, lt, { writable: !0, value: void 0 }), Object.defineProperty(this, ot, { writable: !0, value: !1 }), Object.defineProperty(this, Ma, { writable: !0, value: 0 }), Object.defineProperty(this, Da, { writable: !0, value: 0 }), Object.defineProperty(this, en, { writable: !0, value: [] }), Object.defineProperty(this, Ju, { writable: !0, value: void 0 }), l(this, Is)[Is] = r, l(this, _r)[_r] = r, l(this, Eu)[Eu] = a, l(this, Cu)[Cu] = s, l(this, Ru)[Ru] = c, l(this, Ws)[Ws] = h, l(this, Js)[Js] = f, l(this, Gu)[Gu] = k, l(this, Wu)[Wu] = b, l(this, _s)[_s] = T, l(this, Ju)[Ju] = L, l(this, lt)[lt] = r / 2;
  }
  return P(o, [{
    key: "voiceDetected",
    get: function() {
      return l(this, ot)[ot];
    }
    /**
    * Process an audio chunk and determine if it contains voice activity
    * @param audioChunk - Float32Array containing audio samples in range [-1, 1]
    * @returns boolean indicating if voice activity is detected
    */
  }, { key: "processAudioChunk", value: function(e) {
    var r = l(o, cp)[cp](e), n = l(o, dp)[dp](e);
    l(this, vd)[vd](r);
    var a = r / l(this, lt)[lt], i = a > l(this, _s)[_s] && r > l(this, _r)[_r] && n > l(this, Eu)[Eu];
    return i ? (l(this, Ma)[Ma] += 1, l(this, Da)[Da] = l(this, Ru)[Ru], l(this, Ma)[Ma] >= l(this, Cu)[Cu] && (l(this, ot)[ot] = !0)) : (l(this, Ma)[Ma] = 0, l(this, Da)[Da] > 0 ? l(this, Da)[Da] -= 1 : l(this, ot)[ot] && (l(this, ot)[ot] = !1), l(this, ot)[ot] || l(this, fd)[fd](r)), { energy: r, isVoice: l(this, ot)[ot] };
  } }, {
    key: "reset",
    value: (
      /**
      * Reset the detector state
      */
      function() {
        l(this, ot)[ot] = !1, l(this, Ma)[Ma] = 0, l(this, Da)[Da] = 0, l(this, _r)[_r] = l(this, Is)[Is], l(this, lt)[lt] = l(this, Is)[Is] / 2, l(this, en)[en] = [];
      }
    )
    /**
    * Get current adaptive threshold values for debugging/visualization
    */
  }, { key: "getThresholdInfo", value: function() {
    return { currentEnergyThreshold: l(this, _r)[_r], backgroundNoiseEnergy: l(this, lt)[lt], energyRatioThreshold: l(this, _s)[_s] };
  } }]);
}();
function MM(o) {
  l(this, ot)[ot] ? l(this, _r)[_r] = l(this, Js)[Js] * l(this, _r)[_r] + (1 - l(this, Js)[Js]) * o : l(this, _r)[_r] = l(this, Ws)[Ws] * l(this, _r)[_r] + (1 - l(this, Ws)[Ws]) * l(this, lt)[lt], l(this, _r)[_r] = Math.max(l(this, Gu)[Gu], Math.min(l(this, Wu)[Wu], l(this, _r)[_r]));
}
function DM(o) {
  if (o < l(this, _r)[_r] * 1.2)
    if (l(this, en)[en].push(o), l(this, en)[en].length > l(this, Ju)[Ju] && l(this, en)[en].shift(), l(this, en)[en].length >= 10) {
      var t = ke(l(this, en)[en]).sort(function(r, n) {
        return r - n;
      }), e = Math.floor(t.length / 2);
      l(this, lt)[lt] = t[e];
    } else
      l(this, lt)[lt] = 0.95 * l(this, lt)[lt] + 0.05 * o;
}
function OM(o) {
  return Math.sqrt(o.map(function(t) {
    return t * t;
  }).reduce(function(t, e) {
    return t + e;
  }) / o.length);
}
function LM(o) {
  for (var t = 0, e = 1; e < o.length; e += 1)
    (o[e] >= 0 && o[e - 1] < 0 || o[e] < 0 && o[e - 1] >= 0) && (t += 1);
  return t;
}
Object.defineProperty(Yp, dp, { value: LM });
Object.defineProperty(Yp, cp, { value: OM });
var Au = /* @__PURE__ */ E("context"), kv = /* @__PURE__ */ function() {
  function o(t) {
    var e = this;
    w(this, o), this.RNAudioSampleHandler = void 0, Object.defineProperty(this, Au, { writable: !0, value: void 0 }), l(this, Au)[Au] = t;
    var r = navigator, n = r.RNAudioSampleHandlerImpl;
    n == null || n.init().then(function(a) {
      e.RNAudioSampleHandler = a;
    }).catch(function(a) {
      e.logger.error("ReactNativeAudioSampler: Failed to initialize audio sampler", a);
    });
  }
  return P(o, [{ key: "logger", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, Au)[Au].getValue("logger");
    }
  ) }, { key: "samples", get: function() {
    var e, r = new Float32Array(1024);
    return (e = this.RNAudioSampleHandler) === null || e === void 0 || e.getFloatTimeDomainData(r), r;
  } }, { key: "stop", value: function() {
    var e;
    (e = this.RNAudioSampleHandler) === null || e === void 0 || e.destructor();
  } }]);
}(), Iu = /* @__PURE__ */ E("context"), bv = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.audioContext = void 0, this.analyser = void 0, Object.defineProperty(this, Iu, { writable: !0, value: void 0 }), l(this, Iu)[Iu] = t, this.audioContext = new AudioContext(), this.analyser = this.audioContext.createAnalyser(), this.analyser.fftSize = 2048;
  }
  return P(o, [{ key: "logger", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, Iu)[Iu].getValue("logger");
    }
  ) }, { key: "samples", get: function() {
    if (this.audioContext.state === "suspended")
      try {
        this.audioContext.resume();
      } catch (r) {
        this.logger.error("AudioContextSampler: Failed to resume audio context", r);
      }
    var e = new Float32Array(this.analyser.frequencyBinCount);
    return this.analyser.getFloatTimeDomainData(e), e;
  } }, { key: "audioTrack", set: function(e) {
    var r = new MediaStream();
    r.addTrack(e);
    var n = this.audioContext.createMediaStreamSource(r);
    n.connect(this.analyser);
  } }]);
}(), NM = /* @__PURE__ */ function() {
  function o() {
    w(this, o);
  }
  return P(o, null, [{ key: "setInterval", value: function(e) {
    for (var r, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, a = arguments.length, i = new Array(a > 2 ? a - 2 : 0), s = 2; s < a; s++)
      i[s - 2] = arguments[s];
    if (navigator && navigator.RNBackgroundTimerImpl) {
      var u;
      return (u = navigator.RNBackgroundTimerImpl).setInterval.apply(u, [e, n].concat(i));
    }
    return (r = global).setInterval.apply(r, [e, n].concat(i));
  } }, { key: "clearInterval", value: function(e) {
    return navigator && navigator.RNBackgroundTimerImpl ? navigator.RNBackgroundTimerImpl.clearInterval(e) : global.clearInterval(e);
  } }, { key: "setTimeout", value: function(e) {
    for (var r, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, a = arguments.length, i = new Array(a > 2 ? a - 2 : 0), s = 2; s < a; s++)
      i[s - 2] = arguments[s];
    if (navigator && navigator.RNBackgroundTimerImpl) {
      var u;
      return (u = navigator.RNBackgroundTimerImpl).setTimeout.apply(u, [e, n].concat(i));
    }
    return (r = global).setTimeout.apply(r, [e, n].concat(i));
  } }, { key: "clearTimeout", value: function(e) {
    return navigator && navigator.RNBackgroundTimerImpl ? navigator.RNBackgroundTimerImpl.clearTimeout(e) : global.clearTimeout(e);
  } }]);
}(), $M = 60, VM = 400, zt = /* @__PURE__ */ E("interval"), Yt = /* @__PURE__ */ E("reportInterval"), ct = /* @__PURE__ */ E("producerId"), _u = /* @__PURE__ */ E("audioTrack"), Ja = /* @__PURE__ */ E("energy"), Bs = /* @__PURE__ */ E("vad"), Zt = /* @__PURE__ */ E("minEnergy"), On = /* @__PURE__ */ E("maxEnergy"), qs = /* @__PURE__ */ E("previousState"), rn = /* @__PURE__ */ E("context"), xt = /* @__PURE__ */ E("audioSampler"), bt = /* @__PURE__ */ E("timer"), gd = /* @__PURE__ */ E("getAudioCharacteristics"), al = /* @__PURE__ */ E("isSilent"), md = /* @__PURE__ */ E("report"), pp = /* @__PURE__ */ E("logScale"), Dc = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, md, { value: FM }), Object.defineProperty(this, gd, { value: UM }), Object.defineProperty(this, zt, { writable: !0, value: void 0 }), Object.defineProperty(this, Yt, { writable: !0, value: void 0 }), Object.defineProperty(this, ct, { writable: !0, value: void 0 }), Object.defineProperty(this, _u, { writable: !0, value: void 0 }), Object.defineProperty(this, Ja, { writable: !0, value: void 0 }), Object.defineProperty(this, Bs, { writable: !0, value: void 0 }), Object.defineProperty(this, Zt, { writable: !0, value: void 0 }), Object.defineProperty(this, On, { writable: !0, value: void 0 }), Object.defineProperty(this, qs, { writable: !0, value: void 0 }), Object.defineProperty(this, rn, { writable: !0, value: void 0 }), Object.defineProperty(this, xt, { writable: !0, value: void 0 }), Object.defineProperty(this, bt, { writable: !0, value: void 0 }), this.reportRequest = e, l(this, rn)[rn] = t, l(this, Bs)[Bs] = new Yp();
    var r = navigator, n = r.isReactNative;
    l(this, xt)[xt] = n ? new kv(l(this, rn)[rn]) : new bv(l(this, rn)[rn]), l(this, bt)[bt] = n ? NM : Nl;
  }
  return P(o, [{ key: "logger", get: (
    /**
    * @access private
    * Not for external use
    */
    function() {
      return l(this, rn)[rn].getValue("logger");
    }
  ) }, { key: "producerId", set: function(e) {
    l(this, ct)[ct] = e;
  } }, { key: "audioTrack", set: function(e) {
    l(this, _u)[_u] = e, l(this, xt)[xt] instanceof bv && (l(this, xt)[xt].audioTrack = e);
  } }, { key: "start", value: function() {
    var e = this;
    this.logger.debug("AudioActivityReporter: Starting audio activity reporter: ".concat(l(this, ct)[ct])), l(this, zt)[zt] && l(this, bt)[bt].clearInterval(l(this, zt)[zt]), l(this, zt)[zt] = l(this, bt)[bt].setInterval(/* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (!(!l(e, _u)[_u] || !l(e, ct)[ct])) {
                c.next = 2;
                break;
              }
              return c.abrupt("return");
            case 2:
              n = l(e, gd)[gd](), a = n.energy, i = l(o, al)[al](a), s = 0.9, l(e, qs)[qs] !== i && l(e, qs)[qs] ? s = 0.9 : i ? s = 0.3 : s = 0.5, l(e, Ja)[Ja] = (l(e, Ja)[Ja] || 0) * (1 - s) + a * s;
            case 7:
            case "end":
              return c.stop();
          }
      }, r);
    })), $M), l(this, Yt)[Yt] && l(this, bt)[bt].clearInterval(l(this, Yt)[Yt]), l(this, Yt)[Yt] = l(this, bt)[bt].setInterval(l(this, md)[md].bind(this), VM);
  } }, { key: "stop", value: function() {
    try {
      this.logger.debug("AudioActivityReporter: Stopping audio activity reporter: ".concat(l(this, ct)[ct])), l(this, zt)[zt] && (l(this, bt)[bt].clearInterval(l(this, zt)[zt]), l(this, zt)[zt] = void 0), l(this, Yt)[Yt] && (l(this, bt)[bt].clearInterval(l(this, Yt)[Yt]), l(this, Yt)[Yt] = void 0);
    } catch (e) {
    }
    l(this, Bs)[Bs].reset(), l(this, xt)[xt] instanceof kv && l(this, xt)[xt].stop();
  } }]);
}();
Sp = Dc;
function UM() {
  var o = l(this, xt)[xt].samples, t = l(this, Bs)[Bs].processAudioChunk(o), e = t.energy, r = t.isVoice, n = l(Sp, pp)[pp](e);
  if (l(this, rn)[rn].getValue("flagsmith").hasFeature(ve.ENABLE_AUDIO_ACTIVITY_DEBUG_LOGS) && this.logger.debug("AudioActivityReporter: producer: ".concat(l(this, ct)[ct], ", energy: ").concat(l(this, Ja)[Ja], `,
				slogScale: `).concat(n, ", isVoice: ").concat(r, ", minEnergy: ").concat(l(this, Zt)[Zt], `,
				maxEnergy: `).concat(l(this, On)[On])), n === -1 / 0 || e < 1e-6)
    return { energy: 0, isVoice: !1 };
  (!l(this, Zt)[Zt] || n < l(this, Zt)[Zt]) && (l(this, Zt)[Zt] = n), (!l(this, On)[On] || n > l(this, On)[On]) && (l(this, On)[On] = n);
  var a = (n - l(this, Zt)[Zt]) / (l(this, On)[On] - l(this, Zt)[Zt]) * 10 || 0;
  return { energy: a, isVoice: r };
}
function jM(o) {
  return o < 5;
}
function FM() {
  var o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : l(this, Ja)[Ja];
  if (!l(this, ct)[ct] || !o) {
    l(this, rn)[rn].getValue("flagsmith").hasFeature(ve.ENABLE_AUDIO_ACTIVITY_DEBUG_LOGS) && this.logger.debug("AudioActivityReporter: No producerId or energy to report: ".concat(l(this, ct)[ct]));
    return;
  }
  var t = { producerId: l(this, ct)[ct], energy: Math.round(o), silent: l(Sp, al)[al](o) };
  l(this, qs)[qs] = t.silent, this.reportRequest(t);
}
function HM(o) {
  var t = Math.log10(o);
  return Math.round(t);
}
Object.defineProperty(Dc, pp, { value: HM });
Object.defineProperty(Dc, al, { value: jM });
var BM = function() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
  if ("MediaStreamTrackGenerator" in window && "AudioData" in window)
    try {
      var e = new window.MediaStreamTrackGenerator({ kind: "audio" }), r = e.writable.getWriter(), n = 48e3, a = 128, i = 1, s = 0, u = null, c = /* @__PURE__ */ function() {
        var S = m(/* @__PURE__ */ p().mark(function T() {
          var A, L;
          return p().wrap(function(M) {
            for (; ; )
              switch (M.prev = M.next) {
                case 0:
                  return M.prev = 0, A = new Float32Array(a * i), L = new window.AudioData({ format: "f32", sampleRate: n, numberOfFrames: a, numberOfChannels: i, timestamp: s, data: A }), s += a / n * 1e6, M.next = 6, r.ready;
                case 6:
                  return M.next = 8, r.write(L);
                case 8:
                  M.next = 15;
                  break;
                case 10:
                  M.prev = 10, M.t0 = M.catch(0), u && clearInterval(u), r.releaseLock(), e.writable.abort();
                case 15:
                case "end":
                  return M.stop();
              }
          }, T, null, [[0, 10]]);
        }));
        return function() {
          return S.apply(this, arguments);
        };
      }();
      u = window.setInterval(c, 100);
      var d = new MediaStream([e]), h = d.getAudioTracks()[0];
      return h.addEventListener("ended", function() {
        u && clearInterval(u), r.releaseLock(), e.writable.abort();
      }), Object.assign(h, { fakeTracks: "fakeTracks:fakeAudioTrack" }), h.enabled = t, h;
    } catch (S) {
    }
  var v = window.AudioContext || window.webkitAudioContext;
  if (v)
    try {
      var f = new v();
      if (!f || f.state !== "running" || !f.destination)
        return;
      var g = f.createOscillator();
      g.frequency.value = 0, g.type = "sine";
      var k = f.createGain();
      k.gain.value = 0, g.connect(k);
      var y = f.createMediaStreamDestination();
      k.connect(y), g.start();
      var b = y.stream.getAudioTracks()[0];
      return b ? (Object.assign(b, { fakeTracks: "fakeTracks:fakeAudioTrack" }), b.enabled = t, b) : void 0;
    } catch (S) {
      return;
    }
}, qM = function() {
  var t, e, r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, n = new MediaStream().getVideoTracks()[0], a = document.createElement("canvas");
  a.height = (t = n == null ? void 0 : n.getSettings().height) !== null && t !== void 0 ? t : 720, a.width = (e = n == null ? void 0 : n.getSettings().width) !== null && e !== void 0 ? e : 1280;
  var i = a.getContext("2d");
  i.fillStyle = "black", i.fillRect(0, 0, a.width, a.height), setInterval(function() {
    i.fillStyle = "black", i.fillRect(0, 0, a.width, a.height);
  }, 1e3);
  var s = a.captureStream().getVideoTracks()[0];
  return Object.assign(s, { fakeTracks: "fakeTracks:fakeVideoTrack" }), s.enabled = r, s;
}, GM = Object.defineProperty, WM = Object.getOwnPropertyDescriptor, xe = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? WM(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && GM(e, r, a), a;
}, Qt = ["video/VP9", "video/VP8"], Cg = (Oo = /* @__PURE__ */ E("roomUUID"), Lo = /* @__PURE__ */ E("peerDisplayName"), Qe = /* @__PURE__ */ E("socketClient"), J = /* @__PURE__ */ E("sfuHandler"), Oi = /* @__PURE__ */ E("rtpCapabilities"), dt = /* @__PURE__ */ E("nodeType"), ur = /* @__PURE__ */ E("events"), pa = /* @__PURE__ */ E("roomJoiningInProgress"), ha = /* @__PURE__ */ E("onceJoined"), ia = /* @__PURE__ */ E("transportQueue"), To = /* @__PURE__ */ E("rejoinRoomFn"), Wr = /* @__PURE__ */ E("connectionPromise"), Ot = /* @__PURE__ */ E("screenshareConsumerProducer"), Ks = /* @__PURE__ */ E("location"), sa = /* @__PURE__ */ E("senderVideoCodecMap"), oa = /* @__PURE__ */ E("receiverVideoCodecMap"), pr = /* @__PURE__ */ E("producerTypes"), Pr = /* @__PURE__ */ E("audioActivityReporter"), fn = /* @__PURE__ */ E("connectionHandler"), wl = /* @__PURE__ */ E("joinRoom"), Kl = /* @__PURE__ */ E("completeJoinRoom"), zl = /* @__PURE__ */ E("reportRoomJoinedAnalytics"), No = /* @__PURE__ */ E("initializeConnection"), Yl = /* @__PURE__ */ E("getLocation"), Ql = /* @__PURE__ */ E("getRtpCapabilities"), Xl = /* @__PURE__ */ E("sendJoinRoomMessage"), Zl = /* @__PURE__ */ E("setupInitialMediaProducers"), Ge = /* @__PURE__ */ E("getProducer"), ua = /* @__PURE__ */ E("setProducer"), Pl = /* @__PURE__ */ E("deleteProducer"), Sl = /* @__PURE__ */ E("getMicProducerDefaults"), El = /* @__PURE__ */ E("getWebcamProducerDefaults"), Fc = /* @__PURE__ */ function() {
  function o(t, e, r) {
    var n, a, i = this;
    w(this, o), Object.defineProperty(this, El, { value: iD }), Object.defineProperty(this, Sl, { value: aD }), Object.defineProperty(this, Pl, { value: nD }), Object.defineProperty(this, ua, { value: tD }), Object.defineProperty(this, Ge, { value: rD }), Object.defineProperty(this, Zl, { value: eD }), Object.defineProperty(this, Xl, { value: xM }), Object.defineProperty(this, Ql, { value: ZM }), Object.defineProperty(this, No, { value: QM }), Object.defineProperty(this, zl, { value: YM }), Object.defineProperty(this, Kl, { value: zM }), Object.defineProperty(this, wl, { value: KM }), Object.defineProperty(this, fn, { get: JM, set: void 0 }), this.context = void 0, this.authToken = void 0, this.e2ee = void 0, Object.defineProperty(this, Oo, { writable: !0, value: void 0 }), Object.defineProperty(this, Lo, { writable: !0, value: void 0 }), Object.defineProperty(this, Qe, { writable: !0, value: void 0 }), Object.defineProperty(this, J, { writable: !0, value: void 0 }), Object.defineProperty(this, Oi, { writable: !0, value: void 0 }), Object.defineProperty(this, dt, { writable: !0, value: void 0 }), Object.defineProperty(this, ur, { writable: !0, value: void 0 }), Object.defineProperty(this, pa, { writable: !0, value: void 0 }), Object.defineProperty(this, ha, { writable: !0, value: void 0 }), Object.defineProperty(this, ia, { writable: !0, value: void 0 }), Object.defineProperty(this, To, { writable: !0, value: void 0 }), Object.defineProperty(this, Wr, { writable: !0, value: null }), Object.defineProperty(this, Ot, { writable: !0, value: void 0 }), Object.defineProperty(this, Ks, { writable: !0, value: void 0 }), Object.defineProperty(this, sa, { writable: !0, value: void 0 }), Object.defineProperty(this, oa, { writable: !0, value: void 0 }), Object.defineProperty(this, pr, { writable: !0, value: void 0 }), Object.defineProperty(this, Pr, { writable: !0, value: void 0 }), this.context = t;
    var s = r.socket;
    this.mediaJoined = !1, l(this, sa)[sa] = /* @__PURE__ */ new Map([["video/VP9", /* @__PURE__ */ new Set()], ["video/VP8", /* @__PURE__ */ new Set()]]), l(this, oa)[oa] = /* @__PURE__ */ new Map([["video/VP9", /* @__PURE__ */ new Set()], ["video/VP8", /* @__PURE__ */ new Set()]]), l(this, dt)[dt] = e, l(this, Qe)[Qe] = s, l(this, pa)[pa] = !1, l(this, J)[J] = new EM(t, s, e), l(this, ur)[ur] = l(this, J)[J].events, l(this, Ot)[Ot] = /* @__PURE__ */ new Set(), l(this, pr)[pr] = /* @__PURE__ */ new Map(), l(this, ha)[ha] = !1, l(this, ia)[ia] = new Kd(t.getValue("logger")), e === Mr.CF && (l(this, Pr)[Pr] = new Dc(this.context, l(this, J)[J].socketHandler.audioActivity.bind(l(this, J)[J].socketHandler))), this.e2ee = (n = (a = t.getValue("modules").e2ee) === null || a === void 0 ? void 0 : a.enabled) !== null && n !== void 0 ? n : !1, this.handleSocketEvents(), this.handleCallstatsEvents(), l(this, To)[To] = jp(/* @__PURE__ */ m(/* @__PURE__ */ p().mark(function u() {
      var c, d;
      return p().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (l(i, fn)[fn].mediaJoinAttempted) {
                v.next = 2;
                break;
              }
              return v.abrupt("return");
            case 2:
              return v.next = 4, i.joinRoom(l(i, Lo)[Lo], l(i, Oo)[Oo], !0, !0);
            case 4:
              c = v.sent, d = c.roomJoined, d && (i.context.getValue("peerSessionStore").emit(H.RESET_PRODUCER_STATE), i.context.getValue("peerSessionStore").emit(H.ROOM_NODE_RECONNECTED));
            case 7:
            case "end":
              return v.stop();
          }
      }, u);
    })), 5e3, { leading: !0, maxWait: 1e3 });
  }
  return P(o, [{
    key: "peerId",
    get: function() {
      return this.context.getValue("peerId");
    }
    /**
    * @access private
    * Not for external use
    */
  }, {
    key: "telemetry",
    get: function() {
      return this.context.getValue("telemetry");
    }
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return this.context.getValue("logger");
  } }, { key: "mediaJoined", get: function() {
    return l(this, fn)[fn].mediaJoined;
  }, set: function(e) {
    l(this, fn)[fn].mediaJoined = e;
  } }, { key: "reset", value: function() {
    l(this, J)[J].closeAllProducers(), l(this, J)[J].closeAllConsumers(), l(this, pr)[pr].clear(), l(this, Ot)[Ot].clear(), l(this, Wr)[Wr] = null, l(this, ia)[ia].stop(), l(this, J)[J].stopAllTransports(), l(this, J)[J].reset(), l(this, ia)[ia] = new Kd();
  } }, { key: "joinRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i = this, s, u, c, d, h = arguments;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              return s = h.length > 2 && h[2] !== void 0 ? h[2] : !1, u = h.length > 3 && h[3] !== void 0 ? h[3] : !1, c = h.length > 4 && h[4] !== void 0 ? h[4] : {}, l(this, fn)[fn].mediaJoinAttempted = !0, l(this, pa)[pa] = !0, s && this.reset(), f.prev = 6, f.next = 9, l(this, ia)[ia].push(function() {
                return l(i, wl)[wl](n, a, u, c);
              }, "joinRoom");
            case 9:
              return d = f.sent, f.abrupt("return", d);
            case 13:
              return f.prev = 13, f.t0 = f.catch(6), this.logger.error("Error in room joining process", { error: f.t0 }), this.context.getValue("peerSessionStore").emit(H.ROOM_NODE_FAILED), f.abrupt("return", { roomJoined: !1 });
            case 18:
            case "end":
              return f.stop();
          }
      }, r, this, [[6, 13]]);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "initializeConnection", value: (
    /**
    * Initialize connection to the SFU.
    * This can be used to start establishing a connection
    * before the full join process.
    */
    function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
        var i = this, s, u, c = arguments;
        return p().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (s = c.length > 2 && c[2] !== void 0 ? c[2] : !1, u = c.length > 3 && c[3] !== void 0 ? c[3] : {}, !l(this, Wr)[Wr]) {
                  h.next = 4;
                  break;
                }
                return h.abrupt("return", l(this, Wr)[Wr]);
              case 4:
                return l(this, Wr)[Wr] = m(/* @__PURE__ */ p().mark(function v() {
                  return p().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          return g.prev = 0, g.next = 3, l(i, No)[No](n, a, s, u);
                        case 3:
                          g.next = 9;
                          break;
                        case 5:
                          throw g.prev = 5, g.t0 = g.catch(0), l(i, Wr)[Wr] = null, g.t0;
                        case 9:
                        case "end":
                          return g.stop();
                      }
                  }, v, null, [[0, 5]]);
                }))(), h.abrupt("return", l(this, Wr)[Wr]);
              case 6:
              case "end":
                return h.stop();
            }
        }, r, this);
      }));
      function e(r, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
  ) }, { key: "getConsumers", value: function() {
    return l(this, J)[J].consumers;
  } }, { key: "leaveRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n = this, a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              l(this, J)[J].stopAllTransports(), l(this, ha)[ha] = !1, l(this, fn)[fn].mediaJoinAttempted = !1, a = { closeRoom: !1 }, l(this, Qe)[Qe].sendMessagePromise(l(this, ur)[ur].leaveRoom, _P.toBinary(a)).then(function(c) {
                var d;
                (d = yS.fromBinary(c.payload)) !== null && d !== void 0 && d.closed && n.logger.warn("Weird state on peer closed and should not happen");
              }).catch(function(c) {
                n.logger.error("error on sending leave room request", { error: c });
              }), this.context.getValue("callstats").callEnded(), i = this.context.getValue("telemetry"), i.destruct();
            case 8:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "activatePeers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.createConsumers(n));
            case 1:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createConsumers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (n.length !== 0) {
                i.next = 2;
                break;
              }
              return i.abrupt("return", Promise.resolve());
            case 2:
              return i.abrupt("return", l(this, J)[J].createConsumers(n));
            case 3:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "closeConsumers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (n.length) {
                u.next = 2;
                break;
              }
              return u.abrupt("return");
            case 2:
              return i = n.reduce(function(c, d) {
                var h = l(a, J)[J].producerIdToConsumerIdMap.get(d.producerId);
                return h ? (c.push(h), c) : (a.logger.warn("consumer not found in close consumers: ".concat(d.producerId)), c);
              }, []), u.next = 5, l(this, J)[J].closeConsumers(i);
            case 5:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_shareWebcam", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i = this, s, u, c, d, h, v, f, g, k, y;
      return p().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (s = a === "video/VP9" ? cr.WEBCAM : cr.WEBCAM_BACKUP, u = l(this, Ge)[Ge](s), !u) {
                S.next = 17;
                break;
              }
              return S.next = 5, u;
            case 5:
              if (c = S.sent, !l(this, J)[J].producers.has(c)) {
                S.next = 16;
                break;
              }
              if (d = l(this, J)[J].producers.get(c), d.closed) {
                S.next = 14;
                break;
              }
              return S.next = 11, d.replaceTrack({ track: n });
            case 11:
              return S.next = 13, this.resumeWebcam(s);
            case 13:
              return S.abrupt("return", n);
            case 14:
              return S.next = 16, this.disableWebcam(a);
            case 16:
              return S.abrupt("return", this._shareWebcam(n, a));
            case 17:
              return h = [a].concat(Qt.filter(function(T) {
                return T !== a;
              })), v = l(this, El)[El](n, h), f = Bo(this.context, "disableSimulcast"), g = l(this, dt)[dt] === Mr.CF ? ve.ENABLE_CF_SIMULCAST : ve.ENABLE_HIVE_SIMULCAST, !f && this.context.getValue("flagsmith").hasFeature(g) ? (this.logger.info("Simulcast enabled for SFU: ".concat(l(this, dt)[dt])), v.encodings = EI(this.context, n)) : this.logger.info("Simulcast disabled for webcam producer, SFU: ".concat(l(this, dt)[dt])), this.context.getValue("flagsmith").hasFeature(ve.TRACK_HINT) && (v.track.contentHint = this.context.getValue("flagsmith").getValue(ve.TRACK_HINT)), k = function() {
                i.logger.info("Disabling video due to the producer closure"), l(i, pr)[pr].delete(s);
              }, y = l(this, J)[J].createProducer(v, k), l(this, ua)[ua](s, y.then(function(T) {
                return T.id;
              })), S.abrupt("return", y.then(function(T) {
                return T.track;
              }));
            case 27:
            case "end":
              return S.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareWebcam", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i = this, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (n !== void 0) {
                d.next = 2;
                break;
              }
              return d.abrupt("return", null);
            case 2:
              if (s = (a = this.context.getValue("flagsmith").getValue(ve.FORCE_VIDEO_CODEC)) === null || a === void 0 ? void 0 : a.toString(), !s) {
                d.next = 6;
                break;
              }
              return this.logger.debug("Calling _shareWebcam with forced video codec: ".concat(s)), d.abrupt("return", this._shareWebcam(n, s));
            case 6:
              return u = Qt.filter(function(h) {
                var v;
                return (
                  // NOTE(roerohan): If the codec is supported
                  ((v = l(i, Oi)[Oi].sender) === null || v === void 0 || (v = v.video) === null || v === void 0 ? void 0 : v.codecs.findIndex(function(f) {
                    return f.mimeType === h;
                  })) >= 0 && l(i, oa)[oa].get(h).size > 0
                );
              }), u.length === 0 && u.push(Qt[0]), d.next = 10, Promise.all(u.map(function(h) {
                return i.logger.debug("Calling _shareWebcam with video codec: ".concat(h)), i._shareWebcam(n, h);
              }));
            case 10:
              return d.abrupt("return", n);
            case 11:
            case "end":
              return d.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareScreen", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this, i, s, u, c, d, h, v, f;
      return p().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (i = n.video, s = n.audio, i !== void 0) {
                k.next = 3;
                break;
              }
              return k.abrupt("return");
            case 3:
              return u = { track: i, codecOptions: [{ name: "VP8" }], appData: { screenShare: !0, e2ee: this.e2ee, supportsRemoteControl: kr.isElectron() }, stopTracks: !1 }, c = function() {
                a.logger.info("Disabling screenShare due to the producer closure"), l(a, pr)[pr].delete(cr.SCREENSHARE_VIDEO), l(a, pr)[pr].delete(cr.SCREENSHARE_AUDIO);
              }, d = l(this, J)[J].createProducer(u, c), l(this, ua)[ua](cr.SCREENSHARE_VIDEO, d.then(function(y) {
                return y.id;
              })), s && (v = { track: s, codecOptions: [{ name: "opus" }], appData: { screenShare: !0, e2ee: this.e2ee, supportsRemoteControl: kr.isElectron() }, stopTracks: !1, zeroRtpOnPause: l(this, dt)[dt] !== Mr.CF }, f = function() {
              }, h = l(this, J)[J].createProducer(v, f), l(this, ua)[ua](cr.SCREENSHARE_AUDIO, h.then(function(y) {
                return y.id;
              }))), k.next = 10, Promise.all([d, h || Promise.resolve()]);
            case 10:
              this.context.getValue("callstats").screenShareStart();
            case 11:
            case "end":
              return k.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareMic", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this, i, s, u, c, d, h;
      return p().wrap(function(f) {
        for (; ; )
          switch (f.prev = f.next) {
            case 0:
              if (f.prev = 0, n !== void 0) {
                f.next = 3;
                break;
              }
              throw new bn("track undefined");
            case 3:
              if (i = l(this, Ge)[Ge](cr.MIC), !i) {
                f.next = 22;
                break;
              }
              return f.next = 7, i;
            case 7:
              if (s = f.sent, !l(this, J)[J].producers.has(s)) {
                f.next = 19;
                break;
              }
              if (u = l(this, J)[J].producers.get(s), u.closed) {
                f.next = 17;
                break;
              }
              return f.next = 13, u.replaceTrack({ track: n });
            case 13:
              return f.next = 15, this.resumeMic();
            case 15:
              return l(this, Pr)[Pr] && (l(this, Pr)[Pr].audioTrack = n, l(this, Pr)[Pr].producerId = s, l(this, Pr)[Pr].start()), f.abrupt("return");
            case 17:
              return f.next = 19, l(this, J)[J].closeProducer(s, { stopTrack: !1 });
            case 19:
              return f.next = 21, this.shareMic(n);
            case 21:
              return f.abrupt("return");
            case 22:
              return c = l(this, Sl)[Sl](n), d = function() {
                l(a, pr)[pr].delete(cr.MIC);
              }, h = l(this, J)[J].createProducer(c, d), l(this, ua)[ua](cr.MIC, h.then(function(g) {
                return g.id;
              })), f.next = 28, h.then(function(g) {
                l(a, Pr)[Pr] && (l(a, Pr)[Pr].audioTrack = g.track, l(a, Pr)[Pr].producerId = g.id, l(a, Pr)[Pr].start());
              });
            case 28:
              f.next = 33;
              break;
            case 30:
              throw f.prev = 30, f.t0 = f.catch(0), new U(f.t0);
            case 33:
            case "end":
              return f.stop();
          }
      }, r, this, [[0, 30]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseMic", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return c.next = 2, l(this, Ge)[Ge](cr.MIC);
            case 2:
              if (a = c.sent, i = l(this, J)[J].producers.get(a), i) {
                c.next = 7;
                break;
              }
              return this.logger.error("pauseMic::could_not_find_mic_producer"), c.abrupt("return");
            case 7:
              if (!i.paused) {
                c.next = 10;
                break;
              }
              return this.logger.info("pauseMic::mic_producer_already_paused"), c.abrupt("return");
            case 10:
              i.pause(), (n = l(this, Pr)[Pr]) === null || n === void 0 || n.stop(), s = { producerId: i.id, pause: !0 }, l(this, Qe)[Qe].sendMessage(l(this, ur)[ur].toggleProducer, Il.toBinary(s));
            case 14:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseWebcam", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n = this, a, i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return h.next = 2, l(this, Ge)[Ge](cr.WEBCAM);
            case 2:
              return a = h.sent, h.next = 5, l(this, Ge)[Ge](cr.WEBCAM_BACKUP);
            case 5:
              if (i = h.sent, s = l(this, J)[J].producers.get(a), u = l(this, J)[J].producers.get(i), !(!s && !u)) {
                h.next = 11;
                break;
              }
              return this.logger.error("pauseWebcam::could_not_find_webcam_producer"), h.abrupt("return");
            case 11:
              c = function(f) {
                var g = { producerId: f.id, pause: !0 };
                l(n, Qe)[Qe].sendMessage(l(n, ur)[ur].toggleProducer, Il.toBinary(g));
              }, s && (s.pause(), c(s)), u && (u.pause(), c(u));
            case 14:
            case "end":
              return h.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeMic", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, l(this, Ge)[Ge](cr.MIC);
            case 2:
              if (n = u.sent, a = l(this, J)[J].producers.get(n), a) {
                u.next = 7;
                break;
              }
              return this.logger.error("resumeMic::could_not_find_mic_producer"), u.abrupt("return");
            case 7:
              if (a.pause) {
                u.next = 10;
                break;
              }
              return this.logger.info("resumeMic::mic_producer_already_resumed"), u.abrupt("return");
            case 10:
              a.resume(), a.appData.e2ee && this.context.getValue("peerSessionStore").emit(H.E2EE_ACTIVE_PRODUCER, a), i = { producerId: a.id, pause: !1 }, l(this, Qe)[Qe].sendMessage(l(this, ur)[ur].toggleProducer, Il.toBinary(i));
            case 14:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeWebcam", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s, u = arguments;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return n = u.length > 0 && u[0] !== void 0 ? u[0] : cr.WEBCAM, d.next = 3, l(this, Ge)[Ge](n);
            case 3:
              if (a = d.sent, i = l(this, J)[J].producers.get(a), i) {
                d.next = 8;
                break;
              }
              return this.logger.error("resumeWebcam::could_not_find_webcam_producer"), d.abrupt("return");
            case 8:
              if (i.paused) {
                d.next = 11;
                break;
              }
              return this.logger.info("resumeWebcam::webcam_producer_already_resumed"), d.abrupt("return");
            case 11:
              i.resume(), i.appData.e2ee && this.context.getValue("peerSessionStore").emit(H.E2EE_ACTIVE_PRODUCER, i), s = { producerId: i.id, pause: !1 }, l(this, Qe)[Qe].sendMessage(l(this, ur)[ur].toggleProducer, Il.toBinary(s));
            case 15:
            case "end":
              return d.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableWebcam", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return a = n === "video/VP9" ? cr.WEBCAM : cr.WEBCAM_BACKUP, u.next = 3, l(this, Ge)[Ge](a);
            case 3:
              if (i = u.sent, l(this, Pl)[Pl](a), !i) {
                u.next = 8;
                break;
              }
              return u.next = 8, l(this, J)[J].closeProducer(i);
            case 8:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableMic", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, Ge)[Ge](cr.MIC);
            case 2:
              if (a = s.sent, !a) {
                s.next = 6;
                break;
              }
              return s.next = 6, l(this, J)[J].closeProducer(a);
            case 6:
              (n = l(this, Pr)[Pr]) === null || n === void 0 || n.stop(), l(this, pr)[pr].delete(cr.MIC);
            case 8:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableScreenShare", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.logger.info("screen_sharing_stopped"), this.context.getValue("callstats").screenShareStop(), s.next = 4, l(this, Ge)[Ge](cr.SCREENSHARE_VIDEO);
            case 4:
              return n = s.sent, s.next = 7, l(this, Ge)[Ge](cr.SCREENSHARE_AUDIO);
            case 7:
              if (a = s.sent, !n) {
                s.next = 11;
                break;
              }
              return s.next = 11, l(this, J)[J].closeProducer(n);
            case 11:
              if (!a) {
                s.next = 14;
                break;
              }
              return s.next = 14, l(this, J)[J].closeProducer(a);
            case 14:
              l(this, Ot)[Ot].clear(), l(this, pr)[pr].delete(cr.SCREENSHARE_VIDEO), l(this, pr)[pr].delete(cr.SCREENSHARE_AUDIO);
            case 17:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "muteSelf",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r() {
        return p().wrap(function(a) {
          for (; ; )
            switch (a.prev = a.next) {
              case 0:
                this.pauseMic();
              case 1:
              case "end":
                return a.stop();
            }
        }, r, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /* eslint-disable-next-line class-methods-use-this */
  }, { key: "unmuteSelf", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
            case "end":
              return a.stop();
          }
      }, r);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resetVideoProducers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              if (!n) {
                d.next = 12;
                break;
              }
              return d.next = 3, l(this, Ge)[Ge](cr.WEBCAM);
            case 3:
              return i = d.sent, d.next = 6, l(this, Ge)[Ge](cr.WEBCAM_BACKUP);
            case 6:
              return s = d.sent, d.next = 9, l(this, J)[J].closeProducer(i, { stopTrack: !1 });
            case 9:
              return d.next = 11, l(this, J)[J].closeProducer(s, { stopTrack: !1 });
            case 11:
              this.shareWebcam(n);
            case 12:
              if (!a) {
                d.next = 19;
                break;
              }
              return d.next = 15, l(this, Ge)[Ge](cr.SCREENSHARE_VIDEO);
            case 15:
              return u = d.sent, d.next = 18, l(this, J)[J].closeProducer(u, { stopTrack: !1 });
            case 18:
              this.shareScreen({ video: a });
            case 19:
            case "end":
              return d.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "changeDisplayName", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return i = { displayName: n, participantId: a != null ? a : this.peerId }, c.next = 3, l(this, J)[J].socketHandler.changeDisplayName(i);
            case 3:
              if (s = c.sent, s) {
                c.next = 6;
                break;
              }
              throw new Error("failed to change display name!");
            case 6:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kick", value: function(e) {
    var r = { peerIds: [e] };
    l(this, J)[J].socketHandler.kickPeer(r);
  } }, {
    key: "kickAll",
    value: function() {
      l(this, J)[J].socketHandler.kickAll();
    }
    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */
  }, { key: "muteAll", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, J)[J].socketHandler.hostControlForAll("audio");
            case 2:
              if (a = s.sent, a) {
                s.next = 5;
                break;
              }
              throw new Error("failed to mute all participant");
            case 5:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "muteAllVideo", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, l(this, J)[J].socketHandler.hostControlForAll("video");
            case 2:
              if (n = i.sent, n) {
                i.next = 5;
                break;
              }
              throw new Error("failed to mute all video participant");
            case 5:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAudio", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, J)[J].socketHandler.hostControlForPeer(n, "audio");
            case 2:
              if (a = s.sent, a) {
                s.next = 5;
                break;
              }
              throw new Error("failed to mute given participant");
            case 5:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, J)[J].socketHandler.hostControlForPeer(n, "video");
            case 2:
              if (a = s.sent, a) {
                s.next = 5;
                break;
              }
              throw new Error("failed to mute video of given participant");
            case 5:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pinPeer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return a = { participantId: n != null ? n : "" }, s.prev = 1, s.next = 4, l(this, Qe)[Qe].sendMessagePromise(l(this, ur)[ur].globalPinPeer, GP.toBinary(a));
            case 4:
              s.next = 9;
              break;
            case 6:
              s.prev = 6, s.t0 = s.catch(1), this.logger.error("Error in pinning peer:", { error: s.t0 });
            case 9:
            case "end":
              return s.stop();
          }
      }, r, this, [[1, 6]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "validateScreenShare", value: function(e) {
    return this.peerId === e.peerId && l(this, J)[J].producers.get(e.producerId) && l(this, Ot)[Ot].add(e.consumerPeerId), l(this, Ot)[Ot].size;
  } }, { key: "switchConsumersToLayer", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i = this, s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              s = n.map(function(d) {
                return i.getConsumers().get(d);
              }), l(this, J)[J].switchConsumersToLayer(s, a);
            case 2:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleSocketEvents", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n = this;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              l(this, Qe)[Qe].on(l(this, ur)[ur].peerProducerCreateBroadcast, function(s) {
                var u = s.payload;
                if (n.mediaJoined)
                  try {
                    var c = zS.fromBinary(u), d = c.participantId, h = c.producerState;
                    if (d === n.peerId)
                      return;
                    if (h != null && h.mimeType || (h.mimeType = h.kind === va.AUDIO ? "audio/opus" : "video/VP8"), h.kind === va.VIDEO && !h.screenShare) {
                      var v;
                      if (
                        // Can receive vp9
                        ((v = l(n, Oi)[Oi].receiver) === null || v === void 0 || (v = v.video) === null || v === void 0 ? void 0 : v.codecs.findIndex(function(f) {
                          return f.mimeType === Qt[0];
                        })) >= 0 && l(n, sa)[sa].get(Qt[0]).has(d) && h.mimeType !== Qt[0]
                      ) {
                        n.logger.warn("Ignoring producer: ".concat(h.producerId));
                        return;
                      }
                    }
                    n.logger.info("producer created broadcast: ".concat(d, ", producer state: ").concat(h)), n.context.getValue("peerSessionStore").emit(H.NEW_PRODUCER, { peerId: d, producer: N(N({}, h), {}, { kind: h.kind === va.AUDIO ? "audio" : "video", producingPeerId: d }) });
                  } catch (f) {
                    n.logger.error("error in peer-producer-create-broadcast", { error: f });
                  }
              }), l(this, Qe)[Qe].on(l(this, ur)[ur].peerProducerToggleBroadcast, function(s) {
                var u = s.payload;
                if (n.mediaJoined)
                  try {
                    var c = Jh.fromBinary(u), d = c.participantId, h = c.initiatorParticipantId, v = c.producerState, f = v.kind, g = v.pause, k = v.producerId, y = f === va.AUDIO ? "audio" : "video";
                    if (n.logger.info("producer toggle broadcast: ".concat(d, ", producerId: ").concat(k, ", kind:").concat(y, ", paused:").concat(g, " payload: ").concat(JSON.stringify(Jh.fromBinary(u)))), d === n.peerId && h !== n.peerId && g && n.context.getValue("peerSessionStore").emit(y === "audio" ? H.MUTE_SELF : H.MUTE_SELF_VIDEO), d === n.peerId)
                      return;
                    n.context.getValue("peerSessionStore").emit(H.PRODUCER_TOGGLE, { peerId: d, producerId: k, paused: g, kind: y });
                    var b = Array.from(n.getConsumers().values()).filter(function(S) {
                      return S.producerId === k;
                    });
                    b.forEach(function(S) {
                      S.paused !== g && (n.logger.debug("consumer state mismatched for ".concat(S.id, ". updating consumer pause state ").concat(S.paused, " to ").concat(g)), g ? (S.pause(), n.context.getValue("peerSessionStore").emit(H.CONSUMER_PAUSED, { id: S.id })) : (S.resume(), n.context.getValue("peerSessionStore").emit(H.CONSUMER_RESUMED, { id: S.id })));
                    });
                  } catch (S) {
                    n.logger.error("error in producer toggle broadcast handler", { error: S });
                  }
              }), l(this, Qe)[Qe].on(l(this, ur)[ur].peerLeaveBroadcast, function(s) {
                var u = s.payload;
                if (n.mediaJoined)
                  try {
                    var c = Md.fromBinary(u), d = c.participantId;
                    if (d === n.peerId)
                      return;
                    n.logger.info("peer left broadcast:".concat(d)), l(n, Ot)[Ot].delete(d), l(n, J)[J].consumers.forEach(function(h) {
                      h.peerId === d && h.close();
                    }), n.context.getValue("peerSessionStore").emit(H.PEER_CLOSED, { id: d });
                  } catch (h) {
                    n.logger.error("error in peer left broadcast", { error: h });
                  }
              }), l(this, Qe)[Qe].on(l(this, ur)[ur].peerProducerCloseBroadcast, function(s) {
                var u = s.payload;
                if (n.mediaJoined)
                  try {
                    var c = XS.fromBinary(u), d = c.participantId, h = c.producerState.producerId;
                    if (d === n.peerId)
                      return;
                    n.logger.info("producer closed broadcast:".concat(d)), n.context.getValue("peerSessionStore").emit(H.PRODUCER_CLOSED, { peerId: d, producerId: h });
                    var v = l(n, J)[J].producerIdToConsumerIdMap.get(h);
                    if (!v) {
                      n.logger.warn("no consumer found for producer:".concat(h));
                      return;
                    }
                    n.logger.info("closing consumer ".concat(v, ", producer id: ").concat(h)), l(n, J)[J].closeConsumer(v).then(function() {
                      n.logger.info("closed consumer: ".concat(v)), l(n, J)[J].producerIdToConsumerIdMap.delete(h), n.context.getValue("peerSessionStore").emit(H.CONSUMER_CLOSED, { id: v });
                    }).catch(function(f) {
                      n.logger.error("error closing consumer", { error: f });
                    });
                  } catch (f) {
                    n.logger.error("error on producer close broadcast", { error: f });
                  }
              }), l(this, Qe)[Qe].on(l(this, ur)[ur].mediaRoomTerminationBroadcastResponse, function() {
                !n.mediaJoined && !l(n, pa)[pa] && !l(n, ha)[ha] || (n.logger.warn("media hub termination broadcast received, rejoining room"), n.context.getValue("peerSessionStore").emit(H.ROOM_NODE_DISCONNECTED), l(n, To)[To]());
              });
            case 5:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleCallstatsEvents", value: function() {
    var e = this;
    this.context.getValue("callstats").onConsumerScore(function(r) {
      r.forEach(function(n, a) {
        var i = l(e, J)[J].consumers.get(a);
        i && e.context.getValue("peerSessionStore").emit(H.CONSUMER_SCORE_UPDATE, { id: a, kind: i.kind, peerId: i.peerId, score: n.score, scoreStats: n });
      });
    }), this.context.getValue("callstats").onProducerScore(function(r) {
      r.forEach(function(n, a) {
        var i = Array.from(l(e, J)[J].producers.values()).find(function(s) {
          return s.id === a;
        });
        i && e.context.getValue("peerSessionStore").emit(H.PRODUCER_SCORE_UPDATE, { id: a, kind: i.kind, appData: i.appData, score: n.score, scoreStats: n });
      });
    });
  } }, { key: "handlePeerCapabilities", value: function(e, r) {
    for (var n = this, a = function() {
      var d, h = Qt[i];
      if (
        // if the codec is present in the peer capabilities
        (r == null || (d = r.receiver) === null || d === void 0 || (d = d.video) === null || d === void 0 ? void 0 : d.codecs.findIndex(function(v) {
          return v.mimeType === h;
        })) >= 0 || i === Qt.length - 1
      )
        return l(n, oa)[oa].get(h).add(e), 1;
    }, i = 0; i <= Qt.length && !a(); i += 1)
      ;
    for (var s = function() {
      var d, h = Qt[u];
      if (
        // if the codec is present in the peer capabilities
        (r == null || (d = r.sender) === null || d === void 0 || (d = d.video) === null || d === void 0 ? void 0 : d.codecs.findIndex(function(v) {
          return v.mimeType === h;
        })) >= 0 || u === Qt.length - 1
      )
        return l(n, sa)[sa].get(h).add(e), 1;
    }, u = 0; u <= Qt.length && !s(); u += 1)
      ;
  } }, { key: "handlePeerLeaving", value: function(e) {
    var r = this;
    this.context.getValue("flagsmith").hasFeature(ve.FORCE_VIDEO_CODEC) || (l(this, sa)[sa].forEach(function(n) {
      return n.delete(e);
    }), l(this, oa)[oa].forEach(function(n, a) {
      n.delete(e), !(n.size !== 0 || a === Qt[0]) && r.disableWebcam(a);
    }));
  } }]);
}(), Object.defineProperty(Fc, Yl, { value: XM }), Fc);
function JM() {
  return this.context.getValue("connectionHandler");
}
function KM(o, t, e, r) {
  return hp.apply(this, arguments);
}
function hp() {
  return hp = m(/* @__PURE__ */ p().mark(function o(t, e, r, n) {
    var a;
    return p().wrap(function(s) {
      for (; ; )
        switch (s.prev = s.next) {
          case 0:
            if (l(this, Lo)[Lo] = t, s.prev = 1, !l(this, Wr)[Wr]) {
              s.next = 7;
              break;
            }
            return s.next = 5, l(this, Wr)[Wr];
          case 5:
            s.next = 9;
            break;
          case 7:
            return s.next = 9, l(this, No)[No](t, e, r, n);
          case 9:
            return l(this, zl)[zl](e), s.next = 12, l(this, Kl)[Kl]();
          case 12:
            return a = s.sent, s.abrupt("return", { roomJoined: a });
          case 16:
            return s.prev = 16, s.t0 = s.catch(1), this.logger.error("Failed to complete room join", { error: s.t0 }), s.abrupt("return", { roomJoined: !1 });
          case 20:
            return s.prev = 20, l(this, Wr)[Wr] = null, s.finish(20);
          case 23:
          case "end":
            return s.stop();
        }
    }, o, this, [[1, 16, 20, 23]]);
  })), hp.apply(this, arguments);
}
function zM() {
  return vp.apply(this, arguments);
}
function vp() {
  return vp = m(/* @__PURE__ */ p().mark(function o() {
    var t, e;
    return p().wrap(function(n) {
      for (; ; )
        switch (n.prev = n.next) {
          case 0:
            return n.prev = 0, this.mediaJoined = !0, n.next = 4, l(this, J)[J].socketHandler.notifySelfJoinComplete();
          case 4:
            return t = n.sent, e = t.roomState, l(this, Oo)[Oo] = e.roomUuid, l(this, ha)[ha] = !0, l(this, pa)[pa] = !1, n.abrupt("return", !0);
          case 12:
            return n.prev = 12, n.t0 = n.catch(0), this.logger.error("Error completing room join", { error: n.t0 }), this.mediaJoined = !1, n.abrupt("return", !1);
          case 17:
          case "end":
            return n.stop();
        }
    }, o, this, [[0, 12]]);
  })), vp.apply(this, arguments);
}
function YM(o) {
  var t = this;
  navigator.product !== "ReactNative" && setTimeout(function() {
    try {
      var e = t.context.getValue("userId"), r = { userId: e, peerId: t.peerId, roomUUID: o, roomViewType: "groupCall", deviceInfo: N(N({}, kr.getDeviceInfo()), {}, { userAgent: navigator.userAgent, memory: navigator.deviceMemory, cpus: navigator.hardwareConcurrency }), sdkName: t.context.getValue("sdkName"), sdkVersion: t.context.getValue("sdkVersion"), metaData: {}, permissions: {} };
      t.context.getValue("callstats").roomJoined(r);
    } catch (n) {
      t.logger.error("Error reporting room joined analytics", { error: n });
    }
  }, 0);
}
function QM(o, t, e, r) {
  return fp.apply(this, arguments);
}
function fp() {
  return fp = m(/* @__PURE__ */ p().mark(function o(t, e, r, n) {
    var a, i, s;
    return p().wrap(function(c) {
      for (; ; )
        switch (c.prev = c.next) {
          case 0:
            return c.prev = 0, (i = (a = l(this, Ks))[Ks]) !== null && i !== void 0 || (a[Ks] = l(Cg, Yl)[Yl]()), s = l(this, Ql)[Ql](), c.next = 5, l(this, Xl)[Xl](t, e, r, s);
          case 5:
            return c.next = 7, l(this, J)[J].setupTransports({ send: !0, recv: !0 });
          case 7:
            return c.next = 9, l(this, Zl)[Zl](n);
          case 9:
            c.next = 15;
            break;
          case 11:
            throw c.prev = 11, c.t0 = c.catch(0), this.logger.error("Failed to initialize connection", { error: c.t0 }), c.t0;
          case 15:
          case "end":
            return c.stop();
        }
    }, o, this, [[0, 11]]);
  })), fp.apply(this, arguments);
}
function XM() {
  var o = pt(), t = o.ipInfo;
  if (t != null && t.loc) {
    var e = t.loc.split(",").map(parseFloat), r = Me(e, 2), n = r[0], a = r[1];
    return { latitude: n, longitude: a };
  }
}
function ZM() {
  var o, t = (o = this.context.getValue("flagsmith").getValue(ve.FORCE_VIDEO_CODEC)) === null || o === void 0 ? void 0 : o.toString(), e = J_(t);
  return l(this, Oi)[Oi] = e, e;
}
function xM(o, t, e, r) {
  return gp.apply(this, arguments);
}
function gp() {
  return gp = m(/* @__PURE__ */ p().mark(function o(t, e, r, n) {
    var a = this;
    return p().wrap(function(s) {
      for (; ; )
        switch (s.prev = s.next) {
          case 0:
            return s.next = 2, Pg(/* @__PURE__ */ function() {
              var u = m(/* @__PURE__ */ p().mark(function c(d, h) {
                return p().wrap(function(f) {
                  for (; ; )
                    switch (f.prev = f.next) {
                      case 0:
                        if (l(a, Qe)[Qe].isConnected) {
                          f.next = 3;
                          break;
                        }
                        return h(new Error("Socket is not connected")), f.abrupt("return");
                      case 3:
                        return d > 0 && a.logger.warn("Retry: send joinRoom message", { debuggingHint: "Retry attempt ".concat(d) }), f.prev = 4, f.next = 7, l(a, J)[J].socketHandler.joinRoom(e, t, n, r, l(a, Ks)[Ks]);
                      case 7:
                        f.next = 13;
                        break;
                      case 9:
                        throw f.prev = 9, f.t0 = f.catch(4), a.logger.error("Failed to send joinRoom message after retries", { error: f.t0 }), f.t0;
                      case 13:
                      case "end":
                        return f.stop();
                    }
                }, c, null, [[4, 9]]);
              }));
              return function(c, d) {
                return u.apply(this, arguments);
              };
            }(), { delayTime: 1e3, strategy: "exponential", maxRetryCount: this.context.getValue("flagsmith").hasFeature(ve.ENABLE_HIVE_INFINITE_RETRIES) ? 1 / 0 : 3 });
          case 2:
          case "end":
            return s.stop();
        }
    }, o, this);
  })), gp.apply(this, arguments);
}
function eD(o) {
  return mp.apply(this, arguments);
}
function mp() {
  return mp = m(/* @__PURE__ */ p().mark(function o(t) {
    var e, r, n;
    return p().wrap(function(i) {
      for (; ; )
        switch (i.prev = i.next) {
          case 0:
            if (l(this, dt)[dt] !== Mr.HIVE) {
              i.next = 2;
              break;
            }
            return i.abrupt("return");
          case 2:
            if (e = this.context.getValue("flagsmith").hasFeature(ve.PRECREATE_PRODUCERS), !(!e || !t)) {
              i.next = 5;
              break;
            }
            return i.abrupt("return");
          case 5:
            if (i.prev = 5, r = [], t.canProduceVideo === ne.Allowed && r.push(this.shareWebcam(qM(!1))), t.canProduceAudio === ne.Allowed && (n = BM(!1), n && r.push(this.shareMic(n))), !(r.length > 0)) {
              i.next = 12;
              break;
            }
            return i.next = 12, Promise.all(r);
          case 12:
            i.next = 17;
            break;
          case 14:
            i.prev = 14, i.t0 = i.catch(5), this.logger.warn("Failed to precreate producers", { error: i.t0 });
          case 17:
          case "end":
            return i.stop();
        }
    }, o, this, [[5, 14]]);
  })), mp.apply(this, arguments);
}
function rD(o) {
  return l(this, pr)[pr].get(o);
}
function tD(o, t) {
  return l(this, pr)[pr].set(o, t);
}
function nD(o) {
  return l(this, pr)[pr].delete(o);
}
function aD(o) {
  return { track: o, encodings: [{ priority: "high" }], codecOptions: [{ name: "opus" }], appData: { e2ee: this.e2ee }, stopTracks: !1, zeroRtpOnPause: l(this, dt)[dt] !== Mr.CF };
}
function iD(o, t) {
  return { track: o, codecOptions: t ? t.map(function(e) {
    return { name: e.split("/")[1] };
  }) : [{ name: "VP8" }], appData: { screenShare: !1, e2ee: this.e2ee }, stopTracks: !1 };
}
var ze = Cg;
xe([D.trace("MediaNodeClient.reset", { country: D.location.country })], ze.prototype, "reset", 1);
xe([D.trace("MediaNodeClient.joinRoom")], ze.prototype, "joinRoom", 1);
xe([D.trace("MediaNodeClient.leaveRoom")], ze.prototype, "leaveRoom", 1);
xe([D.trace("MediaNodeClient.activatePeers")], ze.prototype, "activatePeers", 1);
xe([D.trace("MediaNodeClient.createConsumers")], ze.prototype, "createConsumers", 1);
xe([D.trace("MediaNodeClient.closeConsumers")], ze.prototype, "closeConsumers", 1);
xe([D.trace("MediaNodeClient._shareWebcam")], ze.prototype, "_shareWebcam", 1);
xe([D.trace("MediaNodeClient.shareWebcam")], ze.prototype, "shareWebcam", 1);
xe([D.trace("MediaNodeClient.shareScreen")], ze.prototype, "shareScreen", 1);
xe([D.trace("MediaNodeClient.shareMic")], ze.prototype, "shareMic", 1);
xe([D.trace("MediaNodeClient.pauseMic")], ze.prototype, "pauseMic", 1);
xe([D.trace("MediaNodeClient.pauseWebcam")], ze.prototype, "pauseWebcam", 1);
xe([D.trace("MediaNodeClient.resumeMic")], ze.prototype, "resumeMic", 1);
xe([D.trace("MediaNodeClient.resumeWebcam")], ze.prototype, "resumeWebcam", 1);
xe([D.trace("MediaNodeClient.disableWebcam")], ze.prototype, "disableWebcam", 1);
xe([D.trace("HiveClient.disableMic")], ze.prototype, "disableMic", 1);
xe([D.trace("HiveClient.disableScreenShare")], ze.prototype, "disableScreenShare", 1);
xe([D.trace("MediaNodeClient.muteSelf")], ze.prototype, "muteSelf", 1);
xe([D.trace("MediaNodeClient.resetVideoProducers")], ze.prototype, "resetVideoProducers", 1);
xe([D.trace("MediaNodeClient.changeDisplayName")], ze.prototype, "changeDisplayName", 1);
xe([D.trace("MediaNodeClient.kickPeer")], ze.prototype, "kick", 1);
xe([D.trace("MediaNodeClient.kickAllPeers")], ze.prototype, "kickAll", 1);
xe([D.trace("MediaNodeClient.muteAll")], ze.prototype, "muteAll", 1);
xe([D.trace("MediaNodeClient.muteAllVideo")], ze.prototype, "muteAllVideo", 1);
xe([D.trace("MediaNodeClient.disableAudio")], ze.prototype, "disableAudio", 1);
xe([D.trace("MediaNodeClient.disableVideo")], ze.prototype, "disableVideo", 1);
xe([D.trace("MediaNodeClient.pinPeer")], ze.prototype, "pinPeer", 1);
xe([D.trace("MediaNodeClient.validateScreenShare")], ze.prototype, "validateScreenShare", 1);
function Rg(o, t, e) {
  var r = o.getValue("roomNodeClient");
  if (r) {
    if (r)
      return r;
    throw new Error("Room node client already set up.");
  }
  var n = new ze(o, t, e);
  return o.setValue("roomNodeClient", n), n;
}
function Ag(o) {
  var t = o.getValue("roomNodeClient");
  try {
    t == null || t.leaveRoom();
  } catch (e) {
    o.getValue("logger").error("roomNodeClient::cleanupRoomNodeClient");
  }
  o.setValue("roomNodeClient", void 0);
}
var sD = Object.defineProperty, oD = Object.getOwnPropertyDescriptor, ho = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? oD(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && sD(e, r, a), a;
}, Ig = (la = /* @__PURE__ */ E("socketService"), xr = /* @__PURE__ */ E("roomSocketHandler"), Z = /* @__PURE__ */ E("context"), lr = /* @__PURE__ */ E("roomNodeClient"), /* @__PURE__ */ function() {
  function o(t, e, r, n) {
    w(this, o), Object.defineProperty(this, lr, { get: uD, set: void 0 }), this.self = void 0, this.authToken = void 0, Object.defineProperty(this, la, { writable: !0, value: void 0 }), this.viewType = void 0, Object.defineProperty(this, xr, { writable: !0, value: void 0 }), Object.defineProperty(this, Z, { writable: !0, value: void 0 });
    var a = r.socket, i = t.getValue("authToken");
    this.self = e, l(this, Z)[Z] = t, this.viewType = n, this.authToken = i, l(this, la)[la] = a, l(this, xr)[xr] = r, e.config.viewType !== Lt.Chat && this.setupEvents();
  }
  return P(o, [{ key: "peerId", get: function() {
    return l(this, Z)[Z].getValue("peerId");
  } }, {
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, Z)[Z].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, Z)[Z].getValue("logger");
  } }, { key: "mediaJoined", get: function() {
    return l(this, Z)[Z].getValue("connectionHandler").mediaJoined;
  } }, { key: "shareMediaTracks", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s, u, c, d, h, v, f;
      return p().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (n = this.self, a = n.audioTrack, i = n.videoTrack, s = n.permissions, u = n.audioEnabled, c = n.videoEnabled, d = n.screenShareEnabled, h = n.screenShareTracks, !(s.canProduceAudio === ne.Allowed && u)) {
                k.next = 11;
                break;
              }
              return k.prev = 2, k.next = 5, l(this, lr)[lr].shareMic(a);
            case 5:
              this.self.audioEnabled || l(this, lr)[lr].pauseMic(), k.next = 11;
              break;
            case 8:
              k.prev = 8, k.t0 = k.catch(2), this.self.disableAudio();
            case 11:
              if (!(s.canProduceVideo === ne.Allowed && c)) {
                k.next = 25;
                break;
              }
              return k.prev = 12, k.next = 15, l(this, lr)[lr].shareWebcam(i);
            case 15:
              if (v = k.sent, !(v && v.id !== i.id && l(this, Z)[Z].getValue("flagsmith").hasFeature(ve.EXP_RESHARE))) {
                k.next = 19;
                break;
              }
              return k.next = 19, l(this, lr)[lr].shareWebcam(v);
            case 19:
              this.self.videoEnabled || l(this, lr)[lr].pauseWebcam(), k.next = 25;
              break;
            case 22:
              k.prev = 22, k.t1 = k.catch(12), this.self.disableVideo();
            case 25:
              if (!(s.canProduceScreenshare === ne.Allowed && d)) {
                k.next = 34;
                break;
              }
              return k.prev = 26, k.next = 29, (f = l(this, lr)[lr]) === null || f === void 0 ? void 0 : f.shareScreen({ video: h.video, audio: h.audio });
            case 29:
              k.next = 34;
              break;
            case 31:
              k.prev = 31, k.t2 = k.catch(26), this.self.disableScreenShare();
            case 34:
            case "end":
              return k.stop();
          }
      }, r, this, [[2, 8], [12, 22], [26, 31]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "kickHandler",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n) {
        var a;
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                a = "kicked", (n == null ? void 0 : n.kickType) === "kickAll" && (a = "ended"), this.leaveRoom(a);
              case 3:
              case "end":
                return s.stop();
            }
        }, r, this);
      }));
      function e(r) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Waitlist handlers
    */
  }, { key: "waitlistedHandler", value: function() {
    this.logger.info("SelController.waitlisted"), this.self.waitlistStatus = "waiting", this.self.roomState = "waitlisted", this.self.emit("waitlisted");
  } }, { key: "waitlistAcceptHandler", value: function() {
    if (this.logger.info("SelController.waitlistAccepted"), this.self.waitlistStatus === "accepted") {
      this.logger.warn("SelfController.WAITLIST_ACCEPTED.UserAlreadyAccepted");
      return;
    }
    this.self.waitlistStatus = "accepted", this.joinRoom();
  } }, { key: "waitlistRejectedHandler", value: function() {
    if (this.logger.info("SelfController.waitlistRejected"), this.self.waitlistStatus === "rejected") {
      this.logger.warn("SelfController.WAITLIST_REJECTED.UserAlreadyRejected");
      return;
    }
    this.self.waitlistStatus = "rejected", this.leaveRoom("rejected");
  } }, { key: "resetSelf", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (l(this, Z)[Z].getValue("callstats").callEnded(), l(this, lr)[lr].reset(), !n) {
                i.next = 5;
                break;
              }
              return i.next = 5, this.joinRoom(n);
            case 5:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupEvents", value: function() {
    var e = this;
    l(this, Z)[Z].getValue("peerSessionStore").on(H.RESET_PRODUCER_STATE, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (e.mediaJoined) {
                a.next = 2;
                break;
              }
              return a.abrupt("return");
            case 2:
              e.shareMediaTracks();
            case 3:
            case "end":
              return a.stop();
          }
      }, r);
    }))), l(this, Z)[Z].getValue("peerSessionStore").on(H.ROOM_NODE_RECONNECTED, function() {
      e.self.roomState = "joined", e.self.emit("roomJoined", { reconnected: !0 });
    }), l(this, Z)[Z].getValue("peerSessionStore").on(H.ROOM_NODE_DISCONNECTED, function() {
      e.self.roomState !== "disconnected" && (e.self.roomState = "disconnected", e.self.emit("roomLeft", { state: "disconnected" }));
    }), l(this, Z)[Z].getValue("peerSessionStore").on(H.ROOM_NODE_FAILED, function() {
      e.self.roomState = "failed", e.self.emit("roomLeft", { state: "failed" });
    }), l(this, Z)[Z].getValue("peerSessionStore").on(H.SOCKET_SERVICE_RECONNECTED, function(r) {
      var n = r.wasJoinAttempted;
      n === !1 && (e.self.roomState = "init"), e.resetSelf(n);
    }), l(this, Z)[Z].getValue("peerSessionStore").on(H.SOCKET_SERVICE_DISCONNECTED, function(r) {
      var n = r.joinAttempted;
      if (e.self.roomState !== "disconnected") {
        var a = e.peerId;
        n && l(e, Z)[Z].getValue("flagsmith").hasFeature(ve.REFRESH_ID_ON_DISCONNECTION) && (a = eo()), l(e, la)[la].updateURL(a);
        var i = l(e, Z)[Z].getValue("telemetry");
        i.resetPeerId(a);
        var s = pt();
        s.setHeader("dyte-tracing-id", a), za.remapContext(a, l(e, Z)[Z]), e.self.roomState = "disconnected", e.self.emit("roomLeft", { state: "disconnected" });
      }
    }), l(this, Z)[Z].getValue("peerSessionStore").on(H.SOCKET_SERVICE_FAILED, function() {
      e.self.roomState = "failed", e.self.emit("roomLeft", { state: "failed" });
    }), l(this, xr)[xr].on(X.waitingRoomRequestAccepted, function() {
      e.waitlistAcceptHandler();
    }), l(this, xr)[xr].on(Fl.updateUserPreset, function(r) {
      r.updatePeersPresets.forEach(function(n) {
        n.userIds === e.self.userId && l(e, Z)[Z].getValue("peerSessionStore").emit(H.UPDATE_PERMISSIONS, n.patch);
      });
    }), l(this, xr)[xr].on(X.waitingRoomRequestDenied, function() {
      e.waitlistRejectedHandler();
    }), l(this, xr)[xr].on(X.kick, function() {
      e.kickHandler({ kickType: "kick" });
    }), l(this, xr)[xr].on(X.kickAll, function() {
      e.kickHandler({ kickType: "kickAll" });
    }), l(this, Z)[Z].getValue("peerSessionStore").onAsync(H.JOIN_MEDIA_ROOM, this.joinMediaRoom.bind(this)), l(this, Z)[Z].getValue("peerSessionStore").on(H.PRODUCER_SCORE_UPDATE, function(r) {
      var n, a = r.score, i = r.kind, s = r.appData, u = r.scoreStats, c = (n = s == null ? void 0 : s.screenShare) !== null && n !== void 0 ? n : !1;
      e.self.emit("mediaScoreUpdate", { kind: i, isScreenshare: c, score: a, participantId: e.self.id, scoreStats: u });
    }), l(this, Z)[Z].getValue("peerSessionStore").on(H.MUTE_SELF, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!e.self.audioEnabled) {
                a.next = 4;
                break;
              }
              return a.next = 3, e.self.disableAudio();
            case 3:
              l(e, Z)[Z].getValue("callstats").audioOff();
            case 4:
            case "end":
              return a.stop();
          }
      }, r);
    }))), l(this, Z)[Z].getValue("peerSessionStore").on(H.MUTE_SELF_VIDEO, /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!e.self.videoEnabled) {
                a.next = 4;
                break;
              }
              return a.next = 3, e.self.disableVideo();
            case 3:
              l(e, Z)[Z].getValue("callstats").videoOff();
            case 4:
            case "end":
              return a.stop();
          }
      }, r);
    }))), l(this, Z)[Z].getValue("peerSessionStore").onAsync(H.LEAVE_MEDIA_ROOM, this.leaveMediaRoom.bind(this)), l(this, Z)[Z].getValue("peerSessionStore").on(H.PIP_HANGUP, this.leaveRoom.bind(this));
  } }, { key: "joinRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s, u = arguments;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return n = u.length > 0 && u[0] !== void 0 ? u[0] : !1, d.prev = 1, d.next = 4, l(this, xr)[xr].joinRoom(this.self);
            case 4:
              if (a = d.sent, i = a.peer, l(this, xr)[xr].socket.flush(), s = Gp(i.stageType), l(this, Z)[Z].setValue("stageStatus", s, !1), !i.waitlisted) {
                d.next = 12;
                break;
              }
              return this.waitlistedHandler(), d.abrupt("return");
            case 12:
              return d.next = 14, this.joinMediaRoom(n);
            case 14:
              l(this, Z)[Z].notify("stageStatus"), d.next = 21;
              break;
            case 17:
              throw d.prev = 17, d.t0 = d.catch(1), this.logger.error("Error in joinRoom", { error: d.t0 }), d.t0;
            case 21:
            case "end":
              return d.stop();
          }
      }, r, this, [[1, 17]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "leaveRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s = arguments;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              if (a = s.length > 0 && s[0] !== void 0 ? s[0] : "left", this.logger.info("Leaving room with state: ".concat(a)), (n = l(this, Z)[Z].getValue("roomSocketHandler")) === null || n === void 0 || n.cleanup(), a !== "rejected") {
                c.next = 7;
                break;
              }
              return this.self.roomState = a, this.self.emit("roomLeft", { state: a }), c.abrupt("return");
            case 7:
              return this.self.setIsPinned(!1), l(this, Z)[Z].setValue("stageStatus", "OFF_STAGE", !1), c.next = 11, this.leaveMediaRoom(a);
            case 11:
              l(this, Z)[Z].notify("stageStatus");
              try {
                (i = l(this, la)[la]) === null || i === void 0 || i.disconnect();
              } catch (d) {
                this.logger.error("SelfController::leaveRoom::socketDisconnect");
              }
              Ag(l(this, Z)[Z]), this.self.roomState = a, this.self.emit("roomLeft", { state: a }), this.logger.info("roomLeft event emitted with state: ".concat(a));
            case 17:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "joinMediaRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i, s, u, c, d, h, v, f, g, k, y, b, S, T, A = arguments;
      return p().wrap(function(I) {
        for (; ; )
          switch (I.prev = I.next) {
            case 0:
              if (n = A.length > 0 && A[0] !== void 0 ? A[0] : !1, a = l(this, Z)[Z].getAllValues(), i = a.peerId, s = a.viewType, u = a.meetingId, c = a.stageStatus, d = a.roomNodeOptions, h = d.sfu, I.prev = 3, s !== Lt.Livestream) {
                I.next = 10;
                break;
              }
              if (c === "ON_STAGE") {
                I.next = 9;
                break;
              }
              return this.self.roomState = "joined", this.self.emit("roomJoined", { reconnected: n }), I.abrupt("return");
            case 9:
              Rg(l(this, Z)[Z], h, { socket: l(this, la)[la], peerId: i });
            case 10:
              return g = this.self.permissions, k = g.canProduceAudio, y = g.canProduceVideo, b = g.canProduceScreenshare, I.next = 13, (f = l(this, lr)[lr]) === null || f === void 0 ? void 0 : f.joinRoom(this.self.name, u, n, n, { canProduceAudio: k, canProduceVideo: y, canProduceScreenshare: b });
            case 13:
              if (I.t1 = v = I.sent, I.t0 = I.t1 !== null, !I.t0) {
                I.next = 17;
                break;
              }
              I.t0 = v !== void 0;
            case 17:
              if (!I.t0) {
                I.next = 21;
                break;
              }
              I.t2 = v, I.next = 22;
              break;
            case 21:
              I.t2 = {};
            case 22:
              if (S = I.t2, T = S.roomJoined, T) {
                I.next = 26;
                break;
              }
              return I.abrupt("return");
            case 26:
              if (c !== "ON_STAGE") {
                I.next = 29;
                break;
              }
              return I.next = 29, this.shareMediaTracks();
            case 29:
              this.self.roomState = "joined", this.self.emit("roomJoined", { reconnected: n }), I.next = 37;
              break;
            case 33:
              throw I.prev = 33, I.t3 = I.catch(3), this.logger.error("Error:SelfController.mediaRoomJoin", { error: I.t3 }), new U("Error: could not join media room", "0002");
            case 37:
            case "end":
              return I.stop();
          }
      }, r, this, [[3, 33]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "leaveMediaRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = l(this, Z)[Z].getValue("viewType"), n === "connected-meeting") {
                s.next = 4;
                break;
              }
              return s.next = 4, this.cleanupSelf();
            case 4:
              if (!(n === "stageLeft" && a === Lt.Webinar)) {
                s.next = 6;
                break;
              }
              return s.abrupt("return");
            case 6:
              if (l(this, lr)[lr]) {
                s.next = 8;
                break;
              }
              return s.abrupt("return");
            case 8:
              if (!(l(this, lr)[lr].mediaJoined && n !== "disconnected")) {
                s.next = 11;
                break;
              }
              return s.next = 11, l(this, lr)[lr].leaveRoom();
            case 11:
              if (!(n === "stageLeft" && a === Lt.Livestream)) {
                s.next = 13;
                break;
              }
              return s.abrupt("return");
            case 13:
              l(this, lr)[lr].mediaJoined = !1;
            case 14:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "cleanupSelf", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.next = 2, this.self.disableAudio();
            case 2:
              return a.next = 4, this.self.disableVideo();
            case 4:
              return a.next = 6, this.self.disableScreenShare();
            case 6:
              this.self.cleanUpTracks(), this.self.destructMediaHandler(), navigator.isReactNative || this.self.removeDocumentEventListeners();
            case 9:
            case "end":
              return a.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i, s, u) {
      var c, d, h, v, f, g;
      return p().wrap(function(y) {
        for (; ; )
          switch (y.prev = y.next) {
            case 0:
              return c = pt(), d = n.getValue("peerId"), h = !!n.getValue("cachedUserDetails"), y.next = 5, tt.__init__(n, i, s, u, u.name, h);
            case 5:
              return v = y.sent, n.setValue("self", v), f = n.getValue("logger"), navigator.product !== "ReactNative" ? (g = !n.getValue("flagsmith").hasFeature(ve.PRECALL_BANDWIDTH_TEST), setTimeout(/* @__PURE__ */ m(/* @__PURE__ */ p().mark(function b() {
                var S;
                return p().wrap(function(A) {
                  for (; ; )
                    switch (A.prev = A.next) {
                      case 0:
                        return A.next = 2, v.getAllDevices();
                      case 2:
                        return S = A.sent, f.info("populated_full_device_list", { devices: JSON.stringify(S) }), n.getValue("callstats").devices("AUDIO", S == null ? void 0 : S.filter(function(L) {
                          return L.kind === "audioinput";
                        })), n.getValue("callstats").devices("VIDEO", S == null ? void 0 : S.filter(function(L) {
                          return L.kind === "videoinput";
                        })), n.getValue("callstats").devices("SPEAKER", S == null ? void 0 : S.filter(function(L) {
                          return L.kind === "audiooutput";
                        })), f.info("Callstats:: initializing"), A.prev = 8, A.t0 = n.getValue("callstats"), A.t1 = d, A.t2 = kr.getDeviceInfo().engineName, A.t3 = n.getValue("env"), A.next = 15, c.getICEServers();
                      case 15:
                        return A.t4 = A.sent, A.t5 = n.getValue("apiBase"), A.t6 = n.getValue("flagsmith").getAllFlags(), A.t7 = f, A.t8 = qf(n), A.t9 = g, A.t10 = { peerId: A.t1, engineName: A.t2, env: A.t3, iceServers: A.t4, apiBase: A.t5, flags: A.t6, logger: A.t7, apiHostnames: A.t8, skipConnectivityChecks: A.t9 }, A.next = 24, A.t0.initialize.call(A.t0, A.t10);
                      case 24:
                        f.info("Callstats:: initialized"), A.next = 30;
                        break;
                      case 27:
                        A.prev = 27, A.t11 = A.catch(8), f.error("Callstats:: initialization failed", { error: A.t11 });
                      case 30:
                      case "end":
                        return A.stop();
                    }
                }, b, null, [[8, 27]]);
              })), 0)) : f.info("Callstats:: Skipped initialization due to navigator product being ReactNative."), y.abrupt("return", new Ig(n, v, a, u.viewType));
            case 10:
            case "end":
              return y.stop();
          }
      }, r);
    }));
    function e(r, n, a, i, s) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}());
function uD() {
  return l(this, Z)[Z].getValue("roomNodeClient");
}
var Bi = Ig;
ho([D.trace("SelfController.resetSelf")], Bi.prototype, "resetSelf", 1);
ho([D.trace("SelfController.setupEvents")], Bi.prototype, "setupEvents", 1);
ho([D.trace("SelfController.joinRoom")], Bi.prototype, "joinRoom", 1);
ho([D.trace("SelfController.leaveRoom")], Bi.prototype, "leaveRoom", 1);
ho([D.trace("SelfController.joinMediaRoom")], Bi.prototype, "joinMediaRoom", 1);
ho([D.trace("SelfController.leaveMediaRoom")], Bi.prototype, "leaveMediaRoom", 1);
ho([D.trace("SelfController.init")], Bi, "init", 1);
var Mu = /* @__PURE__ */ E("socket"), lD = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), Object.defineProperty(this, Mu, { writable: !0, value: void 0 }), l(this, Mu)[Mu] = t;
  }
  return P(o, [{ key: "on", value: function(e, r) {
    var n;
    e === X.roomPeerCount ? n = Yh.fromBinary.bind(Yh) : n = sv.fromBinary.bind(sv), l(this, Mu)[Mu].on(e, function(a) {
      var i = a.payload;
      if (!(e === X.roomPeerCount && !i)) {
        var s = n(i);
        r(s);
      }
    });
  } }]);
}(), Du = /* @__PURE__ */ E("socket"), Ou = /* @__PURE__ */ E("context"), cD = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, Du, { writable: !0, value: void 0 }), Object.defineProperty(this, Ou, { writable: !0, value: void 0 }), l(this, Du)[Du] = e, l(this, Ou)[Ou] = t;
  }
  return P(o, [{ key: "logger", get: (
    /**
    * @private access
    * Not for external use
    */
    function() {
      return l(this, Ou)[Ou].getValue("logger");
    }
  ) }, { key: "on", value: function(e, r) {
    var n = this, a, i;
    switch (e) {
      case X.transcript: {
        a = Wc.fromBinary.bind(Wc), i = Wc.create();
        break;
      }
      default: {
        this.logger.debug("AISocketHandler switch case hit default, event not accounted for.");
        break;
      }
    }
    l(this, Du)[Du].on(e, function(s) {
      var u = s.payload, c = i;
      try {
        c = a(u);
      } catch (d) {
        n.logger.error("chatSocketHandler::on::binary_decode_error", { error: d });
      }
      return r(c);
    });
  } }]);
}(), dD = Object.defineProperty, pD = Object.getOwnPropertyDescriptor, Qp = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? pD(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && dD(e, r, a), a;
}, Xt = /* @__PURE__ */ E("socket"), Ms = /* @__PURE__ */ E("context"), Oc = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, Xt, { writable: !0, value: void 0 }), Object.defineProperty(this, Ms, { writable: !0, value: void 0 }), l(this, Xt)[Xt] = e, l(this, Ms)[Ms] = t;
  }
  return P(o, [{
    key: "logger",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, Ms)[Ms].getValue("logger");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "telemetry", get: function() {
    return l(this, Ms)[Ms].getValue("telemetry");
  } }, { key: "getPolls", value: function() {
    return l(this, Xt)[Xt].sendMessagePromise(Ba.getPolls);
  } }, { key: "createPoll", value: function(e, r) {
    var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1, i = { anonymous: n, hideVotes: a, question: e, options: r };
    return l(this, Xt)[Xt].sendMessage(Ba.createPoll, j1.toBinary(i));
  } }, { key: "votePoll", value: function(e, r) {
    var n = { index: r, pollId: e };
    return l(this, Xt)[Xt].sendMessage(Ba.votePoll, H1.toBinary(n));
  } }, { key: "on", value: function(e, r) {
    var n = this, a, i;
    switch (e) {
      case Ba.updatePoll:
      case Ba.createPoll:
      case Ba.votePoll: {
        a = Xc.fromBinary.bind(Xc), i = Xc.create();
        break;
      }
    }
    l(this, Xt)[Xt].on(e, function(s) {
      var u = s.payload, c = i;
      try {
        c = a(u);
      } catch (d) {
        n.logger.error("pollSocketHandler::on::binary_decode_error", { error: d });
      }
      return r(c);
    });
  } }, { key: "removeListeners", value: function(e) {
    l(this, Xt)[Xt].removeListeners(e);
  } }]);
}();
Qp([D.trace("PollSocketHandler.getPolls")], Oc.prototype, "getPolls", 1);
Qp([D.trace("PollSocketHandler.createPoll")], Oc.prototype, "createPoll", 1);
Qp([D.trace("PollSocketHandler.votePoll")], Oc.prototype, "votePoll", 1);
var hD = Object.defineProperty, vD = Object.getOwnPropertyDescriptor, fD = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? vD(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && hD(e, r, a), a;
}, Fr = /* @__PURE__ */ E("context"), _g = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), this.socket = void 0, Object.defineProperty(this, Fr, { writable: !0, value: void 0 }), l(this, Fr)[Fr] = t, this.socket = e, this.handleSocketEvents(), l(this, Fr)[Fr].setValue("roomSocketHandler", this);
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, Fr)[Fr].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, Fr)[Fr].getValue("logger");
  } }, { key: "cleanup", value: function() {
    try {
      var e;
      (e = this.socket) === null || e === void 0 || e.disconnect();
    } catch (r) {
      this.logger.error("roomSocketHandler::cleanup");
    }
  } }, { key: "joinRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f, g, k;
      return p().wrap(function(b) {
        for (; ; )
          switch (b.prev = b.next) {
            case 0:
              return this.socket.joinAttempted = !0, i = { capabilities: [], peer: { displayName: (a = n.name) !== null && a !== void 0 ? a : "Participant", customParticipantId: n.customParticipantId, peerId: n.id, userId: n.userId, displayPictureUrl: n.picture, waitlisted: !1 }, roomUuid: "" }, s = this.socket.sendMessagePromise(X.joinRoom, CE.toBinary(i)), b.prev = 3, b.t0 = Co, b.next = 7, s;
            case 7:
              return b.t1 = b.sent.payload, u = b.t0.fromBinary.call(b.t0, b.t1), c = u.peer, l(this, Fr)[Fr].getValue("connectionHandler").socketJoined = !0, l(this, Fr)[Fr].getValue("peerSessionStore").emit(H.SOCKET_SERVICE_ROOM_JOINED, { peer: c }), d = this.getRoomState(), h = this.getRoomPeersNonPaginated(), b.next = 16, Promise.all([d, h]);
            case 16:
              return v = b.sent, f = Me(v, 2), g = f[0].room, k = f[1].peers, l(this, Fr)[Fr].getValue("peerSessionStore").emit(H.ROOM_STATE, g), l(this, Fr)[Fr].getValue("peerSessionStore").emit(H.SOCKET_PEERS, k), b.abrupt("return", { peer: c });
            case 25:
              throw b.prev = 25, b.t2 = b.catch(3), this.logger.error("RoomSocketHandler.joinRoom.failed", { error: b.t2 }), new U("Error: RoomSocketHandler.joinRoom failed.", "0002", this.logger, b.t2);
            case 29:
            case "end":
              return b.stop();
          }
      }, r, this, [[3, 25]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAllAddedParticipants", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.prev = 0, i.t0 = cC, i.next = 4, this.socket.sendMessagePromise(X.getAllAddedParticipants);
            case 4:
              return i.t1 = i.sent.payload, n = i.t0.fromBinary.call(i.t0, i.t1), i.abrupt("return", n.participants.map(function(s) {
                var u = s.id, c = gc(s, Yg);
                return N(N({}, c), {}, { userId: u });
              }));
            case 9:
              return i.prev = 9, i.t2 = i.catch(0), i.abrupt("return", []);
            case 12:
            case "end":
              return i.stop();
          }
      }, r, this, [[0, 9]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getRoomPeers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return h.prev = 0, u = {
                // F
                seachQuery: n,
                limit: a,
                offset: i
              }, h.next = 4, this.socket.sendMessagePromise(X.getRoomPeersInfo, gE.toBinary(u));
            case 4:
              c = h.sent, s = Jc.fromBinary(c.payload), h.next = 11;
              break;
            case 8:
              h.prev = 8, h.t0 = h.catch(0), this.logger.error("getRoomPeers::binary_decode_error", { error: h.t0 });
            case 11:
              return h.abrupt("return", s);
            case 12:
            case "end":
              return h.stop();
          }
      }, r, this, [[0, 8]]);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "getRoomPeersNonPaginated",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r() {
        var n, a;
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.prev = 0, s.next = 3, this.socket.sendMessagePromise(X.getRoomPeersInfo);
              case 3:
                a = s.sent, n = Jc.fromBinary(a.payload), s.next = 10;
                break;
              case 7:
                s.prev = 7, s.t0 = s.catch(0), this.logger.error("getRoomJoinedPeers::binary_decode_error", { error: s.t0 });
              case 10:
                return s.abrupt("return", n);
              case 11:
              case "end":
                return s.stop();
            }
        }, r, this, [[0, 7]]);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    *  TODO:(ishita1805): uncomment this code when
    * socket service sends entire peer objects for roomEvents.getStagePeers
    */
  }, { key: "getStagePeers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, this.socket.sendMessagePromise(X.getRoomPeersInfo);
            case 3:
              a = s.sent, n = Jc.fromBinary(a.payload), s.next = 10;
              break;
            case 7:
              s.prev = 7, s.t0 = s.catch(0), this.logger.error("getRoomJoinedPeers::binary_decode_error", { error: s.t0 });
            case 10:
              return s.abrupt("return", n);
            case 11:
            case "end":
              return s.stop();
          }
      }, r, this, [[0, 7]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPeerInfo", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.prev = 0, u.next = 3, this.socket.sendMessagePromise(X.getPeerInfo, Zf.toBinary({ peerId: n }));
            case 3:
              i = u.sent, a = Co.fromBinary(i.payload), u.next = 10;
              break;
            case 7:
              u.prev = 7, u.t0 = u.catch(0), this.logger.error("getPeerInfo::binary_decode_error", { error: u.t0 });
            case 10:
              return u.abrupt("return", a);
            case 11:
            case "end":
              return u.stop();
          }
      }, r, this, [[0, 7]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getRoomState", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return n = Qh.create(), s.prev = 1, s.next = 4, this.socket.sendMessagePromise(X.getRoomInfo);
            case 4:
              a = s.sent, n = Qh.fromBinary(a.payload), s.next = 11;
              break;
            case 8:
              s.prev = 8, s.t0 = s.catch(1), this.logger.error("getRoomState::binary_decode_error", { error: s.t0 });
            case 11:
              return s.abrupt("return", n);
            case 12:
            case "end":
              return s.stop();
          }
      }, r, this, [[1, 8]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getRoomStageState", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return n = ev.create(), s.prev = 1, s.next = 4, this.socket.sendMessagePromise(X.getRoomStageState);
            case 4:
              a = s.sent, n = ev.fromBinary(a.payload), s.next = 11;
              break;
            case 8:
              s.prev = 8, s.t0 = s.catch(1), this.logger.error("getRoomStageState::binary_decode_error", { error: s.t0 });
            case 11:
              return s.abrupt("return", n);
            case 12:
            case "end":
              return s.stop();
          }
      }, r, this, [[1, 8]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "broadcastMessage", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return i = {
                type: n,
                payload: new TextEncoder().encode(JSON.stringify(a)),
                timestamp: Date.now(),
                ids: []
                // broadcast to all in all cases, this field has no value
              }, u.abrupt("return", this.socket.sendMessagePromise(X.broadcastMessage, nu.toBinary(i)));
            case 2:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "broadcastToMeetings", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return s = {
                type: n,
                payload: new TextEncoder().encode(JSON.stringify(i)),
                timestamp: Date.now(),
                ids: a,
                // Broadcast to given meetings
                broadcastType: 1
                // meetings
              }, c.abrupt("return", this.socket.sendMessagePromise(X.broadcastToEntity, nu.toBinary(s)));
            case 2:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "broadcastToPeers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i) {
      var s;
      return p().wrap(function(c) {
        for (; ; )
          switch (c.prev = c.next) {
            case 0:
              return s = {
                type: n,
                payload: new TextEncoder().encode(JSON.stringify(i)),
                timestamp: Date.now(),
                ids: a,
                // Broadcast to peers
                broadcastType: 0
                // peers
              }, c.abrupt("return", this.socket.sendMessage(X.broadcastToEntity, nu.toBinary(s)));
            case 2:
            case "end":
              return c.stop();
          }
      }, r, this);
    }));
    function e(r, n, a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "leaveRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              this.socket.joinAttempted = !1, this.socket.sendMessagePromise(X.leaveRoom, AE.toBinary({}));
            case 2:
            case "end":
              return a.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kick", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              a = { peerIds: [n] }, this.socket.sendMessage(X.kick, eg.toBinary(a));
            case 2:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kickAll", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a, i = arguments;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              n = i.length > 0 && i[0] !== void 0 ? i[0] : !1, a = { propagateKickAcrossRooms: n }, this.socket.sendMessage(X.kickAll, Yf.toBinary(a));
            case 3:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getWaitingRoomRequests", value: function() {
    this.socket.sendMessage(X.getWaitingRoomRequests);
  } }, { key: "acceptWaitingRoomRequest", value: function(e) {
    var r = { userIds: e };
    this.socket.sendMessage(X.acceptWaitingRoomRequests, gC.toBinary(r));
  } }, { key: "rejectWaitingRoomRequest", value: function(e) {
    var r = { userIds: e };
    this.socket.sendMessage(X.denyWaitingRoomRequests, yC.toBinary(r));
  } }, { key: "updatePermissions", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return i = { updatePeersPresets: [] }, n.forEach(function(c) {
                i.updatePeersPresets.push({ userIds: c, patch: a });
              }), u.abrupt("return", this.socket.sendMessagePromise(Fl.updateUserPreset, KC.toBinary(i)));
            case 3:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleSocketEvents", value: function() {
    var e = this;
    this.socket.on(X.broadcastMessage, function(r) {
      var n = r.payload;
      try {
        var a = nu.fromBinary(n);
        l(e, Fr)[Fr].getValue("peerSessionStore").emit(H.ROOM_MESSAGE, { payload: JSON.parse(new TextDecoder().decode(a.payload)), type: a.type, timestamp: a.timestamp });
      } catch (i) {
        e.logger.error("failed to decode broadcast message:", i);
      }
    }), this.socket.on(X.broadcastToEntity, function(r) {
      var n = r.payload;
      try {
        var a = nu.fromBinary(n);
        l(e, Fr)[Fr].getValue("peerSessionStore").emit(H.MESSAGE, { payload: JSON.parse(new TextDecoder().decode(a.payload)), type: a.type, timestamp: a.timestamp });
      } catch (i) {
        e.logger.error("failed to decode peer broadcast message:", i);
      }
    });
  } }, { key: "on", value: function(e, r) {
    var n = this, a, i;
    switch (e) {
      case X.joinRoom:
      case X.leaveRoom:
      case X.kick:
      case X.kickAll: {
        a = Co.fromBinary.bind(Co), i = Co.create();
        break;
      }
      case X.getWaitingRoomRequests: {
        a = function(u, c) {
          return u ? xh.fromBinary(u, c) : { requests: [] };
        }, i = xh.create();
        break;
      }
      case X.recordingPaused:
      case X.recordingStarted:
      case X.recordingStopped: {
        a = lv.fromBinary.bind(lv);
        break;
      }
      case Fl.updateUserPreset: {
        a = rv.fromBinary.bind(rv);
        break;
      }
      case Un.peerJoinedBroadcast:
      case kn.peerJoinedBroadcast: {
        a = Gh.fromBinary.bind(Gh);
        break;
      }
      case Un.selfJoinComplete:
      case kn.selfJoinComplete: {
        a = _d.fromBinary.bind(_d);
        break;
      }
      case Un.globalPeerPinBroadcast:
      case kn.globalPeerPinBroadcast: {
        a = Kh.fromBinary.bind(Kh);
        break;
      }
      case Un.selectedPeer:
      case kn.selectedPeer: {
        a = Id.fromBinary.bind(Id);
        break;
      }
      case Un.selectedPeerDiff:
      case kn.selectedPeerDiff: {
        a = qh.fromBinary.bind(qh);
        break;
      }
      case Un.leaveRoom:
      case kn.leaveRoom: {
        a = Md.fromBinary.bind(Md);
        break;
      }
    }
    this.socket.on(e, function(s) {
      var u = s.payload, c = i;
      if (!a)
        return r(void 0);
      try {
        c = a(u);
      } catch (d) {
        n.logger.error("roomSocketHandler::on::binary_decode_error", { error: d });
      }
      return r(c);
    });
  } }, { key: "getUserPermissions", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c;
      return p().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return a = { userIds: [n] }, h.prev = 1, h.next = 4, this.socket.sendMessagePromise(Fl.getUserPresets, FC.toBinary(a));
            case 4:
              return i = h.sent, s = GC.fromBinary(i.payload).peerPresets[0], u = new TextDecoder().decode(s.preset), c = JSON.parse(u).permissions, h.abrupt("return", { chat: c.chat, polls: c.polls, plugins: c.plugins });
            case 11:
              throw h.prev = 11, h.t0 = h.catch(1), this.logger.error("Error in getting user preset", { error: h.t0 }), h.t0;
            case 15:
            case "end":
              return h.stop();
          }
      }, r, this, [[1, 11]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}();
fD([D.trace("RoomSocketHandler.joinRoom")], _g.prototype, "joinRoom", 1);
var Ar = /* @__PURE__ */ E("socket"), gD = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), Object.defineProperty(this, Ar, { writable: !0, value: void 0 }), l(this, Ar)[Ar] = t;
  }
  return P(o, [{ key: "getStageRequests", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, Ar)[Ar].sendMessagePromise(X.getStageRequests);
            case 2:
              return n = s.sent, a = n.payload, s.abrupt("return", a ? Qc.fromBinary(a) : { stageRequests: [] });
            case 5:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "requestAccess", value: function() {
    l(this, Ar)[Ar].sendMessage(X.requestStageAccess);
  } }, { key: "cancelRequestAccess", value: function() {
    l(this, Ar)[Ar].sendMessage(X.cancelStageRequest);
  } }, { key: "grantAccess", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              a = { userIds: n }, l(this, Ar)[Ar].sendMessage(X.grantStageAccess, I1.toBinary(a));
            case 2:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "denyAccess", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              a = { userIds: n }, l(this, Ar)[Ar].sendMessage(X.denyStageAccess, M1.toBinary(a));
            case 2:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "joinStage", value: function() {
    return l(this, Ar)[Ar].sendMessagePromise(X.joinStage, void 0, void 0, X.peerStageStatusUpdate);
  } }, { key: "leaveStage", value: function(e) {
    var r = { userIds: [e] };
    return l(this, Ar)[Ar].sendMessagePromise(X.leaveStage, uv.toBinary(r), void 0, X.peerStageStatusUpdate);
  } }, { key: "kick", value: function(e) {
    var r = { userIds: e };
    return l(this, Ar)[Ar].sendMessagePromise(X.leaveStage, uv.toBinary(r));
  } }, { key: "on", value: function(e, r) {
    var n;
    switch (e) {
      case X.grantStageAccess:
      case X.denyStageAccess: {
        n = void 0;
        break;
      }
      case X.getStagePeers: {
        n = ov.fromBinary.bind(ov);
        break;
      }
      case X.getStageRequests:
      case X.requestStageAccess:
      case X.cancelStageRequest: {
        n = Qc.fromBinary.bind(Qc);
        break;
      }
      case X.peerStageStatusUpdate: {
        n = zh.fromBinary.bind(zh);
        break;
      }
    }
    l(this, Ar)[Ar].on(e, function(a) {
      var i = a.payload, s = a.id;
      if (!i || !n)
        return r(void 0, s);
      var u = n(i);
      return r(u, s);
    });
  } }, { key: "getPeerInfo", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, Ar)[Ar].sendMessagePromise(X.getPeerInfo, Zf.toBinary({ peerId: n }));
            case 2:
              return a = s.sent, s.abrupt("return", Co.fromBinary(a.payload));
            case 4:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), He = /* @__PURE__ */ E("socket"), Lu = /* @__PURE__ */ E("context"), mD = /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, He, { writable: !0, value: void 0 }), Object.defineProperty(this, Lu, { writable: !0, value: void 0 }), l(this, He)[He] = e, l(this, Lu)[Lu] = t;
  }
  return P(o, [{ key: "logger", get: function() {
    return l(this, Lu)[Lu].getValue("logger");
  } }, { key: "addPlugin", value: function(e, r) {
    l(this, He)[He].sendMessage(se.addPlugin, JR.toBinary({ pluginId: e, staggered: r }));
  } }, { key: "removePlugin", value: function(e) {
    l(this, He)[He].sendMessage(se.removePlugin, zR.toBinary({ pluginId: e, staggered: !1 }));
  } }, { key: "getActivePlugins", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n, a;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, l(this, He)[He].sendMessagePromise(se.getPlugins);
            case 2:
              return n = s.sent, a = n.payload, s.abrupt("return", a ? m1.fromBinary(a) : { plugins: [] });
            case 5:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "customPluginEventToRoom", value: function(e, r, n) {
    var a = { pluginId: e, pluginData: new TextEncoder().encode(JSON.stringify(r)) };
    l(this, He)[He].sendMessage(se.customPluginEventToRoom, a1.toBinary(a), n);
  } }, { key: "customPluginEventToPeers", value: function(e, r, n, a) {
    var i = { pluginId: e, peerIds: r, pluginData: new TextEncoder().encode(JSON.stringify(n)) };
    l(this, He)[He].sendMessage(se.customPluginEventToPeers, s1.toBinary(i), a);
  } }, { key: "enablePluginForRoom", value: function(e, r) {
    l(this, He)[He].sendMessage(se.enablePluginForRoom, QR.toBinary({ pluginId: e }), r);
  } }, { key: "enablePluginForPeers", value: function(e, r, n) {
    l(this, He)[He].sendMessage(se.enablePluginForPeers, e1.toBinary({ pluginId: e, peerIds: r }), n);
  } }, { key: "disablePluginForRoom", value: function(e, r) {
    l(this, He)[He].sendMessage(se.disablePluginForRoom, ZR.toBinary({ pluginId: e }), r);
  } }, { key: "disablePluginForPeers", value: function(e, r, n) {
    l(this, He)[He].sendMessage(se.disablePluginForPeers, t1.toBinary({ pluginId: e, peerIds: r }), n);
  } }, { key: "storeInsertKeys", value: function(e, r, n, a) {
    var i = { pluginId: e, storeName: r, insertKeys: n.map(function(s) {
      return { storeKey: s.key, payload: new TextEncoder().encode(JSON.stringify(s.payload)) };
    }) };
    l(this, He)[He].sendMessage(se.storeInsertKeys, tv.toBinary(i), a);
  } }, { key: "storeGetKeys", value: function(e, r, n, a) {
    var i = { pluginId: e, storeName: r, getKeys: n.map(function(s) {
      return { storeKey: s.key };
    }) };
    l(this, He)[He].sendMessage(se.storeGetKeys, c1.toBinary(i), a);
  } }, { key: "storeDeleteKeys", value: function(e, r, n, a) {
    var i = { pluginId: e, storeName: r, deleteKeys: n.map(function(s) {
      return { storeKey: s.key };
    }) };
    l(this, He)[He].sendMessage(se.storeDeleteKeys, p1.toBinary(i), a);
  } }, {
    key: "storeDelete",
    value: function(e, r, n) {
      l(this, He)[He].sendMessage(se.storeDelete, v1.toBinary({ pluginId: e, storeName: r }), n);
    }
    /**
    * @deprecated
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "getPluginDataOld",
    value: function(e, r) {
      this.logger.info("getPluginDataOld", { plugin: { id: e, storeName: r } });
    }
    /**
    * @deprecated
    */
  }, { key: "storePluginDataOld", value: function(e, r, n) {
    var a = { pluginId: e, storeName: r, insertKeys: [{ storeKey: n.key, payload: new TextEncoder().encode(JSON.stringify(n)) }] };
    l(this, He)[He].sendMessage(se.storeInsertKeys, tv.toBinary(a));
  } }, { key: "on", value: function(e, r) {
    var n;
    switch (e) {
      case se.addPlugin:
      case se.enablePluginForPeers:
      case se.enablePluginForRoom: {
        n = Nd.fromBinary.bind(Nd);
        break;
      }
      case se.removePlugin:
      case se.disablePluginForPeers:
      case se.disablePluginForRoom: {
        n = nv.fromBinary.bind(nv);
        break;
      }
      case se.customPluginEventToPeers:
      case se.customPluginEventToRoom: {
        n = iv.fromBinary.bind(iv);
        break;
      }
      case se.storeInsertKeys:
      case se.storeGetKeys:
      case se.storeDeleteKeys:
      case se.storeDelete: {
        n = av.fromBinary.bind(av);
        break;
      }
    }
    l(this, He)[He].on(e, function(a) {
      var i = a.payload, s = a.id, u = n(i);
      return r(u, s);
    });
  } }]);
}(), yD = Object.defineProperty, kD = function(t, e, r) {
  return e in t ? yD(t, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[e] = r;
}, bD = function(t, e, r) {
  return kD(t, Pe(e) != "symbol" ? e + "" : e, r), r;
}, Xp = function(t, e, r) {
  if (!e.has(t))
    throw TypeError("Cannot " + r);
}, W = function(t, e, r) {
  return Xp(t, e, "read from private field"), r ? r.call(t) : e.get(t);
}, mr = function(t, e, r) {
  if (e.has(t))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(t) : e.set(t, r);
}, Ke = function(t, e, r, n) {
  return Xp(t, e, "write to private field"), n ? n.call(t, r) : e.set(t, r), r;
}, Er = function(t, e, r) {
  return Xp(t, e, "access private method"), r;
}, dc = {}, TD = { get exports() {
  return dc;
}, set exports(o) {
  dc = o;
} }, Vo = (typeof Reflect == "undefined" ? "undefined" : Pe(Reflect)) == "object" ? Reflect : null, Tv = Vo && typeof Vo.apply == "function" ? Vo.apply : function(o, t, e) {
  return Function.prototype.apply.call(o, t, e);
}, Bl;
Vo && typeof Vo.ownKeys == "function" ? Bl = Vo.ownKeys : Object.getOwnPropertySymbols ? Bl = function(t) {
  return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t));
} : Bl = function(t) {
  return Object.getOwnPropertyNames(t);
};
function wD(o) {
  console && console.warn && console.warn(o);
}
var Mg = Number.isNaN || function(o) {
  return o !== o;
};
function Ze() {
  Ze.init.call(this);
}
TD.exports = Ze;
dc.once = CD;
Ze.EventEmitter = Ze;
Ze.prototype._events = void 0;
Ze.prototype._eventsCount = 0;
Ze.prototype._maxListeners = void 0;
var wv = 10;
function Lc(o) {
  if (typeof o != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + Pe(o));
}
Object.defineProperty(Ze, "defaultMaxListeners", { enumerable: !0, get: function() {
  return wv;
}, set: function(t) {
  if (typeof t != "number" || t < 0 || Mg(t))
    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
  wv = t;
} });
Ze.init = function() {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
};
Ze.prototype.setMaxListeners = function(o) {
  if (typeof o != "number" || o < 0 || Mg(o))
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + o + ".");
  return this._maxListeners = o, this;
};
function Dg(o) {
  return o._maxListeners === void 0 ? Ze.defaultMaxListeners : o._maxListeners;
}
Ze.prototype.getMaxListeners = function() {
  return Dg(this);
};
Ze.prototype.emit = function(o) {
  for (var t = [], e = 1; e < arguments.length; e++)
    t.push(arguments[e]);
  var r = o === "error", n = this._events;
  if (n !== void 0)
    r = r && n.error === void 0;
  else if (!r)
    return !1;
  if (r) {
    var a;
    if (t.length > 0 && (a = t[0]), a instanceof Error)
      throw a;
    var i = new Error("Unhandled error." + (a ? " (" + a.message + ")" : ""));
    throw i.context = a, i;
  }
  var s = n[o];
  if (s === void 0)
    return !1;
  if (typeof s == "function")
    Tv(s, this, t);
  else
    for (var u = s.length, c = Vg(s, u), e = 0; e < u; ++e)
      Tv(c[e], this, t);
  return !0;
};
function Og(o, t, e, r) {
  var n, a, i;
  if (Lc(e), a = o._events, a === void 0 ? (a = o._events = /* @__PURE__ */ Object.create(null), o._eventsCount = 0) : (a.newListener !== void 0 && (o.emit("newListener", t, e.listener ? e.listener : e), a = o._events), i = a[t]), i === void 0)
    i = a[t] = e, ++o._eventsCount;
  else if (typeof i == "function" ? i = a[t] = r ? [e, i] : [i, e] : r ? i.unshift(e) : i.push(e), n = Dg(o), n > 0 && i.length > n && !i.warned) {
    i.warned = !0;
    var s = new Error("Possible EventEmitter memory leak detected. " + i.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    s.name = "MaxListenersExceededWarning", s.emitter = o, s.type = t, s.count = i.length, wD(s);
  }
  return o;
}
Ze.prototype.addListener = function(o, t) {
  return Og(this, o, t, !1);
};
Ze.prototype.on = Ze.prototype.addListener;
Ze.prototype.prependListener = function(o, t) {
  return Og(this, o, t, !0);
};
function PD() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function Lg(o, t, e) {
  var r = { fired: !1, wrapFn: void 0, target: o, type: t, listener: e }, n = PD.bind(r);
  return n.listener = e, r.wrapFn = n, n;
}
Ze.prototype.once = function(o, t) {
  return Lc(t), this.on(o, Lg(this, o, t)), this;
};
Ze.prototype.prependOnceListener = function(o, t) {
  return Lc(t), this.prependListener(o, Lg(this, o, t)), this;
};
Ze.prototype.removeListener = function(o, t) {
  var e, r, n, a, i;
  if (Lc(t), r = this._events, r === void 0)
    return this;
  if (e = r[o], e === void 0)
    return this;
  if (e === t || e.listener === t)
    --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete r[o], r.removeListener && this.emit("removeListener", o, e.listener || t));
  else if (typeof e != "function") {
    for (n = -1, a = e.length - 1; a >= 0; a--)
      if (e[a] === t || e[a].listener === t) {
        i = e[a].listener, n = a;
        break;
      }
    if (n < 0)
      return this;
    n === 0 ? e.shift() : SD(e, n), e.length === 1 && (r[o] = e[0]), r.removeListener !== void 0 && this.emit("removeListener", o, i || t);
  }
  return this;
};
Ze.prototype.off = Ze.prototype.removeListener;
Ze.prototype.removeAllListeners = function(o) {
  var t, e, r;
  if (e = this._events, e === void 0)
    return this;
  if (e.removeListener === void 0)
    return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : e[o] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete e[o]), this;
  if (arguments.length === 0) {
    var n = Object.keys(e), a;
    for (r = 0; r < n.length; ++r)
      a = n[r], a !== "removeListener" && this.removeAllListeners(a);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (t = e[o], typeof t == "function")
    this.removeListener(o, t);
  else if (t !== void 0)
    for (r = t.length - 1; r >= 0; r--)
      this.removeListener(o, t[r]);
  return this;
};
function Ng(o, t, e) {
  var r = o._events;
  if (r === void 0)
    return [];
  var n = r[t];
  return n === void 0 ? [] : typeof n == "function" ? e ? [n.listener || n] : [n] : e ? ED(n) : Vg(n, n.length);
}
Ze.prototype.listeners = function(o) {
  return Ng(this, o, !0);
};
Ze.prototype.rawListeners = function(o) {
  return Ng(this, o, !1);
};
Ze.listenerCount = function(o, t) {
  return typeof o.listenerCount == "function" ? o.listenerCount(t) : $g.call(o, t);
};
Ze.prototype.listenerCount = $g;
function $g(o) {
  var t = this._events;
  if (t !== void 0) {
    var e = t[o];
    if (typeof e == "function")
      return 1;
    if (e !== void 0)
      return e.length;
  }
  return 0;
}
Ze.prototype.eventNames = function() {
  return this._eventsCount > 0 ? Bl(this._events) : [];
};
function Vg(o, t) {
  for (var e = new Array(t), r = 0; r < t; ++r)
    e[r] = o[r];
  return e;
}
function SD(o, t) {
  for (; t + 1 < o.length; t++)
    o[t] = o[t + 1];
  o.pop();
}
function ED(o) {
  for (var t = new Array(o.length), e = 0; e < t.length; ++e)
    t[e] = o[e].listener || o[e];
  return t;
}
function CD(o, t) {
  return new Promise(function(e, r) {
    function n(i) {
      o.removeListener(t, a), r(i);
    }
    function a() {
      typeof o.removeListener == "function" && o.removeListener("error", n), e([].slice.call(arguments));
    }
    Ug(o, t, a, { once: !0 }), t !== "error" && RD(o, n, { once: !0 });
  });
}
function RD(o, t, e) {
  typeof o.on == "function" && Ug(o, "error", t, e);
}
function Ug(o, t, e, r) {
  if (typeof o.on == "function")
    r.once ? o.once(t, e) : o.on(t, e);
  else if (typeof o.addEventListener == "function")
    o.addEventListener(t, function n(a) {
      r.once && o.removeEventListener(t, n), e(a);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + Pe(o));
}
var AD = /* @__PURE__ */ function(o) {
  function t() {
    return w(this, t), C(this, t, ["message.v1.SocketMessage", [{
      no: 1,
      name: "event",
      kind: "scalar",
      T: 13
      /*ScalarType.UINT32*/
    }, {
      no: 2,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "payload",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 4,
      name: "metadata",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }]]);
  }
  return R(t, o), P(t);
}(_), Pv = new AD(), jg = /* @__PURE__ */ function() {
  function o() {
    w(this, o);
  }
  return P(o, null, [{ key: "encode", value: function(e) {
    return Pv.toBinary(e);
  } }, { key: "decode", value: function(e) {
    return Pv.fromBinary(new Uint8Array(e));
  } }]);
}();
function ID(o, t) {
  return Math.floor(Math.random() * (t - o + 1) + o);
}
var Ri, _D = /* @__PURE__ */ function() {
  function o() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    w(this, o), bD(this, "opts"), mr(this, Ri, void 0), this.opts = { initialTimeout: t.initialTimeout || 1e3, maxTimeout: t.maxTimeout || 1e4, factor: t.factor || 2 }, Ke(this, Ri, 0);
  }
  return P(o, [{ key: "wait", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return Ke(this, Ri, W(this, Ri) + 1), n = ID(0, Math.min(this.opts.maxTimeout, this.opts.initialTimeout * Math.pow(2, W(this, Ri)))), i.next = 4, new Promise(function(s) {
                setTimeout(s, n);
              });
            case 4:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAttempts", value: function() {
    return W(this, Ri);
  } }, { key: "reset", value: function() {
    Ke(this, Ri, 0);
  } }]);
}();
Ri = /* @__PURE__ */ new WeakMap();
var Ei = { debug: 0, info: 1, warn: 2, error: 3 }, Ls, Ns, MD = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), mr(this, Ls, void 0), mr(this, Ns, void 0), Ke(this, Ls, console), Ke(this, Ns, t);
  }
  return P(o, [{ key: "debug", value: function() {
    for (var e, r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    Ei[W(this, Ns)] > Ei.debug || (e = W(this, Ls)).debug.apply(e, ["[Sockrates]:"].concat(n));
  } }, { key: "info", value: function() {
    for (var e, r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    Ei[W(this, Ns)] > Ei.info || (e = W(this, Ls)).info.apply(e, ["[Sockrates]:"].concat(n));
  } }, { key: "warn", value: function() {
    for (var e, r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    Ei[W(this, Ns)] > Ei.warn || (e = W(this, Ls)).warn.apply(e, ["[Sockrates]:"].concat(n));
  } }, { key: "error", value: function() {
    for (var e, r = arguments.length, n = new Array(r), a = 0; a < r; a++)
      n[a] = arguments[a];
    Ei[W(this, Ns)] > Ei.error || (e = W(this, Ls)).error.apply(e, ["[Sockrates]:"].concat(n));
  } }]);
}();
Ls = /* @__PURE__ */ new WeakMap(), Ns = /* @__PURE__ */ new WeakMap();
var Fg = /* @__PURE__ */ function(o) {
  return o[o.CONNECTING = 0] = "CONNECTING", o[o.OPEN = 1] = "OPEN", o[o.CLOSING = 2] = "CLOSING", o[o.CLOSED = 3] = "CLOSED", o;
}(Fg || {}), DD = "2", OD = "3", Nr, Io, Sr, Hr, Ai, et, Ka, Ni, Vn, _o, Ha, yp, Hg, Vu, ql, kp, Bg, bp, Sv, pc, Tp, wp, qg, Ku, Gl, zu, hc, vc, Pp, Uo, Yu, Qu, fc, LD = /* @__PURE__ */ function() {
  function o(t, e) {
    var r, n, a, i, s, u, c, d, h, v;
    w(this, o), mr(this, yp), mr(this, Vu), mr(this, kp), mr(this, bp), mr(this, pc), mr(this, wp), mr(this, Ku), mr(this, zu), mr(this, vc), mr(this, Uo), mr(this, Qu), mr(this, Nr, void 0), mr(this, Io, void 0), mr(this, Sr, void 0), mr(this, Hr, void 0), mr(this, Ai, void 0), mr(this, et, void 0), mr(this, Ka, void 0), mr(this, Ni, void 0), mr(this, Vn, void 0), mr(this, _o, void 0), mr(this, Ha, void 0);
    var f, g, k, y, b, S, T, A, L;
    Ke(this, Io, t), Ke(this, Ai, []), Ke(this, et, new dc()), Ke(this, Ka, !0), Ke(this, Vn, !1), Ke(this, Sr, e != null ? e : {}), (r = (f = W(this, Sr)).autoReconnect) !== null && r !== void 0 || (f.autoReconnect = !0), (n = (g = W(this, Sr)).retryConnectionInterval) !== null && n !== void 0 || (g.retryConnectionInterval = 1e3), (a = (k = W(this, Sr)).pingTimeout) !== null && a !== void 0 || (k.pingTimeout = 3e4), (i = (y = W(this, Sr)).connectionTimeout) !== null && i !== void 0 || (y.connectionTimeout = 5e3), (s = (b = W(this, Sr)).debug) !== null && s !== void 0 || (b.debug = !0), (u = (S = W(this, Sr)).maxReconnectionAttempts) !== null && u !== void 0 || (S.maxReconnectionAttempts = 10), (c = (T = W(this, Sr)).disconnectOnPingTimeout) !== null && c !== void 0 || (T.disconnectOnPingTimeout = !0), (d = (A = W(this, Sr)).queueOnDisconnect) !== null && d !== void 0 || (A.queueOnDisconnect = !1), (h = (L = W(this, Sr)).flushOnReconnect) !== null && h !== void 0 || (L.flushOnReconnect = !1), Ke(this, Ni, { code: void 0, reason: void 0 }), Ke(this, Hr, (v = W(this, Sr).logger) !== null && v !== void 0 ? v : new MD(W(this, Sr).debug ? "debug" : "info")), Ke(this, Ha, new _D());
  }
  return P(o, [{
    key: "readyState",
    get: function() {
      var e;
      return (e = W(this, Nr)) == null ? void 0 : e.readyState;
    }
    /**
    * Sockrates connection URL.
    */
  }, {
    key: "url",
    get: function() {
      return W(this, Io);
    }
    /**
    * Update connection URL.
    */
  }, {
    key: "updateURL",
    value: function(e) {
      Ke(this, Io, e), Er(this, wp, qg).call(this);
    }
    /**
    * Configuration options passed to Sockrates.
    */
  }, {
    key: "config",
    get: function() {
      return W(this, Sr);
    }
    /**
    * Messages that got queued due to the
    * socket not being connected.
    */
  }, {
    key: "sendQueue",
    get: function() {
      return W(this, Ai);
    }
    /**
    * Flushes all messages that were queued
    * due to the socket not being connected.
    */
  }, { key: "flush", value: function() {
    var e = this;
    if (!W(this, Sr).queueOnDisconnect)
      return !1;
    var r = [];
    return W(this, Ai).forEach(function(n) {
      e.send(n.event, n.id, n.payload, n.metadata) || r.push(n);
    }), Ke(this, Ai, r), W(this, Ai);
  } }, {
    key: "connect",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r() {
        var n = this, a, i = arguments;
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (a = i.length > 0 && i[0] !== void 0 ? i[0] : !1, !(!a && [
                  0,
                  1
                  /* OPEN */
                ].includes(this.readyState))) {
                  u.next = 4;
                  break;
                }
                return W(this, Hr).debug("Websocket was already connecting or connected."), u.abrupt("return");
              case 4:
                if (W(this, Ka) === !1) {
                  u.next = 6;
                  break;
                }
                return u.abrupt("return", new Promise(function(c, d) {
                  Er(n, Uo, Yu).call(n), Er(n, Qu, fc).call(n);
                  try {
                    Ke(n, Nr, new WebSocket(Er(n, yp, Hg).call(n, W(n, Io)))), W(n, Nr).binaryType = "arraybuffer", W(n, Hr).debug("Connecting");
                    var h = setTimeout(function() {
                      W(n, Hr).debug("Connection timeout. Closing socket"), Ke(n, Ka, !0), Er(n, Qu, fc).call(n), W(n, Nr).close(3001, "Connection Timeout"), W(n, Sr).autoReconnect && !W(n, Vn) && (W(n, et).emit(
                        "reconnecting"
                        /* reconnecting */
                      ), Er(n, Ku, Gl).call(n)), d(new Error("Connection timed out!"));
                    }, W(n, Sr).connectionTimeout);
                    W(n, Nr).onopen = function() {
                      W(n, Hr).debug("Ready State: ".concat(Fg[W(n, Nr).readyState])), h && clearTimeout(h), Er(n, vc, Pp).call(n), Ke(n, Ni, { code: void 0, reason: void 0 }), W(n, et).emit(
                        "connected"
                        /* connected */
                      ), W(n, Sr).flushOnReconnect && n.flush(), c();
                    }, W(n, Nr).onclose = function(v) {
                      try {
                        h && clearTimeout(h);
                        var f = v.code, g = v.reason;
                        d(g), W(n, Hr).debug("Socket closed. Close event:", { event: v }), W(n, Hr).debug("Connection closed code: ".concat(f)), W(n, Hr).debug("Connection closed reason: ".concat(g)), W(n, Vn) || Er(n, pc, Tp).call(n, f, g);
                      } catch (k) {
                        Er(n, Vu, ql).call(n, k);
                      }
                    }, W(n, Nr).onerror = function(v) {
                      Er(n, Vu, ql).call(n, v);
                    }, W(n, Nr).onmessage = function(v) {
                      return Er(n, kp, Bg).call(n, v);
                    };
                  } catch (v) {
                    Er(n, Vu, ql).call(n, v, d);
                  }
                }));
              case 6:
              case "end":
                return u.stop();
            }
        }, r, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Send a message to the socket server.
    * @returns {boolean} Returns true if the payload was sent successfully.
    */
  }, {
    key: "send",
    value: function(e, r, n, a) {
      var i = { event: e, id: r, payload: n, metadata: a };
      if (W(this, Sr).queueOnDisconnect && (!W(this, Nr) || W(this, Nr).readyState !== 1))
        return W(this, Hr).debug("Queuing message since socket is not connected!", i), W(this, Ai).push(i), !1;
      var s = jg.encode(i);
      return Er(this, zu, hc).call(this, s);
    }
    /**
    * Alias for `send`.
    */
  }, {
    key: "emit",
    value: function(e, r, n, a) {
      return this.send(e, r, n, a);
    }
    /**
    * Send a raw message to the socket server.
    */
  }, {
    key: "sendRaw",
    value: function(e) {
      return Er(this, zu, hc).call(this, e);
    }
    /**
    * Alias to `on`.
    */
  }, {
    key: "receive",
    value: function(e, r) {
      return W(this, et).on(e.toString(), r);
    }
    /**
    * Event listener that is fired on receiving socket messages.
    */
  }, {
    key: "on",
    value: function(e, r) {
      if (typeof e == "string" && (e === "connected" || e === "disconnected" || e === "errored" || e === "reconnected" || e === "reconnecting" || e === "reconnectAttempt" || e === "reconnectFailure" || e === "failed")) {
        W(this, et).on(e, r);
        return;
      }
      this.receive(e, r);
    }
    /**
    * Remove all event listeners that were added using `on`.
    */
  }, {
    key: "removeAllListeners",
    value: function() {
      W(this, et).removeAllListeners();
    }
    /**
    * Alias to `removeListener`.
    */
  }, {
    key: "removeReceiver",
    value: function(e, r) {
      this.removeListener(e, r);
    }
    /**
    * Remove a specific listener that was added using `on`.
    */
  }, {
    key: "removeListener",
    value: function(e, r) {
      W(this, et).removeListener(e.toString(), r);
    }
    /**
    * Alias to `removeListeners`.
    */
  }, {
    key: "removeReceivers",
    value: function(e) {
      this.removeListeners(e);
    }
    /**
    * Remove all listeners for a specific event.
    */
  }, {
    key: "removeListeners",
    value: function(e) {
      var r = this;
      W(this, et).listeners(e.toString()).map(function(n) {
        return r.removeListener(e, n);
      });
    }
    /**
    * Disconnect the socket.
    */
  }, { key: "disconnect", value: function() {
    Ke(this, Ka, !1), Er(this, Uo, Yu).call(this), this.removeAllListeners(), Ke(this, Ni, { code: 1e3, reason: "Sockrates disconnect method called" }), W(this, Nr).close(1e3, "Sockrates disconnect method called.");
  } }]);
}();
Nr = /* @__PURE__ */ new WeakMap(), Io = /* @__PURE__ */ new WeakMap(), Sr = /* @__PURE__ */ new WeakMap(), Hr = /* @__PURE__ */ new WeakMap(), Ai = /* @__PURE__ */ new WeakMap(), et = /* @__PURE__ */ new WeakMap(), Ka = /* @__PURE__ */ new WeakMap(), Ni = /* @__PURE__ */ new WeakMap(), Vn = /* @__PURE__ */ new WeakMap(), _o = /* @__PURE__ */ new WeakMap(), Ha = /* @__PURE__ */ new WeakMap(), yp = /* @__PURE__ */ new WeakSet(), Hg = function(t) {
  if (t.startsWith("ws://") || t.startsWith("wss://"))
    return t;
  if (t.startsWith("https://"))
    return "wss://".concat(t.substring(8));
  if (t.startsWith("http://"))
    return "ws://".concat(t.substring(7));
  throw new Error("Invalid URL. URL must start with http(s):// or ws(s)://.");
}, Vu = /* @__PURE__ */ new WeakSet(), ql = function(t, e) {
  W(this, Hr).error("Error:", { error: t }), W(this, et).emit("errored", { error: t }), e == null || e(t);
}, kp = /* @__PURE__ */ new WeakSet(), Bg = function(t) {
  if (Er(this, vc, Pp).call(this), t.data === DD) {
    W(this, Hr).debug("Received ping from server"), Er(this, zu, hc).call(this, OD);
    return;
  }
  var e = jg.decode(t.data), r = e.id, n = e.payload;
  W(this, Hr).debug("Received message", { event: e.event, messageID: r }), W(this, et).emit(e.event.toString(), { id: r, payload: n });
}, bp = /* @__PURE__ */ new WeakSet(), Sv = function() {
  return W(this, Nr).readyState === 1;
}, pc = /* @__PURE__ */ new WeakSet(), Tp = function(t, e) {
  Ke(this, Ni, { reason: e, code: t }), W(this, et).emit("disconnected", { code: t, reason: e });
}, wp = /* @__PURE__ */ new WeakSet(), qg = function() {
  var t = W(this, Ni), e = t.reason, r = t.code;
  r && r !== 1e3 && W(this, Ka) && W(this, Sr).autoReconnect && !W(this, Vn) && (W(this, Hr).debug("Triggering reconnection due to ".concat(e, ".")), W(this, et).emit(
    "reconnecting"
    /* reconnecting */
  ), Er(this, Ku, Gl).call(this));
}, Ku = /* @__PURE__ */ new WeakSet(), Gl = /* @__PURE__ */ function() {
  var o = m(/* @__PURE__ */ p().mark(function t() {
    var e, r = arguments;
    return p().wrap(function(a) {
      for (; ; )
        switch (a.prev = a.next) {
          case 0:
            if (e = r.length > 0 && r[0] !== void 0 ? r[0] : !0, !(e && W(this, Vn))) {
              a.next = 4;
              break;
            }
            return W(this, Hr).debug("Reconnect called when already in a reconnect loop. Ignoring."), a.abrupt("return");
          case 4:
            if (W(this, Vn) || W(this, Ha).reset(), !(W(this, Sr).maxReconnectionAttempts !== null && W(this, Ha).getAttempts() >= W(this, Sr).maxReconnectionAttempts)) {
              a.next = 7;
              break;
            }
            return W(this, et).emit(
              "failed"
              /* failed */
            ), Ke(this, Vn, !1), a.abrupt("return");
          case 7:
            return Ke(this, Vn, !0), Er(this, Qu, fc).call(this), Er(this, Uo, Yu).call(this), a.prev = 8, a.next = 11, W(this, Ha).wait();
          case 11:
            if (W(this, Ka) !== !1) {
              a.next = 13;
              break;
            }
            return a.abrupt("return");
          case 13:
            return W(this, Hr).debug("Reconnection attempt ".concat(W(this, Ha).getAttempts())), W(this, et).emit("reconnectAttempt", { attempt: W(this, Ha).getAttempts() }), a.next = 17, this.connect();
          case 17:
            if (Er(this, bp, Sv).call(this)) {
              a.next = 19;
              break;
            }
            throw Error("Reconnect Failed");
          case 19:
            Ke(this, Vn, !1), Ke(this, Ni, { code: void 0, reason: void 0 }), W(this, et).emit(
              "reconnected"
              /* reconnected */
            ), a.next = 25;
            break;
          case 22:
            a.prev = 22, a.t0 = a.catch(8), W(this, Hr).debug("Failed to reconnect."), W(this, et).emit("reconnectFailure", { attempt: W(this, Ha).getAttempts() }), Er(this, Ku, Gl).call(this, !1);
          case 25:
          case "end":
            return a.stop();
        }
    }, t, this, [[8, 22]]);
  }));
  return function() {
    return o.apply(this, arguments);
  };
}(), zu = /* @__PURE__ */ new WeakSet(), hc = function(t) {
  try {
    return W(this, Nr).send(t), !0;
  } catch (e) {
    return W(this, Hr).error(e.message), !1;
  }
}, vc = /* @__PURE__ */ new WeakSet(), Pp = function() {
  var t = this;
  this.config.disconnectOnPingTimeout && (W(this, Hr).debug("Resetting ping timeout"), Er(this, Uo, Yu).call(this), Ke(this, _o, setTimeout(function() {
    var e;
    W(t, Hr).debug("Disconnecting the socket due to ping timeout"), Ke(t, Ka, !0);
    var r = 3002, n = "Ping timeout";
    (e = W(t, Nr)) == null || e.close(r, n), Er(t, pc, Tp).call(t, r, n);
  }, W(this, Sr).pingTimeout)));
}, Uo = /* @__PURE__ */ new WeakSet(), Yu = function() {
  W(this, _o) && (clearTimeout(W(this, _o)), Ke(this, _o, void 0));
}, Qu = /* @__PURE__ */ new WeakSet(), fc = function() {
  W(this, Nr) && (W(this, Nr).onopen = void 0, W(this, Nr).onerror = void 0, W(this, Nr).onmessage = void 0, W(this, Nr).onclose = void 0);
};
var ND = Object.defineProperty, $D = Object.getOwnPropertyDescriptor, Nc = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? $D(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && ND(e, r, a), a;
}, Ev = 65535, VD = 3e3, Gg = (gn = /* @__PURE__ */ E("url"), Te = /* @__PURE__ */ E("sockrates"), we = /* @__PURE__ */ E("connectionHandler"), Gr = /* @__PURE__ */ E("socketDisconnectionTimeout"), We = /* @__PURE__ */ E("context"), wo = /* @__PURE__ */ E("getSocketURL"), Po = /* @__PURE__ */ E("generateId"), /* @__PURE__ */ function() {
  function o(t, e) {
    var r, n = e.peerId, a = e.meetingId, i = e.authToken, s = e.capabilities;
    if (w(this, o), Object.defineProperty(this, Po, { value: FD }), Object.defineProperty(this, wo, { value: jD }), Object.defineProperty(this, we, { get: UD, set: void 0 }), Object.defineProperty(this, gn, { writable: !0, value: void 0 }), Object.defineProperty(this, Te, { writable: !0, value: void 0 }), this.roomName = void 0, this.authToken = void 0, this.capabilities = void 0, Object.defineProperty(this, Gr, { writable: !0, value: void 0 }), Object.defineProperty(this, We, { writable: !0, value: void 0 }), !n || !a || !i)
      throw new U("peerId, meetingId, or authToken can not be empty", "0404");
    l(this, Gr)[Gr] = void 0, l(this, We)[We] = t, this.capabilities = s, this.roomName = a, this.authToken = i, l(this, gn)[gn] = l(this, wo)[wo](n), l(this, Te)[Te] = new LD(l(this, gn)[gn], { autoReconnect: !0, disconnectOnPingTimeout: (r = s.includes("PING")) !== null && r !== void 0 ? r : !1, queueOnDisconnect: !0, flushOnReconnect: !1, logger: this.logger }), this.handleSocketConnectionEvents();
  }
  return P(o, [{ key: "joinAttempted", get: function() {
    return l(this, we)[we].socketJoinAttempted;
  }, set: function(e) {
    l(this, we)[we].socketJoinAttempted = e;
  } }, {
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, We)[We].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, We)[We].getValue("logger");
  } }, { key: "peerId", get: function() {
    return l(this, We)[We].getValue("peerId");
  } }, { key: "updateURL", value: function(e) {
    e !== this.peerId && (l(this, gn)[gn] = l(this, wo)[wo](e), this.logger.debug("SocketService:: Connection URL updated.")), l(this, Te)[Te].updateURL(l(this, gn)[gn]);
  } }, { key: "url", get: function() {
    return l(this, gn)[gn];
  } }, { key: "connect", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return l(this, we)[we].socketJoinAttempted = !0, a.next = 3, l(this, Te)[Te].connect();
            case 3:
              l(this, we)[we].socketJoinAttempted = !0, l(this, we)[we].socketState = { state: "connected", reconnected: !1, reconnectionAttempt: void 0 };
            case 5:
            case "end":
              return a.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disconnect", value: function() {
    l(this, we)[we].socketJoinAttempted = !1, l(this, Te)[Te].disconnect(), l(this, we)[we].socketJoinAttempted = !0, l(this, we)[we].socketState = { state: "disconnected", reconnected: !1, reconnectionAttempt: void 0 };
  } }, { key: "isConnected", get: function() {
    try {
      return l(this, Te)[Te].readyState === 1;
    } catch (e) {
      return !1;
    }
  } }, { key: "sendMessage", value: function(e, r, n) {
    var a = {}, i = l(this, We)[We].getValue("telemetry");
    return i.injectContext(a), l(this, Te)[Te].send(e, n != null ? n : l(this, Po)[Po](), r, new TextEncoder().encode(JSON.stringify(a)));
  } }, { key: "sendMessagePromise", value: function(e, r, n, a) {
    var i = parseInt({}.SOCKET_SERVICE_MESSAGE_REQUEST_TIMEOUT, 10) || 2e4;
    return this.sendMessagePromiseWithTimeout({ event: e, timeout: i, protobuf: r, messageId: n, resp: a });
  } }, { key: "sendMessagePromiseWithTimeout", value: function(e) {
    var r = this, n = e.event, a = e.timeout, i = e.protobuf, s = e.messageId, u = e.resp, c = u != null ? u : n;
    return new Promise(function(d, h) {
      var v = function(T, A) {
        l(r, Te)[Te].removeListener(c, T), l(r, Te)[Te].removeListener(Ev, A), l(r, Te)[Te].removeListener(kn.errorResponse, A), l(r, Te)[Te].removeListener(Un.errorResponse, A);
      }, f = s != null ? s : l(r, Po)[Po](), g = {}, k = l(r, We)[We].getValue("telemetry");
      k.injectContext(g);
      var y = function(T) {
        var A = T.id, L = T.payload;
        if (f === A) {
          var I;
          try {
            var M = uS.fromBinary(L);
            I = new Error(M.errorMessage);
          } catch (j) {
            I = new Error("failed to parse error message", { cause: j });
            try {
              var V = lE.fromBinary(L);
              I = new Error(V.message);
            } catch ($) {
              I = new Error("failed to parse error message", { cause: $ });
            }
          }
          h(I), v(b, y);
        }
      }, b = function(T) {
        var A = T.id, L = T.payload;
        f === A && (d({ id: A, payload: L }), v(b, y));
      };
      l(r, Te)[Te].on(c, b), l(r, Te)[Te].on(Ev, y), l(r, Te)[Te].on(kn.errorResponse, y), l(r, Te)[Te].on(Un.errorResponse, y), setTimeout(function() {
        v(b, y), h(new Error("request timeout for callback eventId:".concat(n)));
      }, a), l(r, Te)[Te].send(n, f, i, new TextEncoder().encode(JSON.stringify(g)));
    });
  } }, { key: "on", value: function(e, r) {
    l(this, Te)[Te].on(e, r);
  } }, { key: "onStateEvent", value: function(e, r) {
    l(this, Te)[Te].on(e, r);
  } }, { key: "removeListener", value: function(e, r) {
    l(this, Te)[Te].removeListener(e, r);
  } }, { key: "removeListeners", value: function(e) {
    l(this, Te)[Te].removeListeners(e);
  } }, { key: "flush", value: function() {
    return l(this, Te)[Te].flush();
  } }, { key: "handleSocketConnectionEvents", value: function() {
    var e = this;
    this.onStateEvent("connected", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              e.logger.info("SocketService::Connected to socket-edge"), l(e, Gr)[Gr] && (clearTimeout(l(e, Gr)[Gr]), l(e, Gr)[Gr] = void 0), l(e, we)[we].updateSocketConnectionState("connected");
            case 3:
            case "end":
              return a.stop();
          }
      }, r);
    }))), this.onStateEvent("disconnected", function(r) {
      var n, a = r.code, i = r.reason;
      e.logger.info("SocketService::Disconnected from socket-edge", { error: { code: a, reason: i }, country: D.location.country });
      var s = (n = l(e, we)[we].mediaState) !== null && n !== void 0 ? n : {}, u = s.recv, c = s.send;
      u != null && u.state && (u == null ? void 0 : u.state) !== Go.CONNECTED || c != null && c.state && (c == null ? void 0 : c.state) !== Go.CONNECTED ? l(e, We)[We].getValue("peerSessionStore").emit(H.SOCKET_SERVICE_DISCONNECTED, { joinAttempted: l(e, we)[we].joinAttempted }) : l(e, Gr)[Gr] = setTimeout(function() {
        l(e, We)[We].getValue("peerSessionStore").emit(H.SOCKET_SERVICE_DISCONNECTED, { joinAttempted: l(e, we)[we].joinAttempted }), l(e, Gr)[Gr] = void 0;
      }, VD), l(e, we)[we].updateSocketConnectionState("disconnected");
    }), this.onStateEvent("reconnecting", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              e.logger.info("SocketService::Reconnecting to socket-edge", { country: D.location.country }), l(e, we)[we].updateSocketConnectionState("reconnecting");
            case 2:
            case "end":
              return a.stop();
          }
      }, r);
    }))), this.onStateEvent("reconnectAttempt", /* @__PURE__ */ function() {
      var r = m(/* @__PURE__ */ p().mark(function n(a) {
        var i;
        return p().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                i = a.attempt, e.logger.info("SocketService::Attempting to reconnect to socket-edge", { socket: { retryAttempt: i } }), l(e, we)[we].updateSocketConnectionState("reconnectAttempt", i);
              case 3:
              case "end":
                return u.stop();
            }
        }, n);
      }));
      return function(n) {
        return r.apply(this, arguments);
      };
    }()), this.onStateEvent("reconnectFailure", function(r) {
      var n = r.attempt;
      e.logger.info("SocketService::Reconnect attempt to socket-edge failed", { socket: { retryAttempt: n } }), l(e, we)[we].updateSocketConnectionState("reconnectFailure", n);
    }), this.onStateEvent("reconnected", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              e.logger.info("SocketService::Reconnected to socket-edge", { connectionState: { joinAttempted: l(e, we)[we].mediaJoinAttempted } }), l(e, Gr)[Gr] && (clearTimeout(l(e, Gr)[Gr]), l(e, Gr)[Gr] = void 0), l(e, We)[We].getValue("peerSessionStore").emit(H.SOCKET_SERVICE_RECONNECTED, { wasJoinAttempted: l(e, we)[we].mediaJoinAttempted }), l(e, we)[we].updateSocketConnectionState("reconnected");
            case 4:
            case "end":
              return a.stop();
          }
      }, r);
    }))), this.onStateEvent("failed", /* @__PURE__ */ m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              e.logger.info("SocketService::Failed to connect to socket-edge", { country: D.location.country }), l(e, We)[We].getValue("peerSessionStore").emit(H.SOCKET_SERVICE_FAILED), l(e, we)[we].updateSocketConnectionState("failed");
            case 3:
            case "end":
              return a.stop();
          }
      }, r);
    })));
  } }], [{ key: "getSocketEdgeDomain", value: function(e) {
    return zs({ servicePrefix: "socket-edge", baseURI: e });
  } }]);
}());
function UD() {
  return l(this, We)[We].getValue("connectionHandler");
}
function jD(o) {
  var t = Gg.getSocketEdgeDomain(l(this, We)[We].getValue("baseURI"));
  typeof Bo(l(this, We)[We], "socket_server_base") == "string" && (t = Bo(l(this, We)[We], "socket_server_base"));
  var e = "wss://".concat(t), r = new URL("".concat(e, "/ws")), n = this.peerId, a = N(N({ roomID: this.roomName, peerID: o, authToken: this.authToken, useMediaV2: !0 }, n !== o && { oldPeerID: n }), {}, { ping: this.capabilities.includes("PING"), capabilities: this.capabilities.map(function(i) {
    return oc[i];
  }).join(" "), joinWithDetails: !0, useCfWorker: !0, useStartSession: !0 });
  return Object.entries(a).forEach(function(i) {
    var s = Me(i, 2), u = s[0], c = s[1];
    r.searchParams.append(u, c.toString());
  }), r.href;
}
function FD() {
  return "".concat(this.peerId, "-").concat((Math.random() + 1).toString(36).substring(7));
}
var fl = Gg;
Nc([D.trace("SocketService.connect")], fl.prototype, "connect", 1);
Nc([D.trace("SocketService.disconnect")], fl.prototype, "disconnect", 1);
Nc([D.trace("SocketService.sendMessagePromise")], fl.prototype, "sendMessagePromise", 1);
Nc([D.trace("SocketService.sendMessagePromiseWithTimeout")], fl.prototype, "sendMessagePromiseWithTimeout", 1);
var HD = /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.socketService = void 0, this.socketService = t;
  }
  return P(o, [{
    key: "handleConnectedRoomsDumpRaw",
    value: function(e) {
      var r, n = e.payload, a = $E.fromBinary(n), i = a.meetings.map(function(u) {
        var c;
        return { id: u.id, title: u.title, participants: (c = u.participants) !== null && c !== void 0 ? c : [] };
      }), s = { id: a.parentMeeting.id, title: a.parentMeeting.title, participants: (r = a.parentMeeting.participants) !== null && r !== void 0 ? r : [] };
      return { parentMeeting: s, meetings: i };
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "handleTransferPeerRaw",
    value: function(e) {
      var r = e.payload, n = uC.fromBinary(r);
      return { authToken: n.authToken, meetingId: n.meetingId };
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "handleMovedPeerRaw",
    value: function(e) {
      var r = e.payload, n = xf.fromBinary(r);
      return { meetingId: n.meetingId, customParticipantId: n.customParticipantId };
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "handleConnectedRoomsUpdatedRaw",
    value: function(e) {
      var r = e.payload, n = Zh.fromBinary(r);
      return n.payloads.map(function(a) {
        return { id: a.id, title: a.title };
      });
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "handleConnectedRoomsDeletedRaw", value: function(e) {
    var r = e.payload, n = ZE.fromBinary(r);
    return n.payloads;
  } }, { key: "getConnectedRoomsDump", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.socketService.sendMessagePromise(X.getConnectedRoomsDump);
            case 2:
              return n = i.sent, i.abrupt("return", this.handleConnectedRoomsDumpRaw(n));
            case 4:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "createConnectedRooms",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n) {
        var a, i, s;
        return p().wrap(function(c) {
          for (; ; )
            switch (c.prev = c.next) {
              case 0:
                return c.next = 2, this.socketService.sendMessagePromise(X.createConnectedRooms, FE.toBinary({ payloads: n }));
              case 2:
                return a = c.sent, i = a.payload, s = Zh.fromBinary(i).payloads, c.abrupt("return", s.map(function(d) {
                  return { id: d.id, title: d.title };
                }));
              case 6:
              case "end":
                return c.stop();
            }
        }, r, this);
      }));
      function e(r) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars, class-methods-use-this
  }, { key: "updateConnectedRooms", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
            case "end":
              return i.stop();
          }
      }, r);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableConnectedRooms", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return a = n.map(function(c) {
                return { id: c };
              }), u.next = 3, this.socketService.sendMessagePromise(X.deleteConnectedRooms, QE.toBinary({ payloads: a }));
            case 3:
              return i = u.sent, u.abrupt("return", this.handleConnectedRoomsDeletedRaw(i));
            case 5:
            case "end":
              return u.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "movePeersBetweenRooms", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.prev = 0, u.next = 3, this.socketService.sendMessagePromise(X.movePeers, aC.toBinary({ sourceMeetingId: n.sourceMeetingId, destinationMeetingId: n.destinationMeetingId, participants: n.participants }));
            case 3:
              if (a = u.sent, i = new TextDecoder().decode(a.payload), !i.includes("error")) {
                u.next = 7;
                break;
              }
              return u.abrupt("return", { success: !1, error: "failed to move participants" });
            case 7:
              return u.abrupt("return", { success: !0 });
            case 10:
              return u.prev = 10, u.t0 = u.catch(0), u.abrupt("return", { success: !1, error: u.t0 });
            case 13:
            case "end":
              return u.stop();
          }
      }, r, this, [[0, 10]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]);
}(), BD = Object.defineProperty, qD = Object.getOwnPropertyDescriptor, GD = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? qD(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && BD(e, r, a), a;
}, st = /* @__PURE__ */ E("context"), Wg = /* @__PURE__ */ function(o) {
  function t(e) {
    var r;
    w(this, t);
    var n = e.getValue("logger");
    return r = C(this, t, [n]), r.meetings = [], r.parentMeeting = null, Object.defineProperty(r, st, { writable: !0, value: void 0 }), l(r, st)[st] = e, r;
  }
  return R(t, o), P(t, [{ key: "supportsConnectedMeetings", get: function() {
    return l(this, st)[st].getValue("self").id !== "";
  } }, { key: "isActive", get: function() {
    return this.meetings.length !== 0;
  } }, { key: "validateConnectedMeetingsAction", value: function() {
    if (!this.supportsConnectedMeetings)
      throw new Error(`You are not allowed to perform this action.
						Please connect with Dyte team to move you to V2 APIs & to enable connected meetings.`);
  } }, {
    key: "getConnectedMeetings",
    value: function() {
      var e = m(/* @__PURE__ */ p().mark(function n() {
        var a;
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return this.validateConnectedMeetingsAction(), s.next = 3, l(this, st)[st].getValue("connectedMeetingsSocketHandler").getConnectedRoomsDump();
              case 3:
                return a = s.sent, s.abrupt("return", a);
              case 5:
              case "end":
                return s.stop();
            }
        }, n, this);
      }));
      function r() {
        return e.apply(this, arguments);
      }
      return r;
    }()
    /**
    * create connected meetings
    */
  }, { key: "createMeetings", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i;
      return p().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return this.validateConnectedMeetingsAction(), u.next = 3, l(this, st)[st].getValue("connectedMeetingsSocketHandler").createConnectedRooms(a);
            case 3:
              return i = u.sent, u.abrupt("return", i.map(function(c) {
                return { id: c.id, title: c.title };
              }));
            case 5:
            case "end":
              return u.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateMeetings", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.validateConnectedMeetingsAction(), s.next = 3, l(this, st)[st].getValue("connectedMeetingsSocketHandler").updateConnectedRooms(a.map(function(u) {
                return { meetingId: u.id, title: u.title };
              }));
            case 3:
            case "end":
              return s.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "deleteMeetings", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a) {
      var i = this, s, u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return this.validateConnectedMeetingsAction(), s = this.meetings.map(function(h) {
                return a.includes(h.id) && h.participants.length !== 0 ? i.moveParticipants(h.id, i.parentMeeting.id, h.participants.map(function(v) {
                  return v.id;
                })) : Promise.resolve();
              }), d.next = 4, Promise.all(s);
            case 4:
              return d.next = 6, l(this, st)[st].getValue("connectedMeetingsSocketHandler").disableConnectedRooms(a);
            case 6:
              return u = d.sent, d.abrupt("return", u);
            case 8:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "moveParticipants", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return this.validateConnectedMeetingsAction(), d.next = 3, l(this, st)[st].getValue("connectedMeetingsSocketHandler").movePeersBetweenRooms({ sourceMeetingId: a, destinationMeetingId: i, participants: s.map(function(h) {
                return { id: h };
              }) });
            case 3:
              return u = d.sent, u.success && this.moveSuccessHandler(a, i, s), d.abrupt("return", u);
            case 6:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "moveParticipantsWithCustomPreset", value: function() {
    var e = m(/* @__PURE__ */ p().mark(function n(a, i, s) {
      var u;
      return p().wrap(function(d) {
        for (; ; )
          switch (d.prev = d.next) {
            case 0:
              return this.validateConnectedMeetingsAction(), d.next = 3, l(this, st)[st].getValue("connectedMeetingsSocketHandler").movePeersBetweenRooms({ sourceMeetingId: a, destinationMeetingId: i, participants: s });
            case 3:
              return u = d.sent, u.success && this.moveSuccessHandler(a, i, s.map(function(h) {
                return h.id;
              })), d.abrupt("return", u);
            case 6:
            case "end":
              return d.stop();
          }
      }, n, this);
    }));
    function r(n, a, i) {
      return e.apply(this, arguments);
    }
    return r;
  }() }, { key: "moveSuccessHandler", value: function(r, n, a) {
    var i = /* @__PURE__ */ new Map();
    [].concat(ke(this.parentMeeting.participants), ke(this.meetings.flatMap(function(s) {
      return s.participants;
    }))).forEach(function(s) {
      return i.set(s.id, s);
    }), n === this.parentMeeting.id && (this.parentMeeting.participants = this.parentMeeting.participants.concat(a.map(function(s) {
      return i.get(s);
    }))), r === this.parentMeeting.id && (this.parentMeeting.participants = this.parentMeeting.participants.filter(function(s) {
      return !a.includes(s.id);
    })), this.meetings = this.meetings.map(function(s) {
      if (n === s.id) {
        var u = s.participants.concat(a.map(function(d) {
          return i.get(d);
        }));
        return N(N({}, s), {}, { participants: u });
      }
      if (r === s.id) {
        var c = s.participants.filter(function(d) {
          return !a.includes(d.id);
        });
        return N(N({}, s), {}, { participants: c });
      }
      return s;
    });
  } }]);
}(an);
GD([Nt({ maxInvocations: 60, period: 60 })], Wg.prototype, "getConnectedMeetings", 1);
var WD = Object.defineProperty, JD = Object.getOwnPropertyDescriptor, Zp = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? JD(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && WD(e, r, a), a;
}, Jg = (ge = /* @__PURE__ */ E("context"), /* @__PURE__ */ function() {
  function o(t) {
    w(this, o), this.connectedMeetings = void 0, Object.defineProperty(this, ge, { writable: !0, value: void 0 }), l(this, ge)[ge] = t, this.connectedMeetings = new Wg(t);
  }
  return P(o, [{
    key: "telemetry",
    get: (
      /**
      * @access private
      * Not for external use
      */
      function() {
        return l(this, ge)[ge].getValue("telemetry");
      }
    )
    /**
    * @access private
    * Not for external use
    */
  }, { key: "logger", get: function() {
    return l(this, ge)[ge].getValue("logger");
  } }, { key: "getConnectedMeetings", value: function() {
    this.connectedMeetings.getConnectedMeetings();
  } }, {
    key: "setupEvents",
    value: function() {
      l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").socketService.on(X.getConnectedRoomsDump, this.handleConnectedRoomsDump.bind(this)), l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").socketService.on(X.transferPeer, this.handleTransferPeer.bind(this)), l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").socketService.on(X.movedPeer, this.handleMovedPeer.bind(this)), l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").socketService.on(X.connectedRoomsUpdated, this.handleConnectedRoomsUpdated.bind(this)), l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").socketService.on(X.connectedRoomsDeleted, this.handleConnectedRoomsDeleted.bind(this));
    }
    // event handlers
  }, { key: "handleTransferPeer", value: function(e) {
    var r = l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").handleTransferPeerRaw(e);
    return this.switchMeeting(r);
  } }, { key: "switchMeeting", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f;
      return p().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (s = n.authToken, u = n.meetingId, this.connectedMeetings.supportsConnectedMeetings) {
                k.next = 3;
                break;
              }
              throw new Error(`You are not allowed to perform this action.
								Please connect with Dyte team to move you to V2 APIs & to enable connected meetings.`);
            case 3:
              return this.logger.info("ConnectedMeetingsController::switchMeeting:: asking ui-kit to show switching breakout UI"), this.connectedMeetings.emit("changingMeeting", u), c = { video: l(this, ge)[ge].getValue("self").videoEnabled, audio: l(this, ge)[ge].getValue("self").audioEnabled }, k.prev = 6, l(this, ge)[ge].getValue("self").cleanupEvents(), k.next = 10, l(this, ge)[ge].getValue("meeting").leave("connected-meeting");
            case 10:
              k.next = 15;
              break;
            case 12:
              k.prev = 12, k.t0 = k.catch(6), this.logger.error("ConnectedMeetingsController:: switchMeeting:: issues in leaving previous meeting. Meeting Id: ".concat((d = l(this, ge)[ge].getValue("meeting")) === null || d === void 0 || (d = d.meta) === null || d === void 0 ? void 0 : d.meetingId), { error: k.t0 });
            case 15:
              return this.logger.info("ConnectedMeetingsController::switchMeeting:: initializing new meeting. Meeting Id: ".concat(u)), k.next = 18, tO.init(N(N({}, l(this, ge)[ge].getValue("options")), {}, { cachedUserDetails: null, defaults: N(N(N({}, l(this, ge)[ge].getValue("options").defaults), c), {}, {
                /**
                * NOTE(ravindra-dyte):
                * Protected methods & variables of DyteSelfMedia,
                * such as localMediaHandler cannot be type checked outside class hierarchy,
                * therefore typecasting DyteSelf to DyteSelfMedia,
                * Even though DyteSelf extends DyteSelfMedia.
                *
                * Alternative approach is to make either DyteSelfMedia methods public
                * or expose a public wrapper on DyteSelf.
                */
                mediaHandler: l(this, ge)[ge].getValue("self")
              }), authToken: s }));
            case 18:
              return h = k.sent, this.logger.info("ConnectedMeetingsController::switchMeeting:: initialized new meeting. Meeting Id: ".concat(h == null || (a = h.meta) === null || a === void 0 ? void 0 : a.meetingId)), k.prev = 20, v = l(this, ge)[ge].getValue("self"), f = v.hidden, h.self.setName(l(this, ge)[ge].getValue("self").name), k.next = 25, h.join();
            case 25:
              f && h.self.hide(), k.next = 31;
              break;
            case 28:
              k.prev = 28, k.t1 = k.catch(20), this.logger.error("ConnectedMeetingsController.joinRoom", { error: k.t1 });
            case 31:
              return this.logger.info("ConnectedMeetingsController::switchMeeting:: asking ui-kit to show in-meeting ui of newly joined meeting id: ".concat(h == null || (i = h.meta) === null || i === void 0 ? void 0 : i.meetingId)), this.connectedMeetings.emit("meetingChanged", h), k.abrupt("return", h);
            case 34:
            case "end":
              return k.stop();
          }
      }, r, this, [[6, 12], [20, 28]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "handleConnectedRoomsDump",
    value: function(e) {
      var r = l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").handleConnectedRoomsDumpRaw(e);
      this.connectedMeetings.meetings = r.meetings.map(function(n) {
        return { id: n.id, title: n.title, participants: n.participants || [] };
      }), this.connectedMeetings.parentMeeting = { id: r.parentMeeting.id, title: r.parentMeeting.title, participants: r.parentMeeting.participants }, this.emitStateUpdate();
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "handleMovedPeer", value: function(e) {
    var r = l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").handleMovedPeerRaw(e);
    return r;
  } }, { key: "handleConnectedRoomsUpdated", value: function(e) {
    var r = l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").handleConnectedRoomsUpdatedRaw(e), n = /* @__PURE__ */ new Map();
    this.connectedMeetings.meetings.forEach(function(a) {
      n.set(a.id, a);
    }), r.forEach(function(a) {
      n.has(a.id) ? n.get(a.id).title = a.title : n.set(a.id, N(N({}, a), {}, { participants: [] }));
    }), this.connectedMeetings.meetings = Array.from(n.values()), this.emitStateUpdate();
  } }, { key: "handleConnectedRoomsDeleted", value: function(e) {
    var r = l(this, ge)[ge].getValue("connectedMeetingsSocketHandler").handleConnectedRoomsDeletedRaw(e), n = r.map(function(a) {
      return a.id;
    });
    this.connectedMeetings.meetings = this.connectedMeetings.meetings.filter(function(a) {
      return !n.includes(a.id);
    }), this.emitStateUpdate();
  } }, { key: "emitStateUpdate", value: function() {
    this.connectedMeetings.emit("stateUpdate", { meetings: this.connectedMeetings.meetings, parentMeeting: this.connectedMeetings.parentMeeting });
  } }], [{ key: "init", value: function(e) {
    var r = new Jg(e);
    return r.connectedMeetings.supportsConnectedMeetings && (r.setupEvents(), e.getValue("self").once("roomJoined", function() {
      return r.getConnectedMeetings();
    })), r;
  } }]);
}()), $c = Jg;
Zp([D.trace("ConnectedMeetingsController.getConnectedMeetings")], $c.prototype, "getConnectedMeetings", 1);
Zp([D.trace("ConnectedMeetingsController.setupEvents")], $c.prototype, "setupEvents", 1);
Zp([D.trace("ConnectedMeetingsController.switchMeeting")], $c.prototype, "switchMeeting", 1);
var KD = Object.defineProperty, zD = Object.getOwnPropertyDescriptor, Vc = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? zD(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && KD(e, r, a), a;
}, Mo = /* @__PURE__ */ function() {
  function o(t, e, r) {
    w(this, o), this.apiBase = void 0, this.selfController = void 0, this.pollController = void 0, this.chatController = void 0, this.metaController = void 0, this.storesManager = void 0, this.stageController = void 0, this.pluginController = void 0, this.internalsController = void 0, this.recordingController = void 0, this.livestreamController = void 0, this.participantController = void 0, this.connectedMeetingsController = void 0, this.telemetry = void 0, this.logger = void 0, this.apiBase = t, this.storesManager = e.storesManager, this.metaController = e.metaController, this.selfController = e.selfController, this.chatController = e.chatController, this.pollController = e.pollController, this.stageController = e.stageController, this.pluginController = e.pluginController, this.recordingController = e.recordingController, this.internalsController = e.internalsController, this.participantController = e.participantController, this.livestreamController = e.livestreamController, this.connectedMeetingsController = e.connectedMeetingsController, this.telemetry = r.getValue("telemetry"), this.logger = r.getValue("logger");
  }
  return P(o, null, [{ key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f, g, k, y, b, S, T, A, L, I, M, V, j, $, O, B, Q, F;
      return p().wrap(function(q) {
        for (; ; )
          switch (q.prev = q.next) {
            case 0:
              if (i = n.getAllValues(), s = i.peerId, u = i.apiBase, c = i.authToken, d = i.meetingId, h = i.organizationId, v = i.cachedUserDetails, f = i.logger, Ag(n), kr.isSupported() !== !1) {
                q.next = 4;
                break;
              }
              throw new U("Browser not supported", "0010", f, !0);
            case 4:
              return g = bA(n, { authToken: c, baseURL: u, cachedUserDetails: v }), g.setRoomName(d), g.setRoomUUID(d), g.setOrganizationId(h), g.setHeader("dyte-tracing-id", s), n.setValue("apiClient", g), k = new lI(n), n.setValue("connectionHandler", k), y = Mo.createSocketService(n), b = y.connect(), S = g.getUserDetails(), T = g.getPlugins(), A = Mr.HIVE, I = "", q.prev = 18, q.next = 21, Mo.setupFlagsmith(n);
            case 21:
              q.next = 26;
              break;
            case 23:
              q.prev = 23, q.t0 = q.catch(18), f.error("Failed to setup flagsmith", { error: q.t0 });
            case 26:
              return q.prev = 26, q.next = 29, b;
            case 29:
              q.next = 34;
              break;
            case 31:
              q.prev = 31, q.t1 = q.catch(26), f.error("[Controller]: Failed to connect to socket server:", { error: q.t1 });
            case 34:
              return q.prev = 34, q.next = 37, g.getRoomNodeData();
            case 37:
              return M = q.sent, A = M.sfu, I = M.meetingTitle, q.next = 42, S;
            case 42:
              L = q.sent, f.info("SFU ".concat(A, " is being used.")), n.setValue("presetName", L.preset.name), n.setValue("roomNodeOptions", { sfu: A }), q.next = 51;
              break;
            case 48:
              q.prev = 48, q.t2 = q.catch(34), f.error("Failed to get room metadata", { error: q.t2 });
            case 51:
              return V = XI.init(L.preset, !n.getValue("modules").theme), j = D_.init(n, V.viewType, L.preset.permissions), $ = Mo.setupControllers(y, n, L, T, I, V, j), ZA(V) && (B = Mo.createRoomNodeClient(n, y), (O = B.initializeConnection(L.participant.name, d, !1, j)) === null || O === void 0 || O.catch(function(te) {
                f.error("[Controller]: Failed to queue partial media room promise:", { error: te });
              })), D.location.country = (a = g.ipInfo) === null || a === void 0 ? void 0 : a.country, q.next = 58, $;
            case 58:
              return Q = q.sent, F = Q.controllers, Bw(), q.abrupt("return", new Mo(u, F, n));
            case 62:
            case "end":
              return q.stop();
          }
      }, r, null, [[18, 23], [26, 31], [34, 48]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupFlagsmith", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f, g, k;
      return p().wrap(function(b) {
        for (; ; )
          switch (b.prev = b.next) {
            case 0:
              return a = n.getAllValues(), i = a.peerId, s = a.baseURI, u = a.overrides, c = a.meetingId, d = a.organizationId, h = a.logger, v = Hw(c), f = N(N({ entity: Ad.PEER, clientId: d, isAnonUser: !d, sdkVersion: n.getValue("sdkVersion"), presetName: n.getValue("presetName"), meetingHash: v, roomName: c }, kr.getDeviceInfo()), {}, { isReactNative: navigator.isReactNative }), b.prev = 3, k = !((g = u == null ? void 0 : u.whitelabelled_flags_endpoint) !== null && g !== void 0) || g ? zs({ servicePrefix: "flags", baseURI: s }) : "edge.api.flagsmith.com", b.next = 7, n.getValue("flagsmith").identify(
                "".concat(Ad.PEER, "_").concat(i),
                JSON.parse(JSON.stringify(f)),
                !1,
                // force evaluate
                5e3,
                // timeout
                k,
                h
              );
            case 7:
              h.info("flagsmith::allFlags", { flags: JSON.stringify(n.getValue("flagsmith").getAllFlags()) }, !0), b.next = 13;
              break;
            case 10:
              b.prev = 10, b.t0 = b.catch(3), h.error("Failed to fetch flagsmith flags");
            case 13:
            case "end":
              return b.stop();
          }
      }, r, null, [[3, 10]]);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupControllers", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n, a, i, s, u, c, d) {
      var h, v, f, g, k, y, b, S, T, A, L, I, M, V, j, $, O, B, Q, F, z, q, te, le, he, br, x, Sn, ln, Tr, ie, ee, ri, ti, ni, Kn;
      return p().wrap(function(Re) {
        for (; ; )
          switch (Re.prev = Re.next) {
            case 0:
              return g = a.getValue("modules"), k = i.participant, y = a.getValue("defaults"), b = a.getValue("logger"), S = a.getValue("roomNodeOptions"), T = S.sfu, A = c.viewType, L = c.mediaConstraints.audio, a.setValue("viewType", A), a.setValue("defaults", N({ mediaConfiguration: { audio: { enableHighBitrate: (h = L.enableHighBitrate) !== null && h !== void 0 ? h : !1, enableStereo: (v = L.enableStereo) !== null && v !== void 0 ? v : !1 } } }, y)), a.setValue("maxPreferredStreams", kr.isMobile() ? c.maxVideoStreams.mobile : c.maxVideoStreams.desktop), z = new cD(a, n), q = new HD(n), a.setValue("connectedMeetingsSocketHandler", q), te = new Oc(a, n), le = new wn(a, n), he = new gD(n), br = new _g(a, n), x = new mD(a, n), Sn = new lD(n), ln = new to(a, n), Re.next = 21, Bi.init(a, br, k, d, c);
            case 21:
              return Tr = Re.sent, a.setValue("selfController", Tr), Re.next = 25, dg.init(a, Tr.self, br, z, u);
            case 25:
              if (ie = Re.sent, g.participant && (Q = new ei(a, Tr.self, br, T)), (f = g.e2ee) !== null && f !== void 0 && f.enabled && g.e2ee.manager.init(b, a.getValue("peerSessionStore")), !g.chat) {
                Re.next = 32;
                break;
              }
              return Re.next = 31, jn.init(a, le, ln, Tr.self, Q.participants);
            case 31:
              M = Re.sent;
            case 32:
              if (!g.internals) {
                Re.next = 36;
                break;
              }
              return Re.next = 35, yI.init(a);
            case 35:
              $ = Re.sent;
            case 36:
              if (g.livestream && c.viewType === Lt.Livestream && a.getValue("flagsmith").hasFeature(ve.LIVESTREAM) && (B = new bg(a, Tr.self, Sn)), c.viewType === Lt.Chat) {
                Re.next = 62;
                break;
              }
              if (!g.poll) {
                Re.next = 42;
                break;
              }
              return Re.next = 41, og.init(a, Tr.self, te);
            case 41:
              I = Re.sent;
            case 42:
              if (g.recording && (O = new fg(a, Tr.self, br)), g.stage && (V = new pg(a, he, br, Tr.self, Q.participants)), !g.plugin) {
                Re.next = 53;
                break;
              }
              if (Q) {
                Re.next = 47;
                break;
              }
              throw new U("The plugin module cannot be initialized without the `participant` module", "0102");
            case 47:
              return Re.next = 49, s;
            case 49:
              return ri = Re.sent, Re.next = 52, cl.init(a, ri, x, le, (ee = M) === null || ee === void 0 ? void 0 : ee.chat, Tr.self, Q.participants, u);
            case 52:
              j = Re.sent;
            case 53:
              if (!g.connectedMeetings) {
                Re.next = 57;
                break;
              }
              return Re.next = 56, $c.init(a);
            case 56:
              F = Re.sent;
            case 57:
              if (!g.pip) {
                Re.next = 62;
                break;
              }
              return Re.next = 60, Ww._init(a, Tr.self);
            case 60:
              ti = Re.sent, a.setValue("pip", ti);
            case 62:
              return ni = new s_(a, x), Kn = { storesManager: ni, pollController: I, selfController: Tr, metaController: ie, chatController: M, stageController: V, pluginController: j, recordingController: O, internalsController: $, livestreamController: B, participantController: Q, connectedMeetingsController: F }, Re.abrupt("return", { theme: c, permissions: d, controllers: Kn });
            case 65:
            case "end":
              return Re.stop();
          }
      }, r);
    }));
    function e(r, n, a, i, s, u, c) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createRoomNodeClient", value: function(e, r) {
    var n = e.getAllValues(), a = n.peerId, i = n.roomNodeOptions, s = i.sfu;
    return Rg(e, s, { socket: r, peerId: a });
  } }, { key: "createSocketService", value: function(e) {
    var r = e.getAllValues(), n = r.peerId, a = r.meetingId, i = r.authToken, s = ["PING"], u = new fl(e, { peerId: n, meetingId: a, authToken: i, capabilities: s });
    return u;
  } }]);
}(), gl = Mo;
Vc([D.trace("Controller.init")], gl, "init", 1);
Vc([D.trace("setupFlagsmith")], gl, "setupFlagsmith", 1);
Vc([D.trace("Controller.createRoomNodeClient")], gl, "createRoomNodeClient", 1);
Vc([D.trace("Controller.createSocketService")], gl, "createSocketService", 1);
var YD = /* @__PURE__ */ P(function o() {
  var t = this;
  w(this, o), this.battery = void 0, this.logger = void 0, this.init = /* @__PURE__ */ function() {
    var e = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (t.logger = n, i.prev = 1, !("getBattery" in navigator)) {
                i.next = 10;
                break;
              }
              return i.next = 5, navigator.getBattery();
            case 5:
              t.battery = i.sent, t.battery.addEventListener("chargingchange", t.updateChargeInfo), t.battery.addEventListener("levelchange", t.updateLevelInfo), t.updateLevelInfo(), t.updateChargeInfo();
            case 10:
              i.next = 15;
              break;
            case 12:
              i.prev = 12, i.t0 = i.catch(1), n.error("Error getting battery", i.t0);
            case 15:
            case "end":
              return i.stop();
          }
      }, r, null, [[1, 12]]);
    }));
    return function(r) {
      return e.apply(this, arguments);
    };
  }(), this.updateChargeInfo = function() {
    var e;
    t.logger.log("Battery charging? ".concat((e = t.battery) !== null && e !== void 0 && e.charging ? "Yes" : "No"));
  }, this.updateLevelInfo = function() {
    if (!t.battery) {
      t.logger.log("Battery level: Not known");
      return;
    }
    t.logger.log("Battery level: ".concat(t.battery.level * 100, "%"));
  }, this.cleanup = function() {
    if ("getBattery" in navigator) {
      var e, r;
      (e = t.battery) === null || e === void 0 || e.removeEventListener("chargingchange", t.updateChargeInfo), (r = t.battery) === null || r === void 0 || r.removeEventListener("levelchange", t.updateLevelInfo);
    }
  };
}), Cv = new YD();
function QD(o, t) {
  o.startsWith("eyJ") || console.error("Invalid auth token provided. Ensure you are passing a %cparticipant `authToken`%c — not an Org API Key or an incorrectly formatted token.\nYou get the participant token from the Add Participant API: https://docs.dyte.io/api#/operations/add_participant", "font-weight: bold", "font-weight: normal");
  try {
    var e = JSON.parse(atob(o.split(".")[1])), r = e.meetingId, n = e.orgId, a = e.participantId;
    if (!r)
      throw Error("Received V1 auth token ".concat(o));
    var i = "dyte.io";
    t && (i = t);
    var s = "https://".concat(zs({ servicePrefix: "api", baseURI: i }));
    return { meetingId: r, orgId: n, participantId: a, baseURI: i, apiBase: s };
  } catch (u) {
    throw new U("Invalid auth token", "0004");
  }
}
var Dn = /* @__PURE__ */ E("audioEl"), Oa = /* @__PURE__ */ E("stream"), La = /* @__PURE__ */ E("tracks"), Xu = /* @__PURE__ */ E("onError"), yd = /* @__PURE__ */ E("runErrorCallbacks"), XD = /* @__PURE__ */ function() {
  function o() {
    w(this, o), Object.defineProperty(this, yd, { value: ZD }), Object.defineProperty(this, Dn, { writable: !0, value: new Audio() }), Object.defineProperty(this, Oa, { writable: !0, value: new MediaStream() }), Object.defineProperty(this, La, { writable: !0, value: /* @__PURE__ */ new Map() }), Object.defineProperty(this, Xu, { writable: !0, value: void 0 }), l(this, Dn)[Dn].srcObject = l(this, Oa)[Oa], l(this, Dn)[Dn].autoplay = !0;
  }
  return P(o, [{ key: "playTracks", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a = this;
      return p().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return n.forEach(function(u) {
                l(a, La)[La].has(u.id) || (l(a, Oa)[Oa].addTrack(u), l(a, La)[La].set(u.id, u));
              }), s.abrupt("return", this.play());
            case 2:
            case "end":
              return s.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setSpeakerDevice", value: function(e) {
    typeof HTMLAudioElement.prototype.setSinkId == "function" && l(this, Dn)[Dn].setSinkId(e);
  } }, { key: "removeTrack", value: function(e) {
    var r = l(this, La)[La].get(e);
    r && (l(this, Oa)[Oa].removeTrack(r), l(this, La)[La].delete(e));
  } }, { key: "play", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n = this;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return l(this, Dn)[Dn].srcObject = l(this, Oa)[Oa], i.abrupt("return", l(this, Dn)[Dn].play().catch(function(s) {
                l(n, yd)[yd](s);
              }));
            case 2:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onError", value: function(e) {
    l(this, Xu)[Xu] = e;
  } }]);
}();
function ZD(o) {
  var t, e;
  (t = (e = l(this, Xu))[Xu]) === null || t === void 0 || t.call(e, o);
}
var Na = /* @__PURE__ */ E("trackMap"), xD = /* @__PURE__ */ function(o) {
  function t() {
    var e;
    return w(this, t), e = C(this, t), Object.defineProperty(e, Na, { writable: !0, value: void 0 }), l(e, Na)[Na] = /* @__PURE__ */ new Map(), e;
  }
  return R(t, o), P(t, [{ key: "addParticipantTrack", value: function(r, n) {
    l(this, Na)[Na].set(r, n.id), this.playTracks([n]);
  } }, { key: "removeParticipantTrack", value: function(r) {
    var n = l(this, Na)[Na].get(r);
    n && this.removeTrack(n), l(this, Na)[Na].delete(r);
  } }]);
}(XD), eO = Object.defineProperty, rO = Object.getOwnPropertyDescriptor, Uc = function(t, e, r, n) {
  for (var a = n > 1 ? void 0 : n ? rO(e, r) : e, i = t.length - 1, s; i >= 0; i--)
    (s = t[i]) && (a = (n ? s(e, r, a) : s(a)) || a);
  return n && a && eO(e, r, a), a;
}, Fi = (je = /* @__PURE__ */ E("controller"), ca = /* @__PURE__ */ E("context"), /* @__PURE__ */ function() {
  function o(t, e) {
    w(this, o), Object.defineProperty(this, je, { writable: !0, value: void 0 }), Object.defineProperty(this, ca, { writable: !0, value: void 0 }), l(this, ca)[ca] = t, l(this, je)[je] = e;
  }
  return P(o, [{ key: "peerId", get: function() {
    return l(this, ca)[ca].getValue("peerId");
  } }, { key: "join", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      var n;
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (n = l(this, je)[je].selfController, !n.self.roomJoined) {
                i.next = 3;
                break;
              }
              return i.abrupt("return", null);
            case 3:
              return i.abrupt("return", n.joinRoom());
            case 4:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "leave",
    value: function() {
      var t = m(/* @__PURE__ */ p().mark(function r(n) {
        var a;
        return p().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return Cv.cleanup(), l(this, ca)[ca].getValue("peerSessionStore").reset(), a = l(this, je)[je].selfController, s.abrupt("return", a.leaveRoom(n));
              case 4:
              case "end":
                return s.stop();
            }
        }, r, this);
      }));
      function e(r) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * The `participants` object consists of 4 maps of participants,
    * `waitlisted`, `joined`, `active`, `pinned`. The maps are indexed by
    * `peerId`s, and the values are the corresponding participant objects.
    */
  }, {
    key: "participants",
    get: function() {
      var e;
      return (e = l(this, je)[je].participantController) === null || e === void 0 ? void 0 : e.participants;
    }
    /**
    * The `self` object can be used to manipulate audio and video settings,
    * and other configurations for the local participant. This exposes methods
    * to enable and disable media tracks, share the user's screen, etc.
    */
  }, {
    key: "self",
    get: function() {
      var e;
      return (e = l(this, je)[je].selfController) === null || e === void 0 ? void 0 : e.self;
    }
    /**
    * The `room` object stores information about the current meeting, such
    * as chat messages, polls, room name, etc.
    */
  }, {
    key: "meta",
    get: function() {
      var e;
      return (e = l(this, je)[je].metaController) === null || e === void 0 ? void 0 : e.meta;
    }
    /**
    * The `ai` object is used to interface with Dyte's AI features.
    * You can obtain the live meeting transcript and use other meeting AI
    * features such as summary, and agenda using this object.
    */
  }, {
    key: "ai",
    get: function() {
      var e;
      return (e = l(this, je)[je].metaController) === null || e === void 0 ? void 0 : e.ai;
    }
    /**
    * The `plugins` object stores information about the plugins available in
    * the current meeting. It exposes methods to activate and deactivate them.
    */
  }, {
    key: "plugins",
    get: function() {
      var e;
      return (e = l(this, je)[je].pluginController) === null || e === void 0 ? void 0 : e.plugins;
    }
    /**
    * The chat object stores the chat messages that were sent in the meeting.
    * This includes text messages, images, and files.
    */
  }, {
    key: "chat",
    get: function() {
      var e;
      return (e = l(this, je)[je].chatController) === null || e === void 0 ? void 0 : e.chat;
    }
    /**
    * The polls object stores the polls that were initiated in the meeting.
    * It exposes methods to create and vote on polls.
    */
  }, {
    key: "polls",
    get: function() {
      var e;
      return (e = l(this, je)[je].pollController) === null || e === void 0 ? void 0 : e.polls;
    }
    /**
    * The connectedMeetings object stores the connected meetings states.
    * It exposes methods to create/read/update/delete methods for connected meetings.
    */
  }, {
    key: "connectedMeetings",
    get: function() {
      var e;
      return (e = l(this, je)[je].connectedMeetingsController) === null || e === void 0 ? void 0 : e.connectedMeetings;
    }
    /*
    * The recording object stores the recording state of the meeting.
    * It exposes methods to start and stop recording.
    */
  }, { key: "recording", get: function() {
    var e;
    return (e = l(this, je)[je].recordingController) === null || e === void 0 ? void 0 : e.recording;
  } }, { key: "livestream", get: function() {
    var e;
    return (e = l(this, je)[je].livestreamController) === null || e === void 0 ? void 0 : e.livestream;
  } }, { key: "stage", get: function() {
    var e;
    return (e = l(this, je)[je].stageController) === null || e === void 0 ? void 0 : e.stage;
  } }, { key: "stores", get: function() {
    return l(this, je)[je].storesManager;
  } }, {
    key: "audio",
    get: function() {
      return l(this, ca)[ca].getValue("audioPlayback");
    }
    /**
    * The __internals__ object exposes the internal tools & utilities such as features and logger
    * so that client can utilise the same to build their own feature based UI.
    * DyteLogger (__internals__.logger) can be used to send logs to Dyte's servers
    *	to inform Dyte of issues, if any, proactively.
    */
  }, {
    key: "__internals__",
    get: function() {
      var e;
      return (e = l(this, je)[je].internalsController) === null || e === void 0 ? void 0 : e.internals;
    }
    /** @deprecated Use `join()` instead */
  }, { key: "joinRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r() {
      return p().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", this.join());
            case 1:
            case "end":
              return a.stop();
          }
      }, r, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "leaveRoom", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      return p().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.leave(n));
            case 1:
            case "end":
              return i.stop();
          }
      }, r, this);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "initMedia", value: function() {
    var e, r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0, i = (e = a == null ? void 0 : a.peerId) !== null && e !== void 0 ? e : eo(), s = za.createContext(i, { peerId: i }), u = s.getValue("logger");
    u.init(s);
    var c = new wg(u);
    return c.init(r, n, s), s.setValue("defaults", { mediaHandler: c }), c;
  } }, { key: "init", value: function() {
    var t = m(/* @__PURE__ */ p().mark(function r(n) {
      var a, i, s, u, c, d, h, v, f, g, k, y, b, S, T, A, L, I, M, V;
      return p().wrap(function($) {
        for (; ; )
          switch ($.prev = $.next) {
            case 0:
              return kr.init(), v = (a = n.defaults) !== null && a !== void 0 ? a : {}, f = v.mediaHandler, g = (f == null ? void 0 : f.peerId) || ((i = n == null || (s = n.cachedUserDetails) === null || s === void 0 ? void 0 : s.peerId) !== null && i !== void 0 ? i : eo()), k = n.authToken, y = n.baseURI, b = QD(k, y), S = b.meetingId, T = gc(b, Qg), window.__zone_symbol__DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION = !0, A = Fi.setupContext(g, n, S, T), L = A.getValue("telemetry"), I = A.getValue("logger"), fm(I), Cv.init(I), L.init(A, { roomName: S, userId: T.participantId, organizationId: T.orgId, peerId: g }, (u = (c = n.modules) === null || c === void 0 ? void 0 : c.tracing) !== null && u !== void 0 ? u : !0), I.init(A), I.info("DyteClient::init::options", { dyteClientInitOptions: N(N({}, n), {}, { authToken: "".concat((d = n.authToken) === null || d === void 0 ? void 0 : d.slice(0, 10), `...
				`).concat((h = n.authToken) === null || h === void 0 ? void 0 : h.slice(-10)) }) }), $.next = 16, gl.init(A);
            case 16:
              return M = $.sent, V = new Fi(A, M), A.setValue("meeting", V), $.abrupt("return", V);
            case 20:
            case "end":
              return $.stop();
          }
      }, r);
    }));
    function e(r) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupContext", value: function(e, r, n, a) {
    var i, s, u = za.createContext(e, r), c = N(N({}, Ow), r == null ? void 0 : r.modules), d = r.defaults || { audio: !0, video: !0 };
    return u.setValue("options", r), u.setValue("peerId", e), u.setValue("modules", c), u.setValue("sdkName", "web-core"), u.setValue("meetingId", n), u.setValue("apiBase", a.apiBase), u.setValue("baseURI", a.baseURI), u.setValue("userId", a.participantId), u.setValue("organizationId", a.orgId), u.setValue("authToken", r.authToken), u.setValue("overrides", (i = r.overrides) !== null && i !== void 0 ? i : {}), u.setValue("env", Lw({ baseURI: a.baseURI })), u.setValue("defaults", d), u.setValue("onError", r.onError || function() {
    }), u.setValue("cachedUserDetails", Fn(r.cachedUserDetails)), u.setValue("sdkVersion", "VERSION_PLACEHOLDER"), (s = r.modules) !== null && s !== void 0 && s.experimentalAudioPlayback && u.setValue("audioPlayback", new xD()), u;
  } }]);
}());
Uc([vt("0002"), xa.executeWithLock({ methodName: "meeting.join", lockName: "DyteClient.join", timeout: 3e3 })], Fi.prototype, "join", 1);
Uc([vt("0003")], Fi.prototype, "leave", 1);
Uc([vt("0001"), xa.executeWithLock({ methodName: "DyteClient.init", lockName: "DyteClient.init", timeout: 3e3 })], Fi, "init", 1);
Fi = Uc([vt("0000")], Fi);
var tO = Fi;
export {
  tO as default
};
