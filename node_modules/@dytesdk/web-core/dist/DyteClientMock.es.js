var vt = Object.defineProperty, Rt = Object.defineProperties;
var _t = Object.getOwnPropertyDescriptors;
var on = Object.getOwnPropertySymbols;
var wt = Object.prototype.hasOwnProperty, Pt = Object.prototype.propertyIsEnumerable;
var qe = (e, s, a) => s in e ? vt(e, s, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[s] = a, $e = (e, s) => {
  for (var a in s || (s = {}))
    wt.call(s, a) && qe(e, a, s[a]);
  if (on)
    for (var a of on(s))
      Pt.call(s, a) && qe(e, a, s[a]);
  return e;
}, an = (e, s) => Rt(e, _t(s));
var y = (e, s, a) => (qe(e, typeof s != "symbol" ? s + "" : s, a), a), cn = (e, s, a) => {
  if (!s.has(e))
    throw TypeError("Cannot " + a);
};
var j = (e, s, a) => (cn(e, s, "read from private field"), a ? a.call(e) : s.get(e)), te = (e, s, a) => {
  if (s.has(e))
    throw TypeError("Cannot add the same private member more than once");
  s instanceof WeakSet ? s.add(e) : s.set(e, a);
}, Ne = (e, s, a, d) => (cn(e, s, "write to private field"), d ? d.call(e, a) : s.set(e, a), a);
var dn = (e, s, a) => new Promise((d, p) => {
  var m = (w) => {
    try {
      g(a.next(w));
    } catch (L) {
      p(L);
    }
  }, f = (w) => {
    try {
      g(a.throw(w));
    } catch (L) {
      p(L);
    }
  }, g = (w) => w.done ? d(w.value) : Promise.resolve(w.value).then(m, f);
  g((a = a.apply(e, s)).next());
});
import { MessageType as o, PbLong as se, typeofJsonValue as Ct } from "@protobuf-ts/runtime";
var re = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {}, fe = {}, Et = {
  get exports() {
    return fe;
  },
  set exports(e) {
    fe = e;
  }
}, J = typeof Reflect == "object" ? Reflect : null, un = J && typeof J.apply == "function" ? J.apply : function(s, a, d) {
  return Function.prototype.apply.call(s, a, d);
}, le;
J && typeof J.ownKeys == "function" ? le = J.ownKeys : Object.getOwnPropertySymbols ? le = function(s) {
  return Object.getOwnPropertyNames(s).concat(Object.getOwnPropertySymbols(s));
} : le = function(s) {
  return Object.getOwnPropertyNames(s);
};
function St(e) {
  console && console.warn && console.warn(e);
}
var Rn = Number.isNaN || function(s) {
  return s !== s;
};
function v() {
  v.init.call(this);
}
Et.exports = v;
fe.once = Ot;
v.EventEmitter = v;
v.prototype._events = void 0;
v.prototype._eventsCount = 0;
v.prototype._maxListeners = void 0;
var pn = 10;
function Re(e) {
  if (typeof e != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e);
}
Object.defineProperty(v, "defaultMaxListeners", {
  enumerable: !0,
  get: function() {
    return pn;
  },
  set: function(e) {
    if (typeof e != "number" || e < 0 || Rn(e))
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
    pn = e;
  }
});
v.init = function() {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
};
v.prototype.setMaxListeners = function(s) {
  if (typeof s != "number" || s < 0 || Rn(s))
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + s + ".");
  return this._maxListeners = s, this;
};
function _n(e) {
  return e._maxListeners === void 0 ? v.defaultMaxListeners : e._maxListeners;
}
v.prototype.getMaxListeners = function() {
  return _n(this);
};
v.prototype.emit = function(s) {
  for (var a = [], d = 1; d < arguments.length; d++)
    a.push(arguments[d]);
  var p = s === "error", m = this._events;
  if (m !== void 0)
    p = p && m.error === void 0;
  else if (!p)
    return !1;
  if (p) {
    var f;
    if (a.length > 0 && (f = a[0]), f instanceof Error)
      throw f;
    var g = new Error("Unhandled error." + (f ? " (" + f.message + ")" : ""));
    throw g.context = f, g;
  }
  var w = m[s];
  if (w === void 0)
    return !1;
  if (typeof w == "function")
    un(w, this, a);
  else
    for (var L = w.length, Pe = Sn(w, L), d = 0; d < L; ++d)
      un(Pe[d], this, a);
  return !0;
};
function wn(e, s, a, d) {
  var p, m, f;
  if (Re(a), m = e._events, m === void 0 ? (m = e._events = /* @__PURE__ */ Object.create(null), e._eventsCount = 0) : (m.newListener !== void 0 && (e.emit(
    "newListener",
    s,
    a.listener ? a.listener : a
  ), m = e._events), f = m[s]), f === void 0)
    f = m[s] = a, ++e._eventsCount;
  else if (typeof f == "function" ? f = m[s] = d ? [a, f] : [f, a] : d ? f.unshift(a) : f.push(a), p = _n(e), p > 0 && f.length > p && !f.warned) {
    f.warned = !0;
    var g = new Error("Possible EventEmitter memory leak detected. " + f.length + " " + String(s) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    g.name = "MaxListenersExceededWarning", g.emitter = e, g.type = s, g.count = f.length, St(g);
  }
  return e;
}
v.prototype.addListener = function(s, a) {
  return wn(this, s, a, !1);
};
v.prototype.on = v.prototype.addListener;
v.prototype.prependListener = function(s, a) {
  return wn(this, s, a, !0);
};
function bt() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function Pn(e, s, a) {
  var d = { fired: !1, wrapFn: void 0, target: e, type: s, listener: a }, p = bt.bind(d);
  return p.listener = a, d.wrapFn = p, p;
}
v.prototype.once = function(s, a) {
  return Re(a), this.on(s, Pn(this, s, a)), this;
};
v.prototype.prependOnceListener = function(s, a) {
  return Re(a), this.prependListener(s, Pn(this, s, a)), this;
};
v.prototype.removeListener = function(s, a) {
  var d, p, m, f, g;
  if (Re(a), p = this._events, p === void 0)
    return this;
  if (d = p[s], d === void 0)
    return this;
  if (d === a || d.listener === a)
    --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete p[s], p.removeListener && this.emit("removeListener", s, d.listener || a));
  else if (typeof d != "function") {
    for (m = -1, f = d.length - 1; f >= 0; f--)
      if (d[f] === a || d[f].listener === a) {
        g = d[f].listener, m = f;
        break;
      }
    if (m < 0)
      return this;
    m === 0 ? d.shift() : Lt(d, m), d.length === 1 && (p[s] = d[0]), p.removeListener !== void 0 && this.emit("removeListener", s, g || a);
  }
  return this;
};
v.prototype.off = v.prototype.removeListener;
v.prototype.removeAllListeners = function(s) {
  var a, d, p;
  if (d = this._events, d === void 0)
    return this;
  if (d.removeListener === void 0)
    return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : d[s] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete d[s]), this;
  if (arguments.length === 0) {
    var m = Object.keys(d), f;
    for (p = 0; p < m.length; ++p)
      f = m[p], f !== "removeListener" && this.removeAllListeners(f);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (a = d[s], typeof a == "function")
    this.removeListener(s, a);
  else if (a !== void 0)
    for (p = a.length - 1; p >= 0; p--)
      this.removeListener(s, a[p]);
  return this;
};
function Cn(e, s, a) {
  var d = e._events;
  if (d === void 0)
    return [];
  var p = d[s];
  return p === void 0 ? [] : typeof p == "function" ? a ? [p.listener || p] : [p] : a ? xt(p) : Sn(p, p.length);
}
v.prototype.listeners = function(s) {
  return Cn(this, s, !0);
};
v.prototype.rawListeners = function(s) {
  return Cn(this, s, !1);
};
v.listenerCount = function(e, s) {
  return typeof e.listenerCount == "function" ? e.listenerCount(s) : En.call(e, s);
};
v.prototype.listenerCount = En;
function En(e) {
  var s = this._events;
  if (s !== void 0) {
    var a = s[e];
    if (typeof a == "function")
      return 1;
    if (a !== void 0)
      return a.length;
  }
  return 0;
}
v.prototype.eventNames = function() {
  return this._eventsCount > 0 ? le(this._events) : [];
};
function Sn(e, s) {
  for (var a = new Array(s), d = 0; d < s; ++d)
    a[d] = e[d];
  return a;
}
function Lt(e, s) {
  for (; s + 1 < e.length; s++)
    e[s] = e[s + 1];
  e.pop();
}
function xt(e) {
  for (var s = new Array(e.length), a = 0; a < s.length; ++a)
    s[a] = e[a].listener || e[a];
  return s;
}
function Ot(e, s) {
  return new Promise(function(a, d) {
    function p(f) {
      e.removeListener(s, m), d(f);
    }
    function m() {
      typeof e.removeListener == "function" && e.removeListener("error", p), a([].slice.call(arguments));
    }
    bn(e, s, m, { once: !0 }), s !== "error" && Mt(e, p, { once: !0 });
  });
}
function Mt(e, s, a) {
  typeof e.on == "function" && bn(e, "error", s, a);
}
function bn(e, s, a, d) {
  if (typeof e.on == "function")
    d.once ? e.once(s, a) : e.on(s, a);
  else if (typeof e.addEventListener == "function")
    e.addEventListener(s, function p(m) {
      d.once && e.removeEventListener(s, p), a(m);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
}
const qt = `
m=video 9 UDP/TLS/RTP/SAVPF 96
a=msid:stream-id track-id
m=audio 9 UDP/TLS/RTP/SAVPF 96
a=msid:stream-id track-id
`, ln = {
  // Properties
  track: null,
  transport: null,
  rtcpTransport: null,
  dtmf: {
    insertDTMF: () => {
    },
    ontonechange: null,
    canInsertDTMF: !1,
    toneBuffer: "",
    addEventListener: () => {
    },
    removeEventListener: () => {
    },
    dispatchEvent: () => !0
  },
  transform: null,
  mid: null,
  // Methods
  getParameters: () => ({}),
  setParameters: () => Promise.resolve({}),
  replaceTrack: () => Promise.resolve({}),
  getStats: () => Promise.resolve(/* @__PURE__ */ new Map()),
  setStreams: () => {
  },
  setTransform: () => Promise.resolve()
};
class $t extends fe {
  constructor() {
    super();
    y(this, "localDescription", null);
    y(this, "remoteDescription", null);
    y(this, "currentLocalDescription", null);
    y(this, "currentRemoteDescription", null);
    y(this, "pendingLocalDescription", null);
    y(this, "pendingRemoteDescription", null);
    y(this, "signalingState", "stable");
    y(this, "iceConnectionState", "new");
    y(this, "iceGatheringState", "new");
    y(this, "connectionState", "new");
    y(this, "canTrickleIceCandidates", null);
    y(this, "sctp", null);
    y(this, "senders", []);
    y(this, "receivers", []);
    y(this, "transceivers", []);
    y(this, "onicecandidate", null);
    y(this, "onicecandidateerror", null);
    y(this, "onconnectionstatechange", null);
    y(this, "oniceconnectionstatechange", null);
    y(this, "onicegatheringstatechange", null);
    y(this, "onsignalingstatechange", null);
    y(this, "onnegotiationneeded", null);
    y(this, "ontrack", null);
    y(this, "ondatachannel", null);
    y(this, "addEventListener");
    y(this, "removeEventListener");
    this.addEventListener = this.addListener, this.removeEventListener = this.removeListener;
  }
  createOffer() {
    return Promise.resolve({
      sdp: qt,
      type: "offer"
    });
  }
  createAnswer() {
    return Promise.resolve({});
  }
  setLocalDescription() {
    return this.iceConnectionState = "connected", this.iceGatheringState = "complete", this.connectionState = "connected", this.signalingState = "stable", this.emit("iceconnectionstatechange"), Promise.resolve();
  }
  setRemoteDescription() {
    return Promise.resolve();
  }
  addIceCandidate() {
    return Promise.resolve();
  }
  getStats() {
    return Promise.resolve(/* @__PURE__ */ new Map());
  }
  getConfiguration() {
    return {};
  }
  setConfiguration() {
  }
  close() {
  }
  createDataChannel() {
    return {
      close: () => {
      },
      send: () => {
      }
    };
  }
  addTrack() {
    return ln;
  }
  removeTrack() {
  }
  addTransceiver() {
    return {
      stop: () => {
      },
      setDirection: () => {
      },
      setCodecPreferences: () => {
      },
      sender: ln
    };
  }
  // @ts-ignore
  getTransceivers() {
    return [];
  }
  // @ts-ignore
  getSenders() {
    return [];
  }
  // @ts-ignore
  getReceivers() {
    return [];
  }
  restartIce() {
  }
  static generateCertificate() {
    return Promise.resolve({
      expires: Date.now(),
      getFingerprints: () => []
    });
  }
}
function Nt(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Ln = { exports: {} }, C = Ln.exports = {}, A, I;
function Ue() {
  throw new Error("setTimeout has not been defined");
}
function Be() {
  throw new Error("clearTimeout has not been defined");
}
(function() {
  try {
    typeof setTimeout == "function" ? A = setTimeout : A = Ue;
  } catch (e) {
    A = Ue;
  }
  try {
    typeof clearTimeout == "function" ? I = clearTimeout : I = Be;
  } catch (e) {
    I = Be;
  }
})();
function xn(e) {
  if (A === setTimeout)
    return setTimeout(e, 0);
  if ((A === Ue || !A) && setTimeout)
    return A = setTimeout, setTimeout(e, 0);
  try {
    return A(e, 0);
  } catch (s) {
    try {
      return A.call(null, e, 0);
    } catch (a) {
      return A.call(this, e, 0);
    }
  }
}
function At(e) {
  if (I === clearTimeout)
    return clearTimeout(e);
  if ((I === Be || !I) && clearTimeout)
    return I = clearTimeout, clearTimeout(e);
  try {
    return I(e);
  } catch (s) {
    try {
      return I.call(null, e);
    } catch (a) {
      return I.call(this, e);
    }
  }
}
var U = [], Z = !1, W, me = -1;
function It() {
  !Z || !W || (Z = !1, W.length ? U = W.concat(U) : me = -1, U.length && On());
}
function On() {
  if (!Z) {
    var e = xn(It);
    Z = !0;
    for (var s = U.length; s; ) {
      for (W = U, U = []; ++me < s; )
        W && W[me].run();
      me = -1, s = U.length;
    }
    W = null, Z = !1, At(e);
  }
}
C.nextTick = function(e) {
  var s = new Array(arguments.length - 1);
  if (arguments.length > 1)
    for (var a = 1; a < arguments.length; a++)
      s[a - 1] = arguments[a];
  U.push(new Mn(e, s)), U.length === 1 && !Z && xn(On);
};
function Mn(e, s) {
  this.fun = e, this.array = s;
}
Mn.prototype.run = function() {
  this.fun.apply(null, this.array);
};
C.title = "browser";
C.browser = !0;
C.env = {};
C.argv = [];
C.version = "";
C.versions = {};
function B() {
}
C.on = B;
C.addListener = B;
C.once = B;
C.off = B;
C.removeListener = B;
C.removeAllListeners = B;
C.emit = B;
C.prependListener = B;
C.prependOnceListener = B;
C.listeners = function(e) {
  return [];
};
C.binding = function(e) {
  throw new Error("process.binding is not supported");
};
C.cwd = function() {
  return "/";
};
C.chdir = function(e) {
  throw new Error("process.chdir is not supported");
};
C.umask = function() {
  return 0;
};
var Dt = Ln.exports;
const Ae = /* @__PURE__ */ Nt(Dt);
function Ut(e) {
  throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var oe = {}, Bt = {
  get exports() {
    return oe;
  },
  set exports(e) {
    oe = e;
  }
};
(function(e, s) {
  (function(a, d) {
    d(s);
  })(re, function(a) {
    var d = typeof window != "undefined" ? window : typeof re != "undefined" ? re : typeof self != "undefined" ? self : {}, p = function(t, c) {
      if (c = c.split(":")[0], t = +t, !t)
        return !1;
      switch (c) {
        case "http":
        case "ws":
          return t !== 80;
        case "https":
        case "wss":
          return t !== 443;
        case "ftp":
          return t !== 21;
        case "gopher":
          return t !== 70;
        case "file":
          return !1;
      }
      return t !== 0;
    }, m = Object.prototype.hasOwnProperty, f;
    function g(r) {
      try {
        return decodeURIComponent(r.replace(/\+/g, " "));
      } catch (t) {
        return null;
      }
    }
    function w(r) {
      try {
        return encodeURIComponent(r);
      } catch (t) {
        return null;
      }
    }
    function L(r) {
      for (var t = /([^=?#&]+)=?([^&]*)/g, c = {}, n; n = t.exec(r); ) {
        var i = g(n[1]), u = g(n[2]);
        i === null || u === null || i in c || (c[i] = u);
      }
      return c;
    }
    function Pe(r, t) {
      t = t || "";
      var c = [], n, i;
      typeof t != "string" && (t = "?");
      for (i in r)
        if (m.call(r, i)) {
          if (n = r[i], !n && (n === null || n === f || isNaN(n)) && (n = ""), i = w(i), n = w(n), i === null || n === null)
            continue;
          c.push(i + "=" + n);
        }
      return c.length ? t + c.join("&") : "";
    }
    var Xn = Pe, et = L, ce = {
      stringify: Xn,
      parse: et
    }, Ye = /[\n\r\t]/g, nt = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//, tt = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i, st = /^[a-zA-Z]:/, rt = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;
    function Ce(r) {
      return (r || "").toString().replace(rt, "");
    }
    var Ee = [
      ["#", "hash"],
      // Extract from the back.
      ["?", "query"],
      // Extract from the back.
      function(t, c) {
        return $(c.protocol) ? t.replace(/\\/g, "/") : t;
      },
      ["/", "pathname"],
      // Extract from the back.
      ["@", "auth", 1],
      // Extract from the front.
      [NaN, "host", void 0, 1, 1],
      // Set left over value.
      [/:(\d*)$/, "port", void 0, 1],
      // RegExp the back.
      [NaN, "hostname", void 0, 1, 1]
      // Set left over.
    ], Qe = { hash: 1, query: 1 };
    function Xe(r) {
      var t;
      typeof window != "undefined" ? t = window : typeof d != "undefined" ? t = d : typeof self != "undefined" ? t = self : t = {};
      var c = t.location || {};
      r = r || c;
      var n = {}, i = typeof r, u;
      if (r.protocol === "blob:")
        n = new N(unescape(r.pathname), {});
      else if (i === "string") {
        n = new N(r, {});
        for (u in Qe)
          delete n[u];
      } else if (i === "object") {
        for (u in r)
          u in Qe || (n[u] = r[u]);
        n.slashes === void 0 && (n.slashes = nt.test(r.href));
      }
      return n;
    }
    function $(r) {
      return r === "file:" || r === "ftp:" || r === "http:" || r === "https:" || r === "ws:" || r === "wss:";
    }
    function en(r, t) {
      r = Ce(r), r = r.replace(Ye, ""), t = t || {};
      var c = tt.exec(r), n = c[1] ? c[1].toLowerCase() : "", i = !!c[2], u = !!c[3], l = 0, T;
      return i ? u ? (T = c[2] + c[3] + c[4], l = c[2].length + c[3].length) : (T = c[2] + c[4], l = c[2].length) : u ? (T = c[3] + c[4], l = c[3].length) : T = c[4], n === "file:" ? l >= 2 && (T = T.slice(2)) : $(n) ? T = c[4] : n ? i && (T = T.slice(2)) : l >= 2 && $(t.protocol) && (T = c[4]), {
        protocol: n,
        slashes: i || $(n),
        slashesCount: l,
        rest: T
      };
    }
    function ot(r, t) {
      if (r === "")
        return t;
      for (var c = (t || "/").split("/").slice(0, -1).concat(r.split("/")), n = c.length, i = c[n - 1], u = !1, l = 0; n--; )
        c[n] === "." ? c.splice(n, 1) : c[n] === ".." ? (c.splice(n, 1), l++) : l && (n === 0 && (u = !0), c.splice(n, 1), l--);
      return u && c.unshift(""), (i === "." || i === "..") && c.push(""), c.join("/");
    }
    function N(r, t, c) {
      if (r = Ce(r), r = r.replace(Ye, ""), !(this instanceof N))
        return new N(r, t, c);
      var n, i, u, l, T, k, _ = Ee.slice(), S = typeof t, h = this, Me = 0;
      for (S !== "object" && S !== "string" && (c = t, t = null), c && typeof c != "function" && (c = ce.parse), t = Xe(t), i = en(r || "", t), n = !i.protocol && !i.slashes, h.slashes = i.slashes || n && t.slashes, h.protocol = i.protocol || t.protocol || "", r = i.rest, (i.protocol === "file:" && (i.slashesCount !== 2 || st.test(r)) || !i.slashes && (i.protocol || i.slashesCount < 2 || !$(h.protocol))) && (_[3] = [/(.*)/, "pathname"]); Me < _.length; Me++) {
        if (l = _[Me], typeof l == "function") {
          r = l(r, h);
          continue;
        }
        u = l[0], k = l[1], u !== u ? h[k] = r : typeof u == "string" ? (T = u === "@" ? r.lastIndexOf(u) : r.indexOf(u), ~T && (typeof l[2] == "number" ? (h[k] = r.slice(0, T), r = r.slice(T + l[2])) : (h[k] = r.slice(T), r = r.slice(0, T)))) : (T = u.exec(r)) && (h[k] = T[1], r = r.slice(0, T.index)), h[k] = h[k] || n && l[3] && t[k] || "", l[4] && (h[k] = h[k].toLowerCase());
      }
      c && (h.query = c(h.query)), n && t.slashes && h.pathname.charAt(0) !== "/" && (h.pathname !== "" || t.pathname !== "") && (h.pathname = ot(h.pathname, t.pathname)), h.pathname.charAt(0) !== "/" && $(h.protocol) && (h.pathname = "/" + h.pathname), p(h.port, h.protocol) || (h.host = h.hostname, h.port = ""), h.username = h.password = "", h.auth && (T = h.auth.indexOf(":"), ~T ? (h.username = h.auth.slice(0, T), h.username = encodeURIComponent(decodeURIComponent(h.username)), h.password = h.auth.slice(T + 1), h.password = encodeURIComponent(decodeURIComponent(h.password))) : h.username = encodeURIComponent(decodeURIComponent(h.auth)), h.auth = h.password ? h.username + ":" + h.password : h.username), h.origin = h.protocol !== "file:" && $(h.protocol) && h.host ? h.protocol + "//" + h.host : "null", h.href = h.toString();
    }
    function at(r, t, c) {
      var n = this;
      switch (r) {
        case "query":
          typeof t == "string" && t.length && (t = (c || ce.parse)(t)), n[r] = t;
          break;
        case "port":
          n[r] = t, p(t, n.protocol) ? t && (n.host = n.hostname + ":" + t) : (n.host = n.hostname, n[r] = "");
          break;
        case "hostname":
          n[r] = t, n.port && (t += ":" + n.port), n.host = t;
          break;
        case "host":
          n[r] = t, /:\d+$/.test(t) ? (t = t.split(":"), n.port = t.pop(), n.hostname = t.join(":")) : (n.hostname = t, n.port = "");
          break;
        case "protocol":
          n.protocol = t.toLowerCase(), n.slashes = !c;
          break;
        case "pathname":
        case "hash":
          if (t) {
            var i = r === "pathname" ? "/" : "#";
            n[r] = t.charAt(0) !== i ? i + t : t;
          } else
            n[r] = t;
          break;
        case "username":
        case "password":
          n[r] = encodeURIComponent(t);
          break;
        case "auth":
          var u = t.indexOf(":");
          ~u ? (n.username = t.slice(0, u), n.username = encodeURIComponent(decodeURIComponent(n.username)), n.password = t.slice(u + 1), n.password = encodeURIComponent(decodeURIComponent(n.password))) : n.username = encodeURIComponent(decodeURIComponent(t));
      }
      for (var l = 0; l < Ee.length; l++) {
        var T = Ee[l];
        T[4] && (n[T[1]] = n[T[1]].toLowerCase());
      }
      return n.auth = n.password ? n.username + ":" + n.password : n.username, n.origin = n.protocol !== "file:" && $(n.protocol) && n.host ? n.protocol + "//" + n.host : "null", n.href = n.toString(), n;
    }
    function it(r) {
      (!r || typeof r != "function") && (r = ce.stringify);
      var t, c = this, n = c.host, i = c.protocol;
      i && i.charAt(i.length - 1) !== ":" && (i += ":");
      var u = i + (c.protocol && c.slashes || $(c.protocol) ? "//" : "");
      return c.username ? (u += c.username, c.password && (u += ":" + c.password), u += "@") : c.password ? (u += ":" + c.password, u += "@") : c.protocol !== "file:" && $(c.protocol) && !n && c.pathname !== "/" && (u += "@"), n[n.length - 1] === ":" && (n += ":"), u += n + c.pathname, t = typeof c.query == "object" ? r(c.query) : c.query, t && (u += t.charAt(0) !== "?" ? "?" + t : t), c.hash && (u += c.hash), u;
    }
    N.prototype = { set: at, toString: it }, N.extractProtocol = en, N.location = Xe, N.trimLeft = Ce, N.qs = ce;
    var Se = N;
    function ee(r, t) {
      setTimeout(function(c) {
        return r.call(c);
      }, 4, t);
    }
    function de(r, t) {
      typeof Ae != "undefined" && Ae.env.NODE_ENV !== "test" && console[r].call(null, t);
    }
    function be(r, t) {
      r === void 0 && (r = []);
      var c = [];
      return r.forEach(function(n) {
        t(n) || c.push(n);
      }), c;
    }
    function ct(r, t) {
      r === void 0 && (r = []);
      var c = [];
      return r.forEach(function(n) {
        t(n) && c.push(n);
      }), c;
    }
    var K = function() {
      this.listeners = {};
    };
    K.prototype.addEventListener = function(t, c) {
      typeof c == "function" && (Array.isArray(this.listeners[t]) || (this.listeners[t] = []), ct(this.listeners[t], function(n) {
        return n === c;
      }).length === 0 && this.listeners[t].push(c));
    }, K.prototype.removeEventListener = function(t, c) {
      var n = this.listeners[t];
      this.listeners[t] = be(n, function(i) {
        return i === c;
      });
    }, K.prototype.dispatchEvent = function(t) {
      for (var c = this, n = [], i = arguments.length - 1; i-- > 0; )
        n[i] = arguments[i + 1];
      var u = t.type, l = this.listeners[u];
      return Array.isArray(l) ? (l.forEach(function(T) {
        n.length > 0 ? T.apply(c, n) : T.call(c, t);
      }), !0) : !1;
    };
    function G(r) {
      var t = r.indexOf("?");
      return t >= 0 ? r.slice(0, t) : r;
    }
    var D = function() {
      this.urlMap = {};
    };
    D.prototype.attachWebSocket = function(t, c) {
      var n = G(c), i = this.urlMap[n];
      if (i && i.server && i.websockets.indexOf(t) === -1)
        return i.websockets.push(t), i.server;
    }, D.prototype.addMembershipToRoom = function(t, c) {
      var n = this.urlMap[G(t.url)];
      n && n.server && n.websockets.indexOf(t) !== -1 && (n.roomMemberships[c] || (n.roomMemberships[c] = []), n.roomMemberships[c].push(t));
    }, D.prototype.attachServer = function(t, c) {
      var n = G(c), i = this.urlMap[n];
      if (!i)
        return this.urlMap[n] = {
          server: t,
          websockets: [],
          roomMemberships: {}
        }, t;
    }, D.prototype.serverLookup = function(t) {
      var c = G(t), n = this.urlMap[c];
      if (n)
        return n.server;
    }, D.prototype.websocketsLookup = function(t, c, n) {
      var i = G(t), u, l = this.urlMap[i];
      if (u = l ? l.websockets : [], c) {
        var T = l.roomMemberships[c];
        u = T || [];
      }
      return n ? u.filter(function(k) {
        return k !== n;
      }) : u;
    }, D.prototype.removeServer = function(t) {
      delete this.urlMap[G(t)];
    }, D.prototype.removeWebSocket = function(t, c) {
      var n = G(c), i = this.urlMap[n];
      i && (i.websockets = be(i.websockets, function(u) {
        return u === t;
      }));
    }, D.prototype.removeMembershipFromRoom = function(t, c) {
      var n = this.urlMap[G(t.url)], i = n.roomMemberships[c];
      n && i !== null && (n.roomMemberships[c] = be(i, function(u) {
        return u === t;
      }));
    };
    var P = new D(), x = {
      CLOSE_NORMAL: 1e3,
      CLOSE_GOING_AWAY: 1001,
      CLOSE_PROTOCOL_ERROR: 1002,
      CLOSE_UNSUPPORTED: 1003,
      CLOSE_NO_STATUS: 1005,
      CLOSE_ABNORMAL: 1006,
      UNSUPPORTED_DATA: 1007,
      POLICY_VIOLATION: 1008,
      CLOSE_TOO_LARGE: 1009,
      MISSING_EXTENSION: 1010,
      INTERNAL_ERROR: 1011,
      SERVICE_RESTART: 1012,
      TRY_AGAIN_LATER: 1013,
      TLS_HANDSHAKE: 1015
    }, b = {
      CONSTRUCTOR_ERROR: "Failed to construct 'WebSocket':",
      CLOSE_ERROR: "Failed to execute 'close' on 'WebSocket':",
      EVENT: {
        CONSTRUCT: "Failed to construct 'Event':",
        MESSAGE: "Failed to construct 'MessageEvent':",
        CLOSE: "Failed to construct 'CloseEvent':"
      }
    }, V = function() {
    };
    V.prototype.stopPropagation = function() {
    }, V.prototype.stopImmediatePropagation = function() {
    }, V.prototype.initEvent = function(t, c, n) {
      t === void 0 && (t = "undefined"), c === void 0 && (c = !1), n === void 0 && (n = !1), this.type = "" + t, this.bubbles = Boolean(c), this.cancelable = Boolean(n);
    };
    var dt = function(r) {
      function t(c, n) {
        if (n === void 0 && (n = {}), r.call(this), !c)
          throw new TypeError(b.EVENT_ERROR + " 1 argument required, but only 0 present.");
        if (typeof n != "object")
          throw new TypeError(b.EVENT_ERROR + " parameter 2 ('eventInitDict') is not an object.");
        var i = n.bubbles, u = n.cancelable;
        this.type = "" + c, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = u ? Boolean(u) : !1, this.cancelBubble = !1, this.bubbles = i ? Boolean(i) : !1;
      }
      return r && (t.__proto__ = r), t.prototype = Object.create(r && r.prototype), t.prototype.constructor = t, t;
    }(V), ut = function(r) {
      function t(c, n) {
        if (n === void 0 && (n = {}), r.call(this), !c)
          throw new TypeError(b.EVENT.MESSAGE + " 1 argument required, but only 0 present.");
        if (typeof n != "object")
          throw new TypeError(b.EVENT.MESSAGE + " parameter 2 ('eventInitDict') is not an object");
        var i = n.bubbles, u = n.cancelable, l = n.data, T = n.origin, k = n.lastEventId, _ = n.ports;
        this.type = "" + c, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = u ? Boolean(u) : !1, this.canncelBubble = !1, this.bubbles = i ? Boolean(i) : !1, this.origin = "" + T, this.ports = typeof _ == "undefined" ? null : _, this.data = typeof l == "undefined" ? null : l, this.lastEventId = "" + (k || "");
      }
      return r && (t.__proto__ = r), t.prototype = Object.create(r && r.prototype), t.prototype.constructor = t, t;
    }(V), pt = function(r) {
      function t(c, n) {
        if (n === void 0 && (n = {}), r.call(this), !c)
          throw new TypeError(b.EVENT.CLOSE + " 1 argument required, but only 0 present.");
        if (typeof n != "object")
          throw new TypeError(b.EVENT.CLOSE + " parameter 2 ('eventInitDict') is not an object");
        var i = n.bubbles, u = n.cancelable, l = n.code, T = n.reason, k = n.wasClean;
        this.type = "" + c, this.timeStamp = Date.now(), this.target = null, this.srcElement = null, this.returnValue = !0, this.isTrusted = !1, this.eventPhase = 0, this.defaultPrevented = !1, this.currentTarget = null, this.cancelable = u ? Boolean(u) : !1, this.cancelBubble = !1, this.bubbles = i ? Boolean(i) : !1, this.code = typeof l == "number" ? parseInt(l, 10) : 0, this.reason = "" + (T || ""), this.wasClean = k ? Boolean(k) : !1;
      }
      return r && (t.__proto__ = r), t.prototype = Object.create(r && r.prototype), t.prototype.constructor = t, t;
    }(V);
    function O(r) {
      var t = r.type, c = r.target, n = new dt(t);
      return c && (n.target = c, n.srcElement = c, n.currentTarget = c), n;
    }
    function ne(r) {
      var t = r.type, c = r.origin, n = r.data, i = r.target, u = new ut(t, {
        data: n,
        origin: c
      });
      return i && (u.target = i, u.srcElement = i, u.currentTarget = i), u;
    }
    function M(r) {
      var t = r.code, c = r.reason, n = r.type, i = r.target, u = r.wasClean;
      u || (u = t === x.CLOSE_NORMAL || t === x.CLOSE_NO_STATUS);
      var l = new pt(n, {
        code: t,
        reason: c,
        wasClean: u
      });
      return i && (l.target = i, l.srcElement = i, l.currentTarget = i), l;
    }
    function nn(r, t, c) {
      r.readyState = E.CLOSING;
      var n = P.serverLookup(r.url), i = M({
        type: "close",
        target: r.target,
        code: t,
        reason: c
      });
      ee(function() {
        P.removeWebSocket(r, r.url), r.readyState = E.CLOSED, r.dispatchEvent(i), n && n.dispatchEvent(i, n);
      }, r);
    }
    function lt(r, t, c) {
      r.readyState = E.CLOSING;
      var n = P.serverLookup(r.url), i = M({
        type: "close",
        target: r.target,
        code: t,
        reason: c,
        wasClean: !1
      }), u = O({
        type: "error",
        target: r.target
      });
      ee(function() {
        P.removeWebSocket(r, r.url), r.readyState = E.CLOSED, r.dispatchEvent(u), r.dispatchEvent(i), n && n.dispatchEvent(i, n);
      }, r);
    }
    function ue(r) {
      return Object.prototype.toString.call(r) !== "[object Blob]" && !(r instanceof ArrayBuffer) && (r = String(r)), r;
    }
    var Le = /* @__PURE__ */ new WeakMap();
    function tn(r) {
      if (Le.has(r))
        return Le.get(r);
      var t = new Proxy(r, {
        get: function(n, i) {
          if (i === "close")
            return function(T) {
              T === void 0 && (T = {});
              var k = T.code || x.CLOSE_NORMAL, _ = T.reason || "";
              nn(t, k, _);
            };
          if (i === "send")
            return function(T) {
              T = ue(T), r.dispatchEvent(
                ne({
                  type: "message",
                  data: T,
                  origin: this.url,
                  target: r
                })
              );
            };
          var u = function(l) {
            return l === "message" ? "server::" + l : l;
          };
          return i === "on" ? function(T, k) {
            r.addEventListener(u(T), k);
          } : i === "off" ? function(T, k) {
            r.removeEventListener(u(T), k);
          } : i === "target" ? r : n[i];
        }
      });
      return Le.set(r, t), t;
    }
    function mt(r) {
      var t = encodeURIComponent(r).match(/%[89ABab]/g);
      return r.length + (t ? t.length : 0);
    }
    function Tt(r) {
      var t = new Se(r), c = t.pathname, n = t.protocol, i = t.hash;
      if (!r)
        throw new TypeError(b.CONSTRUCTOR_ERROR + " 1 argument required, but only 0 present.");
      if (c || (t.pathname = "/"), n === "")
        throw new SyntaxError(b.CONSTRUCTOR_ERROR + " The URL '" + t.toString() + "' is invalid.");
      if (n !== "ws:" && n !== "wss:")
        throw new SyntaxError(
          b.CONSTRUCTOR_ERROR + " The URL's scheme must be either 'ws' or 'wss'. '" + n + "' is not allowed."
        );
      if (i !== "")
        throw new SyntaxError(
          b.CONSTRUCTOR_ERROR + " The URL contains a fragment identifier ('" + i + "'). Fragment identifiers are not allowed in WebSocket URLs."
        );
      return t.toString();
    }
    function ft(r) {
      if (r === void 0 && (r = []), !Array.isArray(r) && typeof r != "string")
        throw new SyntaxError(b.CONSTRUCTOR_ERROR + " The subprotocol '" + r.toString() + "' is invalid.");
      typeof r == "string" && (r = [r]);
      var t = r.map(function(n) {
        return { count: 1, protocol: n };
      }).reduce(function(n, i) {
        return n[i.protocol] = (n[i.protocol] || 0) + i.count, n;
      }, {}), c = Object.keys(t).filter(function(n) {
        return t[n] > 1;
      });
      if (c.length > 0)
        throw new SyntaxError(b.CONSTRUCTOR_ERROR + " The subprotocol '" + c[0] + "' is duplicated.");
      return r;
    }
    var E = function(r) {
      function t(n, i) {
        r.call(this), this._onopen = null, this._onmessage = null, this._onerror = null, this._onclose = null, this.url = Tt(n), i = ft(i), this.protocol = i[0] || "", this.binaryType = "blob", this.readyState = t.CONNECTING;
        var u = tn(this), l = P.attachWebSocket(u, this.url);
        ee(function() {
          if (this.readyState === t.CONNECTING)
            if (l)
              if (l.options.verifyClient && typeof l.options.verifyClient == "function" && !l.options.verifyClient())
                this.readyState = t.CLOSED, de(
                  "error",
                  "WebSocket connection to '" + this.url + "' failed: HTTP Authentication failed; no valid credentials available"
                ), P.removeWebSocket(u, this.url), this.dispatchEvent(O({ type: "error", target: this })), this.dispatchEvent(M({ type: "close", target: this, code: x.CLOSE_NORMAL }));
              else {
                if (l.options.selectProtocol && typeof l.options.selectProtocol == "function") {
                  var k = l.options.selectProtocol(i), _ = k !== "", S = i.indexOf(k) !== -1;
                  if (_ && !S) {
                    this.readyState = t.CLOSED, de("error", "WebSocket connection to '" + this.url + "' failed: Invalid Sub-Protocol"), P.removeWebSocket(u, this.url), this.dispatchEvent(O({ type: "error", target: this })), this.dispatchEvent(M({ type: "close", target: this, code: x.CLOSE_NORMAL }));
                    return;
                  }
                  this.protocol = k;
                }
                this.readyState = t.OPEN, this.dispatchEvent(O({ type: "open", target: this })), l.dispatchEvent(O({ type: "connection" }), u);
              }
            else
              this.readyState = t.CLOSED, this.dispatchEvent(O({ type: "error", target: this })), this.dispatchEvent(M({ type: "close", target: this, code: x.CLOSE_NORMAL })), de("error", "WebSocket connection to '" + this.url + "' failed");
        }, this);
      }
      r && (t.__proto__ = r), t.prototype = Object.create(r && r.prototype), t.prototype.constructor = t;
      var c = { onopen: {}, onmessage: {}, onclose: {}, onerror: {} };
      return c.onopen.get = function() {
        return this._onopen;
      }, c.onmessage.get = function() {
        return this._onmessage;
      }, c.onclose.get = function() {
        return this._onclose;
      }, c.onerror.get = function() {
        return this._onerror;
      }, c.onopen.set = function(n) {
        this.removeEventListener("open", this._onopen), this._onopen = n, this.addEventListener("open", n);
      }, c.onmessage.set = function(n) {
        this.removeEventListener("message", this._onmessage), this._onmessage = n, this.addEventListener("message", n);
      }, c.onclose.set = function(n) {
        this.removeEventListener("close", this._onclose), this._onclose = n, this.addEventListener("close", n);
      }, c.onerror.set = function(n) {
        this.removeEventListener("error", this._onerror), this._onerror = n, this.addEventListener("error", n);
      }, t.prototype.send = function(i) {
        var u = this;
        if (this.readyState === t.CONNECTING)
          throw new Error("Failed to execute 'send' on 'WebSocket': Still in CONNECTING state");
        var l = ne({
          type: "server::message",
          origin: this.url,
          data: ue(i)
        }), T = P.serverLookup(this.url);
        T && ee(function() {
          u.dispatchEvent(l, i);
        }, T);
      }, t.prototype.close = function(i, u) {
        if (i !== void 0 && (typeof i != "number" || i !== 1e3 && (i < 3e3 || i > 4999)))
          throw new TypeError(
            b.CLOSE_ERROR + " The code must be either 1000, or between 3000 and 4999. " + i + " is neither."
          );
        if (u !== void 0) {
          var l = mt(u);
          if (l > 123)
            throw new SyntaxError(b.CLOSE_ERROR + " The message must not be greater than 123 bytes.");
        }
        if (!(this.readyState === t.CLOSING || this.readyState === t.CLOSED)) {
          var T = tn(this);
          this.readyState === t.CONNECTING ? lt(T, i || x.CLOSE_ABNORMAL, u) : nn(T, i || x.CLOSE_NO_STATUS, u);
        }
      }, Object.defineProperties(t.prototype, c), t;
    }(K);
    E.CONNECTING = 0, E.prototype.CONNECTING = E.CONNECTING, E.OPEN = 1, E.prototype.OPEN = E.OPEN, E.CLOSING = 2, E.prototype.CLOSING = E.CLOSING, E.CLOSED = 3, E.prototype.CLOSED = E.CLOSED;
    var H = function(r) {
      function t(n, i) {
        var u = this;
        n === void 0 && (n = "socket.io"), i === void 0 && (i = ""), r.call(this), this.binaryType = "blob";
        var l = new Se(n);
        l.pathname || (l.pathname = "/"), this.url = l.toString(), this.readyState = t.CONNECTING, this.protocol = "", this.target = this, typeof i == "string" || typeof i == "object" && i !== null ? this.protocol = i : Array.isArray(i) && i.length > 0 && (this.protocol = i[0]);
        var T = P.attachWebSocket(this, this.url);
        ee(function() {
          T ? (this.readyState = t.OPEN, T.dispatchEvent(O({ type: "connection" }), T, this), T.dispatchEvent(O({ type: "connect" }), T, this), this.dispatchEvent(O({ type: "connect", target: this }))) : (this.readyState = t.CLOSED, this.dispatchEvent(O({ type: "error", target: this })), this.dispatchEvent(
            M({
              type: "close",
              target: this,
              code: x.CLOSE_NORMAL
            })
          ), de("error", "Socket.io connection to '" + this.url + "' failed"));
        }, this), this.addEventListener("close", function(k) {
          u.dispatchEvent(
            M({
              type: "disconnect",
              target: k.target,
              code: k.code
            })
          );
        });
      }
      r && (t.__proto__ = r), t.prototype = Object.create(r && r.prototype), t.prototype.constructor = t;
      var c = { broadcast: {} };
      return t.prototype.close = function() {
        if (this.readyState === t.OPEN) {
          var i = P.serverLookup(this.url);
          return P.removeWebSocket(this, this.url), this.readyState = t.CLOSED, this.dispatchEvent(
            M({
              type: "close",
              target: this,
              code: x.CLOSE_NORMAL
            })
          ), i && i.dispatchEvent(
            M({
              type: "disconnect",
              target: this,
              code: x.CLOSE_NORMAL
            }),
            i
          ), this;
        }
      }, t.prototype.disconnect = function() {
        return this.close();
      }, t.prototype.emit = function(i) {
        for (var u = [], l = arguments.length - 1; l-- > 0; )
          u[l] = arguments[l + 1];
        if (this.readyState !== t.OPEN)
          throw new Error("SocketIO is already in CLOSING or CLOSED state");
        var T = ne({
          type: i,
          origin: this.url,
          data: u
        }), k = P.serverLookup(this.url);
        return k && k.dispatchEvent.apply(k, [T].concat(u)), this;
      }, t.prototype.send = function(i) {
        return this.emit("message", i), this;
      }, c.broadcast.get = function() {
        if (this.readyState !== t.OPEN)
          throw new Error("SocketIO is already in CLOSING or CLOSED state");
        var n = this, i = P.serverLookup(this.url);
        if (!i)
          throw new Error("SocketIO can not find a server at the specified URL (" + this.url + ")");
        return {
          emit: function(l, T) {
            return i.emit(l, T, { websockets: P.websocketsLookup(n.url, null, n) }), n;
          },
          to: function(l) {
            return i.to(l, n);
          },
          in: function(l) {
            return i.in(l, n);
          }
        };
      }, t.prototype.on = function(i, u) {
        return this.addEventListener(i, u), this;
      }, t.prototype.off = function(i, u) {
        this.removeEventListener(i, u);
      }, t.prototype.hasListeners = function(i) {
        var u = this.listeners[i];
        return Array.isArray(u) ? !!u.length : !1;
      }, t.prototype.join = function(i) {
        P.addMembershipToRoom(this, i);
      }, t.prototype.leave = function(i) {
        P.removeMembershipFromRoom(this, i);
      }, t.prototype.to = function(i) {
        return this.broadcast.to(i);
      }, t.prototype.in = function() {
        return this.to.apply(null, arguments);
      }, t.prototype.dispatchEvent = function(i) {
        for (var u = this, l = [], T = arguments.length - 1; T-- > 0; )
          l[T] = arguments[T + 1];
        var k = i.type, _ = this.listeners[k];
        if (!Array.isArray(_))
          return !1;
        _.forEach(function(S) {
          l.length > 0 ? S.apply(u, l) : S.call(u, i.data ? i.data : i);
        });
      }, Object.defineProperties(t.prototype, c), t;
    }(K);
    H.CONNECTING = 0, H.OPEN = 1, H.CLOSING = 2, H.CLOSED = 3;
    var xe = function(t, c) {
      return new H(t, c);
    };
    xe.connect = function(t, c) {
      return xe(t, c);
    };
    var ht = function(r) {
      return r.reduce(function(t, c) {
        return t.indexOf(c) > -1 ? t : t.concat(c);
      }, []);
    };
    function sn() {
      return typeof window != "undefined" ? window : typeof Ae == "object" && typeof Ut == "function" && typeof re == "object" ? re : this;
    }
    var rn = {
      mock: !0,
      verifyClient: null,
      selectProtocol: null
    }, Oe = function(r) {
      function t(c, n) {
        n === void 0 && (n = rn), r.call(this);
        var i = new Se(c);
        i.pathname || (i.pathname = "/"), this.url = i.toString(), this.originalWebSocket = null;
        var u = P.attachServer(this, this.url);
        if (!u)
          throw this.dispatchEvent(O({ type: "error" })), new Error("A mock server is already listening on this url");
        this.options = Object.assign({}, rn, n), this.options.mock && this.mockWebsocket();
      }
      return r && (t.__proto__ = r), t.prototype = Object.create(r && r.prototype), t.prototype.constructor = t, t.prototype.mockWebsocket = function() {
        var n = sn();
        this.originalWebSocket = n.WebSocket, n.WebSocket = E;
      }, t.prototype.restoreWebsocket = function() {
        var n = sn();
        this.originalWebSocket !== null && (n.WebSocket = this.originalWebSocket), this.originalWebSocket = null;
      }, t.prototype.stop = function(n) {
        n === void 0 && (n = function() {
        }), this.options.mock && this.restoreWebsocket(), P.removeServer(this.url), typeof n == "function" && n();
      }, t.prototype.on = function(n, i) {
        this.addEventListener(n, i);
      }, t.prototype.off = function(n, i) {
        this.removeEventListener(n, i);
      }, t.prototype.close = function(n) {
        n === void 0 && (n = {});
        var i = n.code, u = n.reason, l = n.wasClean, T = P.websocketsLookup(this.url);
        P.removeServer(this.url), T.forEach(function(k) {
          k.readyState = E.CLOSED, k.dispatchEvent(
            M({
              type: "close",
              target: k.target,
              code: i || x.CLOSE_NORMAL,
              reason: u || "",
              wasClean: l
            })
          );
        }), this.dispatchEvent(M({ type: "close" }), this);
      }, t.prototype.emit = function(n, i, u) {
        var l = this;
        u === void 0 && (u = {});
        var T = u.websockets;
        T || (T = P.websocketsLookup(this.url));
        var k;
        typeof u != "object" || arguments.length > 3 ? (i = Array.prototype.slice.call(arguments, 1, arguments.length), k = i.map(function(_) {
          return ue(_);
        })) : k = ue(i), T.forEach(function(_) {
          var S = _ instanceof H ? i : k;
          Array.isArray(S) ? _.dispatchEvent.apply(
            _,
            [ne({
              type: n,
              data: S,
              origin: l.url,
              target: _.target
            })].concat(S)
          ) : _.dispatchEvent(
            ne({
              type: n,
              data: S,
              origin: l.url,
              target: _.target
            })
          );
        });
      }, t.prototype.clients = function() {
        return P.websocketsLookup(this.url);
      }, t.prototype.to = function(n, i, u) {
        var l = this;
        u === void 0 && (u = []);
        var T = this, k = ht(u.concat(P.websocketsLookup(this.url, n, i)));
        return {
          to: function(_, S) {
            return l.to.call(l, _, S, k);
          },
          emit: function(S, h) {
            T.emit(S, h, { websockets: k });
          }
        };
      }, t.prototype.in = function() {
        for (var n = [], i = arguments.length; i--; )
          n[i] = arguments[i];
        return this.to.apply(null, n);
      }, t.prototype.simulate = function(n) {
        var i = P.websocketsLookup(this.url);
        n === "error" && i.forEach(function(u) {
          u.readyState = E.CLOSED, u.dispatchEvent(O({ type: "error", target: u.target }));
        });
      }, t;
    }(K);
    Oe.of = function(t) {
      return new Oe(t);
    };
    var kt = Oe, gt = E, yt = xe;
    a.Server = kt, a.WebSocket = gt, a.SocketIO = yt, Object.defineProperty(a, "__esModule", { value: !0 });
  });
})(Bt, oe);
var Ge = {}, Gt = {
  get exports() {
    return Ge;
  },
  set exports(e) {
    Ge = e;
  }
}, z = typeof Reflect == "object" ? Reflect : null, mn = z && typeof z.apply == "function" ? z.apply : function(e, s, a) {
  return Function.prototype.apply.call(e, s, a);
}, Te;
z && typeof z.ownKeys == "function" ? Te = z.ownKeys : Object.getOwnPropertySymbols ? Te = function(e) {
  return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
} : Te = function(e) {
  return Object.getOwnPropertyNames(e);
};
function jt(e) {
  console && console.warn && console.warn(e);
}
var qn = Number.isNaN || function(e) {
  return e !== e;
};
function R() {
  R.init.call(this);
}
Gt.exports = R;
Ge.once = Vt;
R.EventEmitter = R;
R.prototype._events = void 0;
R.prototype._eventsCount = 0;
R.prototype._maxListeners = void 0;
var Tn = 10;
function _e(e) {
  if (typeof e != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e);
}
Object.defineProperty(R, "defaultMaxListeners", {
  enumerable: !0,
  get: function() {
    return Tn;
  },
  set: function(e) {
    if (typeof e != "number" || e < 0 || qn(e))
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + ".");
    Tn = e;
  }
});
R.init = function() {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
};
R.prototype.setMaxListeners = function(e) {
  if (typeof e != "number" || e < 0 || qn(e))
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
  return this._maxListeners = e, this;
};
function $n(e) {
  return e._maxListeners === void 0 ? R.defaultMaxListeners : e._maxListeners;
}
R.prototype.getMaxListeners = function() {
  return $n(this);
};
R.prototype.emit = function(e) {
  for (var s = [], a = 1; a < arguments.length; a++)
    s.push(arguments[a]);
  var d = e === "error", p = this._events;
  if (p !== void 0)
    d = d && p.error === void 0;
  else if (!d)
    return !1;
  if (d) {
    var m;
    if (s.length > 0 && (m = s[0]), m instanceof Error)
      throw m;
    var f = new Error("Unhandled error." + (m ? " (" + m.message + ")" : ""));
    throw f.context = m, f;
  }
  var g = p[e];
  if (g === void 0)
    return !1;
  if (typeof g == "function")
    mn(g, this, s);
  else
    for (var w = g.length, L = Un(g, w), a = 0; a < w; ++a)
      mn(L[a], this, s);
  return !0;
};
function Nn(e, s, a, d) {
  var p, m, f;
  if (_e(a), m = e._events, m === void 0 ? (m = e._events = /* @__PURE__ */ Object.create(null), e._eventsCount = 0) : (m.newListener !== void 0 && (e.emit(
    "newListener",
    s,
    a.listener ? a.listener : a
  ), m = e._events), f = m[s]), f === void 0)
    f = m[s] = a, ++e._eventsCount;
  else if (typeof f == "function" ? f = m[s] = d ? [a, f] : [f, a] : d ? f.unshift(a) : f.push(a), p = $n(e), p > 0 && f.length > p && !f.warned) {
    f.warned = !0;
    var g = new Error("Possible EventEmitter memory leak detected. " + f.length + " " + String(s) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    g.name = "MaxListenersExceededWarning", g.emitter = e, g.type = s, g.count = f.length, jt(g);
  }
  return e;
}
R.prototype.addListener = function(e, s) {
  return Nn(this, e, s, !1);
};
R.prototype.on = R.prototype.addListener;
R.prototype.prependListener = function(e, s) {
  return Nn(this, e, s, !0);
};
function Wt() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function An(e, s, a) {
  var d = { fired: !1, wrapFn: void 0, target: e, type: s, listener: a }, p = Wt.bind(d);
  return p.listener = a, d.wrapFn = p, p;
}
R.prototype.once = function(e, s) {
  return _e(s), this.on(e, An(this, e, s)), this;
};
R.prototype.prependOnceListener = function(e, s) {
  return _e(s), this.prependListener(e, An(this, e, s)), this;
};
R.prototype.removeListener = function(e, s) {
  var a, d, p, m, f;
  if (_e(s), d = this._events, d === void 0)
    return this;
  if (a = d[e], a === void 0)
    return this;
  if (a === s || a.listener === s)
    --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete d[e], d.removeListener && this.emit("removeListener", e, a.listener || s));
  else if (typeof a != "function") {
    for (p = -1, m = a.length - 1; m >= 0; m--)
      if (a[m] === s || a[m].listener === s) {
        f = a[m].listener, p = m;
        break;
      }
    if (p < 0)
      return this;
    p === 0 ? a.shift() : Ft(a, p), a.length === 1 && (d[e] = a[0]), d.removeListener !== void 0 && this.emit("removeListener", e, f || s);
  }
  return this;
};
R.prototype.off = R.prototype.removeListener;
R.prototype.removeAllListeners = function(e) {
  var s, a, d;
  if (a = this._events, a === void 0)
    return this;
  if (a.removeListener === void 0)
    return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : a[e] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete a[e]), this;
  if (arguments.length === 0) {
    var p = Object.keys(a), m;
    for (d = 0; d < p.length; ++d)
      m = p[d], m !== "removeListener" && this.removeAllListeners(m);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (s = a[e], typeof s == "function")
    this.removeListener(e, s);
  else if (s !== void 0)
    for (d = s.length - 1; d >= 0; d--)
      this.removeListener(e, s[d]);
  return this;
};
function In(e, s, a) {
  var d = e._events;
  if (d === void 0)
    return [];
  var p = d[s];
  return p === void 0 ? [] : typeof p == "function" ? a ? [p.listener || p] : [p] : a ? Kt(p) : Un(p, p.length);
}
R.prototype.listeners = function(e) {
  return In(this, e, !0);
};
R.prototype.rawListeners = function(e) {
  return In(this, e, !1);
};
R.listenerCount = function(e, s) {
  return typeof e.listenerCount == "function" ? e.listenerCount(s) : Dn.call(e, s);
};
R.prototype.listenerCount = Dn;
function Dn(e) {
  var s = this._events;
  if (s !== void 0) {
    var a = s[e];
    if (typeof a == "function")
      return 1;
    if (a !== void 0)
      return a.length;
  }
  return 0;
}
R.prototype.eventNames = function() {
  return this._eventsCount > 0 ? Te(this._events) : [];
};
function Un(e, s) {
  for (var a = new Array(s), d = 0; d < s; ++d)
    a[d] = e[d];
  return a;
}
function Ft(e, s) {
  for (; s + 1 < e.length; s++)
    e[s] = e[s + 1];
  e.pop();
}
function Kt(e) {
  for (var s = new Array(e.length), a = 0; a < s.length; ++a)
    s[a] = e[a].listener || e[a];
  return s;
}
function Vt(e, s) {
  return new Promise(function(a, d) {
    function p(f) {
      e.removeListener(s, m), d(f);
    }
    function m() {
      typeof e.removeListener == "function" && e.removeListener("error", p), a([].slice.call(arguments));
    }
    Bn(e, s, m, { once: !0 }), s !== "error" && Ht(e, p, { once: !0 });
  });
}
function Ht(e, s, a) {
  typeof e.on == "function" && Bn(e, "error", s, a);
}
function Bn(e, s, a, d) {
  if (typeof e.on == "function")
    d.once ? e.once(s, a) : e.on(s, a);
  else if (typeof e.addEventListener == "function")
    e.addEventListener(s, function p(m) {
      d.once && e.removeEventListener(s, p), a(m);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof e);
}
class Jt extends o {
  constructor() {
    super("message.v1.SocketMessage", [
      {
        no: 1,
        name: "event",
        kind: "scalar",
        T: 13
        /*ScalarType.UINT32*/
      },
      {
        no: 2,
        name: "id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "payload",
        kind: "scalar",
        opt: !0,
        T: 12
        /*ScalarType.BYTES*/
      },
      {
        no: 4,
        name: "metadata",
        kind: "scalar",
        opt: !0,
        T: 12
        /*ScalarType.BYTES*/
      }
    ]);
  }
}
const fn = new Jt();
var he;
(function(e) {
  e[e.PUBLISHER = 0] = "PUBLISHER", e[e.SUBSCRIBER = 1] = "SUBSCRIBER";
})(he || (he = {}));
var je;
(function(e) {
  e[e.AUDIO = 0] = "AUDIO", e[e.VIDEO = 1] = "VIDEO";
})(je || (je = {}));
class Zt extends o {
  constructor() {
    super("media.Codec", [
      {
        no: 1,
        name: "channels",
        kind: "scalar",
        opt: !0,
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 2,
        name: "clock_rate",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "mime_type",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "sdp_fmtp_line",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "payload_type",
        kind: "scalar",
        opt: !0,
        T: 13
        /*ScalarType.UINT32*/
      }
    ]);
  }
}
const Gn = new Zt();
class zt extends o {
  constructor() {
    super("media.HeaderExtension", [
      {
        no: 1,
        name: "direction",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "uri",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Yt = new zt();
class Qt extends o {
  constructor() {
    super("media.Fingerprint", [
      {
        no: 1,
        name: "algorithm",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "value",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Qt();
class Xt extends o {
  constructor() {
    super("media.SessionDescription", [
      { no: 1, name: "target", kind: "enum", T: () => ["media.Target", he] },
      {
        no: 2,
        name: "type",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "sdp",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const q = new Xt();
class es extends o {
  constructor() {
    super("media.ProducerPayload", [
      {
        no: 1,
        name: "kind",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "paused",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "screen_share",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 4,
        name: "msid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "app_data",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "mime_type",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const ns = new es();
class ts extends o {
  constructor() {
    super("media.CreateTransportRequest", [
      {
        no: 1,
        name: "consuming",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "force_tcp",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 3, name: "description", kind: "message", T: () => q },
      {
        no: 4,
        name: "private_ice",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 5, name: "producers", kind: "message", repeat: 1, T: () => ns }
    ]);
  }
}
new ts();
class ss extends o {
  constructor() {
    super("media.AudioActivityRequest", [
      {
        no: 1,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "energy",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "silent",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new ss();
class rs extends o {
  constructor() {
    super("media.CreateTransportResponse", [
      {
        no: 1,
        name: "transport_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "description", kind: "message", T: () => q },
      {
        no: 3,
        name: "transcription_enabled",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 4,
        name: "producer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const jn = new rs();
class os extends o {
  constructor() {
    super("media.RenegotiateRequest", [
      {
        no: 1,
        name: "transport_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "description", kind: "message", T: () => q }
    ]);
  }
}
new os();
class as extends o {
  constructor() {
    super("media.RenegotiateResponse", [
      {
        no: 1,
        name: "transport_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "description", kind: "message", T: () => q }
    ]);
  }
}
new as();
class is extends o {
  constructor() {
    super("media.NestedScore", [
      {
        no: 1,
        name: "encoding_idx",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 2,
        name: "rid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "score",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 4,
        name: "ssrc",
        kind: "scalar",
        T: 3,
        L: 0
        /*LongType.BIGINT*/
      }
    ]);
  }
}
const cs = new is();
class ds extends o {
  constructor() {
    super("media.ProducerTrack", [
      {
        no: 1,
        name: "track_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "stream_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const us = new ds();
class ps extends o {
  constructor() {
    super("media.ProducerEntry", [
      {
        no: 1,
        name: "producing_transport_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new ps();
class ls extends o {
  constructor() {
    super("media.ConsumerEntry", [
      {
        no: 1,
        name: "consuming_transport_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "consumer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new ls();
class ms extends o {
  constructor() {
    super("media.ProducerState", [
      {
        no: 1,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "kind", kind: "enum", T: () => ["media.ProducerKind", je] },
      {
        no: 3,
        name: "pause",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 4,
        name: "screen_share",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 5,
        name: "app_data",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "producing_transport_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 7,
        name: "mime_type",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 8, name: "codec", kind: "message", T: () => Gn }
    ]);
  }
}
const ie = new ms();
class Ts extends o {
  constructor() {
    super("media.ConsumerState", [
      {
        no: 1,
        name: "consumer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "producer_state", kind: "message", T: () => ie },
      { no: 3, name: "producer_track", kind: "message", T: () => us },
      {
        no: 4,
        name: "error_code",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const fs = new Ts();
class hs extends o {
  constructor() {
    super("media.ProducerIdToConsumerMap", [
      { no: 1, name: "map", kind: "map", K: 9, V: { kind: "message", T: () => fs } }
    ]);
  }
}
const Wn = new hs();
class ks extends o {
  constructor() {
    super("media.PeerRtpCapabilitites", [
      { no: 1, name: "sender", kind: "message", T: () => kn },
      { no: 2, name: "receiver", kind: "message", T: () => kn }
    ]);
  }
}
const Fn = new ks();
class gs extends o {
  constructor() {
    super("media.RtpCapability", [
      { no: 1, name: "codecs", kind: "message", repeat: 1, T: () => Gn },
      { no: 2, name: "header_extensions", kind: "message", repeat: 1, T: () => Yt }
    ]);
  }
}
const hn = new gs();
class ys extends o {
  constructor() {
    super("media.RtpCapabilitites", [
      { no: 1, name: "audio", kind: "message", T: () => hn },
      { no: 2, name: "video", kind: "message", T: () => hn }
    ]);
  }
}
const kn = new ys();
class vs extends o {
  constructor() {
    super("media.PreferredCodec", [
      {
        no: 1,
        name: "audio",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "video",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Rs = new vs();
class _s extends o {
  constructor() {
    super("media.Simulcast", [
      {
        no: 1,
        name: "preferred_rid",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "priority_ordering",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "rid_not_available",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Kn = new _s();
class ws extends o {
  constructor() {
    super("media.edge.GeoLocation", [
      {
        no: 1,
        name: "latitude",
        kind: "scalar",
        T: 2
        /*ScalarType.FLOAT*/
      },
      {
        no: 2,
        name: "longitude",
        kind: "scalar",
        T: 2
        /*ScalarType.FLOAT*/
      },
      {
        no: 3,
        name: "region",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Ps = new ws();
class Cs extends o {
  constructor() {
    super("media.edge.PeerJoinRequest", [
      {
        no: 1,
        name: "display_name",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "prejoined",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "room_uuid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "meeting_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "preset",
        kind: "scalar",
        opt: !0,
        T: 12
        /*ScalarType.BYTES*/
      },
      {
        no: 6,
        name: "user_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 7,
        name: "organization_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 8, name: "location", kind: "message", T: () => Ps },
      { no: 9, name: "capabilities", kind: "message", T: () => Fn }
    ]);
  }
}
new Cs();
class Es extends o {
  constructor() {
    super("media.edge.PeerJoinCompleteRequest", []);
  }
}
new Es();
class Ss extends o {
  constructor() {
    super("media.edge.PeerLeaveRequest", [
      {
        no: 1,
        name: "close_room",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Ss();
class bs extends o {
  constructor() {
    super("media.edge.ConsumeMultipleProducerRequest", [
      {
        no: 1,
        name: "producer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "paused",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new bs();
class Ls extends o {
  constructor() {
    super("media.edge.ConsumePeerRequest", [
      {
        no: 1,
        name: "producing_peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "paused",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "producer_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 4, name: "preferred_codec", kind: "message", T: () => Rs },
      {
        no: 5,
        name: "producing_transport_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 6, name: "simulcast", kind: "message", T: () => Kn }
    ]);
  }
}
const xs = new Ls();
class Os extends o {
  constructor() {
    super("media.edge.ConsumePeersRequest", [
      { no: 1, name: "requests", kind: "message", repeat: 1, T: () => xs },
      {
        no: 2,
        name: "consuming_transport_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Os();
class Ms extends o {
  constructor() {
    super("media.edge.UpdateConsumerSimulcastConfigRequest", [
      {
        no: 1,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "simulcast", kind: "message", T: () => Kn },
      {
        no: 3,
        name: "producing_transport_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "mid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const qs = new Ms();
class $s extends o {
  constructor() {
    super("media.edge.UpdateConsumersSimulcastConfigRequest", [
      { no: 1, name: "requests", kind: "message", repeat: 1, T: () => qs },
      {
        no: 2,
        name: "consuming_transport_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new $s();
class Ns extends o {
  constructor() {
    super("media.edge.ProducerCreateRequest", [
      {
        no: 1,
        name: "kind",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "paused",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "screen_share",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 4, name: "description", kind: "message", T: () => q },
      {
        no: 5,
        name: "msid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "app_data",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 7,
        name: "mime_type",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 8,
        name: "producing_transport_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ns();
class As extends o {
  constructor() {
    super("media.edge.SelectedPeersRequest", []);
  }
}
new As();
class Is extends o {
  constructor() {
    super("media.edge.GlobalPeerPinningRequest", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Is();
class Ds extends o {
  constructor() {
    super("media.edge.ProducerToggleRequest", [
      {
        no: 1,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "pause",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Ds();
class Us extends o {
  constructor() {
    super("media.edge.ConsumerToggleRequest", [
      {
        no: 1,
        name: "consumer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "pause",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Us();
class Bs extends o {
  constructor() {
    super("media.edge.ProducerCloseRequest", [
      {
        no: 1,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "description", kind: "message", T: () => q },
      {
        no: 3,
        name: "producing_transport_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Bs();
class Gs extends o {
  constructor() {
    super("media.edge.ConsumerCloseRequest", [
      {
        no: 1,
        name: "consumer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "description", kind: "message", T: () => q },
      {
        no: 3,
        name: "consuming_transport_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Gs();
class js extends o {
  constructor() {
    super("media.edge.KickPeerRequest", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new js();
class Ws extends o {
  constructor() {
    super("media.edge.KickAllPeersRequest", [
      {
        no: 1,
        name: "propagate_kick_across_rooms",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Ws();
class Fs extends o {
  constructor() {
    super("media.edge.PeerDisplayNameEditRequest", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Fs();
class Ks extends o {
  constructor() {
    super("media.edge.HostMediaControlForPeerRequest", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "audio",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "video",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 4,
        name: "scree_share",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Ks();
class Vs extends o {
  constructor() {
    super("media.edge.HostMediaControlForAllPeerRequest", [
      {
        no: 1,
        name: "audio",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "video",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "screen_share",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Vs();
class Hs extends o {
  constructor() {
    super("media.edge.GetRoomStateResponse", [
      {
        no: 1,
        name: "display_title",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "locked_mode",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "room_uuid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "room_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "current_peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "is_recording",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 7,
        name: "recorder_participant_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 8,
        name: "pinned_peer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Js = new Hs();
class Zs extends o {
  constructor() {
    super("media.edge.ErrorResponse", [
      {
        no: 1,
        name: "error_message",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "event_id",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      }
    ]);
  }
}
new Zs();
class zs extends o {
  constructor() {
    super("media.edge.EmptyResponse", []);
  }
}
new zs();
class Ys extends o {
  constructor() {
    super("media.edge.RoomParticipants", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "producer_states", kind: "message", repeat: 1, T: () => ie },
      {
        no: 3,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "user_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 5, name: "capabilities", kind: "message", T: () => Fn }
    ]);
  }
}
const Vn = new Ys();
class Qs extends o {
  constructor() {
    super("media.edge.SelectedPeersResponse", [
      {
        no: 1,
        name: "audio_peers",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "compulsory_peers",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Xs = new Qs();
class er extends o {
  constructor() {
    super("media.edge.SelectedPeersDiffEntry", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "priority",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      }
    ]);
  }
}
const nr = new er();
class tr extends o {
  constructor() {
    super("media.edge.SelectedPeersDiffResponse", [
      { no: 1, name: "entries", kind: "message", repeat: 1, T: () => nr }
    ]);
  }
}
new tr();
class sr extends o {
  constructor() {
    super("media.edge.PeerJoinResponse", []);
  }
}
new sr();
class rr extends o {
  constructor() {
    super("media.edge.PeerJoinCompleteResponse", [
      { no: 1, name: "room_state", kind: "message", T: () => Js },
      { no: 2, name: "participants", kind: "message", repeat: 1, T: () => Vn },
      { no: 3, name: "selected_peers", kind: "message", T: () => Xs },
      {
        no: 4,
        name: "max_preferred_streams",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      }
    ]);
  }
}
const or = new rr();
class ar extends o {
  constructor() {
    super("media.edge.PeerLeaveResponse", [
      {
        no: 1,
        name: "closed",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new ar();
class ir extends o {
  constructor() {
    super("media.edge.ConsumeMultipleProducerResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 2, name: "consumer_ids_map", kind: "message", T: () => Wn }
    ]);
  }
}
new ir();
class cr extends o {
  constructor() {
    super("media.edge.ConsumePeerResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 2, name: "consumer_ids_map", kind: "message", T: () => Wn },
      { no: 3, name: "description", kind: "message", T: () => q }
    ]);
  }
}
new cr();
class dr extends o {
  constructor() {
    super("media.edge.ProducerCreateResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "producer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 4, name: "description", kind: "message", T: () => q }
    ]);
  }
}
const ur = new dr();
class pr extends o {
  constructor() {
    super("media.edge.ProducerScoreResponse", [
      {
        no: 1,
        name: "responseid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "score", kind: "message", T: () => cs }
    ]);
  }
}
new pr();
class lr extends o {
  constructor() {
    super("media.edge.ActiveSpeakerResponse", [
      {
        no: 1,
        name: "responsepeer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "volume",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      }
    ]);
  }
}
new lr();
class mr extends o {
  constructor() {
    super("media.edge.NoActiveSpeakerResponse", []);
  }
}
new mr();
class Tr extends o {
  constructor() {
    super("media.edge.ProducerToggleResponse", []);
  }
}
new Tr();
class fr extends o {
  constructor() {
    super("media.edge.ConsumerToggleResponse", []);
  }
}
new fr();
class hr extends o {
  constructor() {
    super("media.edge.ProducerClosingResponse", [
      { no: 1, name: "description", kind: "message", T: () => q }
    ]);
  }
}
new hr();
class kr extends o {
  constructor() {
    super("media.edge.ConsumerClosingResponse", [
      { no: 1, name: "description", kind: "message", T: () => q }
    ]);
  }
}
new kr();
class gr extends o {
  constructor() {
    super("media.edge.GlobalPeerPinningResponse", []);
  }
}
new gr();
class yr extends o {
  constructor() {
    super("media.edge.KickPeerResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new yr();
class vr extends o {
  constructor() {
    super("media.edge.KickAllPeersResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new vr();
class Rr extends o {
  constructor() {
    super("media.edge.HostMediaControlForPeerResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Rr();
class _r extends o {
  constructor() {
    super("media.edge.HostMediaControlForAllPeerResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new _r();
class wr extends o {
  constructor() {
    super("media.edge.PeerDisplayNameEditResponse", [
      {
        no: 1,
        name: "status",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new wr();
class Pr extends o {
  constructor() {
    super("media.edge.PeerJoinBroadcastResponse", [
      { no: 1, name: "participant", kind: "message", T: () => Vn }
    ]);
  }
}
new Pr();
class Cr extends o {
  constructor() {
    super("media.edge.TrackSubscriptionKind", [
      {
        no: 1,
        name: "audio",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "video",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const gn = new Cr();
class Er extends o {
  constructor() {
    super("media.edge.TrackSubscription", [
      {
        no: 1,
        name: "label",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "webcam", kind: "message", T: () => gn },
      { no: 3, name: "screenshare", kind: "message", T: () => gn }
    ]);
  }
}
const Sr = new Er();
class br extends o {
  constructor() {
    super("media.edge.PeerProducingTransportCreateBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "transport_details", kind: "message", T: () => jn },
      { no: 3, name: "track_subscriptions", kind: "message", repeat: 1, T: () => Sr }
    ]);
  }
}
new br();
class Lr extends o {
  constructor() {
    super("media.edge.PeerProducerCreateBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "producer_state", kind: "message", T: () => ie }
    ]);
  }
}
new Lr();
class xr extends o {
  constructor() {
    super("media.edge.PeerProducerToggleBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "producer_state", kind: "message", T: () => ie },
      {
        no: 3,
        name: "initiator_participant_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new xr();
class Or extends o {
  constructor() {
    super("media.edge.PeerProducerCloseBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "producer_state", kind: "message", T: () => ie }
    ]);
  }
}
new Or();
class Mr extends o {
  constructor() {
    super("media.edge.PeerLeaveBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Mr();
class qr extends o {
  constructor() {
    super("media.edge.GlobalPeerPinningBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new qr();
class $r extends o {
  constructor() {
    super("media.edge.GlobalPeerUnPinningBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new $r();
class Nr extends o {
  constructor() {
    super("media.edge.RecordingStartedBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Nr();
class Ar extends o {
  constructor() {
    super("media.edge.RecordingStoppedBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ar();
class Ir extends o {
  constructor() {
    super("media.edge.PeerDisplayNameEditBroadcastResponse", [
      {
        no: 1,
        name: "participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ir();
class Dr extends o {
  constructor() {
    super("media.edge.PeerPingRequestBroadcastResponse", [
      {
        no: 1,
        name: "password",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Dr();
class Ur extends o {
  constructor() {
    super("media.edge.MediaRoomTerminationBroadcastResponse", [
      {
        no: 1,
        name: "reason",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ur();
class Br extends o {
  constructor() {
    super("socket.ai.MeetingTranscript", [
      {
        no: 1,
        name: "meeting_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "transcript",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "is_partial",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Br();
class Gr extends o {
  constructor() {
    super("socket.api.BaseSocketHubMessage", [
      {
        no: 1,
        name: "event",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 2,
        name: "id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "room_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "payload",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      },
      {
        no: 7,
        name: "error",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 8,
        name: "sid",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Gr();
class jr extends o {
  constructor() {
    super("socket.api.ErrorMessage", [
      {
        no: 1,
        name: "code",
        kind: "scalar",
        opt: !0,
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 2,
        name: "message",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new jr();
var ke;
(function(e) {
  e[e.BROWSER = 0] = "BROWSER", e[e.TRACK = 1] = "TRACK", e[e.COMPOSITE = 2] = "COMPOSITE";
})(ke || (ke = {}));
var ae;
(function(e) {
  e[e.UNSPECIFIED = 0] = "UNSPECIFIED", e[e.ON_STAGE = 1] = "ON_STAGE", e[e.APPROVED_STAGE = 2] = "APPROVED_STAGE", e[e.REQUESTED_STAGE = 3] = "REQUESTED_STAGE", e[e.OFF_STAGE = 4] = "OFF_STAGE";
})(ae || (ae = {}));
var We;
(function(e) {
  e[e.NONE = 0] = "NONE", e[e.RECORDER = 1] = "RECORDER", e[e.LIVESTREAMER = 2] = "LIVESTREAMER";
})(We || (We = {}));
var Fe;
(function(e) {
  e[e.PEERS = 0] = "PEERS", e[e.ROOMS = 1] = "ROOMS";
})(Fe || (Fe = {}));
var Ke;
(function(e) {
  e[e.HIVE = 0] = "HIVE", e[e.CHAT = 1] = "CHAT", e[e.PING = 2] = "PING";
})(Ke || (Ke = {}));
class Wr extends o {
  constructor() {
    super("socket.room.PeerFlags", [
      {
        no: 1,
        name: "preset_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "recorder_type",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "hidden_participant",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const Fr = new Wr();
class Kr extends o {
  constructor() {
    super("socket.room.Peer", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 4, name: "stage_type", kind: "enum", opt: !0, T: () => ["socket.room.StageType", ae, "STAGE_TYPE_"] },
      {
        no: 5,
        name: "custom_participant_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "preset_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 7,
        name: "display_picture_url",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 8,
        name: "waitlisted",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 9, name: "flags", kind: "message", T: () => Fr }
    ]);
  }
}
const we = new Kr();
class Vr extends o {
  constructor() {
    super("socket.room.PeerInfoResponse", [
      { no: 1, name: "peer", kind: "message", T: () => we }
    ]);
  }
}
const yn = new Vr();
class Hr extends o {
  constructor() {
    super("socket.room.PeerStatusUpdate", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "stage_type", kind: "enum", opt: !0, T: () => ["socket.room.StageType", ae, "STAGE_TYPE_"] }
    ]);
  }
}
new Hr();
class Jr extends o {
  constructor() {
    super("socket.room.RoomPeersInfoRequest", [
      {
        no: 1,
        name: "seach_query",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "limit",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "offset",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      }
    ]);
  }
}
new Jr();
class Zr extends o {
  constructor() {
    super("socket.room.RoomPeersInfoResponse", [
      { no: 1, name: "peers", kind: "message", repeat: 1, T: () => we }
    ]);
  }
}
const zr = new Zr();
class Yr extends o {
  constructor() {
    super("socket.room.RoomPeerCountResponse", [
      {
        no: 1,
        name: "count",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      }
    ]);
  }
}
new Yr();
class Qr extends o {
  constructor() {
    super("socket.room.Room", [
      {
        no: 1,
        name: "room_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "title",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "created_at",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      },
      { no: 5, name: "active_recordings", kind: "message", repeat: 1, T: () => eo },
      {
        no: 6,
        name: "room_uuid",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Hn = new Qr();
class Xr extends o {
  constructor() {
    super("socket.room.ActiveRecording", [
      {
        no: 1,
        name: "recording_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "recording_type", kind: "enum", T: () => ["common.RecordingType", ke] },
      {
        no: 3,
        name: "recording_status",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const eo = new Xr();
class no extends o {
  constructor() {
    super("socket.room.RoomInfoResponse", [
      { no: 1, name: "room", kind: "message", T: () => Hn }
    ]);
  }
}
const to = new no();
class so extends o {
  constructor() {
    super("socket.room.GetPeerInfoRequest", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new so();
class ro extends o {
  constructor() {
    super("socket.room.UpdatePeerInfoRequest", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "display_name",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new ro();
class oo extends o {
  constructor() {
    super("socket.room.JoinRoomRequest", [
      { no: 1, name: "peer", kind: "message", T: () => we },
      {
        no: 3,
        name: "room_uuid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "organization_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "use_hive",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 6,
        name: "preset",
        kind: "scalar",
        opt: !0,
        T: 12
        /*ScalarType.BYTES*/
      },
      { no: 7, name: "capabilities", kind: "enum", repeat: 1, T: () => ["socket.room.Capabilities", Ke, "CAPABILITIES_"] },
      {
        no: 8,
        name: "timestamp",
        kind: "scalar",
        opt: !0,
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      }
    ]);
  }
}
new oo();
class ao extends o {
  constructor() {
    super("socket.room.LeaveRoomRequest", [
      { no: 1, name: "peer", kind: "message", T: () => we },
      {
        no: 2,
        name: "timestamp",
        kind: "scalar",
        opt: !0,
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      }
    ]);
  }
}
new ao();
class io extends o {
  constructor() {
    super("socket.room.UpdateRoomInfoRequest", [
      { no: 1, name: "room", kind: "message", T: () => Hn }
    ]);
  }
}
new io();
class co extends o {
  constructor() {
    super("socket.room.GetConnectedRoomsDumpRequest", []);
  }
}
new co();
class uo extends o {
  constructor() {
    super("socket.room.ServiceError", [
      {
        no: 1,
        name: "message",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "code",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Je = new uo();
class po extends o {
  constructor() {
    super("socket.room.ConnectedMeetingPeer", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "display_name",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "custom_participant_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "preset_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "display_picture_url",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const lo = new po();
class mo extends o {
  constructor() {
    super("socket.room.ConnectedMeetingDump", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "title",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "participants", kind: "message", repeat: 1, T: () => lo }
    ]);
  }
}
const vn = new mo();
class To extends o {
  constructor() {
    super("socket.room.GetConnectedRoomsDumpResponse", [
      { no: 1, name: "parent_meeting", kind: "message", T: () => vn },
      { no: 2, name: "meetings", kind: "message", repeat: 1, T: () => vn }
    ]);
  }
}
const fo = new To();
class ho extends o {
  constructor() {
    super("socket.room.CreateRoomRequestPayload", [
      {
        no: 1,
        name: "title",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const ko = new ho();
class go extends o {
  constructor() {
    super("socket.room.CreateConnectedRoomsRequest", [
      { no: 1, name: "payloads", kind: "message", repeat: 1, T: () => ko }
    ]);
  }
}
new go();
class yo extends o {
  constructor() {
    super("socket.room.CreateRoomResponsePayload", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "title",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "error", kind: "message", T: () => Je }
    ]);
  }
}
const vo = new yo();
class Ro extends o {
  constructor() {
    super("socket.room.CreateConnectedRoomsResponse", [
      { no: 1, name: "payloads", kind: "message", repeat: 1, T: () => vo }
    ]);
  }
}
new Ro();
class _o extends o {
  constructor() {
    super("socket.room.UpdateRoomRequestPayload", [
      {
        no: 1,
        name: "meeting_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "title",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const wo = new _o();
class Po extends o {
  constructor() {
    super("socket.room.UpdateConnectedRoomsRequest", [
      { no: 1, name: "payloads", kind: "message", repeat: 1, T: () => wo }
    ]);
  }
}
new Po();
class Co extends o {
  constructor() {
    super("socket.room.DisableRoomPayload", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Eo = new Co();
class So extends o {
  constructor() {
    super("socket.room.DisableConnectedRoomsRequest", [
      { no: 1, name: "payloads", kind: "message", repeat: 1, T: () => Eo }
    ]);
  }
}
new So();
class bo extends o {
  constructor() {
    super("socket.room.DisableConnectedRoomsResponse", [
      { no: 1, name: "payloads", kind: "message", repeat: 1, T: () => xo }
    ]);
  }
}
new bo();
class Lo extends o {
  constructor() {
    super("socket.room.DisableConnectedRoomPayload", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "status",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "title",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 4, name: "error", kind: "message", T: () => Je }
    ]);
  }
}
const xo = new Lo();
class Oo extends o {
  constructor() {
    super("socket.room.MovePeerPayload", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "preset_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Mo = new Oo();
class qo extends o {
  constructor() {
    super("socket.room.MovePeersBetweenRoomsRequest", [
      {
        no: 1,
        name: "source_meeting_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "destination_meeting_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "participants", kind: "message", repeat: 1, T: () => Mo }
    ]);
  }
}
new qo();
class $o extends o {
  constructor() {
    super("socket.room.MovedPeer", [
      {
        no: 1,
        name: "meeting_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "custom_participant_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "error", kind: "message", T: () => Je }
    ]);
  }
}
const No = new $o();
class Ao extends o {
  constructor() {
    super("socket.room.MovePeersBetweenRoomsResponse", [
      { no: 1, name: "payloads", kind: "message", repeat: 1, T: () => No }
    ]);
  }
}
new Ao();
class Io extends o {
  constructor() {
    super("socket.room.TransferPeer", [
      {
        no: 1,
        name: "meeting_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "auth_token",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Io();
class Do extends o {
  constructor() {
    super("socket.room.GetAllAddedParticipantsResponse", [
      { no: 1, name: "participants", kind: "message", repeat: 1, T: () => Bo }
    ]);
  }
}
new Do();
class Uo extends o {
  constructor() {
    super("socket.room.AddedParticipant", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "name",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "picture",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "custom_participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Bo = new Uo();
class Go extends o {
  constructor() {
    super("socket.room.RemoveParticipantsRequest", [
      {
        no: 1,
        name: "peer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Go();
class jo extends o {
  constructor() {
    super("socket.room.BroadcastMessage", [
      {
        no: 1,
        name: "type",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "payload",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      },
      {
        no: 3,
        name: "timestamp",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      },
      {
        no: 4,
        name: "ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 5, name: "broadcast_type", kind: "enum", opt: !0, T: () => ["socket.room.BroadcastType", Fe, "BROADCAST_TYPE_"] }
    ]);
  }
}
new jo();
class Wo extends o {
  constructor() {
    super("socket.room.AcceptWaitingRoomRequests", [
      {
        no: 1,
        name: "user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Wo();
class Fo extends o {
  constructor() {
    super("socket.room.DenyWaitingRoomRequests", [
      {
        no: 1,
        name: "user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Fo();
class Ko extends o {
  constructor() {
    super("socket.room.WaitingRoomRequest", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "picture",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "custom_participant_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "preset_name",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Vo = new Ko();
class Ho extends o {
  constructor() {
    super("socket.room.GetWaitingRoomRequests", [
      { no: 1, name: "requests", kind: "message", repeat: 1, T: () => Vo }
    ]);
  }
}
new Ho();
class Jo extends o {
  constructor() {
    super("socket.room.GetRoomStageStateResponse", [
      {
        no: 1,
        name: "on_stage_peers",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "approved_stage_peers",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "requested_stage_peers",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Jo();
var Ve;
(function(e) {
  e[e.NONE = 0] = "NONE", e[e.SKIP = 1] = "SKIP", e[e.ON_PRIVILEGED_USER_ENTRY = 2] = "ON_PRIVILEGED_USER_ENTRY", e[e.SKIP_ON_ACCEPT = 3] = "SKIP_ON_ACCEPT";
})(Ve || (Ve = {}));
var ge;
(function(e) {
  e[e.NONE = 0] = "NONE", e[e.ALLOWED = 1] = "ALLOWED", e[e.NOT_ALLOWED = 2] = "NOT_ALLOWED", e[e.CAN_REQUEST = 3] = "CAN_REQUEST";
})(ge || (ge = {}));
class Zo extends o {
  constructor() {
    super("socket.preset.PollsPermissionUpdate", [
      {
        no: 1,
        name: "can_create",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "can_vote",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "can_view",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const zo = new Zo();
class Yo extends o {
  constructor() {
    super("socket.preset.PluginsPermissionsUpdate", [
      {
        no: 1,
        name: "can_close",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "can_start",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const Qo = new Yo();
class Xo extends o {
  constructor() {
    super("socket.preset.PublicChatPermission", [
      {
        no: 1,
        name: "can_send",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "text",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "files",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const ea = new Xo();
class na extends o {
  constructor() {
    super("socket.preset.PrivateChatPermission", [
      {
        no: 1,
        name: "can_send",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "can_receive",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "text",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 4,
        name: "files",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const ta = new na();
class sa extends o {
  constructor() {
    super("socket.preset.ChatPermissionUpdate", [
      { no: 1, name: "public", kind: "message", T: () => ea },
      { no: 2, name: "private", kind: "message", T: () => ta }
    ]);
  }
}
const ra = new sa();
class oa extends o {
  constructor() {
    super("socket.preset.ConnectedMeetingPermissionUpdate", [
      {
        no: 1,
        name: "can_alter_connected_meetings",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 2,
        name: "can_switch_to_parent_meeting",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "can_switch_connected_meetings",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const aa = new oa();
class ia extends o {
  constructor() {
    super("socket.preset.StreamPermission", [
      { no: 1, name: "can_produce", kind: "enum", opt: !0, T: () => ["socket.preset.StreamPermissionType", ge, "STREAM_PERMISSION_TYPE_"] },
      { no: 2, name: "can_consume", kind: "enum", opt: !0, T: () => ["socket.preset.StreamPermissionType", ge, "STREAM_PERMISSION_TYPE_"] }
    ]);
  }
}
const Ie = new ia();
class ca extends o {
  constructor() {
    super("socket.preset.MediaPermissionUpdate", [
      { no: 1, name: "video", kind: "message", T: () => Ie },
      { no: 2, name: "audio", kind: "message", T: () => Ie },
      { no: 3, name: "screenshare", kind: "message", T: () => Ie }
    ]);
  }
}
const da = new ca();
class ua extends o {
  constructor() {
    super("socket.preset.PresetUpdates", [
      { no: 1, name: "polls", kind: "message", T: () => zo },
      { no: 2, name: "plugins", kind: "message", T: () => Qo },
      { no: 3, name: "chat", kind: "message", T: () => ra },
      {
        no: 4,
        name: "accept_waiting_requests",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 5,
        name: "can_accept_production_requests",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 6,
        name: "can_edit_display_name",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 7,
        name: "can_record",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 8,
        name: "can_livestream",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 9,
        name: "can_spotlight",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 10,
        name: "disable_participant_audio",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 11,
        name: "disable_participant_screensharing",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 12,
        name: "disable_participant_video",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 13,
        name: "kick_participant",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 14,
        name: "pin_participant",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 15,
        name: "transcription_enabled",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 16, name: "waiting_room_type", kind: "enum", opt: !0, T: () => ["socket.preset.WaitingRoomType", Ve, "WAITING_ROOM_TYPE_"] },
      {
        no: 17,
        name: "is_recorder",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 18, name: "recorder_type", kind: "enum", opt: !0, T: () => ["socket.room.RecorderType", We, "RECORDER_TYPE_"] },
      {
        no: 19,
        name: "hidden_participant",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 20,
        name: "show_participant_list",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 21,
        name: "can_change_participant_permissions",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 22, name: "connected_meetings", kind: "message", T: () => aa },
      { no: 23, name: "media", kind: "message", T: () => da }
    ]);
  }
}
const Ze = new ua();
class pa extends o {
  constructor() {
    super("socket.preset.ReadPeersPresetRequest", [
      {
        no: 1,
        name: "user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new pa();
class la extends o {
  constructor() {
    super("socket.preset.PeerPreset", [
      {
        no: 1,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "preset",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      }
    ]);
  }
}
const ma = new la();
class Ta extends o {
  constructor() {
    super("socket.preset.ReadPeersPresetResponse", [
      { no: 1, name: "peer_presets", kind: "message", repeat: 1, T: () => ma }
    ]);
  }
}
new Ta();
class fa extends o {
  constructor() {
    super("socket.preset.UpdatePeerPreset", [
      {
        no: 1,
        name: "user_ids",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 2, name: "patch", kind: "message", T: () => Ze }
    ]);
  }
}
const Jn = new fa();
class ha extends o {
  constructor() {
    super("socket.preset.UpdatePeersPresetRequest", [
      { no: 1, name: "update_peers_presets", kind: "message", repeat: 1, T: () => Jn }
    ]);
  }
}
new ha();
class ka extends o {
  constructor() {
    super("socket.preset.UpdatePeersPresetResponse", [
      { no: 1, name: "update_peers_presets", kind: "message", repeat: 1, T: () => Jn }
    ]);
  }
}
new ka();
class ga extends o {
  constructor() {
    super("socket.preset.PeerUserIDMap", [
      {
        no: 1,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const ya = new ga();
class va extends o {
  constructor() {
    super("socket.preset.BulkUpdatePeerPresetRequest", [
      { no: 1, name: "peers", kind: "message", repeat: 1, T: () => ya },
      { no: 2, name: "patch", kind: "message", T: () => Ze }
    ]);
  }
}
new va();
class Ra extends o {
  constructor() {
    super("socket.preset.BulkUpdatePeerPresetResponse", [
      { no: 2, name: "patch", kind: "message", T: () => Ze }
    ]);
  }
}
new Ra();
class _a extends o {
  constructor() {
    super("socket.chat.ChatMessage", [
      {
        no: 1,
        name: "chat_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "pinned",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 6,
        name: "is_edited",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 7,
        name: "payload_type",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 8,
        name: "payload",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 10,
        name: "target_user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 11,
        name: "created_at",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      },
      {
        no: 12,
        name: "created_at_ms",
        kind: "scalar",
        opt: !0,
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      },
      {
        no: 13,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 14,
        name: "channel_index",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const F = new _a();
class wa extends o {
  constructor() {
    super("socket.chat.GetPaginatedChatMessageRoomRequest", [
      {
        no: 1,
        name: "time_stamp",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      },
      {
        no: 2,
        name: "size",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "from",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 4,
        name: "reversed",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 5,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new wa();
class Pa extends o {
  constructor() {
    super("socket.chat.GetPaginatedChatMessageRoomResponse", [
      { no: 1, name: "messages", kind: "message", repeat: 1, T: () => F },
      {
        no: 2,
        name: "next",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Pa();
class Ca extends o {
  constructor() {
    super("socket.chat.GetChatMessagesResponse", [
      { no: 1, name: "messages", kind: "message", repeat: 1, T: () => F }
    ]);
  }
}
new Ca();
class Ea extends o {
  constructor() {
    super("socket.chat.SendChatMessageToRoomRequest", [
      {
        no: 1,
        name: "payload_type",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 2,
        name: "payload",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ea();
class Sa extends o {
  constructor() {
    super("socket.chat.SendChatMessageToRoomResponse", [
      { no: 1, name: "message", kind: "message", T: () => F }
    ]);
  }
}
new Sa();
class ba extends o {
  constructor() {
    super("socket.chat.SendChatMessageToPeersRequest", [
      {
        no: 1,
        name: "peer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "payload_type",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "payload",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new ba();
class La extends o {
  constructor() {
    super("socket.chat.SendChatMessageToPeersResponse", [
      { no: 1, name: "message", kind: "message", T: () => F }
    ]);
  }
}
new La();
class xa extends o {
  constructor() {
    super("socket.chat.SendChatMessageToChannelRequest", [
      {
        no: 1,
        name: "channel_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "payload_type",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "payload",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new xa();
class Oa extends o {
  constructor() {
    super("socket.chat.SendChatMessageToChannelResponse", [
      { no: 1, name: "message", kind: "message", T: () => F }
    ]);
  }
}
new Oa();
class Ma extends o {
  constructor() {
    super("socket.chat.EditChatMessageRequest", [
      {
        no: 1,
        name: "chat_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "payload_type",
        kind: "scalar",
        opt: !0,
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "payload",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "pinned",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 5,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ma();
class qa extends o {
  constructor() {
    super("socket.chat.PinChatMessageRequest", [
      {
        no: 1,
        name: "chat_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "pinned",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new qa();
class $a extends o {
  constructor() {
    super("socket.chat.PinChatMessageResponse", [
      {
        no: 1,
        name: "chat_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "pinned",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 3,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new $a();
class Na extends o {
  constructor() {
    super("socket.chat.EditChatMessageResponse", [
      { no: 1, name: "message", kind: "message", T: () => F }
    ]);
  }
}
new Na();
class Aa extends o {
  constructor() {
    super("socket.chat.DeleteChatMessageRequest", [
      {
        no: 1,
        name: "chat_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Aa();
class Ia extends o {
  constructor() {
    super("socket.chat.DeleteChatMessageResponse", [
      {
        no: 1,
        name: "chat_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ia();
class Da extends o {
  constructor() {
    super("socket.chat.SearchChatMessagesRequest", [
      {
        no: 1,
        name: "time_stamp",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      },
      {
        no: 2,
        name: "size",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 3,
        name: "from",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 4,
        name: "reversed",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 5,
        name: "channel_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "search_term",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Da();
class Ua extends o {
  constructor() {
    super("socket.chat.MarkChannelIndexAsReadRequest", [
      {
        no: 1,
        name: "channel_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "channel_index",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ua();
class Ba extends o {
  constructor() {
    super("socket.chat.MarkChannelIndexAsReadResponse", [
      {
        no: 1,
        name: "channel_index",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ba();
class Ga extends o {
  constructor() {
    super("socket.chat.CreateChatChannelRequest", [
      {
        no: 1,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "target_user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "display_picture_url",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "visibility",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "is_direct_message",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Ga();
class ja extends o {
  constructor() {
    super("socket.chat.UpdateChatChannelRequest", [
      {
        no: 1,
        name: "chat_channel_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "display_name",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "target_user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "display_picture_url",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "visibility",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "is_direct_message",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new ja();
class Wa extends o {
  constructor() {
    super("socket.chat.CreateChatChannelResponse", [
      {
        no: 1,
        name: "chat_channel_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Wa();
class Fa extends o {
  constructor() {
    super("socket.chat.GetChatChannelRequest", [
      {
        no: 1,
        name: "chat_channel_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Fa();
class Ka extends o {
  constructor() {
    super("socket.chat.LatestMessageAndUnreadCount", [
      { no: 1, name: "message", kind: "message", T: () => F },
      {
        no: 2,
        name: "unread_count",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      }
    ]);
  }
}
const Va = new Ka();
class Ha extends o {
  constructor() {
    super("socket.chat.ChatChannel", [
      {
        no: 1,
        name: "chat_channel_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "display_picture_url",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "visibility",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "is_direct_message",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      { no: 6, name: "latest_message_and_unread_count", kind: "message", T: () => Va },
      {
        no: 7,
        name: "target_user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Ja = new Ha();
class Za extends o {
  constructor() {
    super("socket.chat.GetChatChannelResponse", [
      { no: 1, name: "chat_channels", kind: "message", repeat: 1, T: () => Ja }
    ]);
  }
}
new Za();
class za extends o {
  constructor() {
    super("socket.chat.ChannelMember", [
      {
        no: 1,
        name: "id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "name",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "picture",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "custom_participant_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Ya = new za();
class Qa extends o {
  constructor() {
    super("socket.chat.GetChatChannelMembersResponse", [
      { no: 1, name: "channel_members", kind: "message", repeat: 1, T: () => Ya }
    ]);
  }
}
new Qa();
class Xa extends o {
  constructor() {
    super("socket.plugin.AddPluginRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "staggered",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new Xa();
class ei extends o {
  constructor() {
    super("socket.plugin.RemovePluginRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "staggered",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new ei();
class ni extends o {
  constructor() {
    super("socket.plugin.EnablePluginForRoomRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new ni();
class ti extends o {
  constructor() {
    super("socket.plugin.DisablePluginForRoomRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new ti();
class si extends o {
  constructor() {
    super("socket.plugin.EnablePluginForPeersRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "peer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new si();
class ri extends o {
  constructor() {
    super("socket.plugin.DisablePluginForPeersRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "peer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new ri();
class oi extends o {
  constructor() {
    super("socket.plugin.PluginEventToRoomRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "plugin_data",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      }
    ]);
  }
}
new oi();
class ai extends o {
  constructor() {
    super("socket.plugin.PluginEventToPeersRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "peer_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "plugin_data",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      }
    ]);
  }
}
new ai();
class ii extends o {
  constructor() {
    super("socket.plugin.StoreKeys", [
      {
        no: 1,
        name: "store_key",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "payload",
        kind: "scalar",
        opt: !0,
        T: 12
        /*ScalarType.BYTES*/
      }
    ]);
  }
}
const ze = new ii();
class ci extends o {
  constructor() {
    super("socket.plugin.PluginStoreInsertKeysRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "store_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "insert_keys", kind: "message", repeat: 1, T: () => ze }
    ]);
  }
}
new ci();
class di extends o {
  constructor() {
    super("socket.plugin.PluginStoreGetKeysRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "store_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "get_keys", kind: "message", repeat: 1, T: () => ze }
    ]);
  }
}
new di();
class ui extends o {
  constructor() {
    super("socket.plugin.PluginStoreDeleteKeysRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "store_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "delete_keys", kind: "message", repeat: 1, T: () => ze }
    ]);
  }
}
new ui();
class pi extends o {
  constructor() {
    super("socket.plugin.PluginStoreDeleteRequest", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "store_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new pi();
class li extends o {
  constructor() {
    super("socket.plugin.EnablePluginResponse", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "enabled_by",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const mi = new li();
class Ti extends o {
  constructor() {
    super("socket.plugin.EnablePluginsResponse", [
      { no: 1, name: "plugins", kind: "message", repeat: 1, T: () => mi }
    ]);
  }
}
new Ti();
class fi extends o {
  constructor() {
    super("socket.plugin.DisablePluginResponse", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "disabled_by",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new fi();
class hi extends o {
  constructor() {
    super("socket.plugin.PluginStoreItem", [
      {
        no: 1,
        name: "timestamp",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "store_key",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "payload",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      }
    ]);
  }
}
const ki = new hi();
class gi extends o {
  constructor() {
    super("socket.plugin.PluginStoreResponse", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "store_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "store_items", kind: "message", repeat: 1, T: () => ki }
    ]);
  }
}
new gi();
class yi extends o {
  constructor() {
    super("socket.plugin.PluginEventResponse", [
      {
        no: 1,
        name: "plugin_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "plugin_data",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      }
    ]);
  }
}
new yi();
class vi extends o {
  constructor() {
    super("socket.livestreaming.LiveStreamingEvent", [
      {
        no: 1,
        name: "livestream_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "err_message",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "meeting_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "playback_url",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "org_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 7,
        name: "room_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 8,
        name: "room_uuid",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 9,
        name: "status",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 10,
        name: "manual_ingest",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
new vi();
class Ri extends o {
  constructor() {
    super("socket.livestreaming.GetStagePeersResponse", [
      {
        no: 1,
        name: "stage_peers",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ri();
class _i extends o {
  constructor() {
    super("socket.livestreaming.StageRequest", [
      {
        no: 1,
        name: "display_name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const wi = new _i();
class Pi extends o {
  constructor() {
    super("socket.livestreaming.GetStageRequestsResponse", [
      { no: 1, name: "stage_requests", kind: "message", repeat: 1, T: () => wi }
    ]);
  }
}
new Pi();
class Ci extends o {
  constructor() {
    super("socket.livestreaming.GrantStageAccessRequest", [
      {
        no: 1,
        name: "user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ci();
class Ei extends o {
  constructor() {
    super("socket.livestreaming.DenyStageAccessRequest", [
      {
        no: 1,
        name: "user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Ei();
class Si extends o {
  constructor() {
    super("socket.livestreaming.LeaveStageRequest", [
      {
        no: 1,
        name: "user_ids",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new Si();
class bi extends o {
  constructor() {
    super("socket.polls.Poll", [
      {
        no: 1,
        name: "poll_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "created_by",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "created_by_user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "question",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 5, name: "options", kind: "message", repeat: 1, T: () => xi },
      {
        no: 6,
        name: "hide_votes",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 7,
        name: "anonymous",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 8,
        name: "votes",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Zn = new bi();
class Li extends o {
  constructor() {
    super("socket.polls.PollOption", [
      {
        no: 1,
        name: "text",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "count",
        kind: "scalar",
        opt: !0,
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      },
      { no: 3, name: "votes", kind: "message", repeat: 1, T: () => Mi }
    ]);
  }
}
const xi = new Li();
class Oi extends o {
  constructor() {
    super("socket.polls.PollVote", [
      {
        no: 1,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "name",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
const Mi = new Oi();
class qi extends o {
  constructor() {
    super("socket.polls.NewPollRequest", [
      {
        no: 1,
        name: "question",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "options",
        kind: "scalar",
        repeat: 2,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "anonymous",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 4,
        name: "hide_votes",
        kind: "scalar",
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 5,
        name: "created_by",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "created_by_user_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      }
    ]);
  }
}
new qi();
class $i extends o {
  constructor() {
    super("socket.polls.VotePollRequest", [
      {
        no: 1,
        name: "poll_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "index",
        kind: "scalar",
        T: 4,
        L: 2
        /*LongType.NUMBER*/
      }
    ]);
  }
}
new $i();
class Ni extends o {
  constructor() {
    super("socket.polls.UpdatePollResponse", [
      { no: 1, name: "poll", kind: "message", T: () => Zn }
    ]);
  }
}
new Ni();
class Ai extends o {
  constructor() {
    super("socket.polls.GetPollsResponse", [
      { no: 1, name: "polls", kind: "message", repeat: 1, T: () => Zn }
    ]);
  }
}
new Ai();
class Ii extends o {
  constructor() {
    super("socket.recording.RecordingEvent", [
      {
        no: 1,
        name: "recording_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 2,
        name: "err_message",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      { no: 3, name: "recording_type", kind: "enum", T: () => ["common.RecordingType", ke] }
    ]);
  }
}
new Ii();
class Di extends o {
  constructor() {
    super("google.protobuf.Timestamp", [
      {
        no: 1,
        name: "seconds",
        kind: "scalar",
        T: 3,
        L: 0
        /*LongType.BIGINT*/
      },
      {
        no: 2,
        name: "nanos",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      }
    ]);
  }
  /**
   * Creates a new `Timestamp` for the current time.
   */
  now() {
    const s = this.create(), a = Date.now();
    return s.seconds = se.from(Math.floor(a / 1e3)).toBigInt(), s.nanos = a % 1e3 * 1e6, s;
  }
  /**
   * Converts a `Timestamp` to a JavaScript Date.
   */
  toDate(s) {
    return new Date(se.from(s.seconds).toNumber() * 1e3 + Math.ceil(s.nanos / 1e6));
  }
  /**
   * Converts a JavaScript Date to a `Timestamp`.
   */
  fromDate(s) {
    const a = this.create(), d = s.getTime();
    return a.seconds = se.from(Math.floor(d / 1e3)).toBigInt(), a.nanos = d % 1e3 * 1e6, a;
  }
  /**
   * In JSON format, the `Timestamp` type is encoded as a string
   * in the RFC 3339 format.
   */
  internalJsonWrite(s, a) {
    let d = se.from(s.seconds).toNumber() * 1e3;
    if (d < Date.parse("0001-01-01T00:00:00Z") || d > Date.parse("9999-12-31T23:59:59Z"))
      throw new Error("Unable to encode Timestamp to JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.");
    if (s.nanos < 0)
      throw new Error("Unable to encode invalid Timestamp to JSON. Nanos must not be negative.");
    let p = "Z";
    if (s.nanos > 0) {
      let m = (s.nanos + 1e9).toString().substring(1);
      m.substring(3) === "000000" ? p = "." + m.substring(0, 3) + "Z" : m.substring(6) === "000" ? p = "." + m.substring(0, 6) + "Z" : p = "." + m + "Z";
    }
    return new Date(d).toISOString().replace(".000Z", p);
  }
  /**
   * In JSON format, the `Timestamp` type is encoded as a string
   * in the RFC 3339 format.
   */
  internalJsonRead(s, a, d) {
    if (typeof s != "string")
      throw new Error("Unable to parse Timestamp from JSON " + Ct(s) + ".");
    let p = s.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);
    if (!p)
      throw new Error("Unable to parse Timestamp from JSON. Invalid format.");
    let m = Date.parse(p[1] + "-" + p[2] + "-" + p[3] + "T" + p[4] + ":" + p[5] + ":" + p[6] + (p[8] ? p[8] : "Z"));
    if (Number.isNaN(m))
      throw new Error("Unable to parse Timestamp from JSON. Invalid value.");
    if (m < Date.parse("0001-01-01T00:00:00Z") || m > Date.parse("9999-12-31T23:59:59Z"))
      throw new globalThis.Error("Unable to parse Timestamp from JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.");
    return d || (d = this.create()), d.seconds = se.from(m / 1e3).toBigInt(), d.nanos = 0, p[7] && (d.nanos = parseInt("1" + p[7] + "0".repeat(9 - p[7].length)) - 1e9), d;
  }
}
new Di();
class Ui extends o {
  constructor() {
    super("common.BaseHubMessage", [
      {
        no: 1,
        name: "event",
        kind: "scalar",
        T: 5
        /*ScalarType.INT32*/
      },
      {
        no: 2,
        name: "id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 3,
        name: "peer_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 4,
        name: "room_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 5,
        name: "user_id",
        kind: "scalar",
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 6,
        name: "payload",
        kind: "scalar",
        T: 12
        /*ScalarType.BYTES*/
      },
      {
        no: 7,
        name: "error",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      },
      {
        no: 8,
        name: "sid",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 9,
        name: "room_object_id",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 10,
        name: "preset",
        kind: "scalar",
        opt: !0,
        T: 9
        /*ScalarType.STRING*/
      },
      {
        no: 11,
        name: "use_start_session",
        kind: "scalar",
        opt: !0,
        T: 8
        /*ScalarType.BOOL*/
      }
    ]);
  }
}
const He = new Ui();
class Bi extends o {
  constructor() {
    super("common.BulkedHubMessage", [
      { no: 1, name: "messages", kind: "message", repeat: 1, T: () => He }
    ]);
  }
}
new Bi();
class Gi extends o {
  constructor() {
    super("common.CFWorkersResponse", [
      { no: 1, name: "responses", kind: "message", repeat: 1, T: () => He },
      { no: 2, name: "broadcast_responses", kind: "message", repeat: 1, T: () => He }
    ]);
  }
}
new Gi();
const ji = 0, Wi = 1, Fi = 2, Ki = 3, Vi = 4, Hi = 5, Ji = {
  getPeerInfo: 0,
  updatePeerInfo: 1,
  getRoomPeersInfo: 2,
  joinRoom: 3,
  leaveRoom: 4,
  getRoomInfo: 5,
  updateRoomInfo: 6,
  closeRoom: 7,
  startedLivestream: 8,
  stoppedLivestream: 9,
  erroredLivestream: 10,
  getStagePeers: 11,
  getStageRequests: 12,
  requestStageAccess: 13,
  cancelStageRequest: 14,
  grantStageAccess: 15,
  denyStageAccess: 16,
  roomPeerCount: 17,
  joinStage: 18,
  leaveStage: 19,
  // getConnectedRoomsDump returns entire dump for a breakout rooms meeting
  // This details which peer is in which meeting currently, and which is the parent meeting
  getConnectedRoomsDump: 20,
  // createConnectedRooms to create breakout rooms
  createConnectedRooms: 21,
  // deleteConnectedRooms to delete breakout rooms
  deleteConnectedRooms: 22,
  // move peers between breakout rooms
  movePeers: 23,
  // transfer peer to new room
  transferPeer: 24,
  // message sent by socket service to inform client of a participant joining a breakout room
  movedPeer: 25,
  // message sent by socket service to inform client of updates in connected rooms
  connectedRoomsUpdated: 26,
  // message sent by socket service to inform client of deletion in connected rooms
  connectedRoomsDeleted: 27,
  // get all participants that have been added to the meeting irrespective of their live status
  getAllAddedParticipants: 28,
  // broadcast api
  broadcastMessage: 29,
  kick: 30,
  kickAll: 31,
  transcript: 32,
  // waitlist events
  getWaitingRoomRequests: 33,
  acceptWaitingRoomRequests: 34,
  waitingRoomRequestAccepted: 35,
  denyWaitingRoomRequests: 36,
  waitingRoomRequestDenied: 37,
  peerStageStatusUpdate: 38,
  broadcastToEntity: 39,
  recordingStarted: 40,
  recordingStopped: 41,
  recordingPaused: 42,
  getRoomStageState: 43,
  livestreamingInvoked: 44
}, Zi = {
  getMessages: 0,
  sendMessageToRoom: 1,
  sendMessageToPeers: 2,
  editMessage: 3,
  deleteMessage: 4,
  getPaginatedMessages: 5,
  sendMessageToChannel: 6,
  searchChannelMessages: 7,
  getAllChatChannels: 8,
  markChannelIndexAsRead: 9,
  pinMessage: 10
}, zi = {
  getPlugins: 0,
  addPlugin: 1,
  enablePluginForRoom: 2,
  disablePluginForPeers: 3,
  enablePluginForPeers: 4,
  disablePluginForRoom: 5,
  removePlugin: 6,
  customPluginEventToRoom: 7,
  customPluginEventToPeers: 8,
  storeInsertKeys: 9,
  storeGetKeys: 10,
  storeDeleteKeys: 11,
  storeDelete: 12
}, Yi = {
  createPoll: 0,
  getPolls: 1,
  votePoll: 2,
  updatePoll: 3
}, zn = {
  unknown: 0,
  createWebRTCTransport: 1,
  produce: 2,
  consume: 3,
  toggleProducer: 4,
  toggleConsumer: 5,
  closeProducer: 6,
  closeConsumer: 7,
  updateConsumersSimulcastConfig: 8,
  // adding some buffers for new media events.
  joinRoom: 16,
  leaveRoom: 17,
  selectedPeer: 18,
  globalPinPeer: 19,
  selfJoinComplete: 20,
  // some additional buffer for broadcast events.
  peerJoinedBroadcast: 25,
  peerLeaveBroadcast: 26,
  peerProducerCreateBroadcast: 27,
  peerProducerToggleBroadcast: 28,
  peerProducerCloseBroadcast: 29,
  globalPeerPinBroadcast: 30,
  recordingStartedBroadcast: 31,
  recordingStoppedBroadcast: 32,
  peerDisplayNameEditBroadcast: 33,
  mediaRoomTerminationBroadcastResponse: 36,
  selectedPeerDiff: 40,
  renegotiateSessionDescription: 50,
  errorResponse: 60,
  kickPeer: 90,
  kickAll: 91,
  changeDisplayName: 92,
  hostControlPeer: 93,
  hostControlAllPeers: 94,
  // only for CF
  audioActivity: 100
}, Qi = {
  createChatChannel: 0,
  getChatChannel: 1,
  deprecatedGetAllChatChannels: 2,
  getChannelMembers: 3,
  updateChatChannel: 4
}, Xi = {
  getUserPresets: 0,
  updateUserPreset: 1
};
function X(e, s) {
  return Object.keys(s).reduce((a, d) => (a[d] = (e << 16) + s[d], a), {});
}
function Yn(e, s) {
  return Object.keys(e).reduce((a, d) => (a[d] = s | e[d], a), {});
}
const pe = X(ji, Ji);
X(Wi, Zi);
X(
  Fi,
  zi
);
X(Ki, Yi);
X(
  Vi,
  Qi
);
const De = Yn(zn, 16777216);
Yn(zn, 50331648);
X(
  Hi,
  Xi
);
const Qn = "ws://localhost:8080/ws";
class ec extends oe.WebSocket {
  constructor(s, a) {
    super(Qn, a);
  }
}
var Y, ye, Q, ve;
class nc {
  constructor() {
    te(this, Y, void 0);
    te(this, ye, []);
    te(this, Q, void 0);
    te(this, ve, 15e3);
    y(this, "roomId", "roomId");
    y(this, "roomUuid", "roomUuid");
    // eslint-disable-next-line class-methods-use-this
    y(this, "cleanBuffer", (s) => s.buffer.slice(s.byteOffset, s.byteOffset + s.byteLength));
  }
  init({ peerId: s, mockParticipants: a }) {
    Ne(this, Q, s), window.WebSocket = ec, Ne(this, Y, a);
    const { RTK_MOCK_SERVER: d } = window;
    if (d)
      try {
        d.close();
      } catch (m) {
      }
    const p = new oe.Server(Qn, { mock: !1 });
    window.RTK_MOCK_SERVER = p, p.on("connection", (m) => {
      j(this, ye).push(m), this.addConnectionListeners(m);
    });
  }
  addConnectionListeners(s) {
    s.on("message", (a) => {
      if (a === "3")
        return;
      const d = fn.fromBinary(a);
      let p;
      switch (d.event) {
        case pe.joinRoom: {
          p = yn.toBinary(yn.fromJson({
            peer: {
              peerId: j(this, Q),
              userId: "self-userId",
              displayName: "name",
              waitlisted: !1,
              stageType: ae.ON_STAGE
            }
          }));
          break;
        }
        case pe.getRoomPeersInfo: {
          p = zr.toBinary({
            peers: j(this, Y).map((w) => an($e({}, w), {
              userId: w.peerId,
              waitlisted: !1,
              stageType: 1
            }))
          });
          break;
        }
        case pe.getRoomInfo: {
          p = to.toBinary({
            room: {
              roomId: this.roomId,
              title: "title",
              createdAt: Date.now(),
              activeRecordings: [],
              roomUuid: this.roomUuid
            }
          });
          break;
        }
        case De.createWebRTCTransport: {
          p = jn.toBinary({
            transportId: "transportId",
            description: {
              type: "answer",
              sdp: "sdp",
              target: he.PUBLISHER
            },
            producerIds: []
          });
          break;
        }
        case De.selfJoinComplete: {
          const w = j(this, Y).map((L) => $e({
            // @ts-ignore
            producerStates: []
          }, L));
          p = or.toBinary({
            maxPreferredStreams: 6,
            participants: w,
            selectedPeers: {
              audioPeers: [],
              compulsoryPeers: []
            },
            roomState: {
              displayTitle: "title",
              lockedMode: !1,
              roomUuid: this.roomUuid,
              roomName: this.roomUuid,
              currentPeerId: j(this, Q),
              pinnedPeerIds: []
            }
          });
          break;
        }
        case pe.getConnectedRoomsDump: {
          p = fo.toBinary({
            parentMeeting: {
              participants: []
            },
            meetings: []
          });
          break;
        }
        case De.produce: {
          p = ur.toBinary({
            status: !0,
            producerId: "producer-id"
          });
          break;
        }
      }
      const m = {
        event: d.event,
        id: d.id,
        payload: p
      }, f = fn.toBinary(m), g = this.cleanBuffer(f);
      s.send(g);
    }), setInterval(() => {
      s.send("2");
    }, j(this, ve));
  }
}
Y = new WeakMap(), ye = new WeakMap(), Q = new WeakMap(), ve = new WeakMap();
function rc(e) {
  new nc().init(e), window.RTCPeerConnection = $t, window.fetch = () => dn(this, null, function* () {
    const a = new window.Response(JSON.stringify({}), {
      status: 200,
      headers: {
        "Content-type": "application/json"
      }
    });
    return Promise.resolve(a);
  });
}
export {
  rc as setupStubs
};
