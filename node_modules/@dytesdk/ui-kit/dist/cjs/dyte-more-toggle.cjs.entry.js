'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index$1 = require('./index-1109742b.js');
const uiStore = require('./ui-store-c9fc6964.js');
const index = require('./index-42dce5ce.js');

const dyteMoreToggleCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{position:relative;display:flex;flex-direction:column;overflow:visible}.more-menu{position:absolute;right:calc(var(--dyte-space-24, 96px) * -1);bottom:var(--dyte-space-16, 64px);z-index:50;margin-bottom:var(--dyte-space-3, 12px);box-sizing:border-box;max-height:60vh;width:var(--dyte-space-64, 256px);overflow:auto;border-radius:var(--dyte-border-radius-md, 8px);border-width:var(--dyte-border-width-sm, 1px);border-style:solid;--tw-border-opacity:1;border-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-border-opacity));--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / var(--tw-bg-opacity));outline:2px solid transparent;outline-offset:2px;display:flex;flex-direction:column;align-items:stretch}:host([size='sm']) .more-menu{bottom:var(--dyte-space-10, 40px)}.more-menu::-webkit-scrollbar{height:var(--dyte-space-0, 0px);width:var(--dyte-space-1\\.5, 6px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity))}.more-menu::-webkit-scrollbar-thumb{border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity))}";
const DyteMoreToggleStyle0 = dyteMoreToggleCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteMoreToggle = class {
    constructor(hostRef) {
        index$1.registerInstance(this, hostRef);
        this.stateUpdate = index$1.createEvent(this, "dyteStateUpdate", 7);
        /** Icon pack */
        this.iconPack = uiStore.defaultIconPack;
        /** Language */
        this.t = uiStore.useLanguage();
        this.handleKeyDown = ({ key }) => {
            if (key === 'Escape') {
                this.stateUpdate.emit({ activeMoreMenu: false });
            }
        };
        this.handleOnClick = (e) => {
            if (!e.composedPath().includes(this.host) && this.states.activeMoreMenu) {
                this.stateUpdate.emit({ activeMoreMenu: false });
            }
        };
        this.toggleMoreMenu = () => {
            this.stateUpdate.emit({ activeMoreMenu: !this.states.activeMoreMenu });
        };
    }
    connectedCallback() {
        /** A11y */
        window.addEventListener('keydown', this.handleKeyDown);
        window.addEventListener('click', this.handleOnClick);
        // };
    }
    disconnectedCallback() {
        window.removeEventListener('keydown', this.handleKeyDown);
        window.removeEventListener('click', this.handleOnClick);
    }
    render() {
        const text = this.t('more');
        return (index$1.h(index$1.Host, { key: '2a5e68510ccc967fdc1c02d57f9054a23eae6642', title: text }, this.states.activeMoreMenu && (index$1.h("div", { key: '67553a9e4301365cb1816d9b369fdcb57e1e36bf', class: "more-menu" }, index$1.h("slot", { key: 'cf06267ba8545153f4e6dc53a28eb70c3e6d4ce3', name: "more-elements" }))), index$1.h("dyte-controlbar-button", { key: 'd5a3897239defe9674d48a65a06ec0c1ff74620a', size: this.size, iconPack: this.iconPack, onClick: (e) => {
                e.stopPropagation();
                this.toggleMoreMenu();
            }, icon: this.iconPack.horizontal_dots, label: text, part: "controlbar-button" }), index$1.h("slot", { key: 'a628508c21b23931936ae0fd764abb35e766f228', name: "expanded" })));
    }
    get host() { return index$1.getElement(this); }
};
__decorate([
    index.SyncWithStore()
], DyteMoreToggle.prototype, "states", void 0);
__decorate([
    index.SyncWithStore()
], DyteMoreToggle.prototype, "size", void 0);
__decorate([
    index.SyncWithStore()
], DyteMoreToggle.prototype, "iconPack", void 0);
__decorate([
    index.SyncWithStore()
], DyteMoreToggle.prototype, "t", void 0);
DyteMoreToggle.style = DyteMoreToggleStyle0;

exports.dyte_more_toggle = DyteMoreToggle;
