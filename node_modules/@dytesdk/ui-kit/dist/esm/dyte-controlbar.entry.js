import { r as registerInstance, h, H as Host } from './index-08f4416b.js';
import { d as defaultConfig, a as defaultIconPack, c as useLanguage } from './ui-store-9dd5dd86.js';
import { R as Render } from './index-e2bee3ae.js';
import { S as SyncWithStore } from './index-39fa23f1.js';

const dyteControlbarCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{box-sizing:border-box;display:flex;align-items:center;gap:var(--dyte-space-0\\.5, 2px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / var(--tw-bg-opacity));padding-left:var(--dyte-space-4, 16px);padding-right:var(--dyte-space-4, 16px);position:relative;z-index:10}@media only screen and (max-device-height: 480px) and (orientation: landscape){:host{padding-top:var(--dyte-space-0, 0px) !important}}";
const DyteControlbarStyle0 = dyteControlbarCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteControlbar = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        /** Variant */
        this.variant = 'solid';
        /** Whether to render the default UI */
        this.disableRender = false;
        /** Config */
        this.config = defaultConfig;
        /** Icon Pack */
        this.iconPack = defaultIconPack;
        /** Language */
        this.t = useLanguage();
    }
    render() {
        const defaults = {
            meeting: this.meeting,
            config: this.config,
            states: this.states,
            t: this.t,
            iconPack: this.iconPack,
            size: this.size,
        };
        return (h(Host, { key: 'ef0ba36f97e1366fbeab0d7e5d0eeab4119e898c' }, !this.disableRender && (h(Render, { key: '2f8951fb89ebb0d81bc53eb3eeebd8c3de074ed9', element: "dyte-controlbar", defaults: defaults, onlyChildren: true })), h("slot", { key: 'd9e094a525ccffdd485eb6de23920c05c36c6ed1' })));
    }
};
__decorate([
    SyncWithStore()
], DyteControlbar.prototype, "meeting", void 0);
__decorate([
    SyncWithStore()
], DyteControlbar.prototype, "states", void 0);
__decorate([
    SyncWithStore()
], DyteControlbar.prototype, "iconPack", void 0);
__decorate([
    SyncWithStore()
], DyteControlbar.prototype, "t", void 0);
__decorate([
    SyncWithStore()
], DyteControlbar.prototype, "size", void 0);
DyteControlbar.style = DyteControlbarStyle0;

export { DyteControlbar as dyte_controlbar };
