import { createStore } from "@stencil/store";
import { useLanguage } from "../../lib/lang";
import { defaultIconPack } from "../../lib/icons";
import { getUserPreferences } from "../user-prefs";
import { defaultConfig } from "../../exports";
export const getInitialStates = () => ({
    meeting: 'idle',
    prefs: getUserPreferences(),
});
const uiStore = createStore({
    meeting: undefined,
    t: useLanguage(),
    iconPack: defaultIconPack,
    states: getInitialStates(),
    config: defaultConfig,
    size: undefined,
});
const elementsMap = new Map();
uiStore.use({
    set: (propName, newValue, oldValue) => {
        const elements = elementsMap.get(propName);
        if (elements) {
            elementsMap.set(propName, elements.filter((element) => {
                const currentValue = element[propName];
                if (currentValue === oldValue) {
                    element[propName] = newValue;
                    return true;
                }
                else {
                    return false;
                }
            }));
        }
    },
});
function appendElement(propName, element) {
    const elements = elementsMap.get(propName);
    if (!elements) {
        elementsMap.set(propName, [element]);
    }
    else {
        elements.push(element);
    }
}
function removeElement(propName, element) {
    const elements = elementsMap.get(propName);
    if (elements && elements.length > 0) {
        const index = elements.indexOf(element);
        if (index !== -1) {
            elements.splice(index, 1);
            elementsMap.set(propName, elements);
        }
    }
}
const uiState = uiStore.state;
export { uiStore, uiState, appendElement, removeElement };
