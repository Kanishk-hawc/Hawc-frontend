var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Host, h } from "@stencil/core";
import { SyncWithStore } from "../../utils/sync-with-store";
/**
 * A button that follows Dyte's Design System.
 *
 * @slot - Default slot
 * @slot start - Content placed to the start of the button, i.e; left.
 * @slot end - Content placed to the end of the button, i.e; right.
 */
export class DyteButton {
    constructor() {
        /** Button variant */
        this.variant = 'primary';
        /** Button type */
        this.kind = 'button';
        /** Whether to reverse order of children */
        this.reverse = false;
        /** Where the button is disabled or not */
        this.disabled = false;
        /** Button type */
        this.type = 'button';
    }
    render() {
        return (h(Host, { key: 'b6b2dd78e9e260a8009f6936800e94cee2146826' }, h("button", { key: 'd607bc0d6e12ba1dcd050691ef7a23636b72ea17', part: "button", type: this.type, disabled: this.disabled }, h("span", { key: '26166623d5ce0d9f9f23a57ff3793fab736bc90b', class: "start" }, h("slot", { key: '2c3ee6d68ac313347e4acf8b05af72c492d56d85', name: "start" })), h("span", { key: 'db86595c8d5763d45301c4a883e9ba3d013ed982', class: "content", part: "content" }, h("slot", { key: '3b3b5541f807f71779195e9b0e559add82805e6b' })), h("span", { key: '689b910116fd34150302a05f97d54a02df05431f', class: "end" }, h("slot", { key: '296ea6a1eec98b235f8ebaaf096acfcac88ffc20', name: "end" })))));
    }
    static get is() { return "dyte-button"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["dyte-button.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["dyte-button.css"]
        };
    }
    static get properties() {
        return {
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "Size",
                    "resolved": "\"lg\" | \"md\" | \"sm\" | \"xl\"",
                    "references": {
                        "Size": {
                            "location": "import",
                            "path": "../../types/props",
                            "id": "src/types/props.ts::Size"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Size"
                },
                "getter": false,
                "setter": false,
                "attribute": "size",
                "reflect": true
            },
            "variant": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "ButtonVariant",
                    "resolved": "\"danger\" | \"ghost\" | \"primary\" | \"secondary\"",
                    "references": {
                        "ButtonVariant": {
                            "location": "local",
                            "path": "/home/runner/work/ui-kit/ui-kit/packages/core/src/components/dyte-button/dyte-button.tsx",
                            "id": "src/components/dyte-button/dyte-button.tsx::ButtonVariant"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Button variant"
                },
                "getter": false,
                "setter": false,
                "attribute": "variant",
                "reflect": true,
                "defaultValue": "'primary'"
            },
            "kind": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "ButtonKind",
                    "resolved": "\"button\" | \"icon\" | \"wide\"",
                    "references": {
                        "ButtonKind": {
                            "location": "local",
                            "path": "/home/runner/work/ui-kit/ui-kit/packages/core/src/components/dyte-button/dyte-button.tsx",
                            "id": "src/components/dyte-button/dyte-button.tsx::ButtonKind"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Button type"
                },
                "getter": false,
                "setter": false,
                "attribute": "kind",
                "reflect": true,
                "defaultValue": "'button'"
            },
            "reverse": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Whether to reverse order of children"
                },
                "getter": false,
                "setter": false,
                "attribute": "reverse",
                "reflect": true,
                "defaultValue": "false"
            },
            "disabled": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Where the button is disabled or not"
                },
                "getter": false,
                "setter": false,
                "attribute": "disabled",
                "reflect": true,
                "defaultValue": "false"
            },
            "type": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "HTMLButtonElement['type']",
                    "resolved": "\"button\" | \"reset\" | \"submit\"",
                    "references": {
                        "HTMLButtonElement": {
                            "location": "global",
                            "id": "global::HTMLButtonElement"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Button type"
                },
                "getter": false,
                "setter": false,
                "attribute": "type",
                "reflect": true,
                "defaultValue": "'button'"
            }
        };
    }
}
__decorate([
    SyncWithStore()
], DyteButton.prototype, "size", void 0);
