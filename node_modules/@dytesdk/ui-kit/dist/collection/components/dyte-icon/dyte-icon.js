var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Host, h } from "@stencil/core";
import { SyncWithStore } from "../../utils/sync-with-store";
const parseIcon = (icon) => {
    try {
        return JSON.parse(icon);
    }
    catch (e) {
        return icon;
    }
};
/**
 * An icon component which accepts an svg string and renders it.
 */
export class DyteIcon {
    constructor() {
        /** Icon variant */
        this.variant = 'primary';
        /** Size */
        this.size = 'lg';
    }
    render() {
        return (h(Host, { key: '7c30027e6133e5ec64063771c08d37a75b5435bd' }, h("div", { key: '74cf660575c383f53e38ba4688612bc69dbe9b34', class: "icon-wrapper", innerHTML: parseIcon(this.icon), part: "wrapper" })));
    }
    static get is() { return "dyte-icon"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["dyte-icon.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["dyte-icon.css"]
        };
    }
    static get properties() {
        return {
            "icon": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Icon"
                },
                "getter": false,
                "setter": false,
                "attribute": "icon",
                "reflect": false
            },
            "variant": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "IconVariant",
                    "resolved": "\"danger\" | \"primary\" | \"secondary\"",
                    "references": {
                        "IconVariant": {
                            "location": "local",
                            "path": "/home/runner/work/ui-kit/ui-kit/packages/core/src/components/dyte-icon/dyte-icon.tsx",
                            "id": "src/components/dyte-icon/dyte-icon.tsx::IconVariant"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Icon variant"
                },
                "getter": false,
                "setter": false,
                "attribute": "variant",
                "reflect": true,
                "defaultValue": "'primary'"
            },
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "Size",
                    "resolved": "\"lg\" | \"md\" | \"sm\" | \"xl\"",
                    "references": {
                        "Size": {
                            "location": "import",
                            "path": "../../exports",
                            "id": "src/exports.ts::Size"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Size"
                },
                "getter": false,
                "setter": false,
                "attribute": "size",
                "reflect": true,
                "defaultValue": "'lg'"
            }
        };
    }
}
__decorate([
    SyncWithStore()
], DyteIcon.prototype, "size", void 0);
