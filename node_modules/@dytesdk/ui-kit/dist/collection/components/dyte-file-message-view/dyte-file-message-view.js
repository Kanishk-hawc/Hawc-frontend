var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { h } from "@stencil/core";
import { defaultIconPack } from "../../exports";
import { sanitizeLink } from "../../utils/string";
import { SyncWithStore } from "../../utils/sync-with-store";
import { downloadFile, getExtension, getFileSize } from "../../utils/file";
/**
 * A component which renders a file message.
 */
export class DyteFileMessageView {
    constructor() {
        /** Icon pack */
        this.iconPack = defaultIconPack;
    }
    render() {
        return (h("div", { key: '27ef49cd85552610eb2aa9cfb2046f13e98f0b87', class: "file" }, h("dyte-button", { key: '5553484477a3363eaa1a786f66a3e6a86036b7e3', variant: "secondary", kind: "icon", onClick: () => downloadFile(sanitizeLink(this.url), { name: this.name, fallbackName: 'file' }), part: "button" }, h("dyte-icon", { key: 'f929d033d0a67ea654cb306bb5c175860f935af3', icon: this.iconPack.download })), h("div", { key: '238b4f2a4b47ef5d7f58d1e767cb409476073950', class: "file-data" }, h("div", { key: 'a7497d08623ef878d05c91d02114dbe3b1e5ac9d', class: "name" }, this.name), h("div", { key: '3d361ca77f97b4f5d55ffa14173fb6be5e961140', class: "file-data-split" }, h("div", { key: 'd793ed396da5455431ca9a8937683a559531b575', class: "ext" }, getExtension(this.name)), h("span", { key: '098df4e883f1dfb51e6d4274ca6761f6ad5467a7', class: "divider" }), h("div", { key: 'f11132ba5caa159139a94edb1213904b51886a7d', class: "size" }, getFileSize(this.size))))));
    }
    static get is() { return "dyte-file-message-view"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["dyte-file-message-view.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["dyte-file-message-view.css"]
        };
    }
    static get properties() {
        return {
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Name of the file"
                },
                "getter": false,
                "setter": false,
                "attribute": "name",
                "reflect": false
            },
            "size": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Size of the file"
                },
                "getter": false,
                "setter": false,
                "attribute": "size",
                "reflect": false
            },
            "url": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": true,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Url of the file"
                },
                "getter": false,
                "setter": false,
                "attribute": "url",
                "reflect": false
            },
            "iconPack": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "IconPack",
                    "resolved": "{ people: string; people_checked: string; chat: string; poll: string; participants: string; rocket: string; call_end: string; share: string; mic_on: string; mic_off: string; video_on: string; video_off: string; share_screen_start: string; share_screen_stop: string; share_screen_person: string; clock: string; dismiss: string; send: string; search: string; more_vertical: string; chevron_down: string; chevron_up: string; chevron_left: string; chevron_right: string; settings: string; wifi: string; speaker: string; speaker_off: string; download: string; full_screen_maximize: string; full_screen_minimize: string; copy: string; attach: string; image: string; emoji_multiple: string; image_off: string; disconnected: string; wand: string; recording: string; subtract: string; stop_recording: string; warning: string; pin: string; pin_off: string; spinner: string; breakout_rooms: string; add: string; shuffle: string; edit: string; delete: string; back: string; save: string; web: string; checkmark: string; spotlight: string; join_stage: string; leave_stage: string; pip_off: string; pip_on: string; signal_1: string; signal_2: string; signal_3: string; signal_4: string; signal_5: string; start_livestream: string; stop_livestream: string; viewers: string; debug: string; info: string; devices: string; horizontal_dots: string; ai_sparkle: string; meeting_ai: string; create_channel: string; create_channel_illustration: string; captionsOn: string; captionsOff: string; play: string; pause: string; fastForward: string; minimize: string; maximize: string; }",
                    "references": {
                        "IconPack": {
                            "location": "import",
                            "path": "../../exports",
                            "id": "src/exports.ts::IconPack"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Icon pack"
                },
                "getter": false,
                "setter": false,
                "defaultValue": "defaultIconPack"
            }
        };
    }
}
__decorate([
    SyncWithStore()
], DyteFileMessageView.prototype, "iconPack", void 0);
