import { p as proxyCustomElement, H, h, e as Host } from './p-1d5392d7.js';
import { c as useLanguage, a as defaultIconPack, s as showLivestream } from './p-dce5d30e.js';
import './p-e497ad6d.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import { d as defineCustomElement$1 } from './p-a443344b.js';

const dyteLivestreamIndicatorCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{margin-left:var(--dyte-space-2, 8px);margin-right:var(--dyte-space-2, 8px);display:flex}:host[size='sm']{margin-left:var(--dyte-space-1, 4px);margin-right:var(--dyte-space-1, 4px)}.indicator{display:flex;flex-direction:row;align-items:center;font-size:14px;--tw-text-opacity:1;color:rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-text-opacity))}dyte-icon{margin-right:var(--dyte-space-1, 4px);height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px);animation:blink 4s linear infinite}:host([size='sm']) dyte-icon{height:var(--dyte-space-4, 16px);width:var(--dyte-space-4, 16px)}:host([size='sm']) .indicator span{display:none}@keyframes blink{0%,10%{opacity:0}11%,100%{opacity:1}}";
const DyteLivestreamIndicatorStyle0 = dyteLivestreamIndicatorCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteLivestreamIndicator = /*@__PURE__*/ proxyCustomElement(class DyteLivestreamIndicator extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        /** Language */
        this.t = useLanguage();
        /** Icon pack */
        this.iconPack = defaultIconPack;
        this.setIsLivestreaming = (state) => {
            this.isLivestreaming = state === 'LIVESTREAMING';
        };
    }
    connectedCallback() {
        this.meetingChanged(this.meeting);
    }
    disconnectedCallback() {
        var _a, _b;
        (_b = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.livestream) === null || _b === void 0 ? void 0 : _b.removeListener('livestreamUpdate', this.setIsLivestreaming);
    }
    meetingChanged(meeting) {
        var _a, _b;
        if (meeting == null)
            return;
        this.setIsLivestreaming((_a = this.meeting.livestream) === null || _a === void 0 ? void 0 : _a.state);
        (_b = this.meeting.livestream) === null || _b === void 0 ? void 0 : _b.on('livestreamUpdate', this.setIsLivestreaming);
    }
    render() {
        if (!showLivestream(this.meeting) || !this.isLivestreaming)
            return;
        return (h(Host, null, h("div", { class: "indicator", "aria-label": this.t('livestream.indicator'), part: "indicator" }, h("dyte-icon", { icon: this.iconPack.start_livestream, size: this.size }), h("span", null, this.t('LIVE')))));
    }
    static get watchers() { return {
        "meeting": ["meetingChanged"]
    }; }
    static get style() { return DyteLivestreamIndicatorStyle0; }
}, [1, "dyte-livestream-indicator", {
        "meeting": [16],
        "size": [513],
        "t": [16],
        "iconPack": [16],
        "isLivestreaming": [32]
    }, undefined, {
        "meeting": ["meetingChanged"]
    }]);
__decorate([
    SyncWithStore()
], DyteLivestreamIndicator.prototype, "meeting", void 0);
__decorate([
    SyncWithStore()
], DyteLivestreamIndicator.prototype, "size", void 0);
__decorate([
    SyncWithStore()
], DyteLivestreamIndicator.prototype, "t", void 0);
__decorate([
    SyncWithStore()
], DyteLivestreamIndicator.prototype, "iconPack", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-livestream-indicator", "dyte-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-livestream-indicator":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteLivestreamIndicator);
            }
            break;
        case "dyte-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { DyteLivestreamIndicator as D, defineCustomElement as d };
