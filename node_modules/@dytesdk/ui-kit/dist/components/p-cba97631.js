import { p as proxyCustomElement, H, h, e as Host } from './p-1d5392d7.js';
import { a as defaultIconPack } from './p-dce5d30e.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import { d as defineCustomElement$1 } from './p-a443344b.js';

const dyteSpinnerCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{box-sizing:border-box;display:block;height:var(--dyte-space-10, 40px);width:var(--dyte-space-10, 40px);--dyte-spinner-color:currentColor}.spinner{height:100%;width:100%}@keyframes spin{to{transform:rotate(360deg)}}.spinner{animation:spin 1s linear infinite;border-radius:9999px;background-color:transparent;animation-duration:1.3s}:host([size='md']){height:var(--dyte-space-6, 24px);width:var(--dyte-space-6, 24px)}:host([size='sm']){height:var(--dyte-space-4, 16px);width:var(--dyte-space-4, 16px)}";
const DyteSpinnerStyle0 = dyteSpinnerCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteSpinner = /*@__PURE__*/ proxyCustomElement(class DyteSpinner extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        /** Icon pack */
        this.iconPack = defaultIconPack;
        /** Size */
        this.size = 'md';
    }
    render() {
        return (h(Host, { key: 'f8333e747d1132d7bc402861ad4977d4c48ce101' }, h("dyte-icon", { key: '5ba9127b0a2096f7315e1b349a2c1499f7bcf20c', class: "spinner", icon: this.iconPack.spinner })));
    }
    static get style() { return DyteSpinnerStyle0; }
}, [1, "dyte-spinner", {
        "iconPack": [16],
        "size": [513]
    }]);
__decorate([
    SyncWithStore()
], DyteSpinner.prototype, "iconPack", void 0);
__decorate([
    SyncWithStore()
], DyteSpinner.prototype, "size", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-spinner", "dyte-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-spinner":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteSpinner);
            }
            break;
        case "dyte-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { DyteSpinner as D, defineCustomElement as d };
