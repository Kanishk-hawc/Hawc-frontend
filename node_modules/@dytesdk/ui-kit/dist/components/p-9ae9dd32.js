import { p as proxyCustomElement, H, h, e as Host } from './p-1d5392d7.js';
import { a as defaultIconPack, c as useLanguage } from './p-dce5d30e.js';
import { S as SyncWithStore } from './p-9ae68517.js';

const dyteMenuItemCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:flex;align-items:center;padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);padding-top:var(--dyte-space-2, 8px);padding-bottom:var(--dyte-space-2, 8px);cursor:pointer;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms;color:rgb(var(--dyte-colors-text-1000, 255 255 255));font-size:14px}::slotted([slot='start']){margin-right:var(--dyte-space-2, 8px)}::slotted([slot='end']){margin-left:var(--dyte-space-2, 8px)}:host(:hover){--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity))}:host(.red){--tw-text-opacity:1;color:rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-text-opacity))}";
const DyteMenuItemStyle0 = dyteMenuItemCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteMenuItem = /*@__PURE__*/ proxyCustomElement(class DyteMenuItem extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        /** Icon pack */
        this.iconPack = defaultIconPack;
        /** Language */
        this.t = useLanguage();
    }
    render() {
        return (h(Host, { key: '2e3a7e78987d9544820b74e2c83e8cd2c1b38e0b' }, h("slot", { key: 'be5768e5d7ec85f4d9e5c7fc43d3edd612f518c7', name: "start" }), h("slot", { key: 'ce236f02c727fb4e42ee8cae25bc7bf00479be01' }), h("slot", { key: '92a2fb4f3a5fa3f03c396a1483b1eabfa83235e7', name: "end" })));
    }
    static get style() { return DyteMenuItemStyle0; }
}, [1, "dyte-menu-item", {
        "size": [513],
        "iconPack": [16],
        "t": [16]
    }]);
__decorate([
    SyncWithStore()
], DyteMenuItem.prototype, "size", void 0);
__decorate([
    SyncWithStore()
], DyteMenuItem.prototype, "iconPack", void 0);
__decorate([
    SyncWithStore()
], DyteMenuItem.prototype, "t", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-menu-item"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-menu-item":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteMenuItem);
            }
            break;
    } });
}
defineCustomElement();

export { DyteMenuItem as D, defineCustomElement as d };
