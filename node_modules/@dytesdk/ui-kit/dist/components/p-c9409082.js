import { p as proxyCustomElement, H, h } from './p-1d5392d7.js';
import { a as defaultIconPack } from './p-dce5d30e.js';
import './p-e497ad6d.js';
import { a as sanitizeLink } from './p-338c7261.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import { g as getExtension, a as getFileSize, d as downloadFile } from './p-9fc565cf.js';
import { d as defineCustomElement$2 } from './p-e7892c80.js';
import { d as defineCustomElement$1 } from './p-a443344b.js';

const dyteFileMessageViewCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.file{display:flex;align-items:center;gap:var(--dyte-space-1, 4px);padding-left:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-2, 8px);padding-top:var(--dyte-space-1, 4px);padding-bottom:var(--dyte-space-1, 4px);min-width:var(--dyte-space-40, 160px);max-width:var(--dyte-space-64, 256px);border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}.file .file-data{margin-left:var(--dyte-space-1, 4px);flex:1 1 0%}.file .file-data .name{word-break:break-all;color:rgb(var(--dyte-colors-text-1000, 255 255 255));overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.file .file-data .file-data-split{margin-top:var(--dyte-space-0\\.5, 2px);display:flex;align-items:center;font-size:12px}.file .file-data .file-data-split .ext{margin-right:var(--dyte-space-2, 8px);text-transform:uppercase;overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}.file .file-data .file-data-split .divider{height:var(--dyte-space-4, 16px);width:var(--dyte-space-0\\.5, 2px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity))}.file .file-data .file-data-split .size{margin-left:var(--dyte-space-2, 8px)}";
const DyteFileMessageViewStyle0 = dyteFileMessageViewCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteFileMessageView = /*@__PURE__*/ proxyCustomElement(class DyteFileMessageView extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        /** Icon pack */
        this.iconPack = defaultIconPack;
    }
    render() {
        return (h("div", { key: '27ef49cd85552610eb2aa9cfb2046f13e98f0b87', class: "file" }, h("dyte-button", { key: '5553484477a3363eaa1a786f66a3e6a86036b7e3', variant: "secondary", kind: "icon", onClick: () => downloadFile(sanitizeLink(this.url), { name: this.name, fallbackName: 'file' }), part: "button" }, h("dyte-icon", { key: 'f929d033d0a67ea654cb306bb5c175860f935af3', icon: this.iconPack.download })), h("div", { key: '238b4f2a4b47ef5d7f58d1e767cb409476073950', class: "file-data" }, h("div", { key: 'a7497d08623ef878d05c91d02114dbe3b1e5ac9d', class: "name" }, this.name), h("div", { key: '3d361ca77f97b4f5d55ffa14173fb6be5e961140', class: "file-data-split" }, h("div", { key: 'd793ed396da5455431ca9a8937683a559531b575', class: "ext" }, getExtension(this.name)), h("span", { key: '098df4e883f1dfb51e6d4274ca6761f6ad5467a7', class: "divider" }), h("div", { key: 'f11132ba5caa159139a94edb1213904b51886a7d', class: "size" }, getFileSize(this.size))))));
    }
    static get style() { return DyteFileMessageViewStyle0; }
}, [1, "dyte-file-message-view", {
        "name": [1],
        "size": [2],
        "url": [1],
        "iconPack": [16]
    }]);
__decorate([
    SyncWithStore()
], DyteFileMessageView.prototype, "iconPack", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-file-message-view", "dyte-button", "dyte-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-file-message-view":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteFileMessageView);
            }
            break;
        case "dyte-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "dyte-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { DyteFileMessageView as D, defineCustomElement as d };
