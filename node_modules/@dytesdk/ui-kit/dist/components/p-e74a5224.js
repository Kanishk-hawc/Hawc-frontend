import { p as proxyCustomElement, H, h } from './p-1d5392d7.js';
import { h as hasOnlyEmojis } from './p-338c7261.js';
import { d as defineCustomElement$1 } from './p-764a90a3.js';

const dyteTextMessageViewCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.text{word-break:break-word;display:block;overflow-wrap:break-word;line-height:1.375}.text.emoji{font-size:24px}";
const DyteTextMessageViewStyle0 = dyteTextMessageViewCss;

const DyteTextMessageView = /*@__PURE__*/ proxyCustomElement(class DyteTextMessageView extends H {
    constructor() {
        super();
        this.__registerHost();
        /** Renders text as markdown (default = true) */
        this.isMarkdown = false;
    }
    render() {
        return (h("p", { key: '0bfd2379f422f2ec89f13714fd40ca29b73bed0d', class: { text: true, emoji: hasOnlyEmojis(this.text) } }, this.isMarkdown ? h("dyte-markdown-view", { text: this.text }) : this.text));
    }
    static get style() { return DyteTextMessageViewStyle0; }
}, [0, "dyte-text-message-view", {
        "text": [1],
        "isMarkdown": [4, "is-markdown"]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-text-message-view", "dyte-markdown-view"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-text-message-view":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteTextMessageView);
            }
            break;
        case "dyte-markdown-view":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { DyteTextMessageView as D, defineCustomElement as d };
