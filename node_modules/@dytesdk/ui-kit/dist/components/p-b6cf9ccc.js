import { p as proxyCustomElement, H, h } from './p-1d5392d7.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import { a as defaultIconPack, c as useLanguage } from './p-dce5d30e.js';
import './p-e497ad6d.js';
import { d as defineCustomElement$3 } from './p-e7892c80.js';
import { d as defineCustomElement$2 } from './p-a443344b.js';
import { d as defineCustomElement$1 } from './p-b4f8107f.js';

const dyteEmojiPickerButtonCss = ":host{}";
const DyteEmojiPickerButtonStyle0 = dyteEmojiPickerButtonCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteEmojiPickerButton = /*@__PURE__*/ proxyCustomElement(class DyteEmojiPickerButton extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        /** Icon pack */
        this.iconPack = defaultIconPack;
        /** Language */
        this.t = useLanguage();
    }
    render() {
        return (h("dyte-tooltip", { key: 'ed7771da8c8790052743bc9fe8da64c352b99826', label: this.t('chat.send_emoji') }, h("dyte-button", { key: '16c59bbb9a708844c96569b89bbc246653c9d601', variant: "ghost", kind: "icon", class: { active: this.isActive }, title: this.t('chat.send_emoji') }, h("dyte-icon", { key: '27baf076cb231a538a31fd3759154a62d02c28b9', icon: this.iconPack.emoji_multiple }))));
    }
    static get style() { return DyteEmojiPickerButtonStyle0; }
}, [1, "dyte-emoji-picker-button", {
        "iconPack": [16],
        "t": [16],
        "isActive": [4, "is-active"]
    }]);
__decorate([
    SyncWithStore()
], DyteEmojiPickerButton.prototype, "iconPack", void 0);
__decorate([
    SyncWithStore()
], DyteEmojiPickerButton.prototype, "t", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-emoji-picker-button", "dyte-button", "dyte-icon", "dyte-tooltip"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-emoji-picker-button":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteEmojiPickerButton);
            }
            break;
        case "dyte-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "dyte-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "dyte-tooltip":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { DyteEmojiPickerButton as D, defineCustomElement as d };
