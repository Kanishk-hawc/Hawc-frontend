import { p as proxyCustomElement, H, h, e as Host } from './p-1d5392d7.js';
import { d as defaultConfig, a as defaultIconPack, c as useLanguage } from './p-dce5d30e.js';
import './p-e497ad6d.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import { d as defineCustomElement$4 } from './p-a443344b.js';
import { d as defineCustomElement$3 } from './p-9740eba3.js';
import { d as defineCustomElement$2 } from './p-cba97631.js';

const dyteIdleScreenCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{height:100%;width:100%;display:flex;flex-direction:column;align-items:center;justify-content:center}.ctr{display:flex;flex-direction:column;align-items:center;gap:var(--dyte-space-8, 32px)}dyte-logo.loaded{height:var(--dyte-space-12, 48px)}dyte-spinner{height:var(--dyte-space-12, 48px);width:var(--dyte-space-12, 48px);--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}";
const DyteIdleScreenStyle0 = dyteIdleScreenCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteIdleScreen$1 = /*@__PURE__*/ proxyCustomElement(class DyteIdleScreen extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        /** Config object */
        this.config = defaultConfig;
        /** Icon pack */
        this.iconPack = defaultIconPack;
        /** Language */
        this.t = useLanguage();
    }
    render() {
        return (h(Host, { key: '12d044e448e70b95bbaadb456a59ae322cbec4cb' }, h("slot", { key: 'befccedc79773180014dbd0fc9b944055f888e3d' }, h("div", { key: '98c261026b266fbb8b8bdbc143aefc390f3adeb0', class: "ctr", part: "container" }, h("dyte-logo", { key: '900a6cc8979009204f29b31908591319e00952ad', meeting: this.meeting, config: this.config, t: this.t, part: "logo" }), h("dyte-spinner", { key: 'a9575923df832e8af9b130eee2dbd0e8fc42e181', "aria-label": "Idle, waiting for meeting data", part: "spinner", iconPack: this.iconPack })))));
    }
    static get style() { return DyteIdleScreenStyle0; }
}, [1, "dyte-idle-screen", {
        "meeting": [16],
        "config": [16],
        "iconPack": [16],
        "t": [16]
    }]);
__decorate([
    SyncWithStore()
], DyteIdleScreen$1.prototype, "meeting", void 0);
__decorate([
    SyncWithStore()
], DyteIdleScreen$1.prototype, "iconPack", void 0);
__decorate([
    SyncWithStore()
], DyteIdleScreen$1.prototype, "t", void 0);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-idle-screen", "dyte-icon", "dyte-logo", "dyte-spinner"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-idle-screen":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteIdleScreen$1);
            }
            break;
        case "dyte-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$4();
            }
            break;
        case "dyte-logo":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "dyte-spinner":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
    } });
}
defineCustomElement$1();

const DyteIdleScreen = DyteIdleScreen$1;
const defineCustomElement = defineCustomElement$1;

export { DyteIdleScreen, defineCustomElement };
