import { p as proxyCustomElement, H, d as createEvent, h, e as Host } from './p-1d5392d7.js';
import { c as useLanguage, a as defaultIconPack } from './p-dce5d30e.js';
import { d as downloadFile } from './p-9fc565cf.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import { f as formatName, s as shorten } from './p-338c7261.js';
import { d as defineCustomElement$2 } from './p-e7892c80.js';
import { d as defineCustomElement$1 } from './p-a443344b.js';

const dyteImageViewerCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\.5, 6px);width:var(--dyte-space-1\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host{width:1140px;max-width:100%;box-sizing:border-box;display:flex;flex-direction:column;padding:var(--dyte-space-6, 24px);padding-top:var(--dyte-space-5, 20px);overflow-y:auto;color:rgb(var(--dyte-colors-text-1000, 255 255 255));z-index:40;border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity))}.displayName{font-weight:700}.image-ctr{margin-top:var(--dyte-space-2, 8px);box-sizing:border-box;display:flex;justify-content:center;overflow:hidden}.actions{display:flex;align-items:center;justify-content:flex-end;gap:var(--dyte-space-2, 8px)}img{box-sizing:border-box;display:block;max-height:100%;max-width:100%;-o-object-fit:contain;object-fit:contain}.header{display:flex;align-items:center;justify-content:space-between;padding-bottom:var(--dyte-space-4, 16px)}.shared-by-user{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}:host([size='sm']) .header{flex-direction:column}:host([size='sm']) .header .actions{margin-top:var(--dyte-space-4, 16px)}";
const DyteImageViewerStyle0 = dyteImageViewerCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteImageViewer = /*@__PURE__*/ proxyCustomElement(class DyteImageViewer extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.close = createEvent(this, "close", 7);
        /** Language */
        this.t = useLanguage();
        /** Icon pack */
        this.iconPack = defaultIconPack;
        this.keypressListener = (e) => {
            if (e.key === 'Escape') {
                this.close.emit();
            }
        };
        this.handleOutsideClick = () => this.close.emit();
    }
    connectedCallback() {
        document.addEventListener('keydown', this.keypressListener);
        document.addEventListener('click', this.handleOutsideClick);
    }
    disconnectedCallback() {
        document.removeEventListener('keydown', this.keypressListener);
        document.removeEventListener('click', this.handleOutsideClick);
    }
    render() {
        return (h(Host, { key: '2491b39127e06ed796c380216cab38773f36209a', class: "scrollbar", onClick: (e) => e.stopPropagation() }, h("div", { key: '27dac52e6465f3e9dbfd415bcc1f34c6c1596635', class: "header" }, h("div", { key: '7e9dab9f453cbc1bb7cd6cb2bab297bf671ca7d1', class: "shared-by-user" }, this.t('chat.img.shared_by'), ' ', h("span", { key: '3ef88112f23a713d229b55d3bbc07cde28f5c461', class: "displayName" }, formatName(shorten(this.image.displayName)))), h("div", { key: '15a34a4d4b095ff64acd4682e7b5c8b8c85e8ca3', class: "actions" }, h("dyte-button", { key: '88195fbcf9286c332d460e787ec378944779db1b', onClick: () => downloadFile(this.image.link, { fallbackName: 'image' }) }, h("dyte-icon", { key: '867a85747399a09446c0fde37738a898b999782d', icon: this.iconPack.download, slot: "start" }), "Download"), h("dyte-button", { key: '21a3c92ac5c52cd64911a3bbe115c5d7b0cf3397', kind: "icon", variant: "secondary", onClick: () => this.close.emit() }, h("dyte-icon", { key: '84d6450e7669cf9155c4cd2bb3be3d5f726033dc', icon: this.iconPack.dismiss })))), h("div", { key: '8db9e6e84b7836f089a6a98068c26dbfafd73529', class: "image-ctr" }, h("img", { key: '200e0b6906bed300a4514b3b1baac10645803202', src: this.image.link }))));
    }
    static get style() { return DyteImageViewerStyle0; }
}, [1, "dyte-image-viewer", {
        "image": [16],
        "size": [513],
        "t": [16],
        "iconPack": [16]
    }]);
__decorate([
    SyncWithStore()
], DyteImageViewer.prototype, "size", void 0);
__decorate([
    SyncWithStore()
], DyteImageViewer.prototype, "t", void 0);
__decorate([
    SyncWithStore()
], DyteImageViewer.prototype, "iconPack", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-image-viewer", "dyte-button", "dyte-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-image-viewer":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteImageViewer);
            }
            break;
        case "dyte-button":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "dyte-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { DyteImageViewer as D, defineCustomElement as d };
