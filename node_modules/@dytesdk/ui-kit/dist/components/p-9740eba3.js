import { p as proxyCustomElement, H, h, e as Host } from './p-1d5392d7.js';
import { d as defaultConfig, c as useLanguage } from './p-dce5d30e.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import './p-e497ad6d.js';

const dyteLogoCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:flex;flex-direction:column;align-items:center;justify-content:center;color:rgb(var(--dyte-colors-text-1000, 255 255 255));height:100%;width:auto}svg,img{height:100%;width:auto}.brand-color{--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}";
const DyteLogoStyle0 = dyteLogoCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteLogo = /*@__PURE__*/ proxyCustomElement(class DyteLogo extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        /** Config object */
        this.config = defaultConfig;
        /** Language */
        this.t = useLanguage();
    }
    connectedCallback() {
        this.configChanged(this.config);
        this.meetingChanged(this.meeting);
    }
    configChanged(config) {
        var _a;
        if (config != null) {
            const configLogo = (_a = config === null || config === void 0 ? void 0 : config.designTokens) === null || _a === void 0 ? void 0 : _a.logo;
            // NOTE(callmetarush): Only update logo if not passed via prop
            if (configLogo != null && this.logoUrl == null) {
                this.logoUrl = configLogo;
            }
        }
    }
    meetingChanged(meeting) {
        var _a, _b, _c, _d;
        if (meeting != null) {
            const meetingLogo = (_d = (_c = (_b = (_a = meeting.self) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.header) === null || _c === void 0 ? void 0 : _c.elements) === null || _d === void 0 ? void 0 : _d.logo;
            if (meetingLogo != null && this.logoUrl == null) {
                this.logoUrl = meetingLogo;
            }
        }
    }
    render() {
        if (!this.logoUrl || this.logoUrl === '') {
            return null;
        }
        const logo = this.logoUrl;
        const text = this.t('logo');
        return (h(Host, { class: "loaded" }, h("img", { src: logo, alt: text })));
    }
    static get watchers() { return {
        "config": ["configChanged"],
        "meeting": ["meetingChanged"]
    }; }
    static get style() { return DyteLogoStyle0; }
}, [1, "dyte-logo", {
        "logoUrl": [1025, "logo-url"],
        "config": [16],
        "meeting": [16],
        "t": [16]
    }, undefined, {
        "config": ["configChanged"],
        "meeting": ["meetingChanged"]
    }]);
__decorate([
    SyncWithStore()
], DyteLogo.prototype, "meeting", void 0);
__decorate([
    SyncWithStore()
], DyteLogo.prototype, "t", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-logo"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-logo":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteLogo);
            }
            break;
    } });
}
defineCustomElement();

export { DyteLogo as D, defineCustomElement as d };
