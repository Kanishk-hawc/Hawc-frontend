import { p as proxyCustomElement, H, d as createEvent, h, e as Host } from './p-1d5392d7.js';
import { a as defaultIconPack, c as useLanguage } from './p-dce5d30e.js';
import { S as SyncWithStore } from './p-9ae68517.js';
import { d as defineCustomElement$1 } from './p-a443344b.js';

const dyteOverlayModalCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:flex;height:100%;width:100%;flex-direction:column;align-items:center;justify-content:center;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / 0.6);position:fixed;top:var(--dyte-space-0, 0px);right:var(--dyte-space-0, 0px);z-index:50}dyte-icon{height:var(--dyte-space-20, 80px)}h2{margin:var(--dyte-space-2, 8px);font-weight:500}p{margin:var(--dyte-space-0, 0px);font-size:16px}";
const DyteOverlayModalStyle0 = dyteOverlayModalCss;

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
const DyteOverlayModal = /*@__PURE__*/ proxyCustomElement(class DyteOverlayModal extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
        /** Icon pack */
        this.iconPack = defaultIconPack;
        /** Language */
        this.t = useLanguage();
    }
    connectedCallback() {
        if (this.states.activeOverlayModal.timeout) {
            setTimeout(() => {
                this.stateUpdate.emit({ activeOverlayModal: { active: false } });
            }, this.states.activeOverlayModal.timeout);
        }
    }
    render() {
        return (h(Host, { key: 'b4fa570e714d3297c1f7f5b25038d877f6001319' }, h("dyte-icon", { key: 'df183bada8963c6fbb22f27768e96922232201b7', icon: this.states.activeOverlayModal.icon }), h("h2", { key: 'c028667f07d9db82e27e9e25f6e1d8712edccf20' }, this.states.activeOverlayModal.title), h("p", { key: '74e847ad00e26147494acfb74481025e5c62f27c' }, this.states.activeOverlayModal.description)));
    }
    static get style() { return DyteOverlayModalStyle0; }
}, [1, "dyte-overlay-modal", {
        "meeting": [16],
        "states": [16],
        "iconPack": [16],
        "t": [16]
    }]);
__decorate([
    SyncWithStore()
], DyteOverlayModal.prototype, "meeting", void 0);
__decorate([
    SyncWithStore()
], DyteOverlayModal.prototype, "states", void 0);
__decorate([
    SyncWithStore()
], DyteOverlayModal.prototype, "iconPack", void 0);
__decorate([
    SyncWithStore()
], DyteOverlayModal.prototype, "t", void 0);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["dyte-overlay-modal", "dyte-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "dyte-overlay-modal":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DyteOverlayModal);
            }
            break;
        case "dyte-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}
defineCustomElement();

export { DyteOverlayModal as D, defineCustomElement as d };
