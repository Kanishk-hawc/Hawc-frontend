import { IconPack } from '../../lib/icons';
import { Meeting, Peer } from '../../types/dyte-client';
import { Size } from '../../types/props';
import { UIConfig } from '../../types/ui-config';
import { DyteI18n } from '../../lib/lang';
import { ParticipantsViewMode } from '../dyte-participants/dyte-participants';
import { States } from '../../exports';
/**
 * A component which lists all participants, with ability to
 * run privileged actions on each participant according to your permissions.
 */
export declare class DyteParticipants {
    private participantJoinedListener;
    private participantLeftListener;
    /** Meeting object */
    meeting: Meeting;
    /** Meeting object */
    states: States;
    /** Config */
    config: UIConfig;
    /** Size */
    size: Size;
    /** Hide Stage Participants Count Header */
    hideHeader: boolean;
    /** Icon pack */
    iconPack: IconPack;
    /** View mode for participants list */
    view: ParticipantsViewMode;
    /** Language */
    t: DyteI18n;
    /** Search */
    search: string;
    participants: Peer[];
    connectedCallback(): void;
    disconnectedCallback(): void;
    meetingChanged(meeting: Meeting): void;
    searchChanged(search: string): void;
    private createParticipantNode;
    private getParticipants;
    private updateStageList;
    render(): any;
}
