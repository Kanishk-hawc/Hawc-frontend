import { States, Size, IconPack, DyteI18n } from '../../exports';
import { Meeting } from '../../types/dyte-client';
import { FormattedStatsObj, StatsHealth } from '../../utils/debugger-utils';
interface BatteryManager extends EventTarget {
    charging: boolean;
    chargingTime: number;
    dischargingTime: number;
    level: number;
    onchargingchange: ((this: BatteryManager, event: Event) => any) | null;
    onchargingtimechange: ((this: BatteryManager, event: Event) => any) | null;
    ondischargingtimechange: ((this: BatteryManager, event: Event) => any) | null;
    onlevelchange: ((this: BatteryManager, event: Event) => any) | null;
}
export declare class DyteDebuggerSystem {
    /** Meeting object */
    meeting: Meeting;
    /** States object */
    states: States;
    /** Size */
    size: Size;
    /** Icon pack */
    iconPack: IconPack;
    /** Language */
    t: DyteI18n;
    /** Is Network section expanded */
    isBatterySectionOpen: boolean;
    /** Summarised health of network stats */
    batterySectionHealth: StatsHealth;
    /** Battery manager */
    battery: BatteryManager;
    /** Stats as formatted array to display */
    batteryFormattedStats: FormattedStatsObj[];
    private toggleSection;
    private batteryUpdateListener;
    connectedCallback(): void;
    disconnectedCallback(): void;
    meetingChanged(meeting: Meeting): Promise<void>;
    render(): any;
}
export {};
