import { Meeting } from '../../types/dyte-client';
import { IconPack } from '../../lib/icons';
import { DyteI18n } from '../../lib/lang';
import { Size, States } from '../../types/props';
/**
 * A component which lets to manage your audio devices and audio preferences.
 *
 * Emits `dyteStateUpdate` event with data for muting notification sounds:
 * ```ts
 * {
 *  prefs: {
 *    muteNotificationSounds: boolean
 *  }
 * }
 * ```
 */
export declare class DyteSpeakerSelector {
    private testAudioEl;
    /** Meeting object */
    meeting: Meeting;
    /** States object */
    states: States;
    /** variant */
    variant: 'full' | 'inline';
    /** Size */
    size: Size;
    /** Icon pack */
    iconPack: IconPack;
    /** Language */
    t: DyteI18n;
    speakerDevices: MediaDeviceInfo[];
    currentDevices: {
        speaker: MediaDeviceInfo;
    };
    connectedCallback(): void;
    disconnectedCallback(): void;
    private deviceListUpdateListener;
    private deviceUpdateListener;
    private mediaPermissionUpdate;
    meetingChanged(meeting: Meeting): void;
    private testAudio;
    private setDevice;
    render(): any;
}
