import {
  shorten
} from "./chunk-G3PIBVWD.js";
import {
  Render
} from "./chunk-3STK22JP.js";
import {
  SyncWithStore
} from "./chunk-PQDXOFV7.js";
import {
  Host,
  createEvent,
  defaultConfig,
  defaultIconPack,
  gracefulStorage$1,
  h,
  registerInstance,
  useLanguage
} from "./chunk-HB73EBAH.js";
import "./chunk-HFNDKYVF.js";

// node_modules/@dytesdk/ui-kit/dist/esm/dyte-setup-screen.entry.js
var dyteSetupScreenCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{box-sizing:border-box;padding:var(--dyte-space-4, 16px);height:100%;min-height:100%;width:100%;display:flex;place-items:center;justify-content:center;--dyte-controlbar-button-background-color:rgb(var(--dyte-colors-background-700, 44 44 44))}.container{width:100%;max-width:1080px;display:flex;align-items:center;justify-content:space-evenly;gap:var(--dyte-space-4, 16px)}.metadata{width:100%;max-width:var(--dyte-space-80, 320px)}.label{display:flex;flex-direction:column;align-items:center;font-size:14px}.label p{margin-top:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-2, 8px);display:inline-block;font-size:16px}.container-tile{display:flex;height:100%;width:100%;max-width:584px;flex-direction:column;gap:var(--dyte-space-2, 8px)}.name{margin:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-6, 24px);text-align:center;font-size:28px;font-weight:500;letter-spacing:-0.025em;overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}input{margin-bottom:var(--dyte-space-6, 24px);display:block;height:var(--dyte-space-10, 40px);width:100%;max-width:var(--dyte-space-80, 320px);border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / var(--tw-bg-opacity));padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);color:rgb(var(--dyte-colors-text-1000, 255 255 255));box-sizing:border-box;font-size:16px;outline:2px solid transparent;outline-offset:2px;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}input::-moz-placeholder{color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}input::placeholder{color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}input{border:var(--dyte-border-width-sm, 1px) solid rgb(var(--dyte-colors-background-600, 60 60 60))}input:focus{--tw-border-opacity:1;border-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-border-opacity))}dyte-spinner{color:rgb(var(--dyte-colors-text-1000, 255 255 255));--icon-size:var(--dyte-space-8, 32px)}:host([size='sm']) .container,:host([size='md']) .container{height:100%;flex-direction:column;justify-content:space-evenly}:host([size='sm']) .container-tile,:host([size='md']) .container-tile{height:-moz-min-content;height:min-content;flex-direction:column;justify-content:center}dyte-participant-tile{height:auto;width:100%;max-width:584px}.media-selectors{display:flex;flex-direction:column;justify-content:space-between}.media-selectors .row{display:grid;grid-template-columns:repeat(2, minmax(0, 1fr))}.no-network-badge{margin-top:var(--dyte-space-2, 8px);display:flex;width:100%;flex-direction:row;align-items:center;justify-content:flex-start;border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));background-color:rgba(var(--dyte-colors-danger, 255 45 45) / 0.1);padding-top:var(--dyte-space-1, 4px);padding-bottom:var(--dyte-space-1, 4px);font-size:12px;color:rgba(var(--dyte-colors-danger, 255 45 45) / 0.75)}.no-network-badge dyte-icon{margin-left:var(--dyte-space-2, 8px);margin-right:var(--dyte-space-2, 8px)}";
var DyteSetupScreenStyle0 = dyteSetupScreenCss;
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DyteSetupScreen = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
    this.config = defaultConfig;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.isJoining = false;
    this.canEditName = true;
    this.canProduceAudio = true;
    this.socketStateUpdate = ({ state }) => {
      this.connectionState = state;
      if (state === "failed")
        this.isJoining = false;
    };
    this.join = async () => {
      var _a, _b, _c;
      if (((_a = this.displayName) === null || _a === void 0 ? void 0 : _a.trim()) !== "" && !this.isJoining) {
        this.isJoining = true;
        (_b = this.meeting) === null || _b === void 0 ? void 0 : _b.self.setName(this.displayName);
        gracefulStorage$1.setItem("dyte-display-name", this.displayName);
        try {
          await ((_c = this.meeting) === null || _c === void 0 ? void 0 : _c.joinRoom());
        } catch (e) {
          this.isJoining = false;
        }
      }
    };
  }
  connectedCallback() {
    this.meetingChanged(this.meeting);
  }
  disconnectedCallback() {
    this.meeting.meta.removeListener("socketConnectionUpdate", this.socketStateUpdate);
  }
  componentDidLoad() {
    var _a;
    (_a = this.inputEl) === null || _a === void 0 ? void 0 : _a.focus();
  }
  meetingChanged(meeting) {
    var _a, _b, _c;
    if (meeting) {
      this.connectionState = (_a = meeting.meta.socketState) === null || _a === void 0 ? void 0 : _a.state;
      this.canEditName = (_b = meeting.self.permissions.canEditDisplayName) !== null && _b !== void 0 ? _b : true;
      this.displayName = ((_c = meeting.self.name) === null || _c === void 0 ? void 0 : _c.trim()) || (this.canEditName ? "" : "Participant");
      meeting.meta.addListener("socketConnectionUpdate", this.socketStateUpdate);
    }
  }
  render() {
    var _a, _b, _c;
    const disabled = ((_a = this.displayName) === null || _a === void 0 ? void 0 : _a.trim()) === "" || this.connectionState !== "connected" || this.isJoining;
    const defaults = {
      meeting: this.meeting,
      config: this.config,
      states: this.states,
      size: this.size,
      iconPack: this.iconPack,
      t: this.t
    };
    return h(Host, { key: "f805e4673d4958991da4f94cac5baed927b4948d" }, h("div", { key: "a024b32ac5ac3f97704d84cae68fe51fed119d11", class: "container" }, h("div", { key: "548e4bd9a722ea0bb455edbbd058a88ee9ecd0bc", class: "container-tile" }, h(Render, { key: "0b3d3fe938925e43b745ed63ac1ce39e96bbce2e", element: "dyte-participant-tile", defaults, props: { participant: (_b = this.meeting) === null || _b === void 0 ? void 0 : _b.self, size: "md", isPreview: true }, childProps: { participant: (_c = this.meeting) === null || _c === void 0 ? void 0 : _c.self, size: "md" }, deepProps: true }), h("div", { key: "eb4f5f3ed6f92930987672db94a1fe277d210680", class: "media-selectors" }, h("dyte-microphone-selector", Object.assign({ key: "33cb89903fa15a10cfccc9183ec1093971ce6046" }, defaults, { variant: "inline" })), h("dyte-camera-selector", Object.assign({ key: "837cc0f33046324273d01937f1db6bbd24c424c3" }, defaults, { variant: "inline" })), h("dyte-speaker-selector", Object.assign({ key: "242e5749467be68efd7e4be112e65b5cacd0d958" }, defaults, { variant: "inline" })))), h("div", { key: "e1de333221602a950e4a44c80850b4b8cad4bc99", class: "metadata" }, h("div", { key: "a0a89d93d1a64ff43b6d9a13989c14a9d42740d0", class: "name" }, this.t("setup_screen.join_in_as")), h("div", { key: "4bf580ad239615e26ac13de446c9117d3398b864", class: "label" }, h("div", { key: "7bcaea2d3a269b6f2f1ecd323fad3b97f94657cc", class: "name" }, !this.canEditName && shorten(this.displayName, 20))), this.canEditName && h("input", { key: "dc99505703b036a9fdde33ff5ebe2da4ac68b1ff", placeholder: this.t("setup_screen.your_name"), value: this.displayName, spellcheck: false, autoFocus: true, ref: (el) => {
      this.inputEl = el;
    }, onInput: (e) => {
      this.displayName = e.target.value;
    }, onKeyDown: (e) => {
      if (e.key === "Enter") {
        this.join();
      }
    } }), h("dyte-button", { key: "ace3c4221055be90c22576b26ac036b188712583", size: "lg", kind: "wide", onClick: this.join, disabled }, this.isJoining ? h("dyte-spinner", { iconPack: this.iconPack }) : this.t("join")), this.connectionState !== "connected" && h("div", { key: "6210c8592a6bb39479c38baa6afdb65457456eaa", class: "no-network-badge" }, h("dyte-icon", { key: "bc903acf0707943acb581eb4d76c85d2b55bdd74", size: "md", variant: "danger", icon: this.iconPack.disconnected }), this.connectionState === "failed" ? this.t("network.lost_extended") : this.t("network.lost")))));
  }
  static get watchers() {
    return {
      "meeting": ["meetingChanged"]
    };
  }
};
__decorate([
  SyncWithStore()
], DyteSetupScreen.prototype, "meeting", void 0);
__decorate([
  SyncWithStore()
], DyteSetupScreen.prototype, "states", void 0);
__decorate([
  SyncWithStore()
], DyteSetupScreen.prototype, "size", void 0);
__decorate([
  SyncWithStore()
], DyteSetupScreen.prototype, "iconPack", void 0);
__decorate([
  SyncWithStore()
], DyteSetupScreen.prototype, "t", void 0);
DyteSetupScreen.style = DyteSetupScreenStyle0;
export {
  DyteSetupScreen as dyte_setup_screen
};
//# sourceMappingURL=dyte-setup-screen.entry-ZQG7PFZP.js.map
