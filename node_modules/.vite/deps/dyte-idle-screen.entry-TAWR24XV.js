import {
  SyncWithStore
} from "./chunk-PQDXOFV7.js";
import {
  Host,
  defaultConfig,
  defaultIconPack,
  h,
  registerInstance,
  useLanguage
} from "./chunk-HB73EBAH.js";
import "./chunk-HFNDKYVF.js";

// node_modules/@dytesdk/ui-kit/dist/esm/dyte-idle-screen.entry.js
var dyteIdleScreenCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{height:100%;width:100%;display:flex;flex-direction:column;align-items:center;justify-content:center}.ctr{display:flex;flex-direction:column;align-items:center;gap:var(--dyte-space-8, 32px)}dyte-logo.loaded{height:var(--dyte-space-12, 48px)}dyte-spinner{height:var(--dyte-space-12, 48px);width:var(--dyte-space-12, 48px);--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}";
var DyteIdleScreenStyle0 = dyteIdleScreenCss;
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DyteIdleScreen = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.config = defaultConfig;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  render() {
    return h(Host, { key: "12d044e448e70b95bbaadb456a59ae322cbec4cb" }, h("slot", { key: "befccedc79773180014dbd0fc9b944055f888e3d" }, h("div", { key: "98c261026b266fbb8b8bdbc143aefc390f3adeb0", class: "ctr", part: "container" }, h("dyte-logo", { key: "900a6cc8979009204f29b31908591319e00952ad", meeting: this.meeting, config: this.config, t: this.t, part: "logo" }), h("dyte-spinner", { key: "a9575923df832e8af9b130eee2dbd0e8fc42e181", "aria-label": "Idle, waiting for meeting data", part: "spinner", iconPack: this.iconPack }))));
  }
};
__decorate([
  SyncWithStore()
], DyteIdleScreen.prototype, "meeting", void 0);
__decorate([
  SyncWithStore()
], DyteIdleScreen.prototype, "iconPack", void 0);
__decorate([
  SyncWithStore()
], DyteIdleScreen.prototype, "t", void 0);
DyteIdleScreen.style = DyteIdleScreenStyle0;
export {
  DyteIdleScreen as dyte_idle_screen
};
//# sourceMappingURL=dyte-idle-screen.entry-TAWR24XV.js.map
