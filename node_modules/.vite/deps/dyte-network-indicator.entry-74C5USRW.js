import {
  SyncWithStore
} from "./chunk-LFTNBGM5.js";
import {
  Host,
  defaultIconPack,
  h,
  registerInstance,
  useLanguage
} from "./chunk-55A3BFCU.js";
import "./chunk-HFNDKYVF.js";

// node_modules/@dytesdk/ui-kit/dist/esm/dyte-network-indicator.entry.js
var dyteNetworkIndicatorCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{position:relative;display:block;height:var(--dyte-space-7, 28px);width:var(--dyte-space-7, 28px)}dyte-icon{position:absolute;top:var(--dyte-space-0, 0px);right:var(--dyte-space-0, 0px);bottom:var(--dyte-space-0, 0px);left:var(--dyte-space-0, 0px);z-index:10;height:100%;width:100%;--tw-text-opacity:1;color:rgba(var(--dyte-colors-success, 98 165 4) / var(--tw-text-opacity))}dyte-icon.good{--tw-text-opacity:1;color:rgba(var(--dyte-colors-success, 98 165 4) / var(--tw-text-opacity))}dyte-icon.poor{--tw-text-opacity:1;color:rgba(var(--dyte-colors-warning, 255 205 7) / var(--tw-text-opacity))}dyte-icon.poorest{--tw-text-opacity:1;color:rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-text-opacity))}:host([size='md']){height:var(--dyte-space-6, 24px);width:var(--dyte-space-6, 24px)}:host([size='sm']){height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px)}.bg-signal{position:absolute;top:var(--dyte-space-0, 0px);right:var(--dyte-space-0, 0px);bottom:var(--dyte-space-0, 0px);left:var(--dyte-space-0, 0px);z-index:0;color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}";
var DyteNetworkIndicatorStyle0 = dyteNetworkIndicatorCss;
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DyteNetworkIndicator = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.isScreenShare = false;
    this.score = 10;
    this.onMediaScoreUpdate = ({ kind, isScreenshare, score }) => {
      if (kind === "video" || this.isScreenShare && isScreenshare) {
        this.score = score;
      }
    };
  }
  connectedCallback() {
    this.participantChanged(this.participant);
  }
  participantChanged(participant) {
    if (!participant)
      return;
    participant.addListener("mediaScoreUpdate", this.onMediaScoreUpdate);
  }
  disconnectedCallback() {
    var _a;
    (_a = this.participant) === null || _a === void 0 ? void 0 : _a.removeListener("mediaScoreUpdate", this.onMediaScoreUpdate);
  }
  render() {
    let signal_strength = Math.round(this.score / 2);
    let signal_status = "good";
    if (signal_strength > 3) {
      return null;
    } else if (signal_strength < 1) {
      signal_strength = 1;
    }
    switch (signal_strength) {
      case 3:
      case 2:
        signal_status = "poor";
        break;
      case 1:
        signal_status = "poorest";
    }
    return h(Host, null, h("dyte-icon", { icon: this.iconPack[`signal_${signal_strength}`], class: signal_status }), h("dyte-icon", { icon: this.iconPack.signal_5, class: "bg-signal" }));
  }
  static get watchers() {
    return {
      "participant": ["participantChanged"]
    };
  }
};
__decorate([
  SyncWithStore()
], DyteNetworkIndicator.prototype, "meeting", void 0);
__decorate([
  SyncWithStore()
], DyteNetworkIndicator.prototype, "iconPack", void 0);
__decorate([
  SyncWithStore()
], DyteNetworkIndicator.prototype, "t", void 0);
DyteNetworkIndicator.style = DyteNetworkIndicatorStyle0;
export {
  DyteNetworkIndicator as dyte_network_indicator
};
//# sourceMappingURL=dyte-network-indicator.entry-74C5USRW.js.map
