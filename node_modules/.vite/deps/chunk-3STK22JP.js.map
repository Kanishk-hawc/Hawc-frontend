{
  "version": 3,
  "sources": ["../../@dytesdk/ui-kit/dist/esm/index-e2bee3ae.js"],
  "sourcesContent": ["import { h, H as Host } from './index-08f4416b.js';\n\n/**\n * Computes selectors and returns them based on their priority.\n */\nconst computeSelectors = ({ element, size, states = {}, config = {}, }) => {\n    let selectors = [];\n    const data = config === null || config === void 0 ? void 0 : config.root[element];\n    const add = (selector) => {\n        selectors.push(selector);\n        if (typeof size === 'string') {\n            selectors.push(`${selector}.${size}`);\n        }\n    };\n    add(element);\n    if (typeof data === 'object' && !Array.isArray(data) && data !== null) {\n        // check if the data variable is an object, strictly and not an array or just null\n        const { state, states: elementStates } = data;\n        let selector = element;\n        let activeStates = [];\n        if (Array.isArray(elementStates)) {\n            activeStates = elementStates.filter((state) => states[state]);\n            activeStates.sort();\n            for (const state of activeStates) {\n                add(`${selector}.${state}`);\n            }\n            if (activeStates.length > 1) {\n                const booleanStateSelector = [selector, ...activeStates].join('.');\n                add(booleanStateSelector);\n            }\n        }\n        if (typeof state === 'string') {\n            // dyte-meeting[meeting=joined]\n            const keyValueSelector = `${element}[${state}=${states[state]}]`;\n            add(keyValueSelector);\n            for (const state of activeStates) {\n                add(`${keyValueSelector}.${state}`);\n            }\n            if (activeStates.length > 1) {\n                const withBooleanStateSelector = [keyValueSelector, ...activeStates].join('.');\n                add(withBooleanStateSelector);\n            }\n        }\n    }\n    return selectors;\n};\n/**\n * Returns the computed styles - styles obtained from combining styles from all computed selectors\n * on the basis of their priorities.\n */\nconst getComputedStyles = ({ selectors, styles }) => {\n    if (!Array.isArray(selectors) || styles == null)\n        return {};\n    const computedStyles = {};\n    for (const selector of selectors) {\n        const style = styles[selector];\n        if (style != null) {\n            Object.assign(computedStyles, style);\n        }\n    }\n    return computedStyles;\n};\n/**\n * Returns the computed children which are to be rendered inside an element\n */\nconst getComputedChildren = ({ selectors, root }) => {\n    if (!root || !Array.isArray(selectors))\n        return [];\n    let children = [];\n    for (const selector of selectors) {\n        const el = root[selector];\n        if (Array.isArray(el)) {\n            children = [...el];\n        }\n        else if (el) {\n            if (el.children) {\n                children = [...el.children];\n            }\n            if (Array.isArray(el.remove)) {\n                for (const toRemove of el.remove) {\n                    children = children.filter((child) => {\n                        if (typeof child === 'string') {\n                            return child !== toRemove;\n                        }\n                        else if (Array.isArray(child)) {\n                            return child[0] !== toRemove;\n                        }\n                        return true;\n                    });\n                }\n            }\n            if (el.addBefore) {\n                for (const [beforeEl, toAdd] of Object.entries(el.addBefore)) {\n                    const idx = children.findIndex((child) => {\n                        if (typeof child === 'string') {\n                            return child === beforeEl;\n                        }\n                        else if (Array.isArray(child)) {\n                            return child[0] === beforeEl;\n                        }\n                        return false;\n                    });\n                    if (idx >= 0) {\n                        children.splice(idx, 0, ...toAdd);\n                    }\n                }\n            }\n            if (Array.isArray(el.add)) {\n                children = children.concat(el.add);\n            }\n            if (Array.isArray(el.prepend)) {\n                children = el.prepend.concat(children);\n            }\n        }\n    }\n    return children;\n};\n\n/**\n * Renders the children of an element.\n */\nconst RenderChildren = ({ elements, defaults, props = {}, deepProps = false, elementProps = {}, }) => {\n    if (!Array.isArray(elements) || elements.length === 0)\n        return null;\n    return elements.map((element) => {\n        return (h(Render, { element: element, defaults: defaults, props: props, childProps: deepProps && props, elementProps: elementProps }));\n    });\n};\nconst lenChildren = ({ element, defaults, props = {}, elementProps = {} }) => {\n    var _a;\n    const { config, size, states } = defaults;\n    let Tag, configProps = {}, configChildren = [];\n    if (Array.isArray(element)) {\n        // get props if element is passed in array form:\n        // ['dyte-participant-tile', { variant: 'gradient' }]\n        [Tag, configProps, ...configChildren] = element;\n    }\n    else {\n        Tag = element;\n    }\n    const elemData = (_a = config === null || config === void 0 ? void 0 : config.root) === null || _a === void 0 ? void 0 : _a[Tag];\n    if (elemData != null && 'props' in elemData) {\n        props = Object.assign(Object.assign({}, elemData['props']), props);\n    }\n    props = Object.assign(Object.assign({}, props), configProps);\n    if (Tag in elementProps) {\n        props = Object.assign(Object.assign({}, props), elementProps[Tag]);\n    }\n    const selectors = computeSelectors({ element: Tag, size, states, config });\n    const computedChildren = getComputedChildren({ selectors, root: config.root });\n    return computedChildren.length;\n};\n/**\n * Renders an element from UI Config\n */\nconst Render = ({ element, defaults, childProps = {}, props = {}, onlyChildren = false, asHost = false, deepProps = false, elementProps = {}, }, children) => {\n    var _a;\n    const { config, size, states } = defaults;\n    let Tag, configProps = {}, configChildren = [];\n    if (Array.isArray(element)) {\n        // get props if element is passed in array form:\n        // ['dyte-participant-tile', { variant: 'gradient' }]\n        [Tag, configProps, ...configChildren] = element;\n    }\n    else {\n        Tag = element;\n    }\n    const elemData = (_a = config === null || config === void 0 ? void 0 : config.root) === null || _a === void 0 ? void 0 : _a[Tag];\n    if (elemData != null && 'props' in elemData) {\n        props = Object.assign(Object.assign({}, elemData['props']), props);\n    }\n    props = Object.assign(Object.assign({}, props), configProps);\n    if (Tag in elementProps) {\n        props = Object.assign(Object.assign({}, props), elementProps[Tag]);\n    }\n    const selectors = computeSelectors({ element: Tag, size, states, config });\n    const computedChildren = getComputedChildren({ selectors, root: config.root });\n    if (onlyChildren) {\n        return (h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }));\n    }\n    const styles = getComputedStyles({ selectors, styles: config.styles });\n    if (asHost) {\n        return (h(Host, Object.assign({}, defaults, { style: styles }, props),\n            h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n            children,\n            configChildren.map((child) => {\n                if (Array.isArray(child)) {\n                    const [Tag, props] = child;\n                    return h(Tag, Object.assign({}, defaults, props));\n                }\n                return child;\n            })));\n    }\n    if (['dyte-header', 'dyte-controlbar'].includes(Tag)) {\n        props['disableRender'] = true;\n    }\n    if (Tag.startsWith('dyte-')) {\n        return (h(Tag, Object.assign({}, defaults, { style: styles }, props),\n            h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n            children,\n            configChildren.map((child) => {\n                if (Array.isArray(child)) {\n                    const [Tag, props] = child;\n                    return h(Tag, Object.assign({}, defaults, props));\n                }\n                return child;\n            })));\n    }\n    else {\n        const [HTMLTag, id] = Tag.split('#');\n        return (h(HTMLTag, Object.assign({ id: id, style: styles }, props),\n            h(RenderChildren, { elements: computedChildren, defaults: defaults, props: childProps, deepProps: deepProps, elementProps: elementProps }),\n            children,\n            configChildren.map((child) => {\n                if (Array.isArray(child)) {\n                    const [Tag, props] = child;\n                    return h(Tag, Object.assign({}, defaults, props));\n                }\n                return child;\n            })));\n    }\n};\n\nexport { Render as R, lenChildren as l };\n"],
  "mappings": "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",
  "names": ["state", "Tag", "props"]
}
