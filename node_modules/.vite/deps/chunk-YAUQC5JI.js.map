{
  "version": 3,
  "sources": ["../../@dytesdk/ui-kit/dist/esm/TextMessage-75562393.js"],
  "sourcesContent": ["import { h } from './index-08f4416b.js';\nimport { M as MAX_TEXT_LENGTH, j as extractReplyBlock, s as stripOutReplyBlock, f as parseRichText } from './chat-8cb0e3a4.js';\n\nconst renderLink = (content) => {\n    return (h(\"a\", { class: \"link\", href: content, target: \"_blank\", rel: \"noopener noreferrer\" }, content));\n};\nconst renderBold = (content) => {\n    if (typeof content === 'string') {\n        return h(\"b\", null, content);\n    }\n    return h(\"b\", null, renderTokens(content));\n};\nconst renderItalic = (content) => {\n    if (typeof content === 'string') {\n        return h(\"i\", null, content);\n    }\n    return h(\"i\", null, renderTokens(content));\n};\nconst renderStrikethrough = (content) => {\n    if (typeof content === 'string') {\n        return h(\"s\", null, content);\n    }\n    return h(\"b\", null, renderTokens(content));\n};\nconst renderPlainText = (content) => {\n    if (typeof content === 'string') {\n        return content;\n    }\n    return h(\"p\", null, renderTokens(content));\n};\nconst renderTokens = (tokens) => {\n    return tokens.map((token) => {\n        switch (token.type) {\n            case 'a':\n                if (typeof token.content === 'string') {\n                    return renderLink(token.content);\n                }\n            case 'b':\n                return renderBold(token.content);\n            case 'i':\n                return renderItalic(token.content);\n            case 's':\n                return renderStrikethrough(token.content);\n            case 'q':\n                return h(\"span\", { class: \"block-quote\" });\n            case 'plain_text':\n            default:\n                return renderPlainText(token.content);\n        }\n    });\n};\nconst TextMessageView = ({ message }) => {\n    const slicedMessage = message.slice(0, MAX_TEXT_LENGTH);\n    const withReply = extractReplyBlock(slicedMessage, true);\n    const withoutReply = stripOutReplyBlock(slicedMessage);\n    return (h(\"p\", null,\n        withReply.length !== 0 && (h(\"blockquote\", null, withReply.split('\\n').map((line) => {\n            const tokens = parseRichText(line);\n            return h(\"p\", null, renderTokens(tokens));\n        }))),\n        withoutReply.split('\\n').map((line) => {\n            const tokens = parseRichText(line);\n            return h(\"p\", null, renderTokens(tokens));\n        })));\n};\n\nexport { TextMessageView as T };\n"],
  "mappings": ";;;;;;;;;;;AAGA,IAAM,aAAa,CAAC,YAAY;AAC5B,SAAQ,EAAE,KAAK,EAAE,OAAO,QAAQ,MAAM,SAAS,QAAQ,UAAU,KAAK,sBAAsB,GAAG,OAAO;AAC1G;AACA,IAAM,aAAa,CAAC,YAAY;AAC5B,MAAI,OAAO,YAAY,UAAU;AAC7B,WAAO,EAAE,KAAK,MAAM,OAAO;AAAA,EAC/B;AACA,SAAO,EAAE,KAAK,MAAM,aAAa,OAAO,CAAC;AAC7C;AACA,IAAM,eAAe,CAAC,YAAY;AAC9B,MAAI,OAAO,YAAY,UAAU;AAC7B,WAAO,EAAE,KAAK,MAAM,OAAO;AAAA,EAC/B;AACA,SAAO,EAAE,KAAK,MAAM,aAAa,OAAO,CAAC;AAC7C;AACA,IAAM,sBAAsB,CAAC,YAAY;AACrC,MAAI,OAAO,YAAY,UAAU;AAC7B,WAAO,EAAE,KAAK,MAAM,OAAO;AAAA,EAC/B;AACA,SAAO,EAAE,KAAK,MAAM,aAAa,OAAO,CAAC;AAC7C;AACA,IAAM,kBAAkB,CAAC,YAAY;AACjC,MAAI,OAAO,YAAY,UAAU;AAC7B,WAAO;AAAA,EACX;AACA,SAAO,EAAE,KAAK,MAAM,aAAa,OAAO,CAAC;AAC7C;AACA,IAAM,eAAe,CAAC,WAAW;AAC7B,SAAO,OAAO,IAAI,CAAC,UAAU;AACzB,YAAQ,MAAM,MAAM;AAAA,MAChB,KAAK;AACD,YAAI,OAAO,MAAM,YAAY,UAAU;AACnC,iBAAO,WAAW,MAAM,OAAO;AAAA,QACnC;AAAA,MACJ,KAAK;AACD,eAAO,WAAW,MAAM,OAAO;AAAA,MACnC,KAAK;AACD,eAAO,aAAa,MAAM,OAAO;AAAA,MACrC,KAAK;AACD,eAAO,oBAAoB,MAAM,OAAO;AAAA,MAC5C,KAAK;AACD,eAAO,EAAE,QAAQ,EAAE,OAAO,cAAc,CAAC;AAAA,MAC7C,KAAK;AAAA,MACL;AACI,eAAO,gBAAgB,MAAM,OAAO;AAAA,IAC5C;AAAA,EACJ,CAAC;AACL;AACA,IAAM,kBAAkB,CAAC,EAAE,QAAQ,MAAM;AACrC,QAAM,gBAAgB,QAAQ,MAAM,GAAG,eAAe;AACtD,QAAM,YAAY,kBAAkB,eAAe,IAAI;AACvD,QAAM,eAAe,mBAAmB,aAAa;AACrD,SAAQ;AAAA,IAAE;AAAA,IAAK;AAAA,IACX,UAAU,WAAW,KAAM,EAAE,cAAc,MAAM,UAAU,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS;AACjF,YAAM,SAAS,cAAc,IAAI;AACjC,aAAO,EAAE,KAAK,MAAM,aAAa,MAAM,CAAC;AAAA,IAC5C,CAAC,CAAC;AAAA,IACF,aAAa,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS;AACnC,YAAM,SAAS,cAAc,IAAI;AACjC,aAAO,EAAE,KAAK,MAAM,aAAa,MAAM,CAAC;AAAA,IAC5C,CAAC;AAAA,EAAC;AACV;",
  "names": []
}
