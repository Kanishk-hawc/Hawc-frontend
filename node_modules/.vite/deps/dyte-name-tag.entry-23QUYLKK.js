import {
  formatName,
  shorten
} from "./chunk-G3PIBVWD.js";
import {
  SyncWithStore
} from "./chunk-PQDXOFV7.js";
import {
  Host,
  defaultIconPack,
  h,
  registerInstance,
  useLanguage
} from "./chunk-HB73EBAH.js";
import "./chunk-HFNDKYVF.js";

// node_modules/@dytesdk/ui-kit/dist/esm/dyte-name-tag.entry.js
var dyteNameTagCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:inline-flex;-webkit-user-select:none;-moz-user-select:none;user-select:none;align-items:center;padding-top:var(--dyte-space-1, 4px);padding-bottom:var(--dyte-space-1, 4px);padding-left:var(--dyte-space-1\\.5, 6px);padding-right:var(--dyte-space-1\\.5, 6px);font-size:14px;border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-900, 255 255 255 / 0.88))}span.name{overflow:hidden;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1}::slotted(dyte-audio-visualizer[slot='start']){margin-right:var(--dyte-space-1\\.5, 6px)}::slotted(dyte-audio-visualizer[slot='end']){margin-left:var(--dyte-space-1\\.5, 6px)}:host([size='sm']){font-size:12px;--tw-bg-opacity:0.6}:host([variant='text']){background-color:transparent;padding:var(--dyte-space-0, 0px)}";
var DyteNameTagStyle0 = dyteNameTagCss;
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DyteNameTag = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.isScreenShare = false;
    this.variant = "default";
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.length = 13;
  }
  sizeChanged(size) {
    this.length = size === "sm" ? 8 : 13;
  }
  formatNameTag(name, isSelf) {
    return !this.isScreenShare ? isSelf ? `${shorten(name, this.length - 3)} (${this.t("you")})` : shorten(name, this.length) : isSelf ? `${this.t("screen")} - ${shorten(name, this.length - 3)} (${this.t("you")})` : `${this.t("screen")} - ${shorten(name, this.length)}`;
  }
  render() {
    var _a, _b, _c;
    const name = formatName(((_a = this.participant) === null || _a === void 0 ? void 0 : _a.name) || "");
    const isSelf = ((_b = this.participant) === null || _b === void 0 ? void 0 : _b.id) === ((_c = this.meeting) === null || _c === void 0 ? void 0 : _c.self.id);
    return h(Host, { key: "48c89f27ad186be7c0d06c38c6e640aacd83c822", title: name }, h("slot", { key: "71ccde71840ab4c6e16b3e7ba52ba341a1c5154e", name: "start" }), h("span", { key: "30df6dcb1ed2fd4039f6d77d958797af2195af78", class: "name" }, this.formatNameTag(name, isSelf)), h("slot", { key: "2ad35bca0ed791fcaa1689db6de2293a0a91bb89", name: "end" }));
  }
  static get watchers() {
    return {
      "size": ["sizeChanged"]
    };
  }
};
__decorate([
  SyncWithStore()
], DyteNameTag.prototype, "meeting", void 0);
__decorate([
  SyncWithStore()
], DyteNameTag.prototype, "size", void 0);
__decorate([
  SyncWithStore()
], DyteNameTag.prototype, "iconPack", void 0);
__decorate([
  SyncWithStore()
], DyteNameTag.prototype, "t", void 0);
DyteNameTag.style = DyteNameTagStyle0;
export {
  DyteNameTag as dyte_name_tag
};
//# sourceMappingURL=dyte-name-tag.entry-23QUYLKK.js.map
