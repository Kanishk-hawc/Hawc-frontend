import {
  formatName,
  getInitials,
  shorten
} from "./chunk-G3PIBVWD.js";
import {
  SyncWithStore
} from "./chunk-LFTNBGM5.js";
import {
  Host,
  createEvent,
  defaultIconPack,
  h,
  registerInstance,
  useLanguage
} from "./chunk-55A3BFCU.js";
import "./chunk-HFNDKYVF.js";

// node_modules/@dytesdk/ui-kit/dist/esm/dyte-poll_2.entry.js
var dytePollCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\.5, 6px);width:var(--dyte-space-1\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}.ctr{margin-bottom:var(--dyte-space-3, 12px);display:flex;width:100%;flex-direction:column;color:rgb(var(--dyte-colors-text-1000, 255 255 255))}.poll-title{margin-top:var(--dyte-space-3, 12px);margin-bottom:var(--dyte-space-3, 12px);margin-right:var(--dyte-space-4, 16px);font-size:12px}.poll{border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));display:flex;flex-direction:column;padding:var(--dyte-space-4, 16px)}.poll-question{padding-left:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-2, 8px);font-size:14px;overflow-wrap:break-word}.poll-answers{display:flex;flex-direction:row;justify-content:space-between;font-size:12px;margin-top:var(--dyte-space-4, 16px);margin-bottom:var(--dyte-space-1, 4px);padding-left:var(--dyte-space-1, 4px);padding-right:var(--dyte-space-3, 12px)}.poll-option{display:flex;flex-direction:column;margin-top:var(--dyte-space-2, 8px);border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));padding:var(--dyte-space-2, 8px);word-break:break-word}.poll-option.open-vote:hover{cursor:pointer}.poll-option label{display:flex;flex-direction:row;cursor:inherit}.poll-option-header{display:flex;flex-direction:row;justify-content:space-between;padding:var(--dyte-space-1, 4px)}.poll-option-header[data-disabled='true']:hover{cursor:default}.poll-option-header input{margin-top:var(--dyte-space-0, 0px);margin-bottom:var(--dyte-space-0, 0px);margin-left:var(--dyte-space-0\\.5, 2px);margin-right:var(--dyte-space-2, 8px);cursor:inherit}.poll-option-header .counter{color:rgb(var(--dyte-colors-text-1000, 255 255 255));font-size:12px}.votes{margin-top:var(--dyte-space-1, 4px);display:flex;flex-direction:row;flex-wrap:wrap}.vote{margin-right:var(--dyte-space-1, 4px);height:var(--dyte-space-8, 32px);width:var(--dyte-space-8, 32px);display:flex;align-items:center;justify-content:center;border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-video-bg, 24 24 24) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));border-radius:var(--dyte-border-radius-none, 0);clip-path:circle()}.active{--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-on-brand-900, var(--dyte-colors-text-900, 255 255 255 / 0.88)))}.active .counter{color:rgb(var(--dyte-colors-text-on-brand-900, var(--dyte-colors-text-900, 255 255 255 / 0.88)))}";
var DytePollStyle0 = dytePollCss;
var __decorate$1 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DytePolls = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.onVote = createEvent(this, "dyteVotePoll", 7);
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.MAX_VOTES_RENDER = 10;
  }
  vote(e, index) {
    if (this.poll.voted.includes(this.self)) {
      e.preventDefault();
    } else {
      this.onVote.emit({ id: this.poll.id, index });
    }
  }
  render() {
    const hasVoted = this.poll.voted.includes(this.self);
    return h(Host, { key: "d112ad1e82a81151c92e65892fc7de73e7293e13" }, h("div", { key: "093a24d77c5a80b9ab0c92e766ecba29f23cd71b", class: "ctr" }, h("p", { key: "4a92f6f8fca96e4ffeb0e196201e032a4e1240e9", class: "poll-title" }, this.t("polls.by"), " ", shorten(formatName(this.poll.createdBy), 20)), h("div", { key: "1c822be138ff7ac8588a7def4a8f9bcc6c7dfacc", class: "poll" }, h("p", { key: "59462f18d8018ed2ea8b175da135f144d43424f5", class: "poll-question" }, this.poll.question), h("div", { key: "0dc955a9a6b3751f87ec2d9eaf5d9c36d9178601", class: "poll-answers" }, h("span", { key: "5c32c86d1129884185d0778bf8f98f09542d8349" }, this.t("polls.answers")), h("span", { key: "a0d07807de9040dad6ccb5c37a97095911ef4b5e" }, this.poll.voted.length)), this.poll.options.map((item, index) => h("div", { class: {
      active: item.votes.some((x) => x.id === this.self),
      "open-vote": this.permissions.polls.canVote && !hasVoted,
      "poll-option": true
    } }, h("div", { class: "poll-option-header", "data-disabled": !this.permissions.polls.canVote }, h("label", null, !hasVoted && h("input", { disabled: !this.permissions.polls.canVote, readOnly: hasVoted, type: "radio", checked: item.votes.some((x) => x.id === this.self), onClick: (e) => this.vote(e, index) }), h("p", null, item.text)), h("span", { class: "counter" }, item.count)), h("div", { class: "votes" }, item.votes.slice(0, this.MAX_VOTES_RENDER).map((vote) => {
      if (this.poll.anonymous && this.self !== this.poll.createdByUserId)
        return;
      return h("dyte-tooltip", { label: vote.name }, h("div", { class: "vote" }, getInitials(vote.name)));
    }), item.votes.length > this.MAX_VOTES_RENDER && h("dyte-tooltip", { label: `+${item.votes.length - this.MAX_VOTES_RENDER} more ` }, h("div", { class: "vote" }, "+", item.votes.length - this.MAX_VOTES_RENDER))))))));
  }
};
__decorate$1([
  SyncWithStore()
], DytePolls.prototype, "iconPack", void 0);
__decorate$1([
  SyncWithStore()
], DytePolls.prototype, "t", void 0);
DytePolls.style = DytePollStyle0;
var dytePollFormCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\.5, 6px);width:var(--dyte-space-1\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}.create-poll{margin-top:var(--dyte-space-3, 12px);margin-bottom:var(--dyte-space-3, 12px);display:flex;flex:1 1 0%;flex-direction:column;padding:var(--dyte-space-3, 12px);border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity))}.create-poll p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px);text-align:center}.create-poll textarea{display:flex;border-radius:var(--dyte-border-radius-sm, 4px);padding:var(--dyte-space-2, 8px);font-family:var(--dyte-font-family, sans-serif);border-width:var(--dyte-border-width-none, 0);border-style:none;font-weight:500;outline:2px solid transparent;outline-offset:2px;margin-top:var(--dyte-space-3, 12px);margin-bottom:var(--dyte-space-3, 12px);resize:vertical;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}.create-poll textarea:focus{outline-style:solid;outline-offset:2px;outline-color:rgb(var(--dyte-colors-background-600, 60 60 60))}.option{display:flex;flex-direction:row;align-items:center;margin-bottom:var(--dyte-space-3, 12px);width:100%}.option input{width:100%;border-radius:var(--dyte-border-radius-sm, 4px);padding:var(--dyte-space-2, 8px);border-width:var(--dyte-border-width-none, 0);border-style:none;outline:2px solid transparent;outline-offset:2px;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-900, 26 26 26) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}.remove-option{margin-left:var(--dyte-space-2, 8px);width:var(--dyte-space-10, 40px);border-radius:var(--dyte-border-radius-sm, 4px)}.add-option{margin-bottom:var(--dyte-space-3, 12px)}label{margin-bottom:var(--dyte-space-3, 12px)}.error-text{margin-top:var(--dyte-space-3, 12px);text-align:center;font-size:12px;--tw-text-opacity:1;color:rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-text-opacity))}";
var DytePollFormStyle0 = dytePollFormCss;
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DytePoll = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.onCreate = createEvent(this, "dyteCreatePoll", 7);
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.options = ["", ""];
    this.anonymous = false;
    this.hideVotes = true;
  }
  removeOption(index) {
    var _a;
    this.options = this.options.filter((_, ind) => ind !== index);
    if (((_a = this.error) === null || _a === void 0 ? void 0 : _a.code) === 1)
      this.error = void 0;
  }
  addOption() {
    this.options = [...this.options, ""];
  }
  updateOption(ev, index) {
    var _a;
    this.options[index] = ev.target.value;
    if (((_a = this.error) === null || _a === void 0 ? void 0 : _a.code) === 1)
      this.error = void 0;
  }
  handleSubmit() {
    const pollObject = {
      question: this.question.value,
      options: this.options,
      anonymous: this.anonymous,
      hideVotes: this.anonymous ? true : this.hideVotes
    };
    if (!pollObject.question) {
      this.error = {
        code: 0,
        message: this.t("polls.errors.question_required")
      };
      return;
    }
    if (this.options.filter((op) => op.trim() === "").length > 0) {
      this.error = {
        code: 1,
        message: this.t("polls.errors.empty_option")
      };
      return;
    }
    this.onCreate.emit(pollObject);
  }
  render() {
    return h(Host, { key: "b8a741187cb2d4d623d38d29c327c840ffe55170" }, h("div", { key: "e438423cfea105fa66b64e5d853af419f64f0ef5", class: "create-poll" }, h("p", { key: "e9fa70ea1bbfd5b183a1c1479442626753419cb2" }, this.t("polls.question")), h("textarea", { key: "21178467f9f1b99be4dacfa04885e2e08a83ad9a", onInput: () => {
      if (this.error && this.error.code === 0)
        this.error = void 0;
    }, ref: (e) => this.question = e, placeholder: this.t("polls.question.placeholder") }), this.options.map((item, index) => h("div", { class: "option" }, h("input", { placeholder: this.t("polls.option.placeholder"), value: item, onInput: (event) => this.updateOption(event, index) }), index > 1 && h("dyte-button", { kind: "icon", class: "auto remove-option", variant: "secondary", onClick: () => this.removeOption(index) }, h("dyte-icon", { icon: this.iconPack.subtract })))), h("dyte-button", { key: "bf5fdfa5c59b24f7fa63307ad5bf17928a813216", class: "add-option", variant: "secondary", onClick: () => this.addOption() }, this.t("polls.option")), h("label", { key: "822775583078aed4459d585947c563c21b5aa2c7" }, h("input", { key: "f9a2c4ea5ccc3bd617b8f651d1bf9c9a0448d471", id: "anonymous", type: "checkbox", onChange: (e) => this.anonymous = e.target.checked }), this.t("polls.results.anon")), h("label", { key: "697bb7f1e0a680b0b4e9abecd406714f6e1d8d64" }, h("input", { key: "281eb7fac7a60ca8916f4ce604503f7ffa5f4294", id: "hideVotes", type: "checkbox", disabled: this.anonymous, checked: this.anonymous ? true : this.hideVotes, onChange: (e) => this.hideVotes = e.target.checked }), this.t("polls.results.hide")), h("dyte-button", { key: "f95fc843148dc84713c2d086f2ea867eb3247aa7", kind: "wide", onClick: () => this.handleSubmit() }, this.t("polls.create")), this.error && h("span", { key: "266bc8776464b0c1c122bf68e14d197418b54d02", class: "error-text" }, this.error.message)));
  }
};
__decorate([
  SyncWithStore()
], DytePoll.prototype, "iconPack", void 0);
__decorate([
  SyncWithStore()
], DytePoll.prototype, "t", void 0);
DytePoll.style = DytePollFormStyle0;
export {
  DytePolls as dyte_poll,
  DytePoll as dyte_poll_form
};
//# sourceMappingURL=dyte-poll_2.entry-4RMPGTHB.js.map
