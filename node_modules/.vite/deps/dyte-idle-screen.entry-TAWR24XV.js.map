{
  "version": 3,
  "sources": ["../../@dytesdk/ui-kit/dist/esm/dyte-idle-screen.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, H as Host } from './index-08f4416b.js';\nimport { d as defaultConfig, a as defaultIconPack, c as useLanguage } from './ui-store-9dd5dd86.js';\nimport { S as SyncWithStore } from './index-39fa23f1.js';\n\nconst dyteIdleScreenCss = \":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{height:100%;width:100%;display:flex;flex-direction:column;align-items:center;justify-content:center}.ctr{display:flex;flex-direction:column;align-items:center;gap:var(--dyte-space-8, 32px)}dyte-logo.loaded{height:var(--dyte-space-12, 48px)}dyte-spinner{height:var(--dyte-space-12, 48px);width:var(--dyte-space-12, 48px);--tw-text-opacity:1;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity))}\";\nconst DyteIdleScreenStyle0 = dyteIdleScreenCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteIdleScreen = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Config object */\n        this.config = defaultConfig;\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        /** Language */\n        this.t = useLanguage();\n    }\n    render() {\n        return (h(Host, { key: '12d044e448e70b95bbaadb456a59ae322cbec4cb' }, h(\"slot\", { key: 'befccedc79773180014dbd0fc9b944055f888e3d' }, h(\"div\", { key: '98c261026b266fbb8b8bdbc143aefc390f3adeb0', class: \"ctr\", part: \"container\" }, h(\"dyte-logo\", { key: '900a6cc8979009204f29b31908591319e00952ad', meeting: this.meeting, config: this.config, t: this.t, part: \"logo\" }), h(\"dyte-spinner\", { key: 'a9575923df832e8af9b130eee2dbd0e8fc42e181', \"aria-label\": \"Idle, waiting for meeting data\", part: \"spinner\", iconPack: this.iconPack })))));\n    }\n};\n__decorate([\n    SyncWithStore()\n], DyteIdleScreen.prototype, \"meeting\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteIdleScreen.prototype, \"iconPack\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteIdleScreen.prototype, \"t\", void 0);\nDyteIdleScreen.style = DyteIdleScreenStyle0;\n\nexport { DyteIdleScreen as dyte_idle_screen };\n"],
  "mappings": ";;;;;;;;;;;;;;AAIA,IAAM,oBAAoB;AAC1B,IAAM,uBAAuB;AAE7B,IAAI,aAAoD,SAAU,YAAY,QAAQ,KAAK,MAAM;AAC7F,MAAI,IAAI,UAAU,QAAQ,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,yBAAyB,QAAQ,GAAG,IAAI,MAAM;AAC3H,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa;AAC3D,QAAI,QAAQ,SAAS,YAAY,QAAQ,KAAK,IAAI;AAAA;AAElD,aAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG;AACxC,UAAI,IAAI,WAAW,CAAC;AAChB,aAAK,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE,QAAQ,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG,MAAM;AAC/E,SAAO,IAAI,KAAK,KAAK,OAAO,eAAe,QAAQ,KAAK,CAAC,GAAG;AAChE;AACA,IAAM,iBAAiB,MAAM;AAAA,EACzB,YAAY,SAAS;AACjB,qBAAiB,MAAM,OAAO;AAE9B,SAAK,SAAS;AAEd,SAAK,WAAW;AAEhB,SAAK,IAAI,YAAY;AAAA,EACzB;AAAA,EACA,SAAS;AACL,WAAQ,EAAE,MAAM,EAAE,KAAK,2CAA2C,GAAG,EAAE,QAAQ,EAAE,KAAK,2CAA2C,GAAG,EAAE,OAAO,EAAE,KAAK,4CAA4C,OAAO,OAAO,MAAM,YAAY,GAAG,EAAE,aAAa,EAAE,KAAK,4CAA4C,SAAS,KAAK,SAAS,QAAQ,KAAK,QAAQ,GAAG,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,EAAE,gBAAgB,EAAE,KAAK,4CAA4C,cAAc,kCAAkC,MAAM,WAAW,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,EACnhB;AACJ;AACA,WAAW;AAAA,EACP,cAAc;AAClB,GAAG,eAAe,WAAW,WAAW,MAAM;AAC9C,WAAW;AAAA,EACP,cAAc;AAClB,GAAG,eAAe,WAAW,YAAY,MAAM;AAC/C,WAAW;AAAA,EACP,cAAc;AAClB,GAAG,eAAe,WAAW,KAAK,MAAM;AACxC,eAAe,QAAQ;",
  "names": []
}
