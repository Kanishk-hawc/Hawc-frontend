{
  "version": 3,
  "sources": ["../../@dytesdk/ui-kit/dist/esm/dyte-fullscreen-toggle.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, H as Host } from './index-08f4416b.js';\nimport { a as defaultIconPack, c as useLanguage } from './ui-store-9dd5dd86.js';\nimport { i as isFullScreenEnabled, r as requestFullScreen, e as exitFullSreen, a as isFullScreenSupported } from './full-screen-1f58c594.js';\nimport { S as SyncWithStore } from './index-39fa23f1.js';\n\nconst dyteFullscreenToggleCss = \":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:block}:host([data-hidden]){display:none}\";\nconst DyteFullscreenToggleStyle0 = dyteFullscreenToggleCss;\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst DyteFullscreenToggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.stateUpdate = createEvent(this, \"dyteStateUpdate\", 7);\n        /** Variant */\n        this.variant = 'button';\n        /** Icon pack */\n        this.iconPack = defaultIconPack;\n        /** Language */\n        this.t = useLanguage();\n        this.fullScreenActive = false;\n        this.isFullScreenSupported = true;\n        this.onFullScreenchange = () => {\n            this.fullScreenActive = isFullScreenEnabled();\n        };\n        this.toggleFullScreen = () => {\n            let fullScreenElement = this.targetElement || document.querySelector('dyte-meeting');\n            if (!fullScreenElement)\n                return;\n            if (!this.fullScreenActive) {\n                requestFullScreen(fullScreenElement);\n                this.fullScreenActive = true;\n            }\n            else {\n                exitFullSreen();\n                this.fullScreenActive = false;\n            }\n            this.stateUpdate.emit({ activeMoreMenu: false });\n        };\n    }\n    connectedCallback() {\n        this.isFullScreenSupported = isFullScreenSupported();\n        this.onFullScreenchange();\n        window.addEventListener('webkitfullscreenchange', this.onFullScreenchange);\n        window.addEventListener('fullscreenchange', this.onFullScreenchange);\n    }\n    disconnectedCallback() {\n        window.removeEventListener('webkitfullscreenchange', this.onFullScreenchange);\n        window.removeEventListener('fullscreenchange', this.onFullScreenchange);\n    }\n    render() {\n        if (!this.isFullScreenSupported) {\n            return h(Host, { \"data-hidden\": true });\n        }\n        return (h(Host, { title: this.t('full_screen') }, h(\"dyte-controlbar-button\", { size: this.size, iconPack: this.iconPack, onClick: this.toggleFullScreen, icon: this.fullScreenActive\n                ? this.iconPack.full_screen_minimize\n                : this.iconPack.full_screen_maximize, label: this.fullScreenActive ? this.t('full_screen.exit') : this.t('full_screen'), variant: this.variant })));\n    }\n};\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"states\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"size\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"iconPack\", void 0);\n__decorate([\n    SyncWithStore()\n], DyteFullscreenToggle.prototype, \"t\", void 0);\nDyteFullscreenToggle.style = DyteFullscreenToggleStyle0;\n\nexport { DyteFullscreenToggle as dyte_fullscreen_toggle };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAKA,IAAM,0BAA0B;AAChC,IAAM,6BAA6B;AAEnC,IAAI,aAAoD,SAAU,YAAY,QAAQ,KAAK,MAAM;AAC7F,MAAI,IAAI,UAAU,QAAQ,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,yBAAyB,QAAQ,GAAG,IAAI,MAAM;AAC3H,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa;AAC3D,QAAI,QAAQ,SAAS,YAAY,QAAQ,KAAK,IAAI;AAAA;AAElD,aAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG;AACxC,UAAI,IAAI,WAAW,CAAC;AAChB,aAAK,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE,QAAQ,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG,MAAM;AAC/E,SAAO,IAAI,KAAK,KAAK,OAAO,eAAe,QAAQ,KAAK,CAAC,GAAG;AAChE;AACA,IAAM,uBAAuB,MAAM;AAAA,EAC/B,YAAY,SAAS;AACjB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,cAAc,YAAY,MAAM,mBAAmB,CAAC;AAEzD,SAAK,UAAU;AAEf,SAAK,WAAW;AAEhB,SAAK,IAAI,YAAY;AACrB,SAAK,mBAAmB;AACxB,SAAK,wBAAwB;AAC7B,SAAK,qBAAqB,MAAM;AAC5B,WAAK,mBAAmB,oBAAoB;AAAA,IAChD;AACA,SAAK,mBAAmB,MAAM;AAC1B,UAAI,oBAAoB,KAAK,iBAAiB,SAAS,cAAc,cAAc;AACnF,UAAI,CAAC;AACD;AACJ,UAAI,CAAC,KAAK,kBAAkB;AACxB,0BAAkB,iBAAiB;AACnC,aAAK,mBAAmB;AAAA,MAC5B,OACK;AACD,sBAAc;AACd,aAAK,mBAAmB;AAAA,MAC5B;AACA,WAAK,YAAY,KAAK,EAAE,gBAAgB,MAAM,CAAC;AAAA,IACnD;AAAA,EACJ;AAAA,EACA,oBAAoB;AAChB,SAAK,wBAAwB,sBAAsB;AACnD,SAAK,mBAAmB;AACxB,WAAO,iBAAiB,0BAA0B,KAAK,kBAAkB;AACzE,WAAO,iBAAiB,oBAAoB,KAAK,kBAAkB;AAAA,EACvE;AAAA,EACA,uBAAuB;AACnB,WAAO,oBAAoB,0BAA0B,KAAK,kBAAkB;AAC5E,WAAO,oBAAoB,oBAAoB,KAAK,kBAAkB;AAAA,EAC1E;AAAA,EACA,SAAS;AACL,QAAI,CAAC,KAAK,uBAAuB;AAC7B,aAAO,EAAE,MAAM,EAAE,eAAe,KAAK,CAAC;AAAA,IAC1C;AACA,WAAQ,EAAE,MAAM,EAAE,OAAO,KAAK,EAAE,aAAa,EAAE,GAAG,EAAE,0BAA0B,EAAE,MAAM,KAAK,MAAM,UAAU,KAAK,UAAU,SAAS,KAAK,kBAAkB,MAAM,KAAK,mBAC3J,KAAK,SAAS,uBACd,KAAK,SAAS,sBAAsB,OAAO,KAAK,mBAAmB,KAAK,EAAE,kBAAkB,IAAI,KAAK,EAAE,aAAa,GAAG,SAAS,KAAK,QAAQ,CAAC,CAAC;AAAA,EAC7J;AACJ;AACA,WAAW;AAAA,EACP,cAAc;AAClB,GAAG,qBAAqB,WAAW,UAAU,MAAM;AACnD,WAAW;AAAA,EACP,cAAc;AAClB,GAAG,qBAAqB,WAAW,QAAQ,MAAM;AACjD,WAAW;AAAA,EACP,cAAc;AAClB,GAAG,qBAAqB,WAAW,YAAY,MAAM;AACrD,WAAW;AAAA,EACP,cAAc;AAClB,GAAG,qBAAqB,WAAW,KAAK,MAAM;AAC9C,qBAAqB,QAAQ;",
  "names": []
}
